/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = no
New      = iType
</CLASS>

<CODE>
#include <QtGui/QTableWidgetItem>


/*
 * QTableWidgetItem ( int type = Type )
 * QTableWidgetItem ( const QString & text, int type = Type )
 * QTableWidgetItem ( const QIcon & icon, const QString & text, int type = Type )
 * QTableWidgetItem ( const QTableWidgetItem & other )
 * virtual ~QTableWidgetItem ()
 */
HB_FUNC( QT_QTABLEWIDGETITEM )
{
   if( hb_pcount() == 2 && HB_ISCHAR( 1 ) && HB_ISNUM( 2 ) )
   {
      hb_retptr( new QTableWidgetItem( hbqt_par_QString( 1 ), hb_parni( 2 ) ) );
   }
   else if( hb_pcount() == 1 && HB_ISNUM( 1 ) )
   {
      hb_retptr( new QTableWidgetItem( hb_parni( 1 ) ) );
   }
   else if( hb_pcount() == 1 && HB_ISPOINTER( 1 ) )
   {
      hb_retptr( new QTableWidgetItem( *hbqt_par_QTableWidgetItem( 1 ) ) );
   }
   else
   {
      hb_retptr( new QTableWidgetItem( 0 ) );
   }
}
</CODE>

<ENUMS>
enum ItemType { Type, UserType }
</ENUMS>

<PROTOS>
QBrush background () const
Qt::CheckState checkState () const
virtual QTableWidgetItem * clone () const
int column () const
virtual QVariant data ( int role ) const
Qt::ItemFlags flags () const
QFont font () const
QBrush foreground () const
QIcon icon () const
bool isSelected () const
virtual void read ( QDataStream & in )
int row () const
void setBackground ( const QBrush & brush )
void setCheckState ( Qt::CheckState state )
virtual void setData ( int role, const QVariant & value )
void setFlags ( Qt::ItemFlags flags )
void setFont ( const QFont & font )
void setForeground ( const QBrush & brush )
void setIcon ( const QIcon & icon )
void setSelected ( bool select )
void setSizeHint ( const QSize & size )
void setStatusTip ( const QString & statusTip )
void setText ( const QString & text )
void setTextAlignment ( int alignment )
void setToolTip ( const QString & toolTip )
void setWhatsThis ( const QString & whatsThis )
QSize sizeHint () const
QString statusTip () const
QTableWidget * tableWidget () const
QString text () const
int textAlignment () const
QString toolTip () const
int type () const
QString whatsThis () const
virtual void write ( QDataStream & out ) const
</PROTOS>

