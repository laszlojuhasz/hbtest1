#
# $Id$
#

# Intel(R) C/C++ Compiler
# (usage is largely compatible with msvc)

OBJ_EXT = .obj
EXE_EXT = .exe
LIB_PREF =
LIB_EXT = .lib

CC = icl.exe
CC_IN = -c
CC_OUT = -Fo
CPPFLAGS = -nologo -I. -I$(HB_INC_COMPILE)
CFLAGS = -Gs

ifeq ($(HB_BUILD_MODE),c)
CPPFLAGS += -TC
endif
ifeq ($(HB_BUILD_MODE),cpp)
CPPFLAGS += -TP
endif

ifneq ($(HB_BUILD_WARN),no)
CFLAGS += -W3
endif

ifneq ($(HB_BUILD_OPTIM),no)
# maximum optimizations
# CFLAGS += -Ox
CFLAGS += -O3
endif

ifeq ($(HB_BUILD_DEBUG),yes)
CFLAGS += -Zi
endif

LD = icl.exe
LD_OUT = -Fe

# Add all libraries specified in LIBS.
ifeq ($(HB_LIB_COMPILE),)
LINKPATHS += /link /libpath:$(LIB_DIR)
else
LINKPATHS += /link /libpath:$(HB_LIB_COMPILE)
endif
LINKLIBS += $(foreach lib, $(LIBS), $(lib)$(LIB_EXT))

# If LIBS specifies the rdd library, add all DB drivers.
ifeq ($(findstring rdd,$(LIBS)),rdd)
LINKLIBS += $(foreach drv, $(HB_DB_DRIVERS), $(drv)$(LIB_EXT))
endif

# Add the specified GT driver library
ifeq ($(findstring rtl,$(LIBS)),rtl)
LINKLIBS += $(foreach gt, $(HB_GT_LIBS), $(gt)$(LIB_EXT))
endif

LDFLAGS = $(LINKPATHS) user32.lib ws2_32.lib advapi32.lib gdi32.lib

AR = xilib.exe
ARFLAGS = $(HB_USER_AFLAGS)
AR_RULE = $(AR) $(ARFLAGS) /out:$(LIB_DIR)/$@ $(^F) || $(RM) $(LIB_DIR)/$@

include $(TOP)$(ROOT)config/rules.cf
