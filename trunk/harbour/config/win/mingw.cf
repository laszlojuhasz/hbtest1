#
# $Id$
#

ifeq ($(HB_BUILD_MODE),cpp)
   HB_CMP = g++
else
   HB_CMP = gcc
endif

OBJ_EXT = .o
EXE_EXT = .exe
LIB_PREF = lib
LIB_EXT = .a

CC = $(HB_CCPREFIX)$(HB_CMP)
CC_IN = -c
CC_OUT = -o
CPPFLAGS = -I. -I$(HB_INC_COMPILE)
CFLAGS =

ifneq ($(HB_BUILD_WARN),no)
CFLAGS += -Wall -W
endif

ifneq ($(HB_BUILD_OPTIM),no)
CFLAGS += -O3
CFLAGS += -fomit-frame-pointer
ifeq ($(HB_COMPILER),mingw)
CFLAGS += -march=i586 -mtune=pentiumpro
endif
endif

ifeq ($(HB_BUILD_DEBUG),yes)
CFLAGS += -g
endif

LD = $(HB_CCPREFIX)$(HB_CMP)
LD_OUT = -o
LINKPATHS =
LIBLIST =

# Add all libraries specified in LIBS.
LINKPATHS += -L$(LIB_DIR)

LIBLIST += $(foreach lib, $(LIBS), -l$(lib))

# If LIBS specifies the RDD library, add all DB drivers.
ifeq ($(findstring hbrdd,$(LIBS)),hbrdd)
LIBLIST += $(foreach drv, $(HB_DB_DRIVERS), -l$(drv))
endif

# Add the standard C main() entry
ifeq ($(HB_MAIN),std)
ifeq ($(findstring vm,$(LIBS)),vm)
LIBLIST += -lhbmainstd
endif
endif

# Add the specified GT driver library
ifeq ($(findstring hbrtl,$(LIBS)),hbrtl)
LIBLIST += $(foreach gt, $(HB_GT_LIBS), -l$(gt))
endif

# This library is needed for CharToOemBuff() and OemToCharBuff() support.
SYSLIBS = -luser32 -lgdi32
SYSLIBS += -lwinspool -lcomctl32 -lcomdlg32 -lole32 -loleaut32 -luuid -lmpr -lws2_32 -lmapi32

AR = $(HB_CCPREFIX)ar
ARFLAGS = $(HB_USER_AFLAGS)

RANLIB = $(HB_CCPREFIX)ranlib

ifeq ($(AR_RULE),)
AR_RULE = $(AR) $(ARFLAGS) cr $(LIB_DIR)/$@ $(^F) && $(RANLIB) $(LIB_DIR)/$@ || $(RM) $(subst /,$(DIRSEP),$(LIB_DIR)/$@)
# our libs have a lot of cross referenced now and we have to group them
# until we won't have cleaned them
LINKLIBS = $(LINKPATHS) -Wl,--start-group $(LIBLIST) -Wl,--end-group $(SYSLIBS)
endif

include $(TOP)$(ROOT)config/rules.cf
