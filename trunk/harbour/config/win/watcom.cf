#
# $Id$
#

# GNU MAKE file for Open Watcom C/C++ compiler

# ---------------------------------------------------------------
# See option docs here:
#    http://www.users.pjwstk.edu.pl/~jms/qnx/help/watcom/compiler-tools/cpopts.html
#    http://www.users.pjwstk.edu.pl/~jms/qnx/help/watcom/compiler-tools/wlink.html
#    http://www.users.pjwstk.edu.pl/~jms/qnx/help/watcom/compiler-tools/wlib.html
# ---------------------------------------------------------------

OBJ_EXT := .obj
LIB_PREF :=
LIB_EXT := .lib

ifeq ($(HB_BUILD_MODE),c)
CC := wcc386
endif
ifeq ($(HB_BUILD_MODE),cpp)
CC := wpp386
endif
# Build in C++ mode by default
ifeq ($(HB_BUILD_MODE),)
CC := wpp386
endif
CC_IN :=
CC_OUT := -fo=

CPPFLAGS = -zq -bt=nt -bm

ifneq ($(HB_BUILD_WARN),no)
CPPFLAGS += -w3
endif

ifneq ($(HB_BUILD_OPTIM),no)
# architecture flags
CPPFLAGS += -6s -fp6

# optimization flags
# don't enable -ol optimization in OpenWatcom 1.1 - gives buggy code
# -oxaht
CPPFLAGS += -onaehtr -s -ei -zp4 -zt0
ifeq ($(CC),wpp386)
CPPFLAGS += -oi+
else
CPPFLAGS += -oi
endif
else
CPPFLAGS += -3s
endif

CPPFLAGS += -i. -i$(TOP)$(ROOT)include

ifeq ($(HB_BUILD_DEBUG),yes)
CPPFLAGS += -d2
endif

ifeq ($(CC),wcc386)
ifneq ($(HB_HOST_ARCH),linux)
CPPFLAGS := $(subst /,\,$(CPPFLAGS))
CC_RULE = $(CC) $(CPPFLAGS) $(subst /,\,$(CFLAGS)) $(HB_CDBG) $(subst /,\,$(HB_USER_CFLAGS)) $(HB_CDYNLIB) $(HB_CUNICODE) $(CC_IN)$(subst /,\,$<) $(CC_OUT)$(<F:.c=$(OBJ_EXT))
endif
endif

# Note: The empty line directly before 'endef' HAVE TO exist!
# It causes that the 'echo' command is separated by LF
define link_file
@echo FILE $(file) >> __link__.tmp

endef

#Note: The empty line directly before 'endef' HAVE TO exist!
define link_lib
@echo LIB $(lib) >> __link__.tmp

endef

define link_exe_file
@echo $(LDFLAGS) NAME $(BIN_DIR)/$@ > __link__.tmp
$(foreach file, $(^F), $(link_file))
$(foreach lib, $(LINKLIBS), $(link_lib))
@echo LIB ws2_32.lib >> __link__.tmp
-$(LD) @__link__.tmp
endef

LD := wlink
LDFLAGS = SYS nt
ifeq ($(HB_BUILD_DEBUG),yes)
LDFLAGS := DEBUG ALL $(LDFLAGS)
endif

LINKLIBS = $(foreach lib, $(LIBS), $(LIB_DIR)/$(lib))

LD_RULE = $(link_exe_file) $(HB_USER_LDFLAGS)

# NOTE: The empty line below HAVE TO exist!
define lib_object
@echo -+$(file) >> __lib__.tmp

endef

define create_library
@echo $(LIB_DIR)/$@ > __lib__.tmp
$(foreach file, $(^F), $(lib_object))
$(AR) $(ARFLAGS) @__lib__.tmp
endef

AR := wlib
ARFLAGS = -p=64 -c -n $(HB_USER_AFLAGS)
AR_RULE = $(create_library)

include $(TOP)$(ROOT)config/rules.cf
