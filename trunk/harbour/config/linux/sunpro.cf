#
# $Id$
#

ifeq ($(HB_BUILD_MODE),cpp)
   HB_CMP := CC
else
   HB_CMP := cc
endif

OBJ_EXT := .o
LIB_PREF := lib
LIB_EXT := .a

CC := $(HB_CCACHE) $(HB_CCPATH)$(HB_CCPREFIX)$(HB_CMP)
CC_IN := -c
# NOTE: The ending space after -o is important, please preserve it.
#       Now solved with '$(subst x,x, )' expression.
CC_OUT = -o$(subst x,x, )

CPPFLAGS = -I. -I$(HB_INC_COMPILE)

# try to keep `-fast' as left as possible, as later optim
# flags may override values set by `-fast', and this way
# no warnings are generated.

# may inherit -m64 from sunpro64.cf, which supersedes -xarch=386
HB_ISAOPT ?= -xarch=386
LDFLAGS ?= $(HB_ISAOPT)

export HB_ISAOPT

ifneq ($(HB_BUILD_OPTIM),no)
# Together with $(HB_ISAOPT) above, these are supposed to (somewhat)
# conform to the Blastwave build standards, see
#    http://wiki.blastwave.org/mediawiki/index.php/Build_Standards
# Try to keep them this way.
CFLAGS = -fast $(HB_ISAOPT)
endif

CFLAGS += -KPIC

ifneq ($(HB_BUILD_WARN),no)
CFLAGS += -erroff=%none
else
CFLAGS += -erroff=%all
endif

ifeq ($(HB_BUILD_DEBUG),yes)
CFLAGS += -g
endif

LD := $(HB_CCACHE) $(HB_CCPATH)$(HB_CCPREFIX)$(HB_CMP)
LD_OUT := -o$(subst x,x, )

# Add all libraries specified in LIBS.
LINKPATHS += -L$(LIB_DIR)
LINKLIBS += $(foreach lib, $(LIBS), -l$(lib))

# If LIBS specifies the RDD library, add all DB drivers.
ifeq ($(findstring hbrdd,$(LIBS)),hbrdd)
LINKLIBS += $(foreach drv, $(HB_DB_DRIVERS), -l$(drv))
endif

# Add the specified GT driver library
ifeq ($(findstring hbrtl,$(LIBS)),hbrtl)

LINKLIBS += $(foreach gt, $(HB_GT_LIBS), -l$(gt)) -lhbrtl

# screen driver libraries
ifeq ($(HB_CRS_LIB),)
HB_CRS_LIB := curses
endif
ifneq ($(findstring gtcrs, $(HB_GT_LIBS)),)
LINKLIBS += -l$(HB_CRS_LIB)
endif
ifneq ($(findstring gtsln, $(HB_GT_LIBS)),)
LINKLIBS += -lslang
endif
ifneq ($(findstring gtxwc, $(HB_GT_LIBS)),)
LINKLIBS += -lX11
LINKPATHS += -L/usr/X11R6/lib
endif

endif

# HB_GPM_MOUSE: use gpm mouse driver
ifeq ($(HB_GPM_MOUSE),yes)
LINKLIBS += -lgpm
endif

ifneq ($(findstring -DHB_PCRE_REGEX, $(HB_USER_CFLAGS)),)
LINKLIBS += -lpcre
endif

ifneq ($(findstring -DHB_EXT_ZLIB, $(HB_USER_CFLAGS)),)
LINKLIBS += -lz
endif

LINKLIBS += -lm -lrt
LINKLIBS += -lnsl -lresolv

LDFLAGS += $(LINKPATHS)

AR := ar
ARFLAGS = $(HB_USER_AFLAGS)
AR_RULE = $(AR) $(ARFLAGS) cr $(LIB_DIR)/$@ $(^F) || ( $(RM) $(LIB_DIR)/$@ && false )

include $(TOP)$(ROOT)config/rules.cf
