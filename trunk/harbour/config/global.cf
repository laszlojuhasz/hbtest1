#
# $Id$
#

# ---------------------------------------------------------------
# See GNU make docs here:
#    http://www.gnu.org/software/make/manual/make.html
#    http://www.jgc.org/feeds/topic-gnumake.xml
# ---------------------------------------------------------------

# This isn't strictly necessary, but it does signficantly reduce
# the number of rules that make has to evaluate otherwise, which may give
# a performance boost on a slow system.
.SUFFIXES:

need := 3.70
ok := $(filter $(need),$(firstword $(sort $(MAKE_VERSION) $(need))))

ifeq ($(ok),)

all: ; @echo Error: GNU Make version $(MAKE_VERSION) found, $(need) or upper needed for Harbour.

else

GRANDP = ../../../
ARCH_COMP := $(HB_ARCHITECTURE)/$(HB_COMPILER)
OBJ_BASE := obj
OBJ_DIR := $(OBJ_BASE)/$(ARCH_COMP)
OBJ_ARCH_DIR := $(OBJ_BASE)/$(HB_ARCHITECTURE)

define check_host

ifneq ($(findstring MINGW,$(1)),)
   HB_HOST_ARCH := win
else ifneq ($(findstring MSys,$(1)),)
   HB_HOST_ARCH := win
else ifneq ($(findstring Windows,$(1)),)
   HB_HOST_ARCH := win
else ifneq ($(findstring CYGWIN,$(1)),)
   HB_HOST_ARCH := win
else ifneq ($(findstring Darwin,$(1)),)
   HB_HOST_ARCH := darwin
else ifneq ($(findstring OS/2,$(1)),)
   HB_HOST_ARCH := os2
else ifneq ($(findstring darwin,$(1)),)
   HB_HOST_ARCH := darwin
else ifneq ($(findstring Linux,$(1)),)
   HB_HOST_ARCH := linux
else ifneq ($(findstring linux,$(1)),)
   HB_HOST_ARCH := linux
else ifneq ($(findstring BSD,$(1)),)
   HB_HOST_ARCH := bsd
else ifneq ($(findstring bsd,$(1)),)
   HB_HOST_ARCH := bsd
else ifneq ($(findstring HP-UX,$(1)),)
   HB_HOST_ARCH := hpux
else ifneq ($(findstring hp-ux,$(1)),)
   HB_HOST_ARCH := hpux
else ifneq ($(findstring SunOS,$(1)),)
   HB_HOST_ARCH := sunos
else ifneq ($(findstring sunos,$(1)),)
   HB_HOST_ARCH := sunos
else ifneq ($(findstring msdos,$(1)),)
   HB_HOST_ARCH := dos
endif

endef

# Directory separator default
ifeq ($(DIRSEP),)
   DIRSEP = /
endif

# Shell detection
ifneq ($(SHLVL),)
   HB_SHELL := bash
else
   ifneq ($(OS2_SHELL),)
      HB_SHELL := os2
   else
      ifeq ($(OS),Windows_NT)
         ifneq ($(ComSpec),)
            COMSPEC := $(ComSpec)
         else
            ifeq ($(COMSPEC),)
               COMSPEC := cmd.exe
            endif
         endif
         HB_SHELL := nt
      else
         # MS-DOS or Win9x
         HB_SHELL := dos
      endif
   endif
endif

CMDPREF :=
ifneq ($(HB_SHELL),bash)
   ifneq ($(COMSPEC),)
      CMDPREF := $(COMSPEC) /C
   endif
endif

ifeq ($(HB_HOST_ARCH),)
   $(eval $(call check_host,$(OSTYPE),))
   ifeq ($(HB_HOST_ARCH),)
      $(eval $(call check_host,$(MACHTYPE),))
      ifeq ($(HB_HOST_ARCH),)
         $(eval $(call check_host,$(OS),))
         ifeq ($(HB_HOST_ARCH),)
            $(eval $(call check_host,$(shell uname -s),))
         endif
      endif
   endif
endif


ifeq ($(HB_HOST_ARCH),)
   ifneq ($(OS2_SHELL),)
      HB_HOST_ARCH := os2
   else ifneq ($(windir),)
      HB_HOST_ARCH := win
   else ifneq ($(WINDIR),)
      HB_HOST_ARCH := win
   else
      HB_HOST_ARCH := dos
   endif
endif

$(info Detected host platform: $(HB_HOST_ARCH))

ifeq ($(HB_HOST_ARCH),win)
   ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
      HB_HOST_ARCH := win_amd64
   endif
endif

ifneq ($(HB_HOST_ARCH),$(HB_ARCHITECTURE))
   ifeq ($(HB_BIN_COMPILE),)
      $(warning Warning: HB_BIN_COMPILE must be specified for cross-builds.)
   endif
endif

ifneq ($(findstring $(HB_HOST_ARCH),win win_amd64 wce dos os2),)
   HB_HOST_BIN_EXT := .exe
else
   HB_HOST_BIN_EXT :=
endif

$(info Detected host binary extension: $(HB_HOST_BIN_EXT))

# Names of valid RDD libraries
HB_DB_DRIVERS=\
	rddntx \
	rddnsx \
	rddcdx \
	rddfpt \
	hbsix \
	hbhsx \
	hbusrrdd \
	hbuddall \

# Names of valid RDD subdirectories
HB_DB_DIRS=\
	dbfntx \
	dbfnsx \
	dbfcdx \
	dbffpt \
	hbsix \
	hsx \
	usrrdd \
	usrrdd/rdds \

ifneq ($(HB_DB_DRVEXT),)
   HB_DB_DRIVERS += $(HB_DB_DRVEXT)
   HB_DB_DIRS += $(HB_DB_DRVEXT)
endif

ifeq ($(HB_BIN_COMPILE),)
   HB_BIN_COMPILE := $(TOP)$(ROOT)bin/$(ARCH_COMP)
endif

ifeq ($(HB_INC_COMPILE),)
   HB_INC_COMPILE := $(TOP)$(ROOT)include
endif

include $(TOP)$(ROOT)config/$(HB_ARCHITECTURE)/global.cf
include $(TOP)$(ROOT)config/$(ARCH_COMP).cf

endif
