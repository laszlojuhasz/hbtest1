#
# $Id$
#

ifeq ($(HB_BUILD_MODE),cpp)
   HB_CMP = CC
else
   HB_CMP = cc
endif

OBJ_EXT = .o
EXE_EXT =
LIB_PREF = lib
LIB_EXT = .a

CC = $(HB_CCACHE) $(HB_CMP)
CC_IN = -c
# NOTE: The ending space after -o is important, please preserve it.
#       Now solved with '$(subst x,x, )' expression.
CC_OUT = -o$(subst x,x, )

CPPFLAGS = -I. -I$(HB_INC_COMPILE)

CFLAGS =
LDFLAGS =

ifneq ($(HB_BUILD_WARN),no)
# XXX:
# gmake[2]: Entering directory `/home/ice/harbour-build/source/rtl'
# gmake[3]: Entering directory `/home/ice/harbour-build/source/rtl/obj/sunos/sunpro'
# cc -I. -I../../../../../include  -errwarn=%all -O -xcode=pic32    -c browdbx.c -o browdbx.o
# "browdbx.c", line 8: warning: empty translation unit
# cc: acomp failed for browdbx.c
# gmake[3]: *** [browdbx.o] Error 2
# gmake[3]: Leaving directory `/home/ice/harbour-build/source/rtl/obj/sunos/sunpro'
# CFLAGS += -errwarn=%all
CFLAGS +=
endif

ifneq ($(HB_BUILD_OPTIM),no)
CFLAGS += -O
endif

ifeq ($(findstring sparc,$(shell isalist)),sparc)
CFLAGS += -xcode=pic32
else
CFLAGS += -KPIC
endif

ifeq ($(HB_BUILD_DEBUG),yes)
CFLAGS += -g
endif

LD = $(HB_CCACHE) $(HB_CMP)
LD_OUT = -o

# Add all libraries specified in LIBS.
LINKPATHS += -L$(LIB_DIR)
LINKLIBS += $(foreach lib, $(LIBS), -l$(lib))

# If LIBS specifies the RDD library, add all DB drivers.
ifeq ($(findstring hbrdd,$(LIBS)),hbrdd)
LINKLIBS += $(foreach drv, $(HB_DB_DRIVERS), -l$(drv))
endif

# Add the specified GT driver library
ifeq ($(findstring hbrtl,$(LIBS)),hbrtl)

LINKLIBS += $(foreach gt, $(HB_GT_LIBS), -l$(gt)) -lhbrtl

# screen driver libraries
ifeq ($(HB_CRS_LIB),)
HB_CRS_LIB = curses
endif
ifneq ($(findstring gtcrs, $(HB_GT_LIBS)),)
LINKLIBS += -l$(HB_CRS_LIB)
endif
ifneq ($(findstring gtsln, $(HB_GT_LIBS)),)
LINKLIBS += -lslang
endif
ifneq ($(findstring gtxwc, $(HB_GT_LIBS)),)
LINKLIBS += -lX11
LINKPATHS += -L/usr/X11R6/lib
endif

endif

ifneq ($(findstring -DHB_PCRE_REGEX, $(HB_USER_CFLAGS)),)
LINKLIBS += -lpcre
endif

ifneq ($(findstring -DHB_EXT_ZLIB, $(HB_USER_CFLAGS)),)
LINKLIBS += -lz
endif

LINKLIBS += -lm -lrt
LINKLIBS += -lsocket -lnsl -lresolv

LDFLAGS += $(LINKPATHS)

AR = ar
ARFLAGS = $(HB_USER_AFLAGS)
AR_RULE = $(AR) $(ARFLAGS) cr $(LIB_DIR)/$@ $(^F) || ( $(RM) $(LIB_DIR)/$@ && false )

include $(TOP)$(ROOT)config/rules.cf
