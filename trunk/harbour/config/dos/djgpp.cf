#
# $Id$
#

ifeq ($(HB_BUILD_MODE),cpp)
   HB_CMP := gpp
else
   HB_CMP := gcc
endif

OBJ_EXT := .o
LIB_PREF := lib
LIB_EXT := .a

CC := $(HB_CMP)
CC_IN := -c
CC_OUT := -o
CPPFLAGS = -I. -I$(HB_INC_COMPILE)
CFLAGS =

ifneq ($(HB_BUILD_WARN),no)
CFLAGS += -Wall -W
endif

ifneq ($(HB_BUILD_OPTIM),no)
CFLAGS += -O3
endif

ifeq ($(HB_BUILD_DEBUG),yes)
CFLAGS += -g
endif

LD := $(HB_CMP)
LD_OUT := -o
LDLIBS = -lm

LINKPATHS += -L$(LIB_DIR)

LINKLIBS += $(foreach lib, $(LIBS), -l$(lib))

# NOTE: The empty line directly before 'endef' HAVE TO exist!
# It causes that every echo command will be separated by LF
define lib_object
@echo. ADDMOD $(file) >> __lib__.tmp

endef

# We have to use script to overcome the DOS limit of max 128 characters
# in commmand line
define create_library
@echo. CREATE $(LIB_DIR)/$@ > __lib__.tmp
$(foreach file, $(^F), $(lib_object))
@echo. SAVE >> __lib__.tmp
@echo. END >> __lib__.tmp
$(AR) $(ARFLAGS) -M < __lib__.tmp
endef

# NOTE: The empty line below HAVE TO exist!
define link_file
@echo. $(file) >> __link__.tmp

endef

define link_exe_file
@echo. $(LDFLAGS) $(HB_USER_LDFLAGS) $(LD_OUT)$(BIN_DIR)/$@ > __link__.tmp
$(foreach file, $(^F), $(link_file))
$(foreach file, $(LINKPATHS), $(link_file))
@echo. -Wl,--start-group >> __link__.tmp
$(foreach file, $(LINKLIBS), $(link_file))
@echo. -Wl,--end-group >> __link__.tmp
@echo. $(LDLIBS) >> __link__.tmp
-$(LD) @__link__.tmp
endef

AR := ar
ARFLAGS = $(HB_USER_AFLAGS)
AR_RULE = $(create_library)

LD_RULE = $(link_exe_file)

include $(TOP)$(ROOT)config/rules.cf
