/*
 * $Id$
 */

/* -------------------------------------------------------------------- */
/* WARNING: Automatically generated source file. DO NOT EDIT!           */
/*          Instead, edit corresponding .ui file,                       */
/*          with Qt Generator, and run hbqtui.exe.                      */
/* -------------------------------------------------------------------- */
/*                                                                      */
/*               Pritpal Bedi <bedipritpal@hotmail.com>                 */
/*                                                                      */
/* -------------------------------------------------------------------- */

FUNCTION uiProjectpropertiesex( qParent )
   LOCAL oUI
   LOCAL oWidget
   LOCAL qObj := {=>}

   hb_hCaseMatch( qObj, .f. )

   oWidget := QWidget():new( qParent )
  
   oWidget:setObjectName( "FormProjectPropEx" )
  
   qObj[ "FormProjectPropEx"  ] := oWidget
  
   qObj[ "verticalLayout"     ] := QVBoxLayout():new(qObj[ "FormProjectPropEx" ])
   qObj[ "tabWidget"          ] := QTabWidget():new(qObj[ "FormProjectPropEx" ])
   qObj[ "tabGeneral"         ] := QWidget():new()
   qObj[ "gridLayout"         ] := QGridLayout():new(qObj[ "tabGeneral" ])
   qObj[ "label"              ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "font"               ] := QFont():new()
   qObj[ "comboPrjType"       ] := QComboBox():new(qObj[ "tabGeneral" ])
   qObj[ "label_2"            ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "editPrjTitle"       ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "label_3"            ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "editPrjLoctn"       ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "label_5"            ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "editDstFolder"      ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "label_7"            ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "editLaunchParams"   ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "label_8"            ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "editLaunchExe"      ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "label_13"           ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "editBackup"         ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "editOutName"        ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "label_6"            ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "buttonChoosePrjLoc" ] := QToolButton():new(qObj[ "tabGeneral" ])
   qObj[ "buttonBackup"       ] := QToolButton():new(qObj[ "tabGeneral" ])
   qObj[ "buttonChooseDest"   ] := QToolButton():new(qObj[ "tabGeneral" ])
   qObj[ "verticalSpacer"     ] := QSpacerItem():new(20, 40, 1, 7)
   qObj[ "editWrkFolder"      ] := QLineEdit():new(qObj[ "tabGeneral" ])
   qObj[ "labelInitFolder"    ] := QLabel():new(qObj[ "tabGeneral" ])
   qObj[ "buttonChooseWd"     ] := QToolButton():new(qObj[ "tabGeneral" ])
   qObj[ "verticalSpacer_2"   ] := QSpacerItem():new(20, 40, 1, 7)
   qObj[ "checkXhb"           ] := QCheckBox():new(qObj[ "tabGeneral" ])
   qObj[ "checkXpp"           ] := QCheckBox():new(qObj[ "tabGeneral" ])
   qObj[ "checkClp"           ] := QCheckBox():new(qObj[ "tabGeneral" ])
   qObj[ "tabFiles"           ] := QWidget():new()
   qObj[ "gridLayout_2"       ] := QGridLayout():new(qObj[ "tabFiles" ])
   qObj[ "editSources"        ] := QPlainTextEdit():new(qObj[ "tabFiles" ])
   qObj[ "buttonSelect"       ] := QToolButton():new(qObj[ "tabFiles" ])
   qObj[ "buttonSort"         ] := QToolButton():new(qObj[ "tabFiles" ])
   qObj[ "buttonSortZA"       ] := QToolButton():new(qObj[ "tabFiles" ])
   qObj[ "buttonSortOrg"      ] := QToolButton():new(qObj[ "tabFiles" ])
   qObj[ "tabFlags"           ] := QWidget():new()
   qObj[ "gridLayout_3"       ] := QGridLayout():new(qObj[ "tabFlags" ])
   qObj[ "editFlags"          ] := QPlainTextEdit():new(qObj[ "tabFlags" ])
   qObj[ "tabHbp"             ] := QWidget():new()
   qObj[ "gridLayout_4"       ] := QGridLayout():new(qObj[ "tabHbp" ])
   qObj[ "editHbp"            ] := QPlainTextEdit():new(qObj[ "tabHbp" ])
   qObj[ "horizontalLayout_4" ] := QHBoxLayout():new()
   qObj[ "buttonSaveExit"     ] := QPushButton():new(qObj[ "FormProjectPropEx" ])
   qObj[ "buttonSave"         ] := QPushButton():new(qObj[ "FormProjectPropEx" ])
   qObj[ "buttonCn"           ] := QPushButton():new(qObj[ "FormProjectPropEx" ])
   
   qObj[ "FormProjectPropEx"  ]:resize(324, 434)
   qObj[ "font"               ]:setBold(.T.)
   qObj[ "font"               ]:setWeight(75)
   qObj[ "label"              ]:setFont(qObj[ "font" ])
   qObj[ "label"              ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label" ], 0, 0, 1, 1)
   qObj[ "comboPrjType"       ]:setEditable(.F.)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "comboPrjType" ], 0, 1, 1, 1)
   qObj[ "label_2"            ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label_2" ], 1, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editPrjTitle" ], 1, 1, 1, 1)
   qObj[ "label_3"            ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label_3" ], 2, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editPrjLoctn" ], 2, 1, 1, 1)
   qObj[ "label_5"            ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label_5" ], 8, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editDstFolder" ], 8, 1, 1, 1)
   qObj[ "label_7"            ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label_7" ], 12, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editLaunchParams" ], 12, 1, 1, 2)
   qObj[ "label_8"            ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label_8" ], 13, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editLaunchExe" ], 13, 1, 1, 2)
   qObj[ "label_13"           ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label_13" ], 10, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editBackup" ], 10, 1, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editOutName" ], 3, 1, 1, 1)
   qObj[ "label_6"            ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "label_6" ], 3, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "buttonChoosePrjLoc" ], 2, 2, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "buttonBackup" ], 10, 2, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "buttonChooseDest" ], 8, 2, 1, 1)
   qObj[ "gridLayout"         ]:addItem(qObj[ "verticalSpacer" ], 11, 1, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "editWrkFolder" ], 14, 1, 1, 1)
   qObj[ "labelInitFolder"    ]:setAlignment(hb_bitOR(hb_bitOR(2,2),128))
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "labelInitFolder" ], 14, 0, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "buttonChooseWd" ], 14, 2, 1, 1)
   qObj[ "gridLayout"         ]:addItem(qObj[ "verticalSpacer_2" ], 7, 1, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "checkXhb" ], 4, 1, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "checkXpp" ], 5, 1, 1, 1)
   qObj[ "gridLayout"         ]:addWidget_1(qObj[ "checkClp" ], 6, 1, 1, 1)
   qObj[ "tabWidget"          ]:addTab(qObj[ "tabGeneral" ], "")
   qObj[ "editSources"        ]:setLineWrapMode(0)
   qObj[ "gridLayout_2"       ]:addWidget_1(qObj[ "editSources" ], 1, 1, 1, 11)
   qObj[ "gridLayout_2"       ]:addWidget_1(qObj[ "buttonSelect" ], 0, 1, 1, 1)
   qObj[ "gridLayout_2"       ]:addWidget_1(qObj[ "buttonSort" ], 0, 2, 1, 1)
   qObj[ "gridLayout_2"       ]:addWidget_1(qObj[ "buttonSortZA" ], 0, 3, 1, 1)
   qObj[ "gridLayout_2"       ]:addWidget_1(qObj[ "buttonSortOrg" ], 0, 4, 1, 1)
   qObj[ "tabWidget"          ]:addTab(qObj[ "tabFiles" ], "")
   qObj[ "editFlags"          ]:setLineWrapMode(0)
   qObj[ "gridLayout_3"       ]:addWidget_1(qObj[ "editFlags" ], 0, 0, 1, 1)
   qObj[ "tabWidget"          ]:addTab(qObj[ "tabFlags" ], "")
   qObj[ "editHbp"            ]:setLineWrapMode(0)
   qObj[ "editHbp"            ]:setReadOnly(.T.)
   qObj[ "gridLayout_4"       ]:addWidget_1(qObj[ "editHbp" ], 0, 0, 1, 1)
   qObj[ "tabWidget"          ]:addTab(qObj[ "tabHbp" ], "")
   qObj[ "verticalLayout"     ]:addWidget(qObj[ "tabWidget" ])
   qObj[ "horizontalLayout_4" ]:addWidget(qObj[ "buttonSaveExit" ])
   qObj[ "buttonSave"         ]:setAutoDefault(.F.)
   qObj[ "buttonSave"         ]:setDefault(.T.)
   qObj[ "horizontalLayout_4" ]:addWidget(qObj[ "buttonSave" ])
   qObj[ "buttonCn"           ]:setAutoDefault(.F.)
   qObj[ "horizontalLayout_4" ]:addWidget(qObj[ "buttonCn" ])
   qObj[ "verticalLayout"     ]:addLayout(qObj[ "horizontalLayout_4" ])
   qObj[ "tabWidget"          ]:setCurrentIndex(0)
   qObj[ "FormProjectPropEx"  ]:setWindowTitle(q__tr("FormProjectPropEx", "Form", 0, "UTF8"))
   qObj[ "label"              ]:setText( [Project Type:] )
   qObj[ "comboPrjType"       ]:setToolTip( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">A project may be of type Executable|Library|Dll.</span></p></body></html>] )
   qObj[ "label_2"            ]:setText( [Project Title:] )
   qObj[ "editPrjTitle"       ]:setToolTip( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Title will be shown as a node in  project tree.</span></p></body></html>] )
   qObj[ "label_3"            ]:setText( [Project Location:] )
   qObj[ "editPrjLoctn"       ]:setToolTip( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Project location is the folder where project definition file .hbi will be stored. &lt;Project Location&gt; plus &lt;Output Name&gt; will comprise the full file name with .hbp extension.</span></p></body></html>] )
   qObj[ "label_5"            ]:setText( [Destination Folder:] )
   qObj[ "editDstFolder"      ]:setToolTip( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Destination folder is a compatibility slot and is reserved to place the &lt;Output&gt; .exe .a .lib. </p> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">But currently this functionality will be achieved through the -o compiler flag.</p></body></html>] )
   qObj[ "label_7"            ]:setText( [Launch Parameters:] )
   qObj[ "label_8"            ]:setText( [Launch Program:] )
   qObj[ "label_13"           ]:setText( [Backup Location:] )
   qObj[ "editOutName"        ]:setToolTip( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Output name is used as final name for .hbi .hbp .exe .lib .a and will be added to the paths retrieved via &lt;Project Location&gt;, &lt;Working Folder&gt;, &lt;Destination Folder&gt;, etc. So this is a very important component.</p></body></html>] )
   qObj[ "label_6"            ]:setText( [Output Name:] )
   qObj[ "buttonChoosePrjLoc" ]:setText( [...] )
   qObj[ "buttonBackup"       ]:setText( [...] )
   qObj[ "buttonChooseDest"   ]:setText( [...] )
   qObj[ "editWrkFolder"      ]:setToolTip( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Working folder will be used to host HBMK2 compliant </span><span style=" font-size:8pt; font-weight:600;">&lt;Output Name&gt;</span><span style=" font-size:8pt;"> plus </span><span style=" font-size:8pt; font-weight:600;">&lt;hbp&gt;</span><span style=" font-size:8pt;"> and will be designated as current folder when </span><span style=" font-size:8pt; font-weight:600;">HBMK2</span><span style=" font-size:8pt;"> will be invoked.</span></p></body></html>] )
   qObj[ "labelInitFolder"    ]:setText( [Start In:] )
   qObj[ "buttonChooseWd"     ]:setText( [...] )
   qObj[ "checkXhb"           ]:setText( [Xharbour] )
   qObj[ "checkXpp"           ]:setText( [Xbase++] )
   qObj[ "checkClp"           ]:setText( [Clipper] )
   qObj[ "tabWidget"          ]:setTabText(qObj[ "tabWidget" ]:indexOf(qObj[ "tabGeneral" ]), q__tr("FormProjectPropEx", "General", 0, "UTF8"))
   qObj[ "editSources"        ]:setToolTip( [] )
   qObj[ "editSources"        ]:setWhatsThis( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">You can include hereunder any type of file which can be edited via plain text editor. One file per line. You can use meta-keys to define your source paths to make your projects location independant. </span></p> <p align="center" style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;"></p> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt; font-weight:600;">NOTE:</span></p> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Only .prg .c .cpp .rc .res files will be supplied to the HBMK2. All other files will be made visible for editing in &lt;Project Tree&gt;.</span></p></body></html>] )
   qObj[ "editSources"        ]:setStyleSheet( [] )
   qObj[ "buttonSelect"       ]:setToolTip( [Select Sources] )
   qObj[ "buttonSelect"       ]:setText( [] )
   qObj[ "buttonSort"         ]:setToolTip( [Sort by Ascending Order] )
   qObj[ "buttonSort"         ]:setText( [] )
   qObj[ "buttonSortZA"       ]:setToolTip( [Sort by Descending Order] )
   qObj[ "buttonSortZA"       ]:setText( [] )
   qObj[ "buttonSortOrg"      ]:setToolTip( [Organize by Type and Sort Ascending] )
   qObj[ "buttonSortOrg"      ]:setText( [] )
   qObj[ "tabWidget"          ]:setTabText(qObj[ "tabWidget" ]:indexOf(qObj[ "tabFiles" ]), q__tr("FormProjectPropEx", "Sources", 0, "UTF8"))
   qObj[ "editFlags"          ]:setToolTip( [] )
   qObj[ "editFlags"          ]:setWhatsThis( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Meta-keys are a special way of keeping generic information which is of repeated and/or of dynamic nature. HBIDE implements meta key/value pair more comprehensively. It allows you to write an expression for the value part which get evaluated at the time project is loaded. The only point to take into consideration is that value returned by such expression must be of type character.</span></p> <p align="center" style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;"></p> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">The expression is evaluated only once and keeps its value until the HBIDE interface is closed. In case of any error, the expression string itself is returned.</span></p></body></html>] )
   qObj[ "editFlags"          ]:setStyleSheet( [] )
   qObj[ "tabWidget"          ]:setTabText(qObj[ "tabWidget" ]:indexOf(qObj[ "tabFlags" ]), q__tr("FormProjectPropEx", "Flags", 0, "UTF8"))
   qObj[ "editHbp"            ]:setToolTip( [] )
   qObj[ "editHbp"            ]:setWhatsThis( [<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd"> <html><head><meta name="qrichtext" content="1" /><style type="text/css"> p, li { white-space: pre-wrap; } </style></head><body style=" font-family:'MS Shell Dlg 2'; font-size:8.25pt; font-weight:400; font-style:normal;"> <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:8pt;">Here you can view in real-time the resultant &lt;hbp&gt; output which will be supplied to HBMK2. This view may give you insight about your source layout and many other facts.</span></p> <p align="center" style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;"></p> <p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:14pt; font-weight:600; text-decoration: underline;">Enjoy</span></p></body></html>] )
   qObj[ "editHbp"            ]:setStyleSheet( [] )
   qObj[ "tabWidget"          ]:setTabText(qObj[ "tabWidget" ]:indexOf(qObj[ "tabHbp" ]), q__tr("FormProjectPropEx", "hbp", 0, "UTF8"))
   qObj[ "buttonSaveExit"     ]:setText( [Save and Close] )
   qObj[ "buttonSave"         ]:setText( [Save] )
   qObj[ "buttonCn"           ]:setText( [Cancel] )

   oUI         := HbQtUI():new()
   oUI:qObj    := qObj
   oUI:oWidget := oWidget

   RETURN oUI

/*----------------------------------------------------------------------*/

