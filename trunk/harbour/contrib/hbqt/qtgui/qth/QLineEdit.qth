/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
Inherit  = QWidget
New      = pParent
</CLASS>

<CODE>
#include <QtGui/QLineEdit>
#include <QtGui/QValidator>


/*
 * QLineEdit ( QWidget * parent = 0 )
 * QLineEdit ( const QString & contents, QWidget * parent = 0 )
 * ~QLineEdit ()
 */
HB_FUNC( QT_QLINEEDIT )
{
   __HB_RETPTRGC__( ( QLineEdit* ) new QLineEdit( hbqt_par_QWidget( 1 ) ) );
}
</CODE>

<ENUMS>
enum EchoMode { Normal, NoEcho, Password, PasswordEchoOnEdit }
</ENUMS>

<PROTOS>
Qt::Alignment alignment () const
void backspace ()
QCompleter * completer () const
QMenu * createStandardContextMenu ()
void cursorBackward ( bool mark, int steps = 1 )
void cursorForward ( bool mark, int steps = 1 )
int cursorPosition () const
int cursorPositionAt ( const QPoint & pos )
void cursorWordBackward ( bool mark )
void cursorWordForward ( bool mark )
void del ()
void deselect ()
QString displayText () const
bool dragEnabled () const
EchoMode echoMode () const
void end ( bool mark )
void getTextMargins ( int * left, int * top, int * right, int * bottom ) const
bool hasAcceptableInput () const
bool hasFrame () const
bool hasSelectedText () const
void home ( bool mark )
QString inputMask () const
void insert ( const QString & newText )
bool isModified () const
bool isReadOnly () const
bool isRedoAvailable () const
bool isUndoAvailable () const
int maxLength () const
virtual QSize minimumSizeHint () const
QString selectedText () const
int selectionStart () const
void setAlignment ( Qt::Alignment flag )
void setCompleter ( QCompleter * c )
void setCursorPosition ( int )
void setDragEnabled ( bool b )
void setEchoMode ( EchoMode )
void setFrame ( bool )
void setInputMask ( const QString & inputMask )
void setMaxLength ( int )
void setModified ( bool )
void setReadOnly ( bool )
void setSelection ( int start, int length )
void setTextMargins ( int left, int top, int right, int bottom )
void setValidator ( const QValidator * v )
virtual QSize sizeHint () const
QString text () const
virtual const QValidator * validator () const
</PROTOS>

<SLOTS>
void clear ()
void copy () const
void cut ()
void paste ()
void redo ()
void selectAll ()
void setText ( const QString & )
void undo ()
</SLOTS>

<SIGNALS>
void cursorPositionChanged ( int old, int new )
void editingFinished ()
void returnPressed ()
void selectionChanged ()
void textChanged ( const QString & text )
void textEdited ( const QString & text )
</SIGNALS>
