/*
 * $Id$
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit  = QWidget
New      = pParent
PaintEvent = YES
</CLASS>

<CODE>
#include <QtGui/QMenu>


/*
 * QMenu ( QWidget * parent = 0 )
 * QMenu ( const QString & title, QWidget * parent = 0 )
 * ~QMenu ()
 */
HB_FUNC( QT_QMENU )
{
   if( hb_pcount() == 0 )
   {
      __HB_RETPTRGC__( new QMenu() );
   }
   else if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {      
      __HB_RETPTRGC__( new QMenu( hbqt_par_QWidget( 1 ) ) );
   }   
/*   
   else if( hb_pcount() >= 1 && HB_ISCHAR( 1 ) )
   {      
      void * pText01 = NULL;
      __HB_RETPTRGC__( new QMenu( hb_parstr_utf8( 1, &pText01, NULL ), HB_ISOBJECT( 2 ) ? hbqt_par_QWidget( 2 ) : 0 ) );
      hb_strfree( pText01 );
   }   
*/   
}
</CODE>

<PROTOS>
QAction * actionAt ( const QPoint & pt ) const
QRect actionGeometry ( QAction * act ) const
QAction * activeAction () const

QAction * addAction ( const QString & text )
QAction * addAction ( const QIcon & icon, const QString & text )
QAction * addAction ( const QString & text, const QObject * receiver, const char * member, const QKeySequence & shortcut = 0 )
QAction * addAction ( const QIcon & icon, const QString & text, const QObject * receiver, const char * member, const QKeySequence & shortcut = 0 )
void addAction ( QAction * action )

QAction * addMenu ( QMenu * menu )
QMenu * addMenu ( const QString & title )
QMenu * addMenu ( const QIcon & icon, const QString & title )

QAction * addSeparator ()
void clear ()
QAction * defaultAction () const

QAction * exec ()
QAction * exec ( const QPoint & p, QAction * action = 0 )

void hideTearOffMenu ()
QIcon icon () const
QAction * insertMenu ( QAction * before, QMenu * menu )
QAction * insertSeparator ( QAction * before )
bool isEmpty () const
bool isTearOffEnabled () const
bool isTearOffMenuVisible () const
// OSMenuRef macMenu ( OSMenuRef merge = 0 )
QAction * menuAction () const
void popup ( const QPoint & p, QAction * atAction = 0 )
bool separatorsCollapsible () const
void setActiveAction ( QAction * act )
void setDefaultAction ( QAction * act )
void setIcon ( const QIcon & icon )
void setSeparatorsCollapsible ( bool collapse )
void setTearOffEnabled ( bool )
void setTitle ( const QString & title )
QString title () const
// HMENU wceMenu ( bool create = false )
</PROTOS>

<SIGNALS>
void aboutToHide ()
void aboutToShow ()
void hovered ( QAction * action )
void triggered ( QAction * action )
</SIGNALS>
