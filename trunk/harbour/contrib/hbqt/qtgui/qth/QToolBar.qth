/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
Inherit  = QWidget
New      = pParent
</CLASS>

<CODE>
#include <QtGui/QToolBar>
#include <QtGui/QIcon>


/* QToolBar ( const QString & title, QWidget * parent = 0 )
 * QToolBar ( QWidget * parent = 0 )
 * ~QToolBar ()
 */
HB_FUNC( QT_QTOOLBAR )
{
   if( hb_param( 1, HB_IT_STRING ) )
      __HB_RETPTRGC__( new QToolBar( hbqt_par_QString( 1 ), hbqt_par_QWidget( 2 ) ) );
   else
      __HB_RETPTRGC__( new QToolBar( hbqt_par_QWidget( 1 ) ) );
}
</CODE>

<PROTOS>
QAction * actionAt ( const QPoint & p ) const
QAction * actionAt ( int x, int y ) const
void addAction ( QAction * action )   [*D=1*]
QAction * addAction ( const QString & text )
QAction * addAction ( const QIcon & icon, const QString & text )
QAction * addAction ( const QString & text, const QObject * receiver, const char * member )
QAction * addAction ( const QIcon & icon, const QString & text, const QObject * receiver, const char * member )   [*D=3*]
QAction * addSeparator ()
QAction * addWidget ( QWidget * widget )
Qt::ToolBarAreas allowedAreas () const
void clear ()
QSize iconSize () const
QAction * insertSeparator ( QAction * before )
QAction * insertWidget ( QAction * before, QWidget * widget )
bool isAreaAllowed ( Qt::ToolBarArea area ) const
bool isFloatable () const
bool isFloating () const
bool isMovable () const
Qt::Orientation orientation () const
void setAllowedAreas ( Qt::ToolBarAreas areas )
void setFloatable ( bool floatable )
void setMovable ( bool movable )
void setOrientation ( Qt::Orientation orientation )
QAction * toggleViewAction () const
Qt::ToolButtonStyle toolButtonStyle () const
QWidget * widgetForAction ( QAction * action ) const
</PROTOS>

<SLOTS>
void setIconSize ( const QSize & iconSize )
void setToolButtonStyle ( Qt::ToolButtonStyle toolButtonStyle )
</SLOTS>

<SIGNALS>
void actionTriggered ( QAction * action )
void allowedAreasChanged ( Qt::ToolBarAreas allowedAreas )
void iconSizeChanged ( const QSize & iconSize )
void movableChanged ( bool movable )
void orientationChanged ( Qt::Orientation orientation )
void toolButtonStyleChanged ( Qt::ToolButtonStyle toolButtonStyle )
</SIGNALS>

