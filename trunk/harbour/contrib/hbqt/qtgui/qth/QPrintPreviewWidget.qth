/*
 * $Id$
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2012 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherit     = QWidget
New         = pParent, nFlags
</CLASS>

<CODE>
#include <QtGui/QPrintPreviewWidget>


/*
 * QPrintPreviewWidget ( QPrinter * printer, QWidget * parent = 0, Qt::WindowFlags flags = 0 )
 * QPrintPreviewWidget ( QWidget * parent = 0, Qt::WindowFlags flags = 0 )
 * ~QPrintPreviewWidget ()
 */
HB_FUNC( QT_QPRINTPREVIEWWIDGET )
{
   if( hb_pcount() >= 2 && hbqt_par_isDerivedFrom( 1, "QPRINTER" ) && hbqt_par_isDerivedFrom( 2, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QPrintPreviewWidget( hbqt_par_QPrinter( 1 ), hbqt_par_QWidget( 2 ), ( Qt::WindowFlags ) hb_parni( 3 ) ) );
   }
   else if( hb_pcount() >= 1 && hbqt_par_isDerivedFrom( 1, "QWIDGET" ) )
   {
      __HB_RETPTRGC__( new QPrintPreviewWidget( hbqt_par_QWidget( 1 ), ( Qt::WindowFlags ) hb_parni( 2 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QPrintPreviewWidget() );
   }
}
</CODE>

<ENUMS>
enum ViewMode { SinglePageView, FacingPagesView, AllPagesView }
enum ZoomMode { CustomZoom, FitToWidth, FitInView }
</ENUMS>

<PROTOS>
int currentPage () const
QPrinter::Orientation orientation () const
int pageCount () const                        [*V=0x040600*]
ViewMode viewMode () const
qreal zoomFactor () const
ZoomMode zoomMode () const
</PROTOS>

<SLOTS>
void fitInView ()
void fitToWidth ()
void print ()
void setAllPagesViewMode ()
void setCurrentPage ( int page )
void setFacingPagesViewMode ()
void setLandscapeOrientation ()
void setOrientation ( QPrinter::Orientation orientation )
void setPortraitOrientation ()
void setSinglePageViewMode ()
void setViewMode ( ViewMode mode )
void setZoomFactor ( qreal factor )
void setZoomMode ( ZoomMode zoomMode )
void updatePreview ()
void zoomIn ( qreal factor = 1.1 )
void zoomOut ( qreal factor = 1.1 )
</SLOTS>

<SIGNALS>
void paintRequested ( QPrinter * printer )
void previewChanged ()
</SIGNALS>
