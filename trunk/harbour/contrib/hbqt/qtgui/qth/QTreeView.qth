/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
Inherit  = QAbstractItemView
New      = pParent
</CLASS>

<CODE>
#include <QtGui/QTreeView>


/*
 * QTreeView ( QWidget * parent = 0 )
 * ~QTreeView ()
 */
HB_FUNC( QT_QTREEVIEW )
{
   __HB_RETPTRGC__( ( QTreeView* ) new QTreeView( hbqt_par_QWidget( 1 ) ) );
}
</CODE>

<ENUMS>
#      These enums are defined in QAbstractItemView class
#
enum DragDropMode { NoDragDrop, DragOnly, DropOnly, DragDrop, InternalMove }
enum EditTrigger { NoEditTriggers, CurrentChanged, DoubleClicked, SelectedClicked, ..., AllEditTriggers }
enum ScrollHint { EnsureVisible, PositionAtTop, PositionAtBottom, PositionAtCenter }
enum ScrollMode { ScrollPerItem, ScrollPerPixel }
enum SelectionBehavior { SelectItems, SelectRows, SelectColumns }
enum SelectionMode { SingleSelection, ContiguousSelection, ExtendedSelection, MultiSelection, NoSelection }
flags EditTriggers
</ENUMS>

<PROTOS>
bool allColumnsShowFocus () const
int autoExpandDelay () const
int columnAt ( int x ) const
int columnViewportPosition ( int column ) const
int columnWidth ( int column ) const
bool expandsOnDoubleClick () const
QHeaderView * header () const
int indentation () const
QModelIndex indexAbove ( const QModelIndex & index ) const
QModelIndex indexBelow ( const QModelIndex & index ) const
bool isAnimated () const
bool isColumnHidden ( int column ) const
bool isExpanded ( const QModelIndex & index ) const
bool isFirstColumnSpanned ( int row, const QModelIndex & parent ) const
bool isHeaderHidden () const
bool isRowHidden ( int row, const QModelIndex & parent ) const
bool isSortingEnabled () const
bool itemsExpandable () const
bool rootIsDecorated () const
virtual void scrollTo ( const QModelIndex & index, ScrollHint hint = EnsureVisible )
void setAllColumnsShowFocus ( bool enable )
void setAnimated ( bool enable )
void setAutoExpandDelay ( int delay )
void setColumnHidden ( int column, bool hide )
void setColumnWidth ( int column, int width )
void setExpanded ( const QModelIndex & index, bool expanded )
void setExpandsOnDoubleClick ( bool enable )
void setFirstColumnSpanned ( int row, const QModelIndex & parent, bool span )
void setHeader ( QHeaderView * header )
void setHeaderHidden ( bool hide )
void setIndentation ( int i )
void setItemsExpandable ( bool enable )
void setRootIsDecorated ( bool show )
void setRowHidden ( int row, const QModelIndex & parent, bool hide )
void setSortingEnabled ( bool enable )
void setUniformRowHeights ( bool uniform )
void setWordWrap ( bool on )
void sortByColumn ( int column, Qt::SortOrder order )
bool uniformRowHeights () const
virtual QRect visualRect ( const QModelIndex & index ) const
bool wordWrap () const
</PROTOS>

<SLOTS>
void collapse ( const QModelIndex & index )
void collapseAll ()
void expand ( const QModelIndex & index )
void expandAll ()
void expandToDepth ( int depth )
void hideColumn ( int column )
void resizeColumnToContents ( int column )
void showColumn ( int column )
</SLOTS>

<SIGNALS>
void collapsed ( const QModelIndex & index )
void expanded ( const QModelIndex & index )
</SIGNALS>

