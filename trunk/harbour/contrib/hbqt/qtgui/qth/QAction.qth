/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>

Inherit  = QObject
New      = pParent
Calls    = QT_QAction

</CLASS>


<CODE>
#include <QtGui/QAction>


/*
 * QAction ( QObject * parent )
 * QAction ( const QString & text, QObject * parent )
 * QAction ( const QIcon & icon, const QString & text, QObject * parent )
 * ~QAction ()
 */
HB_FUNC( QT_QACTION )
{
   if( HB_ISPOINTER( 1 ) )
      __HB_RETPTRGC__( new QAction( hbqt_par_QObject( 1 ) ) );
   else if( HB_ISPOINTER( 2 ) )
      __HB_RETPTRGC__( new QAction( hbqt_par_QString( 1 ), hbqt_par_QObject( 2 ) ) );
   else if( HB_ISPOINTER( 3 ) )
      __HB_RETPTRGC__( new QAction( *hbqt_par_QIcon( 1 ), hbqt_par_QString( 2 ), hbqt_par_QObject( 3 ) ) );
}
</CODE>

<ENUMS>
enum ActionEvent { Trigger, Hover }
enum MenuRole { NoRole, TextHeuristicRole, ApplicationSpecificRole, AboutQtRole, ..., QuitRole }
</ENUMS>

<PROTOS>
QActionGroup * actionGroup () const
void activate ( ActionEvent event )
//QList<QGraphicsWidget *> associatedGraphicsWidgets () const
QList<QWidget *> associatedWidgets () const
bool autoRepeat () const
QVariant data () const
QFont font () const
QIcon icon () const
QString iconText () const
bool isCheckable () const
bool isChecked () const
bool isEnabled () const
bool isIconVisibleInMenu () const
bool isSeparator () const
bool isVisible () const
QMenu * menu () const
MenuRole menuRole () const
QWidget * parentWidget () const
void setActionGroup ( QActionGroup * group )
void setAutoRepeat ( bool )
void setCheckable ( bool )
void setData ( const QVariant & userData )
void setFont ( const QFont & font )
void setIcon ( const QIcon & icon )
void setIconText ( const QString & text )
void setIconVisibleInMenu ( bool visible )
void setMenu ( QMenu * menu )
void setMenuRole ( MenuRole menuRole )
void setSeparator ( bool b )
void setShortcut ( const QKeySequence & shortcut )
void setShortcutContext ( Qt::ShortcutContext context )
void setShortcuts ( const QList<QKeySequence> & shortcuts )
void setShortcuts ( QKeySequence::StandardKey key )
void setStatusTip ( const QString & statusTip )
void setText ( const QString & text )
void setToolTip ( const QString & tip )
void setWhatsThis ( const QString & what )
QKeySequence shortcut () const
Qt::ShortcutContext shortcutContext () const
QList<QKeySequence> shortcuts () const
bool showStatusText ( QWidget * widget = 0 )
QString statusTip () const
QString text () const
QString toolTip () const
QString whatsThis () const
</PROTOS>

<SLOTS>
void hover ()
void setChecked ( bool )
void setDisabled ( bool b )
void setEnabled ( bool )
void setVisible ( bool )
void toggle ()
void trigger ()
</SLOTS>

<SIGNALS>
void changed ()
void hovered ()
void toggled ( bool checked )
void triggered ( bool checked = false )
</SIGNALS>
