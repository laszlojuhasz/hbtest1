/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = no
Inherit  = QGraphicsLayout
Type     = 
New      = 
</CLASS>

<CODE>
#include <QtGui/QGraphicsGridLayout>


/*
 * QGraphicsGridLayout ( QGraphicsLayoutItem * parent = 0 )
 * virtual ~QGraphicsGridLayout ()
 */
HB_FUNC( QT_QGRAPHICSGRIDLAYOUT )
{
   if( hb_pcount() == 1 && HB_ISPOINTER( 1 ) )
   {
      __HB_RETPTRGC__( new QGraphicsGridLayout( hbqt_par_QGraphicsLayoutItem( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGraphicsGridLayout() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void addItem ( QGraphicsLayoutItem * item, int row, int column, int rowSpan, int columnSpan, Qt::Alignment alignment = 0 )
void addItem ( QGraphicsLayoutItem * item, int row, int column, Qt::Alignment alignment = 0 )
Qt::Alignment alignment ( QGraphicsLayoutItem * item ) const
Qt::Alignment columnAlignment ( int column ) const
int columnCount () const
qreal columnMaximumWidth ( int column ) const
qreal columnMinimumWidth ( int column ) const
qreal columnPreferredWidth ( int column ) const
qreal columnSpacing ( int column ) const
int columnStretchFactor ( int column ) const
virtual int count () const
qreal horizontalSpacing () const
QGraphicsLayoutItem * itemAt ( int row, int column ) const
virtual QGraphicsLayoutItem * itemAt ( int index ) const
virtual void removeAt ( int index )
Qt::Alignment rowAlignment ( int row ) const
int rowCount () const
qreal rowMaximumHeight ( int row ) const
qreal rowMinimumHeight ( int row ) const
qreal rowPreferredHeight ( int row ) const
qreal rowSpacing ( int row ) const
int rowStretchFactor ( int row ) const
void setAlignment ( QGraphicsLayoutItem * item, Qt::Alignment alignment )
void setColumnAlignment ( int column, Qt::Alignment alignment )
void setColumnFixedWidth ( int column, qreal width )
void setColumnMaximumWidth ( int column, qreal width )
void setColumnMinimumWidth ( int column, qreal width )
void setColumnPreferredWidth ( int column, qreal width )
void setColumnSpacing ( int column, qreal spacing )
void setColumnStretchFactor ( int column, int stretch )
virtual void setGeometry ( const QRectF & rect )
void setHorizontalSpacing ( qreal spacing )
void setRowAlignment ( int row, Qt::Alignment alignment )
void setRowFixedHeight ( int row, qreal height )
void setRowMaximumHeight ( int row, qreal height )
void setRowMinimumHeight ( int row, qreal height )
void setRowPreferredHeight ( int row, qreal height )
void setRowSpacing ( int row, qreal spacing )
void setRowStretchFactor ( int row, int stretch )
void setSpacing ( qreal spacing )
void setVerticalSpacing ( qreal spacing )
qreal verticalSpacing () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>



