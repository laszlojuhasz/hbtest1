/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = no
Inherits = QTextFormat
Type     = Core
New      = 
</CLASS>

<CODE>
#include <QtGui/QTextCharFormat>


/*
 * QTextCharFormat ()
 *
 */
HB_FUNC( QT_QTEXTCHARFORMAT )
{
   __HB_RETPTRGC__( new QTextCharFormat() );
}
</CODE>

<ENUMS>
enum UnderlineStyle { NoUnderline, SingleUnderline, DashUnderline, DotLine, ..., SpellCheckUnderline }
enum VerticalAlignment { AlignNormal, AlignSuperScript, AlignSubScript, AlignMiddle, AlignBottom, AlignTop }
</ENUMS>

<PROTOS>
QString anchorHref () const
QStringList anchorNames () const
QFont font () const
QFont::Capitalization fontCapitalization () const
QString fontFamily () const
bool fontFixedPitch () const
bool fontItalic () const
bool fontKerning () const
qreal fontLetterSpacing () const
bool fontOverline () const
qreal fontPointSize () const
bool fontStrikeOut () const
QFont::StyleHint fontStyleHint () const
QFont::StyleStrategy fontStyleStrategy () const
bool fontUnderline () const
int fontWeight () const
qreal fontWordSpacing () const
bool isAnchor () const
bool isValid () const
void setAnchor ( bool anchor )
void setAnchorHref ( const QString & value )
void setAnchorNames ( const QStringList & names )
void setFont ( const QFont & font )
void setFontCapitalization ( QFont::Capitalization capitalization )
void setFontFamily ( const QString & family )
void setFontFixedPitch ( bool fixedPitch )
void setFontItalic ( bool italic )
void setFontKerning ( bool enable )
void setFontLetterSpacing ( qreal spacing )
void setFontOverline ( bool overline )
void setFontPointSize ( qreal size )
void setFontStrikeOut ( bool strikeOut )
void setFontStyleHint ( QFont::StyleHint hint, QFont::StyleStrategy strategy = QFont::PreferDefault )
void setFontStyleStrategy ( QFont::StyleStrategy strategy )
void setFontUnderline ( bool underline )
void setFontWeight ( int weight )
void setFontWordSpacing ( qreal spacing )
void setTextOutline ( const QPen & pen )
void setToolTip ( const QString & text )
void setUnderlineColor ( const QColor & color )
void setUnderlineStyle ( UnderlineStyle style )
void setVerticalAlignment ( VerticalAlignment alignment )
QPen textOutline () const
QString toolTip () const
QColor underlineColor () const
UnderlineStyle underlineStyle () const
VerticalAlignment verticalAlignment () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>




