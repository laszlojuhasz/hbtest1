/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = 
Inherit  = QObject, QGraphicsItem, QGraphicsLayoutItem
Type     = 
New      = 
</CLASS>

<CODE>
#include <QtGui/QGraphicsWidget>


/*
 * QGraphicsWidget ( QGraphicsItem * parent = 0, Qt::WindowFlags wFlags = 0 )
 * ~QGraphicsWidget ()
 */
HB_FUNC( QT_QGRAPHICSWIDGET )
{
   if( hb_pcount() >= 1 && HB_ISPOINTER( 1 ) )
   {
      __HB_RETPTRGC__( new QGraphicsWidget( hbqt_par_QGraphicsItem( 1 ), ( Qt::WindowFlags ) ( HB_ISNUM( 2 ) ? hb_parni( 2 ) : 0 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QGraphicsWidget() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
QList<QAction *> actions () const
void addAction ( QAction * action )
void addActions ( QList<QAction *> actions )
void adjustSize ()
// const QObjectList & children () const
Qt::FocusPolicy focusPolicy () const
QGraphicsWidget * focusWidget () const
QFont font () const
virtual void getContentsMargins ( qreal * left, qreal * top, qreal * right, qreal * bottom ) const
void getWindowFrameMargins ( qreal * left, qreal * top, qreal * right, qreal * bottom ) const
int grabShortcut ( const QKeySequence & sequence, Qt::ShortcutContext context = Qt::WindowShortcut )
void insertAction ( QAction * before, QAction * action )
void insertActions ( QAction * before, QList<QAction *> actions )
bool isActiveWindow () const
QGraphicsLayout * layout () const
Qt::LayoutDirection layoutDirection () const
// virtual void paintWindowFrame ( QPainter * painter, const QStyleOptionGraphicsItem * option, QWidget * widget = 0 )
QPalette palette () const
QRectF rect () const
void releaseShortcut ( int id )
void removeAction ( QAction * action )
void resize ( const QSizeF & size )
void resize ( qreal w, qreal h )
void setAttribute ( Qt::WidgetAttribute attribute, bool on = true )
void setContentsMargins ( qreal left, qreal top, qreal right, qreal bottom )
void setFocusPolicy ( Qt::FocusPolicy policy )
void setFont ( const QFont & font )
virtual void setGeometry ( const QRectF & rect )
void setGeometry ( qreal x, qreal y, qreal w, qreal h )
void setLayout ( QGraphicsLayout * layout )
void setLayoutDirection ( Qt::LayoutDirection direction )
void setPalette ( const QPalette & palette )
void setShortcutAutoRepeat ( int id, bool enabled = true )
void setShortcutEnabled ( int id, bool enabled = true )
void setStyle ( QStyle * style )
void setWindowFlags ( Qt::WindowFlags wFlags )
void setWindowFrameMargins ( qreal left, qreal top, qreal right, qreal bottom )
void setWindowTitle ( const QString & title )
QSizeF size () const
QStyle * style () const
bool testAttribute ( Qt::WidgetAttribute attribute ) const
void unsetLayoutDirection ()
void unsetWindowFrameMargins ()
Qt::WindowFlags windowFlags () const
QRectF windowFrameGeometry () const
QRectF windowFrameRect () const
QString windowTitle () const
Qt::WindowType windowType () const

void setTabOrder ( QGraphicsWidget * first, QGraphicsWidget * second )
</PROTOS>

<SLOTS>
bool close ()
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>



