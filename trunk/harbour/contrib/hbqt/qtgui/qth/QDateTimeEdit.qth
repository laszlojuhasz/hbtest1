/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
Inherit  = QAbstractSpinBox
New      = pParent
</CLASS>

<CODE>
#include <QtGui/QDateTimeEdit>


/*
 * QDateTimeEdit ( QWidget * parent = 0 )
 * QDateTimeEdit ( const QDateTime & datetime, QWidget * parent = 0 )
 * QDateTimeEdit ( const QDate & date, QWidget * parent = 0 )
 * QDateTimeEdit ( const QTime & time, QWidget * parent = 0 )
 */
HB_FUNC( QT_QDATETIMEEDIT )
{
   __HB_RETPTRGC__( new QDateTimeEdit( hbqt_par_QWidget( 1 ) ) );
}
</CODE>

<ENUMS>
enum Section { NoSection, AmPmSection, MSecSection, SecondSection, ..., YearSection }
flags Sections
</ENUMS>

<PROTOS>
bool calendarPopup () const
QCalendarWidget * calendarWidget () const
void clearMaximumDate ()
void clearMaximumDateTime ()
void clearMaximumTime ()
void clearMinimumDate ()
void clearMinimumDateTime ()
void clearMinimumTime ()
Section currentSection () const
int currentSectionIndex () const
QDate date () const
QDateTime dateTime () const
QString displayFormat () const
Sections displayedSections () const
QDate maximumDate () const
QDateTime maximumDateTime () const
QTime maximumTime () const
QDate minimumDate () const
QDateTime minimumDateTime () const
QTime minimumTime () const
Section sectionAt ( int index ) const
int sectionCount () const
QString sectionText ( Section section ) const
void setCalendarPopup ( bool enable )
void setCalendarWidget ( QCalendarWidget * calendarWidget )
void setCurrentSection ( Section section )
void setCurrentSectionIndex ( int index )
void setDateRange ( const QDate & min, const QDate & max )
void setDateTimeRange ( const QDateTime & min, const QDateTime & max )
void setDisplayFormat ( const QString & format )
void setMaximumDate ( const QDate & max )
void setMaximumDateTime ( const QDateTime & dt )
void setMaximumTime ( const QTime & max )
void setMinimumDate ( const QDate & min )
void setMinimumDateTime ( const QDateTime & dt )
void setMinimumTime ( const QTime & min )
void setSelectedSection ( Section section )
void setTimeRange ( const QTime & min, const QTime & max )
void setTimeSpec ( Qt::TimeSpec spec )
QTime time () const
Qt::TimeSpec timeSpec () const
</PROTOS>

<SLOTS>
void setDate ( const QDate & date )
void setDateTime ( const QDateTime & dateTime )
void setTime ( const QTime & time )
</SLOTS>

<SIGNALS>
void dateChanged ( const QDate & date )
void dateTimeChanged ( const QDateTime & datetime )
void timeChanged ( const QTime & time )
</SIGNALS>
