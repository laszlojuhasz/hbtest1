/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = no
Inherits = 
Type     = PlainObject
New      = 
</CLASS>

<DOC>
oFontMetrics := QFontMetrics():new( pQFontMetrics )
oFontMetrics := QFontMetrics():new( "QFont", pQFont )
oFontMetrics := QFontMetrics():new( pQFont, pQPaintDevice )
</DOC>

<CODE>
#include <QtGui/QFontMetrics>


/*
 * QFontMetrics ( const QFont & font )
 * QFontMetrics ( const QFont & font, QPaintDevice * paintdevice )
 * QFontMetrics ( const QFontMetrics & fm )
 * ~QFontMetrics ()
 */
HB_FUNC( QT_QFONTMETRICS )
{
   if( hb_pcount() == 1 && HB_ISPOINTER( 1 ) )
   {
      __HB_RETPTRGC__( new QFontMetrics( *hbqt_par_QFontMetrics( 1 ) ) );
   }
   else if( hb_pcount() == 2 && HB_ISCHAR( 1 ) && HB_ISPOINTER( 2 ) )
   {
      if( hbqt_par_QString( 1 ) == ( QString ) "QFont" )
      {
         __HB_RETPTRGC__( new QFontMetrics( *hbqt_par_QFont( 2 ) ) );
      }
   }
   else if( hb_pcount() == 2 && HB_ISPOINTER( 1 ) && HB_ISPOINTER( 2 ) )
   {
      __HB_RETPTRGC__( new QFontMetrics( *hbqt_par_QFont( 1 ), hbqt_par_QPaintDevice( 2 ) ) );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
int ascent () const
int averageCharWidth () const
QRect boundingRect ( QChar ch ) const
QRect boundingRect ( const QString & text ) const
QRect boundingRect ( int x, int y, int width, int height, int flags, const QString & text, int tabStops = 0, int * tabArray = 0 ) const
QRect boundingRect ( const QRect & rect, int flags, const QString & text, int tabStops = 0, int * tabArray = 0 ) const
int descent () const
QString elidedText ( const QString & text, Qt::TextElideMode mode, int width, int flags = 0 ) const
int height () const
bool inFont ( QChar ch ) const
int leading () const
int leftBearing ( QChar ch ) const
int lineSpacing () const
int lineWidth () const
int maxWidth () const
int minLeftBearing () const
int minRightBearing () const
int overlinePos () const
int rightBearing ( QChar ch ) const
QSize size ( int flags, const QString & text, int tabStops = 0, int * tabArray = 0 ) const
int strikeOutPos () const
QRect tightBoundingRect ( const QString & text ) const
int underlinePos () const
int width ( const QString & text, int len = -1 ) const
int width ( QChar ch ) const
int xHeight () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>

<VARIABLES>
</VARIABLES>



