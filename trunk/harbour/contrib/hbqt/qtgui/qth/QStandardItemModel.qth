/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
Inherits = QAbstractItemModeL
Type     = Core
New      = 
</CLASS>

<CODE>
#include <QtGui/QStandardItemModel>


/*
 * QStandardItemModel ( QObject * parent = 0 )
 * QStandardItemModel ( int rows, int columns, QObject * parent = 0 )
 * ~QStandardItemModel ()
 */
HB_FUNC( QT_QSTANDARDITEMMODEL )
{
   __HB_RETPTRGC__( ( QStandardItemModel* ) new QStandardItemModel( hbqt_par_QObject( 1 ) ) );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void appendColumn ( const QList<QStandardItem *> & items )
void appendRow ( const QList<QStandardItem *> & items )
void appendRow ( QStandardItem * item )
void clear ()
QList<QStandardItem *> findItems ( const QString & text, Qt::MatchFlags flags = Qt::MatchExactly, int column = 0 ) const
QStandardItem * horizontalHeaderItem ( int column ) const
QModelIndex indexFromItem ( const QStandardItem * item ) const
void insertColumn ( int column, const QList<QStandardItem *> & items )
bool insertColumn ( int column, const QModelIndex & parent = QModelIndex() )
void insertRow ( int row, const QList<QStandardItem *> & items )
bool insertRow ( int row, const QModelIndex & parent = QModelIndex() )
void insertRow ( int row, QStandardItem * item )
QStandardItem * invisibleRootItem () const
QStandardItem * item ( int row, int column = 0 ) const
QStandardItem * itemFromIndex ( const QModelIndex & index ) const
// const QStandardItem * itemPrototype () const
void setColumnCount ( int columns )
void setHorizontalHeaderItem ( int column, QStandardItem * item )
void setHorizontalHeaderLabels ( const QStringList & labels )
void setItem ( int row, int column, QStandardItem * item )
void setItem ( int row, QStandardItem * item )
void setItemPrototype ( const QStandardItem * item )
void setRowCount ( int rows )
void setSortRole ( int role )
void setVerticalHeaderItem ( int row, QStandardItem * item )
void setVerticalHeaderLabels ( const QStringList & labels )
int sortRole () const
QList<QStandardItem *> takeColumn ( int column )
QStandardItem * takeHorizontalHeaderItem ( int column )
QStandardItem * takeItem ( int row, int column = 0 )
QList<QStandardItem *> takeRow ( int row )
QStandardItem * takeVerticalHeaderItem ( int row )
QStandardItem * verticalHeaderItem ( int row ) const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
void itemChanged ( QStandardItem * item )
</SIGNALS>




