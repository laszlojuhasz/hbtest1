/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QPainter()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qpainter.html
 *  $ONELINER$
 *     Creates a new QPainter object.
 *  $INHERITS$
 *     
 *  $SYNTAX$
 *     QPainter( ... )
 * 
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QPainter
 *  $METHODS$
 *     :background()                                       -> oQBrush
 *     :backgroundMode()                                   -> nQt_BGMode
 *     :begin( oQPaintDevice )                             -> lBool
 *     :boundingRect( oQRectF, nFlags, cText )             -> oQRectF
 *     :boundingRect( oQRect, nFlags, cText )              -> oQRect
 *     :boundingRect( nX, nY, nW, nH, nFlags, cText )      -> oQRect
 *     :boundingRect( oQRectF, cText, oQTextOption )       -> oQRectF
 *     :brush()                                            -> oQBrush
 *     :brushOrigin()                                      -> oQPoint
 *     :clipPath()                                         -> oQPainterPath
 *     :clipRegion()                                       -> oQRegion
 *     :combinedMatrix()                                   -> oQMatrix
 *     :combinedTransform()                                -> oQTransform
 *     :compositionMode()                                  -> nCompositionMode
 *     :device()                                           -> oQPaintDevice
 *     :deviceMatrix()                                     -> oQMatrix
 *     :deviceTransform()                                  -> oQTransform
 *     :drawArc( oQRectF, nStartAngle, nSpanAngle )        -> NIL
 *     :drawArc( oQRect, nStartAngle, nSpanAngle )         -> NIL
 *     :drawArc( nX, nY, nWidth, nHeight, nStartAngle, nSpanAngle )  -> NIL
 *     :drawChord( oQRectF, nStartAngle, nSpanAngle )      -> NIL
 *     :drawChord( oQRect, nStartAngle, nSpanAngle )       -> NIL
 *     :drawChord( nX, nY, nWidth, nHeight, nStartAngle, nSpanAngle )  -> NIL
 *     :drawConvexPolygon( oQPointF, nPointCount )         -> NIL
 *     :drawConvexPolygon( oQPoint, nPointCount )          -> NIL
 *     :drawConvexPolygon( oQPolygonF )                    -> NIL
 *     :drawConvexPolygon( oQPolygon )                     -> NIL
 *     :drawEllipse( oQRectF )                             -> NIL
 *     :drawEllipse( oQRect )                              -> NIL
 *     :drawEllipse( nX, nY, nWidth, nHeight )             -> NIL
 *     :drawEllipse( oQPointF, nRx, nRy )                  -> NIL
 *     :drawEllipse( oQPoint, nRx, nRy )                   -> NIL
 *     :drawImage( oQRectF, oQImage, oQRectF, nFlags )     -> NIL
 *     :drawImage( oQRect, oQImage, oQRect, nFlags )       -> NIL
 *     :drawImage( oQPointF, oQImage )                     -> NIL
 *     :drawImage( oQPoint, oQImage )                      -> NIL
 *     :drawImage( oQPointF, oQImage, oQRectF, nFlags )    -> NIL
 *     :drawImage( oQPoint, oQImage, oQRect, nFlags )      -> NIL
 *     :drawImage( oQRectF, oQImage )                      -> NIL
 *     :drawImage( oQRect, oQImage )                       -> NIL
 *     :drawImage( nX, nY, oQImage, nSx, nSy, nSw, nSh, nFlags )  -> NIL
 *     :drawLine( oQLineF )                                -> NIL
 *     :drawLine( oQLine )                                 -> NIL
 *     :drawLine( oQPoint, oQPoint )                       -> NIL
 *     :drawLine( oQPointF, oQPointF )                     -> NIL
 *     :drawLine( nX1, nY1, nX2, nY2 )                     -> NIL
 *     :drawLines( oQLineF, nLineCount )                   -> NIL
 *     :drawLines( oQLine, nLineCount )                    -> NIL
 *     :drawLines( oQPointF, nLineCount )                  -> NIL
 *     :drawLines( oQPoint, nLineCount )                   -> NIL
 *     :drawPath( oQPainterPath )                          -> NIL
 *     :drawPicture( oQPointF, oQPicture )                 -> NIL
 *     :drawPicture( oQPoint, oQPicture )                  -> NIL
 *     :drawPicture( nX, nY, oQPicture )                   -> NIL
 *     :drawPie( oQRectF, nStartAngle, nSpanAngle )        -> NIL
 *     :drawPie( oQRect, nStartAngle, nSpanAngle )         -> NIL
 *     :drawPie( nX, nY, nWidth, nHeight, nStartAngle, nSpanAngle )  -> NIL
 *     :drawPixmap( oQRectF, oQPixmap, oQRectF )           -> NIL
 *     :drawPixmap( oQRect, oQPixmap, oQRect )             -> NIL
 *     :drawPixmap( oQPointF, oQPixmap, oQRectF )          -> NIL
 *     :drawPixmap( oQPoint, oQPixmap, oQRect )            -> NIL
 *     :drawPixmap( oQPointF, oQPixmap )                   -> NIL
 *     :drawPixmap( oQPoint, oQPixmap )                    -> NIL
 *     :drawPixmap( nX, nY, oQPixmap )                     -> NIL
 *     :drawPixmap( oQRect, oQPixmap )                     -> NIL
 *     :drawPixmap( nX, nY, nWidth, nHeight, oQPixmap )    -> NIL
 *     :drawPixmap( nX, nY, nW, nH, oQPixmap, nSx, nSy, nSw, nSh )  -> NIL
 *     :drawPixmap( nX, nY, oQPixmap, nSx, nSy, nSw, nSh )  -> NIL
 *     :drawPoint( oQPointF )                              -> NIL
 *     :drawPoint( oQPoint )                               -> NIL
 *     :drawPoint( nX, nY )                                -> NIL
 *     :drawPoints( oQPointF, nPointCount )                -> NIL
 *     :drawPoints( oQPoint, nPointCount )                 -> NIL
 *     :drawPoints( oQPolygonF )                           -> NIL
 *     :drawPoints( oQPolygon )                            -> NIL
 *     :drawPolygon( oQPointF, nPointCount, nFillRule )    -> NIL
 *     :drawPolygon( oQPoint, nPointCount, nFillRule )     -> NIL
 *     :drawPolygon( oQPolygonF, nFillRule )               -> NIL
 *     :drawPolygon( oQPolygon, nFillRule )                -> NIL
 *     :drawPolyline( oQPointF, nPointCount )              -> NIL
 *     :drawPolyline( oQPoint, nPointCount )               -> NIL
 *     :drawPolyline( oQPolygonF )                         -> NIL
 *     :drawPolyline( oQPolygon )                          -> NIL
 *     :drawRect( oQRectF )                                -> NIL
 *     :drawRect( oQRect )                                 -> NIL
 *     :drawRect( nX, nY, nWidth, nHeight )                -> NIL
 *     :drawRects( oQRectF, nRectCount )                   -> NIL
 *     :drawRects( oQRect, nRectCount )                    -> NIL
 *     :drawRoundedRect( oQRectF, nXRadius, nYRadius, nMode )  -> NIL
 *     :drawRoundedRect( oQRect, nXRadius, nYRadius, nMode )  -> NIL
 *     :drawRoundedRect( nX, nY, nW, nH, nXRadius, nYRadius, nMode )  -> NIL
 *     :drawText( oQPointF, cText )                        -> NIL
 *     :drawText( oQPoint, cText )                         -> NIL
 *     :drawText( oQRectF, nFlags, cText, oQRectF )        -> NIL
 *     :drawText( oQRect, nFlags, cText, oQRect )          -> NIL
 *     :drawText( nX, nY, cText )                          -> NIL
 *     :drawText( nX, nY, nWidth, nHeight, nFlags, cText, oQRect )  -> NIL
 *     :drawText( oQRectF, cText, oQTextOption )           -> NIL
 *     :drawTiledPixmap( oQRectF, oQPixmap, oQPointF )     -> NIL
 *     :drawTiledPixmap( oQRect, oQPixmap, oQPoint )       -> NIL
 *     :drawTiledPixmap( nX, nY, nWidth, nHeight, oQPixmap, nSx, nSy )  -> NIL
 *     :end()                                              -> lBool
 *     :eraseRect( oQRectF )                               -> NIL
 *     :eraseRect( oQRect )                                -> NIL
 *     :eraseRect( nX, nY, nWidth, nHeight )               -> NIL
 *     :fillPath( oQPainterPath, oQBrush )                 -> NIL
 *     :fillRect( oQRectF, oQBrush )                       -> NIL
 *     :fillRect( oQRect, oQBrush )                        -> NIL
 *     :fillRect( oQRect, oQColor )                        -> NIL
 *     :fillRect( oQRectF, oQColor )                       -> NIL
 *     :fillRect( nX, nY, nWidth, nHeight, oQBrush )       -> NIL
 *     :fillRect( nX, nY, nWidth, nHeight, oQColor )       -> NIL
 *     :fillRect( nX, nY, nWidth, nHeight, nColor )        -> NIL
 *     :fillRect( oQRect, nColor )                         -> NIL
 *     :fillRect( oQRectF, nColor )                        -> NIL
 *     :font()                                             -> oQFont
 *     :fontInfo()                                         -> oQFontInfo
 *     :fontMetrics()                                      -> oQFontMetrics
 *     :hasClipping()                                      -> lBool
 *     :initFrom( oQWidget )                               -> NIL
 *     :isActive()                                         -> lBool
 *     :layoutDirection()                                  -> nQt_LayoutDirection
 *     :opacity()                                          -> nQreal
 *     :paintEngine()                                      -> oQPaintEngine
 *     :pen()                                              -> oQPen
 *     :renderHints()                                      -> nRenderHints
 *     :resetMatrix()                                      -> NIL
 *     :resetTransform()                                   -> NIL
 *     :restore()                                          -> NIL
 *     :rotate( nAngle )                                   -> NIL
 *     :save()                                             -> NIL
 *     :scale( nSx, nSy )                                  -> NIL
 *     :setBackground( oQBrush )                           -> NIL
 *     :setBackgroundMode( nMode )                         -> NIL
 *     :setBrush( oQBrush )                                -> NIL
 *     :setBrush( nStyle )                                 -> NIL
 *     :setBrushOrigin( oQPointF )                         -> NIL
 *     :setBrushOrigin( oQPoint )                          -> NIL
 *     :setBrushOrigin( nX, nY )                           -> NIL
 *     :setClipPath( oQPainterPath, nOperation )           -> NIL
 *     :setClipRect( oQRectF, nOperation )                 -> NIL
 *     :setClipRect( nX, nY, nWidth, nHeight, nOperation )  -> NIL
 *     :setClipRect( oQRect, nOperation )                  -> NIL
 *     :setClipRegion( oQRegion, nOperation )              -> NIL
 *     :setClipping( lEnable )                             -> NIL
 *     :setCompositionMode( nMode )                        -> NIL
 *     :setFont( oQFont )                                  -> NIL
 *     :setLayoutDirection( nDirection )                   -> NIL
 *     :setOpacity( nOpacity )                             -> NIL
 *     :setPen( oQPen )                                    -> NIL
 *     :setPen( oQColor )                                  -> NIL
 *     :setPen( nStyle )                                   -> NIL
 *     :setRenderHint( nHint, lOn )                        -> NIL
 *     :setRenderHints( nHints, lOn )                      -> NIL
 *     :setTransform( oQTransform, lCombine )              -> NIL
 *     :setViewTransformEnabled( lEnable )                 -> NIL
 *     :setViewport( oQRect )                              -> NIL
 *     :setViewport( nX, nY, nWidth, nHeight )             -> NIL
 *     :setWindow( oQRect )                                -> NIL
 *     :setWindow( nX, nY, nWidth, nHeight )               -> NIL
 *     :setWorldMatrix( oQMatrix, lCombine )               -> NIL
 *     :setWorldMatrixEnabled( lEnable )                   -> NIL
 *     :setWorldTransform( oQTransform, lCombine )         -> NIL
 *     :shear( nSh, nSv )                                  -> NIL
 *     :strokePath( oQPainterPath, oQPen )                 -> NIL
 *     :testRenderHint( nHint )                            -> lBool
 *     :transform()                                        -> oQTransform
 *     :translate( oQPointF )                              -> NIL
 *     :translate( oQPoint )                               -> NIL
 *     :translate( nDx, nDy )                              -> NIL
 *     :viewTransformEnabled()                             -> lBool
 *     :viewport()                                         -> oQRect
 *     :window()                                           -> oQRect
 *     :worldMatrix()                                      -> oQMatrix
 *     :worldMatrixEnabled()                               -> lBool
 *     :worldTransform()                                   -> oQTransform
 *     :redirected( oQPaintDevice, oQPoint )               -> oQPaintDevice
 *     :restoreRedirected( oQPaintDevice )                 -> NIL
 *     :setRedirected( oQPaintDevice, oQPaintDevice, oQPoint )  -> NIL
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQPainter.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QPainter.cpp
 *     Library       : hbqtgui
 *  $END$
 */
