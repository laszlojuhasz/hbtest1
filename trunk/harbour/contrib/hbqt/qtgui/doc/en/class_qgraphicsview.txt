/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QGraphicsView()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qgraphicsview.html
 *  $ONELINER$
 *     Creates a new QGraphicsView object.
 *  $INHERITS$
 *     QAbstractScrollArea
 *  $SYNTAX$
 *     QGraphicsView( ... )
 * 
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QGraphicsView
 *  $METHODS$
 *     :alignment()                                        -> nQt_Alignment
 *     :backgroundBrush()                                  -> oQBrush
 *     :cacheMode()                                        -> nCacheMode
 *     :centerOn( oQPointF )                               -> NIL
 *     :centerOn( nX, nY )                                 -> NIL
 *     :centerOn( oQGraphicsItem )                         -> NIL
 *     :dragMode()                                         -> nDragMode
 *     :ensureVisible( oQRectF, nXmargin, nYmargin )       -> NIL
 *     :ensureVisible( nX, nY, nW, nH, nXmargin, nYmargin )  -> NIL
 *     :ensureVisible( oQGraphicsItem, nXmargin, nYmargin )  -> NIL
 *     :fitInView( oQRectF, nAspectRatioMode )             -> NIL
 *     :fitInView( nX, nY, nW, nH, nAspectRatioMode )      -> NIL
 *     :fitInView( oQGraphicsItem, nAspectRatioMode )      -> NIL
 *     :foregroundBrush()                                  -> oQBrush
 *     :isInteractive()                                    -> lBool
 *     :itemAt( oQPoint )                                  -> oQGraphicsItem
 *     :itemAt( nX, nY )                                   -> oQGraphicsItem
 *     :items()                                            -> oQList_QGraphicsItem
 *     :items( oQPoint )                                   -> oQList_QGraphicsItem
 *     :items( nX, nY )                                    -> oQList_QGraphicsItem
 *     :items( nX, nY, nW, nH, nMode )                     -> oQList_QGraphicsItem
 *     :items( oQRect, nMode )                             -> oQList_QGraphicsItem
 *     :items( oQPolygon, nMode )                          -> oQList_QGraphicsItem
 *     :items( oQPainterPath, nMode )                      -> oQList_QGraphicsItem
 *     :mapFromScene( oQPointF )                           -> oQPoint
 *     :mapFromScene( oQRectF )                            -> oQPolygon
 *     :mapFromScene( oQPolygonF )                         -> oQPolygon
 *     :mapFromScene( oQPainterPath )                      -> oQPainterPath
 *     :mapFromScene( nX, nY )                             -> oQPoint
 *     :mapFromScene( nX, nY, nW, nH )                     -> oQPolygon
 *     :mapToScene( oQPoint )                              -> oQPointF
 *     :mapToScene( oQRect )                               -> oQPolygonF
 *     :mapToScene( oQPolygon )                            -> oQPolygonF
 *     :mapToScene( oQPainterPath )                        -> oQPainterPath
 *     :mapToScene( nX, nY )                               -> oQPointF
 *     :mapToScene( nX, nY, nW, nH )                       -> oQPolygonF
 *     :matrix()                                           -> oQMatrix
 *     :optimizationFlags()                                -> nOptimizationFlags
 *     :render( oQPainter, oQRectF, oQRect, nAspectRatioMode )  -> NIL
 *     :renderHints()                                      -> nQPainter_RenderHints
 *     :resetCachedContent()                               -> NIL
 *     :resetMatrix()                                      -> NIL
 *     :resetTransform()                                   -> NIL
 *     :resizeAnchor()                                     -> nViewportAnchor
 *     :rotate( nAngle )                                   -> NIL
 *     :rubberBandSelectionMode()                          -> nQt_ItemSelectionMode
 *     :scale( nSx, nSy )                                  -> NIL
 *     :scene()                                            -> oQGraphicsScene
 *     :sceneRect()                                        -> oQRectF
 *     :setAlignment( nAlignment )                         -> NIL
 *     :setBackgroundBrush( oQBrush )                      -> NIL
 *     :setCacheMode( nMode )                              -> NIL
 *     :setDragMode( nMode )                               -> NIL
 *     :setForegroundBrush( oQBrush )                      -> NIL
 *     :setInteractive( lAllowed )                         -> NIL
 *     :setMatrix( oQMatrix, lCombine )                    -> NIL
 *     :setOptimizationFlag( nFlag, lEnabled )             -> NIL
 *     :setOptimizationFlags( nFlags )                     -> NIL
 *     :setRenderHint( nHint, lEnabled )                   -> NIL
 *     :setRenderHints( nHints )                           -> NIL
 *     :setResizeAnchor( nAnchor )                         -> NIL
 *     :setRubberBandSelectionMode( nMode )                -> NIL
 *     :setScene( oQGraphicsScene )                        -> NIL
 *     :setSceneRect( oQRectF )                            -> NIL
 *     :setSceneRect( nX, nY, nW, nH )                     -> NIL
 *     :setTransform( oQTransform, lCombine )              -> NIL
 *     :setTransformationAnchor( nAnchor )                 -> NIL
 *     :setViewportUpdateMode( nMode )                     -> NIL
 *     :shear( nSh, nSv )                                  -> NIL
 *     :transform()                                        -> oQTransform
 *     :transformationAnchor()                             -> nViewportAnchor
 *     :translate( nDx, nDy )                              -> NIL
 *     :viewportTransform()                                -> oQTransform
 *     :viewportUpdateMode()                               -> nViewportUpdateMode
 *     :invalidateScene( oQRectF, nLayers )                -> NIL
 *     :updateSceneRect( oQRectF )                         -> NIL
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQGraphicsView.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QGraphicsView.cpp
 *     Library       : hbqtgui
 *  $END$
 */
