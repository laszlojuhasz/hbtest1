/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QImage()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qimage.html
 *  $ONELINER$
 *     Creates a new QImage object.
 *  $INHERITS$
 *     
 *  $SYNTAX$
 *     QImage():new( ... )
 *     QImage():from( pPtr_OR_oObj_of_type_QImage )
 *     QImage():configure( pPtr_OR_oObj_of_type_QImage )
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QImage
 *  $METHODS$
 *     :allGray()                                          -> lBool
 *     :bits()                                             -> pUchar
 *     :bits_1()                                           -> pUchar
 *     :bytesPerLine()                                     -> nInt
 *     :cacheKey()                                         -> nQint64
 *     :color( nI )                                        -> nQRgb
 *     :depth()                                            -> nInt
 *     :dotsPerMeterX()                                    -> nInt
 *     :dotsPerMeterY()                                    -> nInt
 *     :fill( nPixelValue )                                -> NIL
 *     :format()                                           -> nFormat
 *     :hasAlphaChannel()                                  -> lBool
 *     :height()                                           -> nInt
 *     :invertPixels( nMode )                              -> NIL
 *     :isGrayscale()                                      -> lBool
 *     :isNull()                                           -> lBool
 *     :load( ... )                                        -> lBool
 *     :loadFromData( pData, pFormat )                     -> lBool
 *     :numBytes()                                         -> nInt
 *     :numColors()                                        -> nInt
 *     :offset()                                           -> pQPoint
 *     :pixel( ... )                                       -> nQRgb
 *     :pixelIndex( ... )                                  -> nInt
 *     :rect()                                             -> pQRect
 *     :save( ... )                                        -> lBool
 *     :scanLine( nI )                                     -> pUchar
 *     :scanLine_1( nI )                                   -> pUchar
 *     :setColor( nIndex, nColorValue )                    -> NIL
 *     :setDotsPerMeterX( nX )                             -> NIL
 *     :setDotsPerMeterY( nY )                             -> NIL
 *     :setNumColors( nNumColors )                         -> NIL
 *     :setOffset( pOffset )                               -> NIL
 *     :setPixel( ... )                                    -> NIL
 *     :setText( cKey, cText )                             -> NIL
 *     :size()                                             -> pQSize
 *     :text( cKey )                                       -> cQString
 *     :textKeys()                                         -> pQStringList
 *     :valid( ... )                                       -> lBool
 *     :width()                                            -> nInt
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 *     oImage := QImage()
 *     oImage := QImage( pQSize, cFormat )
 *     oImage := QImage( iWidth, iHeight, cFormat )
 *     oImage := QImage( @cData, iWidth, iHeight, cFormat )
 *     oImage := QImage( cData , iWidth, iHeight, cFormat )
 *     oImage := QImage( @cData, iWidth, iHeight, iBytesPerLine, cFormat )
 *     oImage := QImage( cData , iWidth, iHeight, iBytesPerLine, cFormat )
 *     oImage := QImage( cFileName [, cFormat ] )
 *     oImage := QImage( pQImage )
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQImage.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QImage.cpp
 *     Library       : hbqtgui
 *  $SEEALSO$
 *     
 *  $END$
 */
