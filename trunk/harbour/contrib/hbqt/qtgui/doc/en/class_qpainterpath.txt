/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QPainterPath()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qpainterpath.html
 *  $ONELINER$
 *     Creates a new QPainterPath object.
 *  $INHERITS$
 *     
 *  $SYNTAX$
 *     QPainterPath( ... )
 * 
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QPainterPath
 *  $METHODS$
 *     :addEllipse( oQRectF )                              -> NIL
 *     :addEllipse( nX, nY, nWidth, nHeight )              -> NIL
 *     :addEllipse( oQPointF, nRx, nRy )                   -> NIL
 *     :addPath( oQPainterPath )                           -> NIL
 *     :addPolygon( oQPolygonF )                           -> NIL
 *     :addRect( oQRectF )                                 -> NIL
 *     :addRect( nX, nY, nWidth, nHeight )                 -> NIL
 *     :addRegion( oQRegion )                              -> NIL
 *     :addRoundedRect( oQRectF, nXRadius, nYRadius, nMode )  -> NIL
 *     :addRoundedRect( nX, nY, nW, nH, nXRadius, nYRadius, nMode )  -> NIL
 *     :addText( oQPointF, oQFont, cText )                 -> NIL
 *     :addText( nX, nY, oQFont, cText )                   -> NIL
 *     :angleAtPercent( nT )                               -> nQreal
 *     :arcMoveTo( oQRectF, nAngle )                       -> NIL
 *     :arcMoveTo( nX, nY, nWidth, nHeight, nAngle )       -> NIL
 *     :arcTo( oQRectF, nStartAngle, nSweepLength )        -> NIL
 *     :arcTo( nX, nY, nWidth, nHeight, nStartAngle, nSweepLength )  -> NIL
 *     :boundingRect()                                     -> oQRectF
 *     :closeSubpath()                                     -> NIL
 *     :connectPath( oQPainterPath )                       -> NIL
 *     :contains( oQPointF )                               -> lBool
 *     :contains( oQRectF )                                -> lBool
 *     :contains( oQPainterPath )                          -> lBool
 *     :controlPointRect()                                 -> oQRectF
 *     :cubicTo( oQPointF, oQPointF, oQPointF )            -> NIL
 *     :cubicTo( nC1X, nC1Y, nC2X, nC2Y, nEndPointX, nEndPointY )  -> NIL
 *     :currentPosition()                                  -> oQPointF
 *     :elementCount()                                     -> nInt
 *     :fillRule()                                         -> nQt_FillRule
 *     :intersected( oQPainterPath )                       -> oQPainterPath
 *     :intersects( oQRectF )                              -> lBool
 *     :intersects( oQPainterPath )                        -> lBool
 *     :isEmpty()                                          -> lBool
 *     :length()                                           -> nQreal
 *     :lineTo( oQPointF )                                 -> NIL
 *     :lineTo( nX, nY )                                   -> NIL
 *     :moveTo( oQPointF )                                 -> NIL
 *     :moveTo( nX, nY )                                   -> NIL
 *     :percentAtLength( nLen )                            -> nQreal
 *     :pointAtPercent( nT )                               -> oQPointF
 *     :quadTo( oQPointF, oQPointF )                       -> NIL
 *     :quadTo( nCx, nCy, nEndPointX, nEndPointY )         -> NIL
 *     :setElementPositionAt( nIndex, nX, nY )             -> NIL
 *     :setFillRule( nFillRule )                           -> NIL
 *     :simplified()                                       -> oQPainterPath
 *     :slopeAtPercent( nT )                               -> nQreal
 *     :subtracted( oQPainterPath )                        -> oQPainterPath
 *     :toFillPolygon( oQTransform )                       -> oQPolygonF
 *     :toFillPolygon( oQMatrix )                          -> oQPolygonF
 *     :toFillPolygons( oQTransform )                      -> oQList_QPolygonF>
 *     :toFillPolygons( oQMatrix )                         -> oQList_QPolygonF>
 *     :toReversed()                                       -> oQPainterPath
 *     :toSubpathPolygons( oQTransform )                   -> oQList_QPolygonF>
 *     :toSubpathPolygons( oQMatrix )                      -> oQList_QPolygonF>
 *     :united( oQPainterPath )                            -> oQPainterPath
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQPainterPath.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QPainterPath.cpp
 *     Library       : hbqtgui
 *  $END$
 */
