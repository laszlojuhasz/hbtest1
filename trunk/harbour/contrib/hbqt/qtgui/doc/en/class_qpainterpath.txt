/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QPainterPath()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qpainterpath.html
 *  $ONELINER$
 *     Creates a new QPainterPath object.
 *  $INHERITS$
 *     
 *  $SYNTAX$
 *     QPainterPath( ... )
 *     QPainterPath():from( pPtr_OR_oObj_of_type_QPainterPath )
 *     QPainterPath():configure( pPtr_OR_oObj_of_type_QPainterPath )
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QPainterPath
 *  $METHODS$
 *     :addEllipse( pBoundingRectangle )                   -> NIL
 *     :addEllipse_1( nX, nY, nWidth, nHeight )            -> NIL
 *     :addEllipse_2( pCenter, nRx, nRy )                  -> NIL
 *     :addPath( pPath )                                   -> NIL
 *     :addPolygon( pPolygon )                             -> NIL
 *     :addRect( pRectangle )                              -> NIL
 *     :addRect_1( nX, nY, nWidth, nHeight )               -> NIL
 *     :addRegion( pRegion )                               -> NIL
 *     :addRoundedRect( pRect, nXRadius, nYRadius, nMode )  -> NIL
 *     :addRoundedRect_1( nX, nY, nW, nH, nXRadius, nYRadius, nMode )  -> NIL
 *     :addText( pPoint, pFont, cText )                    -> NIL
 *     :addText_1( nX, nY, pFont, cText )                  -> NIL
 *     :angleAtPercent( nT )                               -> nQreal
 *     :arcMoveTo( pRectangle, nAngle )                    -> NIL
 *     :arcMoveTo_1( nX, nY, nWidth, nHeight, nAngle )     -> NIL
 *     :arcTo( pRectangle, nStartAngle, nSweepLength )     -> NIL
 *     :arcTo_1( nX, nY, nWidth, nHeight, nStartAngle, nSweepLength )  -> NIL
 *     :boundingRect()                                     -> pQRectF
 *     :closeSubpath()                                     -> NIL
 *     :connectPath( pPath )                               -> NIL
 *     :contains( ... )                                    -> NIL
 *     :controlPointRect()                                 -> pQRectF
 *     :cubicTo( pC1, pC2, pEndPoint )                     -> NIL
 *     :cubicTo_1( nC1X, nC1Y, nC2X, nC2Y, nEndPointX, nEndPointY )  -> NIL
 *     :currentPosition()                                  -> pQPointF
 *     :elementCount()                                     -> nInt
 *     :fillRule()                                         -> nQt::FillRule
 *     :intersects( ... )                                  -> NIL
 *     :isEmpty()                                          -> lBool
 *     :length()                                           -> nQreal
 *     :lineTo( pEndPoint )                                -> NIL
 *     :lineTo_1( nX, nY )                                 -> NIL
 *     :moveTo( pPoint )                                   -> NIL
 *     :moveTo_1( nX, nY )                                 -> NIL
 *     :percentAtLength( nLen )                            -> nQreal
 *     :pointAtPercent( nT )                               -> pQPointF
 *     :quadTo( pC, pEndPoint )                            -> NIL
 *     :quadTo_1( nCx, nCy, nEndPointX, nEndPointY )       -> NIL
 *     :setElementPositionAt( nIndex, nX, nY )             -> NIL
 *     :setFillRule( nFillRule )                           -> NIL
 *     :slopeAtPercent( nT )                               -> nQreal
 *     :toFillPolygon( pMatrix )                           -> pQPolygonF
 *     :toFillPolygon_1( pMatrix )                         -> pQPolygonF
 *     :toFillPolygons( pMatrix )                          -> pQList<QPolygonF>
 *     :toFillPolygons_1( pMatrix )                        -> pQList<QPolygonF>
 *     :toSubpathPolygons( pMatrix )                       -> pQList<QPolygonF>
 *     :toSubpathPolygons_1( pMatrix )                     -> pQList<QPolygonF>
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQPainterPath.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QPainterPath.cpp
 *     Library       : hbqtgui
 *  $SEEALSO$
 *     
 *  $END$
 */
