/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QRegion()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qregion.html
 *  $ONELINER$
 *     Creates a new QRegion object.
 *  $INHERITS$
 *     
 *  $SYNTAX$
 *     QRegion( ... )
 *     QRegion():from( pPtr_OR_oObj_of_type_QRegion )
 * 
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QRegion
 *  $METHODS$
 *     :boundingRect()                                     -> pQRect
 *     :contains( pP )                                     -> lBool
 *     :contains_1( pR )                                   -> lBool
 *     :intersects( pRegion )                              -> lBool
 *     :intersects_1( pRect )                              -> lBool
 *     :isEmpty()                                          -> lBool
 *     :numRects()                                         -> nInt
 *     :setRects( pRects, nNumber )                        -> NIL
 *     :translate( nDx, nDy )                              -> NIL
 *     :translate_1( pPoint )                              -> NIL
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 *     oRegion := QRegion():new()
 *     oRegion := QRegion():new( pQRegion_other )
 *     oRegion := QRegion():new( nX, nY, nW, nH, [ nQRegion_RegionType = QRegion_Rectangle ] )
 *     oRegion := QRegion():new( "QPolygon", pQPolygon, [ nQt_FillRule = Qt_OddEvenFill ] )
 *     oRegion := QRegion():new( "QBitmap" , pQBitmap )
 *     oRegion := QRegion():new( "QRect"   , pQRect, [ nQRegion_RegionType = QRegion_Rectangle ] ) )
 *     oRegion := QRegion():new( pQRect, nQRegion_RegionType )
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQRegion.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QRegion.cpp
 *     Library       : hbqtgui
 *  $SEEALSO$
 *     
 *  $END$
 */
