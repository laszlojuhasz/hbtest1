/*
 * $Id$
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
QObject    = no
Inherits   = 
Type       = Core
New        =
Destructor = 
</CLASS>

<CODE>
#include <QtCore/QDataStream>


/* QDataStream ()
 * QDataStream ( QIODevice * d )
 * QDataStream ( QByteArray * a, QIODevice::OpenMode mode )
 * QDataStream ( const QByteArray & a )
 * virtual ~QDataStream ()
 */
HB_FUNC( QT_QDATASTREAM )
{
   __HB_RETPTRGC__( new QDataStream() );
}
</CODE>

<ENUMS>
enum ByteOrder { BigEndian, LittleEndian }
enum Status { Ok, ReadPastEnd, ReadCorruptData }
enum Version { Qt_1_0, Qt_2_0, Qt_2_1, Qt_3_0, ..., Qt_4_5 }
</ENUMS>

<PROTOS>
bool atEnd () const
ByteOrder byteOrder () const
QIODevice * device () const
//QDataStream & readBytes ( char *& s, uint & l )
int readRawData ( char * s, int len )
void resetStatus ()
void setByteOrder ( ByteOrder bo )
void setDevice ( QIODevice * d )
void setStatus ( Status status )
void setVersion ( int v )
int skipRawData ( int len )
Status status () const
int version () const
//QDataStream & writeBytes ( const char * s, uint len )
int writeRawData ( const char * s, int len )
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
