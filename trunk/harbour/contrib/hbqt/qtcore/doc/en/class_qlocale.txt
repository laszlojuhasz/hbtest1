/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QLocale()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qlocale.html
 *  $ONELINER$
 *     Creates a new QLocale object.
 *  $INHERITS$
 *     
 *  $SYNTAX$
 *     QLocale( ... )
 *     QLocale():from( pPtr_OR_oObj_of_type_QLocale )
 *     QLocale():configure( pPtr_OR_oObj_of_type_QLocale )
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QLocale
 *  $METHODS$
 *     :amText()                                           -> cQString
 *     :country()                                          -> nCountry
 *     :dateFormat( nFormat )                              -> cQString
 *     :dateTimeFormat( nFormat )                          -> cQString
 *     :dayName( nDay, nType )                             -> cQString
 *     :decimalPoint()                                     -> pQChar
 *     :exponential()                                      -> pQChar
 *     :groupSeparator()                                   -> pQChar
 *     :language()                                         -> nLanguage
 *     :measurementSystem()                                -> nMeasurementSystem
 *     :monthName( nMonth, nType )                         -> cQString
 *     :name()                                             -> cQString
 *     :negativeSign()                                     -> pQChar
 *     :numberOptions()                                    -> nNumberOptions
 *     :percent()                                          -> pQChar
 *     :pmText()                                           -> cQString
 *     :positiveSign()                                     -> pQChar
 *     :setNumberOptions( nOptions )                       -> NIL
 *     :standaloneDayName( nDay, nType )                   -> cQString
 *     :standaloneMonthName( nMonth, nType )               -> cQString
 *     :timeFormat( nFormat )                              -> cQString
 *     :toDate( cString, nFormat )                         -> pQDate
 *     :toDate_1( cString, cFormat )                       -> pQDate
 *     :toDateTime( cString, nFormat )                     -> pQDateTime
 *     :toDateTime_1( cString, cFormat )                   -> pQDateTime
 *     :toDouble( cS, @lOk )                               -> nDouble
 *     :toFloat( cS, @lOk )                                -> nFloat
 *     :toInt( cS, @lOk, nBase )                           -> nInt
 *     :toLongLong( cS, @lOk, nBase )                      -> nQlonglong
 *     :toShort( cS, @lOk, nBase )                         -> nShort
 *     :toString( nI )                                     -> cQString
 *     :toString_1( pDate, cFormat )                       -> cQString
 *     :toString_2( pDate, nFormat )                       -> cQString
 *     :toString_3( pTime, cFormat )                       -> cQString
 *     :toString_4( pTime, nFormat )                       -> cQString
 *     :toString_5( pDateTime, nFormat )                   -> cQString
 *     :toString_6( pDateTime, cFormat )                   -> cQString
 *     :toString_7( nI )                                   -> cQString
 *     :toString_8( nI, cF, nPrec )                        -> cQString
 *     :toString_9( nI )                                   -> cQString
 *     :toString_10( nI )                                  -> cQString
 *     :toString_11( nI )                                  -> cQString
 *     :toString_12( nI )                                  -> cQString
 *     :toString_13( nI, cF, nPrec )                       -> cQString
 *     :toTime( cString, nFormat )                         -> pQTime
 *     :toTime_1( cString, cFormat )                       -> pQTime
 *     :toUInt( cS, @lOk, nBase )                          -> nUint
 *     :toULongLong( cS, @lOk, nBase )                     -> nQlonglong
 *     :toUShort( cS, @lOk, nBase )                        -> nUshort
 *     :zeroDigit()                                        -> pQChar
 *     :countryToString( nCountry )                        -> cQString
 *     :languageToString( nLanguage )                      -> cQString
 *     :setDefault( pLocale )                              -> NIL
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtcore/TQLocale.prg
 *     C++ wrappers  : contrib/hbqt/qtcore/QLocale.cpp
 *     Library       : hbqtcore
 *  $SEEALSO$
 *     
 *  $END$
 */
