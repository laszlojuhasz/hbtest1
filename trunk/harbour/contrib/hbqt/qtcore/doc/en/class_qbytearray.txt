/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QByteArray()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qbytearray.html
 *  $ONELINER$
 *     Creates a new QByteArray object.
 *  $INHERITS$
 *     
 *  $SYNTAX$
 *     QByteArray( ... )
 *     QByteArray():from( pPtr_OR_oObj_of_type_QByteArray )
 * 
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QByteArray
 *  $METHODS$
 *     :at( nI )                                           -> cChar
 *     :capacity()                                         -> nInt
 *     :chop( nN )                                         -> NIL
 *     :clear()                                            -> NIL
 *     :constData()                                        -> cChar
 *     :count( pBa )                                       -> nInt
 *     :count_1( pStr )                                    -> nInt
 *     :count_2( cCh )                                     -> nInt
 *     :count_3()                                          -> nInt
 *     :data()                                             -> cChar
 *     :data_1()                                           -> cChar
 *     :endsWith( pBa )                                    -> lBool
 *     :endsWith_1( pStr )                                 -> lBool
 *     :endsWith_2( cCh )                                  -> lBool
 *     :indexOf( pBa, nFrom )                              -> nInt
 *     :indexOf_1( cStr, nFrom )                           -> nInt
 *     :indexOf_2( pStr, nFrom )                           -> nInt
 *     :indexOf_3( cCh, nFrom )                            -> nInt
 *     :isEmpty()                                          -> lBool
 *     :isNull()                                           -> lBool
 *     :lastIndexOf( pBa, nFrom )                          -> nInt
 *     :lastIndexOf_1( cStr, nFrom )                       -> nInt
 *     :lastIndexOf_2( pStr, nFrom )                       -> nInt
 *     :lastIndexOf_3( cCh, nFrom )                        -> nInt
 *     :length()                                           -> nInt
 *     :push_back( pOther )                                -> NIL
 *     :push_back_1( pStr )                                -> NIL
 *     :push_back_2( cCh )                                 -> NIL
 *     :push_front( pOther )                               -> NIL
 *     :push_front_1( pStr )                               -> NIL
 *     :push_front_2( cCh )                                -> NIL
 *     :reserve( nSize )                                   -> NIL
 *     :resize( nSize )                                    -> NIL
 *     :size()                                             -> nInt
 *     :split( cSep )                                      -> pQList<QByteArray>
 *     :squeeze()                                          -> NIL
 *     :startsWith( pBa )                                  -> lBool
 *     :startsWith_1( pStr )                               -> lBool
 *     :startsWith_2( cCh )                                -> lBool
 *     :toDouble( @lOk )                                   -> nDouble
 *     :toFloat( @lOk )                                    -> nFloat
 *     :toInt( @lOk, nBase )                               -> nInt
 *     :toLong( @lOk, nBase )                              -> nLong
 *     :toLongLong( @lOk, nBase )                          -> nQlonglong
 *     :toShort( @lOk, nBase )                             -> nShort
 *     :toUInt( @lOk, nBase )                              -> nUint
 *     :toULong( @lOk, nBase )                             -> nUlong
 *     :toULongLong( @lOk, nBase )                         -> nQulonglong
 *     :toUShort( @lOk, nBase )                            -> nUshort
 *     :truncate( nPos )                                   -> NIL
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtcore/TQByteArray.prg
 *     C++ wrappers  : contrib/hbqt/qtcore/QByteArray.cpp
 *     Library       : hbqtcore
 *  $SEEALSO$
 *     
 *  $END$
 */
