/*
 * $Id$
 */

/*  $DOC$
 *  $TEMPLATE$
 *     Class
 *  $NAME$
 *     QThread()
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qthread.html
 *  $ONELINER$
 *     Creates a new QThread object.
 *  $INHERITS$
 *     QObject
 *  $SYNTAX$
 *     QThread():new( ... )
 *     QThread():from( pPtr_OR_oObj_of_type_QThread )
 *     QThread():configure( pPtr_OR_oObj_of_type_QThread )
 *  $ARGUMENTS$
 * 
 *  $RETURNS$
 *     An instance of the object of type QThread
 *  $METHODS$
 *     :exit( nReturnCode )                                -> NIL
 *     :isFinished()                                       -> lBool
 *     :isRunning()                                        -> lBool
 *     :priority()                                         -> nPriority
 *     :setPriority( nPriority )                           -> NIL
 *     :setStackSize( nStackSize )                         -> NIL
 *     :stackSize()                                        -> nUint
 *     :wait( nTime )                                      -> lBool
 *     :idealThreadCount()                                 -> nInt
 *     :yieldCurrentThread()                               -> NIL
 *     :quit()                                             -> NIL
 *     :start( nPriority )                                 -> NIL
 *     :terminate()                                        -> NIL
 * 
 *  $DESCRIPTION$
 * 
 *  $EXAMPLES$
 * 
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $VERSION$
 *     4.5 or upper
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtcore/TQThread.prg
 *     C++ wrappers  : contrib/hbqt/qtcore/QThread.cpp
 *     Library       : hbqtcore
 *  $SEEALSO$
 *     QObject
 *  $END$
 */
