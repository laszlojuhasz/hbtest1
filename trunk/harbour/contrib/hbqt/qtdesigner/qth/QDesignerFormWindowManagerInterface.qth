/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  =
Inherits = QObject
Type     =
New      =
folder   = hbqtdesigner
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include "hbqtgui.h"

#include <QtDesigner/QDesignerFormWindowManagerInterface>


/*
 * QDesignerFormWindowManagerInterface ( QObject * parent = 0 )
 * ~QDesignerFormWindowManagerInterface ()
 *
 */
HB_FUNC( QT_QDESIGNERFORMWINDOWMANAGERINTERFACE )
{
   //hb_retptr( new QDesignerFormWindowManagerInterface() );
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
virtual QAction * actionAdjustSize () const
virtual QAction * actionBreakLayout () const
virtual QAction * actionCopy () const
virtual QAction * actionCut () const
virtual QAction * actionDelete () const
QAction * actionFormLayout () const
virtual QAction * actionGridLayout () const
virtual QAction * actionHorizontalLayout () const
virtual QAction * actionLower () const
virtual QAction * actionPaste () const
virtual QAction * actionRaise () const
virtual QAction * actionRedo () const
virtual QAction * actionSelectAll () const
QAction * actionSimplifyLayout () const
virtual QAction * actionSplitHorizontal () const
virtual QAction * actionSplitVertical () const
virtual QAction * actionUndo () const
virtual QAction * actionVerticalLayout () const
virtual QDesignerFormWindowInterface * activeFormWindow () const
virtual QDesignerFormEditorInterface * core () const
virtual QDesignerFormWindowInterface * createFormWindow ( QWidget * parent = 0, Qt::WindowFlags flags = 0 )
virtual QDesignerFormWindowInterface * formWindow ( int index ) const
virtual int formWindowCount () const
</PROTOS>

<SLOTS>
virtual void addFormWindow ( QDesignerFormWindowInterface * formWindow )
virtual void removeFormWindow ( QDesignerFormWindowInterface * formWindow )
virtual void setActiveFormWindow ( QDesignerFormWindowInterface * formWindow )
</SLOTS>

<SIGNALS>
void activeFormWindowChanged ( QDesignerFormWindowInterface * formWindow )
void formWindowAdded ( QDesignerFormWindowInterface * formWindow )
void formWindowRemoved ( QDesignerFormWindowInterface * formWindow )
</SIGNALS>
