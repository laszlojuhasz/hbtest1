/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject    =
Inherits   =
Type       =
New        =
Folder     = hbqscintilla
Destructor = no
</CLASS>

<SUBCLASS>
</SUBCLASS>

<DOC>
</DOC>

<CODE>
#include <qscilexer.h>


/*
 * QsciLexer (QObject *parent=0)
 * virtual ~QsciLexer ()
 *
 */
HB_FUNC( QT_QSCILEXER )
{

}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
virtual const char * language () const =0
virtual const char * lexer () const
virtual int lexerId () const
QsciAbstractAPIs * apis () const
virtual const char * autoCompletionFillups () const
virtual QStringList autoCompletionWordSeparators () const
int autoIndentStyle ()
virtual const char * blockEnd (int *style=0) const
virtual int blockLookback () const
virtual const char * blockStart (int *style=0) const
virtual const char * blockStartKeyword (int *style=0) const
virtual int braceStyle () const
virtual bool caseSensitive () const
virtual QColor color (int style) const
virtual bool eolFill (int style) const
virtual QFont font (int style) const
virtual int indentationGuideView () const
virtual const char * keywords (int set) const
virtual int defaultStyle () const
virtual QString description (int style) const =0
virtual QColor paper (int style) const
QColor defaultColor () const
virtual QColor defaultColor (int style) const
virtual bool defaultEolFill (int style) const
QFont defaultFont () const
virtual QFont defaultFont (int style) const
QColor defaultPaper () const
virtual QColor defaultPaper (int style) const
QsciScintilla * editor () const
virtual void setEditor (QsciScintilla *editor)
bool readSettings (QSettings &qs, const char *prefix="/Scintilla")
virtual void refreshProperties ()
virtual int styleBitsNeeded () const
virtual const char * wordCharacters () const
bool writeSettings (QSettings &qs, const char *prefix="/Scintilla") const

void setAPIs (QsciAbstractAPIs *apis)
void setDefaultColor (const QColor &c)
void setDefaultFont (const QFont &f)
void setDefaultPaper (const QColor &c)

</PROTOS>

<SLOTS>
virtual void setAutoIndentStyle (int autoindentstyle)
virtual void setColor (const QColor &c, int style=-1)
virtual void setEolFill (bool eoffill, int style=-1)
virtual void setFont (const QFont &f, int style=-1)
virtual void setPaper (const QColor &c, int style=-1)
</SLOTS>

<SIGNALS>
void colorChanged (const QColor &c, int style)
void eolFillChanged (bool eolfilled, int style)
void fontChanged (const QFont &f, int style)
void paperChanged (const QColor &c, int style)
void propertyChanged (const char *prop, const char *val)
</SIGNALS>
