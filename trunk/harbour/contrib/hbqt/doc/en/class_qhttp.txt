/*
 * $Id$
 */

/*  $DOC$
 *  $NAME$
 *     QHttp()
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtnetwork/TQHttp.prg
 *     C++ wrappers  : contrib/hbqt/qtnetwork/QHttp.cpp
 *     Library       : hbqtnetwork
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $SYNTAX$
 *     QHttp():new( ... )
 *     QHttp():from( pPtr_OR_oObj_of_type_QHttp )
 *     QHttp():configure( pPtr_OR_oObj_of_type_QHttp )
 *  $METHODS$
 *     :bytesAvailable()                                   -> nQint64
 *     :clearPendingRequests()                             -> NIL
 *     :close()                                            -> nInt
 *     :currentDestinationDevice()                         -> pQIODevice
 *     :currentId()                                        -> nInt
 *     :currentRequest()                                   -> RequestHeader
 *     :currentSourceDevice()                              -> pQIODevice
 *     :error()                                            -> nError
 *     :errorString()                                      -> cQString
 *     :get( cPath, pTo )                                  -> nInt
 *     :hasPendingRequests()                               -> lBool
 *     :head( cPath )                                      -> nInt
 *     :lastResponse()                                     -> ResponseHeader
 *     :post( cPath, pData, pTo )                          -> nInt
 *     :post_1( cPath, pData, pTo )                        -> nInt
 *     :readAll()                                          -> pQByteArray
 *     :request( pHeader, pData, pTo )                     -> nInt
 *     :request_1( pHeader, pData, pTo )                   -> nInt
 *     :setHost( cHostName, nPort )                        -> nInt
 *     :setHost_1( cHostName, nMode, nPort )               -> nInt
 *     :setProxy( cHost, nPort, cUsername, cPassword )     -> nInt
 *     :setUser( cUserName, cPassword )                    -> nInt
 *     :state()                                            -> nState
 *     :abort()                                            -> NIL
 * 
 *  $RETURNS$
 *     An instance of the object of type QHttp
 *  $SEEALSO$
 *     QObject
 *  $VERSION$
 *     4.5 or upper
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $EXAMPLES$
 * 
 *  $INHERITS$
 *     QObject
 *  $ONELINER$
 *     Creates a new QHttp object.
 *  $TEMPLATE$
 *     Class
 *  $ARGUMENTS$
 * 
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $DESCRIPTION$
 * 
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qhttp.html
 *  $END$
 */
