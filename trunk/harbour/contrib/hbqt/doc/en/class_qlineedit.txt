/*
 * $Id$
 */

/*  $DOC$
 *  $NAME$
 *     QLineEdit()
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQLineEdit.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QLineEdit.cpp
 *     Library       : hbqtgui
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $SYNTAX$
 *     QLineEdit():new( ... )
 *     QLineEdit():from( pPtr_OR_oObj_of_type_QLineEdit )
 *     QLineEdit():configure( pPtr_OR_oObj_of_type_QLineEdit )
 *  $METHODS$
 *     :alignment()                                        -> nQt::Alignment
 *     :backspace()                                        -> NIL
 *     :completer()                                        -> pQCompleter
 *     :createStandardContextMenu()                        -> pQMenu
 *     :cursorBackward( lMark, nSteps )                    -> NIL
 *     :cursorForward( lMark, nSteps )                     -> NIL
 *     :cursorPosition()                                   -> nInt
 *     :cursorPositionAt( pPos )                           -> nInt
 *     :cursorWordBackward( lMark )                        -> NIL
 *     :cursorWordForward( lMark )                         -> NIL
 *     :del()                                              -> NIL
 *     :deselect()                                         -> NIL
 *     :displayText()                                      -> cQString
 *     :dragEnabled()                                      -> lBool
 *     :echoMode()                                         -> nEchoMode
 *     :end( lMark )                                       -> NIL
 *     :getTextMargins( @nLeft, @nTop, @nRight, @nBottom )  -> NIL
 *     :hasAcceptableInput()                               -> lBool
 *     :hasFrame()                                         -> lBool
 *     :hasSelectedText()                                  -> lBool
 *     :home( lMark )                                      -> NIL
 *     :inputMask()                                        -> cQString
 *     :insert( cNewText )                                 -> NIL
 *     :isModified()                                       -> lBool
 *     :isReadOnly()                                       -> lBool
 *     :isRedoAvailable()                                  -> lBool
 *     :isUndoAvailable()                                  -> lBool
 *     :maxLength()                                        -> nInt
 *     :minimumSizeHint()                                  -> pQSize
 *     :selectedText()                                     -> cQString
 *     :selectionStart()                                   -> nInt
 *     :setAlignment( nFlag )                              -> NIL
 *     :setCompleter( pC )                                 -> NIL
 *     :setCursorPosition( nInt )                          -> NIL
 *     :setDragEnabled( lB )                               -> NIL
 *     :setEchoMode( nEchoMode )                           -> NIL
 *     :setFrame( lBool )                                  -> NIL
 *     :setInputMask( cInputMask )                         -> NIL
 *     :setMaxLength( nInt )                               -> NIL
 *     :setModified( lBool )                               -> NIL
 *     :setReadOnly( lBool )                               -> NIL
 *     :setSelection( nStart, nLength )                    -> NIL
 *     :setTextMargins( nLeft, nTop, nRight, nBottom )     -> NIL
 *     :setValidator( pV )                                 -> NIL
 *     :sizeHint()                                         -> pQSize
 *     :text()                                             -> cQString
 *     :validator()                                        -> pQValidator
 *     :clear()                                            -> NIL
 *     :copy()                                             -> NIL
 *     :cut()                                              -> NIL
 *     :paste()                                            -> NIL
 *     :redo()                                             -> NIL
 *     :selectAll()                                        -> NIL
 *     :setText( cQString )                                -> NIL
 *     :undo()                                             -> NIL
 * 
 *  $RETURNS$
 *     An instance of the object of type QLineEdit
 *  $SEEALSO$
 *     QWidget
 *  $VERSION$
 *     4.5 or upper
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $EXAMPLES$
 * 
 *  $INHERITS$
 *     QWidget
 *  $ONELINER$
 *     Creates a new QLineEdit object.
 *  $TEMPLATE$
 *     Class
 *  $ARGUMENTS$
 * 
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $DESCRIPTION$
 * 
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qlineedit.html
 *  $END$
 */
