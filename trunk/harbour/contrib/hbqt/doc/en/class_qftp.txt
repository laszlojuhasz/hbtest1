/*
 * $Id$
 */

/*  $DOC$
 *  $NAME$
 *     QFtp()
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtnetwork/TQFtp.prg
 *     C++ wrappers  : contrib/hbqt/qtnetwork/QFtp.cpp
 *     Library       : hbqtnetwork
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $SYNTAX$
 *     QFtp():new( ... )
 *     QFtp():from( pPtr_OR_oObj_of_type_QFtp )
 *     QFtp():configure( pPtr_OR_oObj_of_type_QFtp )
 *  $METHODS$
 *     :bytesAvailable()                                   -> nQint64
 *     :cd( cDir )                                         -> nInt
 *     :clearPendingCommands()                             -> NIL
 *     :close()                                            -> nInt
 *     :connectToHost( cHost, nPort )                      -> nInt
 *     :currentCommand()                                   -> nCommand
 *     :currentDevice()                                    -> pQIODevice
 *     :currentId()                                        -> nInt
 *     :error()                                            -> nError
 *     :errorString()                                      -> cQString
 *     :get( cFile, pDev, nType )                          -> nInt
 *     :hasPendingCommands()                               -> lBool
 *     :list( cDir )                                       -> nInt
 *     :login( cUser, cPassword )                          -> nInt
 *     :mkdir( cDir )                                      -> nInt
 *     :put( pDev, cFile, nType )                          -> nInt
 *     :put_1( pData, cFile, nType )                       -> nInt
 *     :rawCommand( cCommand )                             -> nInt
 *     :readAll()                                          -> pQByteArray
 *     :remove( cFile )                                    -> nInt
 *     :rename( cOldname, cNewname )                       -> nInt
 *     :rmdir( cDir )                                      -> nInt
 *     :setProxy( cHost, nPort )                           -> nInt
 *     :setTransferMode( nMode )                           -> nInt
 *     :state()                                            -> nState
 *     :abort()                                            -> NIL
 * 
 *  $RETURNS$
 *     An instance of the object of type QFtp
 *  $SEEALSO$
 *     QObject
 *  $VERSION$
 *     4.5 or upper
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $EXAMPLES$
 * 
 *  $INHERITS$
 *     QObject
 *  $ONELINER$
 *     Creates a new QFtp object.
 *  $TEMPLATE$
 *     Class
 *  $ARGUMENTS$
 * 
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $DESCRIPTION$
 * 
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qftp.html
 *  $END$
 */
