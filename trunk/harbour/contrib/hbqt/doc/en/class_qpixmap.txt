/*
 * $Id$
 */

/*  $DOC$
 *  $NAME$
 *     QPixmap()
 *  $FILES$
 *     Harbour source: contrib/hbqt/qtgui/TQPixmap.prg
 *     C++ wrappers  : contrib/hbqt/qtgui/QPixmap.cpp
 *     Library       : hbqtgui
 *  $TESTS$
 * 
 *  $STATUS$
 *     R
 *  $SYNTAX$
 *     QPixmap():new( ... )
 *     QPixmap():from( pPtr_OR_oObj_of_type_QPixmap )
 *     QPixmap():configure( pPtr_OR_oObj_of_type_QPixmap )
 *  $METHODS$
 *     :cacheKey()                                         -> nQint64
 *     :createHeuristicMask( lClipTight )                  -> pQBitmap
 *     :createMaskFromColor( pMaskColor, nMode )           -> pQBitmap
 *     :createMaskFromColor_1( pMaskColor )                -> pQBitmap
 *     :depth()                                            -> nInt
 *     :detach()                                           -> NIL
 *     :fill( pColor )                                     -> NIL
 *     :fill_1( pWidget, pOffset )                         -> NIL
 *     :fill_2( pWidget, nX, nY )                          -> NIL
 *     :hasAlpha()                                         -> lBool
 *     :hasAlphaChannel()                                  -> lBool
 *     :height()                                           -> nInt
 *     :isNull()                                           -> lBool
 *     :isQBitmap()                                        -> lBool
 *     :load( cFileName, pFormat, nFlags )                 -> lBool
 *     :loadFromData( pData, pFormat, nFlags )             -> lBool
 *     :mask()                                             -> pQBitmap
 *     :rect()                                             -> pQRect
 *     :save( cFileName, pFormat, nQuality )               -> lBool
 *     :save_1( pDevice, pFormat, nQuality )               -> lBool
 *     :setAlphaChannel( pAlphaChannel )                   -> NIL
 *     :setMask( pMask )                                   -> NIL
 *     :size()                                             -> pQSize
 *     :toImage()                                          -> pQImage
 *     :width()                                            -> nInt
 *     :defaultDepth()                                     -> nInt
 *     :trueMatrix( pMatrix, nWidth, nHeight )             -> pQTransform
 *     :trueMatrix_1( pM, nW, nH )                         -> pQMatrix
 * 
 *  $RETURNS$
 *     An instance of the object of type QPixmap
 *  $SEEALSO$
 *     QPaintDevice
 *  $VERSION$
 *     4.5 or upper
 *  $CATEGORY$
 *     Harbour Bindings for Qt
 *  $EXAMPLES$
 *     oPixmap := QPixmap():new()
 *     oPixmap := QPixmap():new( nWidth, nHeight )
 *     oPixmap := QPixmap():new( cImageFilename )
 *     oPixmap := QPixmap():new( pQPixmap )
 * 
 *  $INHERITS$
 *     QPaintDevice
 *  $ONELINER$
 *     Creates a new QPixmap object.
 *  $TEMPLATE$
 *     Class
 *  $ARGUMENTS$
 * 
 *  $PLATFORMS$
 *     Windows, Linux, Mac OS X, OS/2
 *  $COMPLIANCE$
 *     Not Clipper compatible
 *  $DESCRIPTION$
 * 
 *  $SUBCATEGORY$
 *     GUI
 *  $EXTERNALLINK$
 *     http://doc.trolltech.com/4.5/qpixmap.html
 *  $END$
 */
