/*
 *  hbQTgen v1.0 - Harbour Callable Wrappers Generator for Qt v4.5.3+
 *  Please do not modify this document as it is subject to change in future.
 *  Pritpal Bedi <bedipritpal@hotmail.com>
 */

/*  $DOC$
    $TEMPLATE$
        Class
    $NAME$
        QImage()
    $CATEGORY$
        Harbour Bindings for Qt
    $SUBCATEGORY$
        GUI
    $EXTERNALLINK$
        http://doc.trolltech.com/4.5/qimage.html
    $ONELINER$
        Creates a new QImage object.
    $INHERITS$

    $SYNTAX$
        QImage():new( ... )
        QImage():from( pPtr_OR_oObj_of_type_QImage )
        QImage():configure( pPtr_OR_oObj_of_type_QImage )
    $ARGUMENTS$

    $RETURNS$
        An instance of the object of type QImage
    $METHODS$
        :allGray()                                          -> lBool
        :bits()                                             -> pUchar
        :bits_1()                                           -> pUchar
        :bytesPerLine()                                     -> nInt
        :cacheKey()                                         -> nQint64
        :color( nI )                                        -> nQRgb
        :depth()                                            -> nInt
        :dotsPerMeterX()                                    -> nInt
        :dotsPerMeterY()                                    -> nInt
        :fill( nPixelValue )                                -> NIL
        :format()                                           -> nFormat
        :hasAlphaChannel()                                  -> lBool
        :height()                                           -> nInt
        :invertPixels( nMode )                              -> NIL
        :isGrayscale()                                      -> lBool
        :isNull()                                           -> lBool
        :load( cFileName, pFormat )                         -> lBool
        :load_1( pDevice, pFormat )                         -> lBool
        :loadFromData( pData, pFormat )                     -> lBool
        :numBytes()                                         -> nInt
        :numColors()                                        -> nInt
        :offset()                                           -> pQPoint
        :pixel( pPosition )                                 -> nQRgb
        :pixel_1( nX, nY )                                  -> nQRgb
        :pixelIndex( pPosition )                            -> nInt
        :pixelIndex_1( nX, nY )                             -> nInt
        :rect()                                             -> pQRect
        :save( cFileName, pFormat, nQuality )               -> lBool
        :save_1( pDevice, pFormat, nQuality )               -> lBool
        :scanLine( nI )                                     -> pUchar
        :scanLine_1( nI )                                   -> pUchar
        :setColor( nIndex, nColorValue )                    -> NIL
        :setDotsPerMeterX( nX )                             -> NIL
        :setDotsPerMeterY( nY )                             -> NIL
        :setNumColors( nNumColors )                         -> NIL
        :setOffset( pOffset )                               -> NIL
        :setPixel( pPosition, nIndex_or_rgb )               -> NIL
        :setPixel_1( nX, nY, nIndex_or_rgb )                -> NIL
        :setText( cKey, cText )                             -> NIL
        :size()                                             -> pQSize
        :text( cKey )                                       -> cQString
        :textKeys()                                         -> pQStringList
        :valid( pPos )                                      -> lBool
        :valid_1( nX, nY )                                  -> lBool
        :width()                                            -> nInt

    $DESCRIPTION$

    $EXAMPLES$
        oImage := QImage():new()
        oImage := QImage():new( pQSize, cFormat )
        oImage := QImage():new( iWidth, iHeight, cFormat )
        oImage := QImage():new( @cData, iWidth, iHeight, cFormat )
        oImage := QImage():new( cData , iWidth, iHeight, cFormat )
        oImage := QImage():new( @cData, iWidth, iHeight, iBytesPerLine, cFormat )
        oImage := QImage():new( cData , iWidth, iHeight, iBytesPerLine, cFormat )
        oImage := QImage():new( cFileName [, cFormat ] )
        oImage := QImage():new( pQImage )

    $TESTS$

    $STATUS$
        R
    $COMPLIANCE$
        Not Clipper Compatible
    $PLATFORMS$
        Windows, Linux, MacOS, OS2
    $VERSION$
        4.5.3
    $FILES$
        Prg Source   : contrib/hbqt/qtgui/TQImage.prg
        C++ Wrappers : contrib/hbqt/qtgui/QImage.cpp
        Library      : hbqtgui
    $SEEALSO$

    $END$
 */
