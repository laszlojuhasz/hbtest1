/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject    = 
Inherits   = QObject
Type       = Core
New        =
Destructor = 
</CLASS>

<CODE>
#include <QtGui/QMovie>
#include <QtGui/QColor>
#include <QtGui/QPixmap>


/* QMovie ( QObject * parent = 0 )
 * QMovie ( QIODevice * device, const QByteArray & format = QByteArray(), QObject * parent = 0 )
 * QMovie ( const QString & fileName, const QByteArray & format = QByteArray(), QObject * parent = 0 )
 * ~QMovie ()
 */
HB_FUNC( QT_QMOVIE )
{
   hb_retptr( new QMovie() );
}
</CODE>

<ENUMS>
enum CacheMode { CacheNone, CacheAll }
enum MovieState { NotRunning, Paused, Running }
</ENUMS>

<PROTOS>
QColor backgroundColor () const
CacheMode cacheMode () const
int currentFrameNumber () const
QImage currentImage () const
QPixmap currentPixmap () const
QIODevice * device () const
QString fileName () const
QByteArray format () const
int frameCount () const
QRect frameRect () const
bool isValid () const
bool jumpToFrame ( int frameNumber )
int loopCount () const
int nextFrameDelay () const
QSize scaledSize ()
void setBackgroundColor ( const QColor & color )
void setCacheMode ( CacheMode mode )
void setDevice ( QIODevice * device )
void setFileName ( const QString & fileName )
void setFormat ( const QByteArray & format )
void setScaledSize ( const QSize & size )
int speed () const
MovieState state () const
</PROTOS>

<SLOTS>
bool jumpToNextFrame ()
void setPaused ( bool paused )
void setSpeed ( int percentSpeed )
void start ()
void stop ()
</SLOTS>

<SIGNALS>
void error ( QImageReader::ImageReaderError error )
void finished ()
void frameChanged ( int frameNumber )
void resized ( const QSize & size )
void started ()
void stateChanged ( QMovie::MovieState state )
void updated ( const QRect & rect )
</SIGNALS>




