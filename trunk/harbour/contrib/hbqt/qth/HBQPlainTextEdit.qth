/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  =
Inherits = QPlainTextEdit
Type     =
New      =
</CLASS>

<DOC>
</DOC>

<CODE>
#include <QtGui/QPlainTextEdit>

#include "../hbqt_hbqplaintextedit.h"

/*
 * HBQPlainTextEdit ( QWidget * parent = 0 )
 * HBQPlainTextEdit ( const QString & text, QWidget * parent = 0 )
 * virtual ~HBQPlainTextEdit ()
 */
HB_FUNC( QT_HBQPLAINTEXTEDIT )
{
   if( hb_pcount() == 1 && HB_ISCHAR( 1 ) )
   {
      hb_retptr( new HBQPlainTextEdit() );
   }
   else if( hb_pcount() == 1 && HB_ISPOINTER( 1 ) )
   {
      hb_retptr( new HBQPlainTextEdit( hbqt_par_QWidget( 1 ) ) );
   }
   else
   {
      hb_retptr( new HBQPlainTextEdit() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
   int            hbGetIndex( const QTextCursor & crQTextCursor)
   int            hbGetLine( const QTextCursor & crQTextCursor)
   int            hbLineNumberAreaWidth()
   int            hbGetSpaces()
   void           hbSetSpaces(int newSpaces)
   void           hbBookmarks(int block)
   void           hbNextBookmark(int block)
   void           hbPrevBookmark(int block)
   void           hbGotoBookmark(int block)
   void           hbNumberBlockVisible(bool b)
   bool           hbNumberBlockVisible()
   void           hbHighlightCurrentLine(bool b)
   bool           hbHighlightCurrentLine()
   void           hbSetEventBlock( PHB_ITEM block )
</PROTOS>

<SLOTS>
   void           hbUpdateLineNumberAreaWidth( int newBlockCount )
   void           hbCaseUpper()
   void           hbCaseLower()
   void           hbEscapeQuotes()
   void           hbEscapeDQuotes()
   void           hbUnescapeQuotes()
   void           hbUnescapeDQuotes()
   void           hbConvertQuotes()
   void           hbConvertDQuotes()
   void           hbBlockComment()
   void           hbStreamComment()
   void           hbDuplicateLine()
   void           hbReplaceSelection( const QString & txt )
   void           hbBlockIndent( int steps )
   void           hbDeleteLine()
   void           hbMoveLine( int iDirection )
   QString        hbGetSelectedText()
   QString        hbTextUnderCursor()
   void           hbShowPrototype( const QString & tip )
   void           hbSetCompleter( QCompleter * completer )
   void           hbSetCurrentLineColor( const QColor & color )
   void           hbSetLineAreaBkColor( const QColor & color )
   void           hbRefresh()
   void           hbCut( int key )
   void           hbCopy()
   void           hbPaste()
   void           hbSetSelectionMode( int mode, bool on )
   void           hbGetSelectionInfo()
   void           hbSetSelectionInfo( PHB_ITEM selectionInfo )
   void           hbSetSelectionColor( const QColor & color )
   void           hbSetMatchBraces( bool all )
   void           hbGetViewportInfo()
   void           hbApplyKey( int key, Qt::KeyboardModifiers modifiers = 0, const QString & txt )
   void           hbHighlightArea( int top, int left, int bottom, int right, int mode )
   void           hbTogglePersistentSelection()
   void           hbHorzRulerVisible( bool visible )
</SLOTS>

<SIGNALS>
</SIGNALS>
