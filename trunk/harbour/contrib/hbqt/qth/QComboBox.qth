/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>

Inherit  = QWidget
New      = pParent
Calls    = QT_QComboBox

</CLASS>


<CODE>
#include <QtGui/QComboBox>


/*
 * QComboBox ( QWidget * parent = 0 )
 * ~QComboBox ()
 */
HB_FUNC( QT_QCOMBOBOX )
{
   hb_retptr( ( QComboBox* ) new QComboBox( hbqt_par_QWidget( 1 ) ) );
}
</CODE>

<ENUMS>
enum InsertPolicy { NoInsert, InsertAtTop, InsertAtCurrent, InsertAtBottom, ..., InsertAlphabetically }
enum SizeAdjustPolicy { AdjustToContents, AdjustToContentsOnFirstShow, AdjustToMinimumContentsLength, AdjustToMinimumContentsLengthWithIcon }
</ENUMS>

<PROTOS>
void addItem ( const QString & text, const QVariant & userData = QVariant() )
void addItem ( const QIcon & icon, const QString & text, const QVariant & userData = QVariant() )
void addItems ( const QStringList & texts )
QCompleter * completer () const
int count () const
int currentIndex () const
QString currentText () const
bool duplicatesEnabled () const
int findData ( const QVariant & data, int role = Qt::UserRole, Qt::MatchFlags flags = Qt::MatchExactly | Qt::MatchCaseSensitive ) const
int findText ( const QString & text, Qt::MatchFlags flags = Qt::MatchExactly | Qt::MatchCaseSensitive ) const
bool hasFrame () const
virtual void hidePopup ()
QSize iconSize () const
void insertItem ( int index, const QString & text, const QVariant & userData = QVariant() )
void insertItem ( int index, const QIcon & icon, const QString & text, const QVariant & userData = QVariant() )
void insertItems ( int index, const QStringList & list )
InsertPolicy insertPolicy () const
void insertSeparator ( int index )
bool isEditable () const
QVariant itemData ( int index, int role = Qt::UserRole ) const
QAbstractItemDelegate * itemDelegate () const
QIcon itemIcon ( int index ) const
QString itemText ( int index ) const
QLineEdit * lineEdit () const
int maxCount () const
int maxVisibleItems () const
int minimumContentsLength () const
QAbstractItemModel * model () const
int modelColumn () const
void removeItem ( int index )
QModelIndex rootModelIndex () const
void setCompleter ( QCompleter * completer )
void setDuplicatesEnabled ( bool enable )
void setEditable ( bool editable )
void setFrame ( bool )
void setIconSize ( const QSize & size )
void setInsertPolicy ( InsertPolicy policy )
void setItemData ( int index, const QVariant & value, int role = Qt::UserRole )
void setItemDelegate ( QAbstractItemDelegate * delegate )
void setItemIcon ( int index, const QIcon & icon )
void setItemText ( int index, const QString & text )
void setLineEdit ( QLineEdit * edit )
void setMaxCount ( int max )
void setMaxVisibleItems ( int maxItems )
void setMinimumContentsLength ( int characters )
void setModel ( QAbstractItemModel * model )
void setModelColumn ( int visibleColumn )
void setRootModelIndex ( const QModelIndex & index )
void setSizeAdjustPolicy ( SizeAdjustPolicy policy )
void setValidator ( const QValidator * validator )
void setView ( QAbstractItemView * itemView )
virtual void showPopup ()
SizeAdjustPolicy sizeAdjustPolicy () const
const QValidator * validator () const
QAbstractItemView * view () const
</PROTOS>

<SLOTS>
void clear ()
void clearEditText ()
void setCurrentIndex ( int index )
void setEditText ( const QString & text )
</SLOTS>

<SIGNALS>
void activated ( int index )
void activated ( const QString & text )
void currentIndexChanged ( int index )
void currentIndexChanged ( const QString & text )
void editTextChanged ( const QString & text )
void highlighted ( int index )
void highlighted ( const QString & text )
</SIGNALS>
