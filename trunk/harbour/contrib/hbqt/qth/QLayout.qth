

<CODE>
#include <QtGui/QLayout>


/*
 * QLayout ( QWidget * parent )
 * QLayout ()
 */
#if 0
HB_FUNC( QT_QLAYOUT )
{
   hb_retptr( ( QLayout* ) new QLayout( hbqt_par_QWidget( 1 ) ) );
}
#endif
</CODE>


enum SizeConstraint { SetDefaultConstraint, SetFixedSize, SetMinimumSize, SetMaximumSize, SetMinAndMaxSize, SetNoConstraint }


bool activate ()
virtual void addItem ( QLayoutItem * item ) = 0
void addWidget ( QWidget * w )
QRect contentsRect () const
virtual int count () const = 0
virtual Qt::Orientations expandingDirections () const
void getContentsMargins ( int * left, int * top, int * right, int * bottom ) const
virtual int indexOf ( QWidget * widget ) const
bool isEnabled () const
virtual QLayoutItem * itemAt ( int index ) const = 0
virtual QSize maximumSize () const
QWidget * menuBar () const
virtual QSize minimumSize () const
QWidget * parentWidget () const
void removeItem ( QLayoutItem * item )
void removeWidget ( QWidget * widget )
bool setAlignment ( QWidget * w, Qt::Alignment alignment )
void setAlignment ( Qt::Alignment alignment )
bool setAlignment ( QLayout * l, Qt::Alignment alignment )
void setContentsMargins ( int left, int top, int right, int bottom )
void setEnabled ( bool enable )
void setMenuBar ( QWidget * widget )
void setSizeConstraint ( SizeConstraint )
void setSpacing ( int )
SizeConstraint sizeConstraint () const
int spacing () const
virtual QLayoutItem * takeAt ( int index ) = 0
void update ()
