/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
Inherit  = QAbstractItemView
New      = pParent
</CLASS>

<SUBCLASS>
CREATE CLASS HBTableView INHERIT QTableView

   METHOD new( pParent )                        
   METHOD navigate( nCursorAction, nModifiers )
   METHOD destroy()

   ENDCLASS

METHOD HBTableView:new( pParent )
   ::pPtr := Qt_HbTableView( pParent )
   RETURN Self

METHOD HBTableView:navigate( nCursorAction, nModifiers )
   RETURN Qt_HbTableView_navigate( ::pPtr, nCursorAction, nModifiers )

METHOD HBTableView:destroy()
   RETURN Qt_HbTableView_destroy( ::pPtr )

</SUBCLASS>

<CODE>
#include <QtGui/QTableView>

#include "../hbqt_slots.h"

/*
 * QTableView ( QWidget * parent = 0 )
 * ~QTableView ()
 */
HB_FUNC( QT_QTABLEVIEW )
{
   hb_retptr( ( QTableView* ) new QTableView( hbqt_par_QWidget( 1 ) ) );
}

HB_FUNC( QT_HBTABLEVIEW )
{
   hb_retptr( new HbTableView( hbqt_par_QWidget( 1 ) ) );
}

HB_FUNC( QT_HBTABLEVIEW_NAVIGATE )
{
   hb_retptr( new QModelIndex( hbqt_par_HbTableView( 1 )->navigate( hb_parni( 2 ) ) ) );
}

HB_FUNC( QT_HBTABLEVIEW_DESTROY )
{
   hbqt_par_HbTableView( 1 )->~HbTableView();
}

</CODE>

<PROTOS>
void clearSpans ()
int columnAt ( int x ) const
int columnSpan ( int row, int column ) const
int columnViewportPosition ( int column ) const
int columnWidth ( int column ) const
Qt::PenStyle gridStyle () const
QHeaderView * horizontalHeader () const
virtual QModelIndex indexAt ( const QPoint & pos ) const
bool isColumnHidden ( int column ) const
bool isCornerButtonEnabled () const
bool isRowHidden ( int row ) const
bool isSortingEnabled () const
int rowAt ( int y ) const
int rowHeight ( int row ) const
int rowSpan ( int row, int column ) const
int rowViewportPosition ( int row ) const
void setColumnHidden ( int column, bool hide )
void setColumnWidth ( int column, int width )
void setCornerButtonEnabled ( bool enable )
void setGridStyle ( Qt::PenStyle style )
void setHorizontalHeader ( QHeaderView * header )
void setRowHeight ( int row, int height )
void setRowHidden ( int row, bool hide )
void setSortingEnabled ( bool enable )
void setSpan ( int row, int column, int rowSpanCount, int columnSpanCount )
void setVerticalHeader ( QHeaderView * header )
void setWordWrap ( bool on )
bool showGrid () const
void sortByColumn ( int column, Qt::SortOrder order )
QHeaderView * verticalHeader () const
bool wordWrap () const
</PROTOS>

<SLOTS>
void hideColumn ( int column )
void hideRow ( int row )
void resizeColumnToContents ( int column )
void resizeColumnsToContents ()
void resizeRowToContents ( int row )
void resizeRowsToContents ()
void selectColumn ( int column )
void selectRow ( int row )
void setShowGrid ( bool show )
void showColumn ( int column )
void showRow ( int row )
</SLOTS>


