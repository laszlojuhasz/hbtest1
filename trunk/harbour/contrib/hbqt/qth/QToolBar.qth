
<CODE>
#include <QtGui/QToolBar>
#include <QtGui/QIcon>


/* QToolBar ( const QString & title, QWidget * parent = 0 )
 * QToolBar ( QWidget * parent = 0 )
 * ~QToolBar ()
 */
HB_FUNC( QT_QTOOLBAR )
{
   if( hb_param( 1, HB_IT_STRING ) )
      hb_retptr( ( QToolBar* ) new QToolBar( hbqt_par_QString( 1 ), hbqt_par_QWidget( 2 ) ) );
   else
      hb_retptr( ( QToolBar* ) new QToolBar( hbqt_par_QWidget( 1 ) ) );
}
</CODE>


QAction * actionAt ( const QPoint & p ) const
QAction * actionAt ( int x, int y ) const
void addAction ( QAction * action )
QAction * addAction ( const QString & text )
QAction * addAction ( const QIcon & icon, const QString & text )
QAction * addAction ( const QString & text, const QObject * receiver, const char * member )
QAction * addAction ( const QIcon & icon, const QString & text, const QObject * receiver, const char * member )
QAction * addSeparator ()
QAction * addWidget ( QWidget * widget )
Qt::ToolBarAreas allowedAreas () const
void clear ()
QSize iconSize () const
QAction * insertSeparator ( QAction * before )
QAction * insertWidget ( QAction * before, QWidget * widget )
bool isAreaAllowed ( Qt::ToolBarArea area ) const
bool isFloatable () const
bool isFloating () const
bool isMovable () const
Qt::Orientation orientation () const
void setAllowedAreas ( Qt::ToolBarAreas areas )
void setFloatable ( bool floatable )
void setMovable ( bool movable )
void setOrientation ( Qt::Orientation orientation )
QAction * toggleViewAction () const
Qt::ToolButtonStyle toolButtonStyle () const
QWidget * widgetForAction ( QAction * action ) const

