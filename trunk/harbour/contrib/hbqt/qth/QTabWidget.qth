/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
Inherit  = QWidget
New      = pParent
</CLASS>

<CODE>
#include <QtGui/QTabWidget>


/*
 * QTabWidget ( QWidget * parent = 0 )
 * ~QTabWidget ()
 */
HB_FUNC( QT_QTABWIDGET )
{
   hb_retptr( ( QTabWidget* ) new QTabWidget( hbqt_par_QWidget( 1 ) ) );
}
</CODE>

<ENUMS>
enum TabPosition { North, South, West, East }
enum TabShape { Rounded, Triangular }
</ENUMS>

<PROTOS>
int addTab ( QWidget * page, const QString & label )
int addTab ( QWidget * page, const QIcon & icon, const QString & label )
void clear ()
QWidget * cornerWidget ( Qt::Corner corner = Qt::TopRightCorner ) const
int count () const
int currentIndex () const
QWidget * currentWidget () const
bool documentMode () const
Qt::TextElideMode elideMode () const
QSize iconSize () const
int indexOf ( QWidget * w ) const
int insertTab ( int index, QWidget * page, const QString & label )
int insertTab ( int index, QWidget * page, const QIcon & icon, const QString & label )
bool isMovable () const
bool isTabEnabled ( int index ) const
void removeTab ( int index )
void setCornerWidget ( QWidget * widget, Qt::Corner corner = Qt::TopRightCorner )
void setDocumentMode ( bool set )
void setElideMode ( Qt::TextElideMode )
void setIconSize ( const QSize & size )
void setMovable ( bool movable )
void setTabEnabled ( int index, bool enable )
void setTabIcon ( int index, const QIcon & icon )
void setTabPosition ( TabPosition )
void setTabShape ( TabShape s )
void setTabText ( int index, const QString & label )
void setTabToolTip ( int index, const QString & tip )
void setTabWhatsThis ( int index, const QString & text )
void setTabsClosable ( bool closeable )
void setUsesScrollButtons ( bool useButtons )
QIcon tabIcon ( int index ) const
TabPosition tabPosition () const
TabShape tabShape () const
QString tabText ( int index ) const
QString tabToolTip ( int index ) const
QString tabWhatsThis ( int index ) const
bool tabsClosable () const
bool usesScrollButtons () const
QWidget * widget ( int index ) const
</PROTOS>

<SLOTS>
void setCurrentIndex ( int index )
void setCurrentWidget ( QWidget * widget )
</SLOTS>

<SIGNALS>
void currentChanged ( int index )
void tabCloseRequested ( int index )
</SIGNALS>

