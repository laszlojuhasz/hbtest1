/*
 * $Id$
 */

/*
 * Harbour Qt wrapper generator control file
 *
 * Copyright 2009-2010 Pritpal Bedi <bedipritpal@hotmail.com>
 * www - http://www.harbour-project.org
 *
 * See COPYING for licensing terms.
 */

<CLASS>
Inherits = QObject
Type     = Core
New      =
</CLASS>

<CODE>
#include "hbqtgui.h"

#include <QtUiTools/QUiLoader>
#include <QtCore/QDir>
#include <QtCore/QStringList>

/*
 * QUiLoader ( QObject * parent = 0 )
 * virtual ~QUiLoader ()
 */
HB_FUNC( QT_QUILOADER )
{
   if( hb_pcount() == 1 && HB_ISPOINTER( 1 ) )
   {
      __HB_RETPTRGC__( new QUiLoader( hbqt_par_QObject( 1 ) ) );
   }
   else
   {
      __HB_RETPTRGC__( new QUiLoader() );
   }
}
</CODE>

<ENUMS>
</ENUMS>

<PROTOS>
void addPluginPath ( const QString & path )
QStringList availableLayouts () const
QStringList availableWidgets () const
void clearPluginPaths ()
virtual QAction * createAction ( QObject * parent = 0, const QString & name = QString() )
virtual QActionGroup * createActionGroup ( QObject * parent = 0, const QString & name = QString() )
virtual QLayout * createLayout ( const QString & className, QObject * parent = 0, const QString & name = QString() )
virtual QWidget * createWidget ( const QString & className, QWidget * parent = 0, const QString & name = QString() )
bool isLanguageChangeEnabled () const
QWidget * load ( QIODevice * device, QWidget * parentWidget = 0 )
QStringList pluginPaths () const
void setLanguageChangeEnabled ( bool enabled )
void setWorkingDirectory ( const QDir & dir )
QDir workingDirectory () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>
