/*
 * $Id$
 */

/* $DOC$
   $NAME$
      ft_Sqzn()
   $CATEGORY$
      Conversion
   $ONELINER$
      Compress a numeric value into a character string
   $SYNTAX$
      ft_Sqzn( <nValue> [, <nSize> [, <nDecimals> ] ] ) -> cCompressed
   $ARGUMENTS$
      nValue       - The numeric value to be compressed
      nSize        - Optional size of numeric field, defaults to 10
      nDecimals    - Optional number of decimal places, defaults to 0
   $RETURNS$
      cCompressed  - Compressed string, 50% the size of nSize
   $DESCRIPTION$
      The FT_SQZN function allows a numeric value to be compressed when
      stored in the database.  The compression is 50% the storage space
      of the original number.  The companion function, FT_UNSQZN returns
      the original number from the compressed string.

   $EXAMPLES$
      REPLACE ;
         TRANS->cust_id WITH ft_Sqzn( mcust_id, 8 ), ;
         TRANS->amount  WITH ft_Sqzn( mamount, 12, 2 )
   $SEEALSO$
      ft_Unsqzn()
   $INCLUDE$

   $END$
 */

/* $DOC$
   $NAME$
      ft_Unsqzn()
   $CATEGORY$
      Conversion
   $ONELINER$
      Uncompress a numeric compressed by ft_Sqzn()
   $SYNTAX$
      ft_Unsqzn( <cCompressed>, <nSize> [, <nDecimals> ] ) -> nValue
   $ARGUMENTS$
      <cCompressed>  - Compressed string, obtained from ft_Sqzn()

      <nSize>        - Size of numeric field

      <nDecimals>    - Optional number of decimal places
   $RETURNS$
      nValue       - Uncompressed numeric value
   $DESCRIPTION$
      The FT_UNSQZN function returns the numeric value from the compressed
      string.  The compression is 50% the storage space of the original
      number.  The original number must have been compressed using the
      ft_Sqzn() function.

      This function, along with ft_Sqzn() can be used to reduce disk storage
      requirements for numeric fields in a database file.

   $EXAMPLES$
      mcust_id := ft_Unsqzn( TRANS->cust_id, 8 )
      mamount  := ft_Unsqzn( TRANS->amount, 12, 2 )
   $SEEALSO$
      ft_Sqzn()
   $INCLUDE$

   $END$
 */
