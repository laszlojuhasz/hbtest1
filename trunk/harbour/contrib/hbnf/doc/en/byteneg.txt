/*
 * $Id$
 */

/* $DOC$
   $FUNCNAME$
      FT_BYTENEG()
   $CATEGORY$
      String
   $ONELINER$
      Perform bit-wise negation on an ASCII character
   $SYNTAX$
      FT_BYTENEG( <cByte> ) -> cNewByte
   $ARGUMENTS$
      <cByte> is a character from Chr(0) to Chr(255).
      May be passed in Chr() form, as character literal, or
      as expression evaluating to Chr() value.
   $RETURNS$
      Returns resulting byte, in Chr() form.  If parameters are faulty,
      returns NIL.
   $DESCRIPTION$
      Can be used for bit-wise byte manipulation.  In effect, this is a
      bit-by-bit NEG (two's complement) operation.  Equivalent to NEG
      assembler instruction.

      This function is presented to illustrate that bit-wise operations
      are possible with Clipper code.  For greater speed, write .c or
      .asm versions and use the Clipper Extend system.
   $EXAMPLES$
      // This code performs a bit-wise NEG on byte represented by Chr( 32 ):

      cNewByte := FT_BYTENOT( Chr( 32 ) )
      ? Asc( cNewByte )                  // result: 224
   $SEEALSO$
      FT_BYTEOR() FT_BYTEXOR() FT_BYTENOT() FT_BYTEAND()
   $END$
 */
