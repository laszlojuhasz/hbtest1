/*
 * $Id$
 */

/* Use this format for entry headers:
   YYYY-MM-DD HH:MM UTC[-|+]hhmm Your Full Name (your_email address)
   2009-12-31 13:59 UTC+0100 Foo Bar (foo.bar foobar.org)

   This work is licensed under the Creative Commons Attribution-ShareAlike
   License. To view a copy of this license, visit
   http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to
   Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305,
   USA.  A summary of the license and the full legal text is included
   in file: COPYING.  If you wish to distribute some or all of this work
   under different terms, please contact respective author(s).
   The license applies to all entries newer than 2009-04-28 and all
   past entries belonging to author(s): Viktor Szakats.
*/

2009-06-08 14:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * config/wce/mingwarm.cf
    ! Fixed 'del' command receiving wrongly formed path seps
      in non-msys mode when lib creation failed.

2009-06-08 14:14 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    * removed unnecessary stack preloading in hb_vmProc() and MT builds

2009-06-08 13:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu.bat
  * INSTALL
    + Automatically filling HB_CCPREFIX for mingw64 and mingwce
      targets, if not specified by user.
    * Removed HB_CCPREFIX from examples. Not yet documented
      the override feature as it's currently not needed.

2009-06-08 11:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * mpkg_win.bat
  * mpkg_win.nsi
    ! Fixed to include ChangeLog* instead of ChangeLog alone.
    + Added support for HB_DIR_NSIS envvar to specify the
      location of Nullsoft Installer. Value should end with
      backslash if specified.

2009-06-08 11:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
  + ChangeLog-old
    + Created ChangeLog-old which currently holds entries
      belonging to 1.0.1 and older versions, moved from main
      ChangeLog. From time to time we should move additional
      entries there from main ChangeLog to not let main
      ChangeLog grow too large. Updating files causes SVN dumps
      to contain the whole file each time it's changed, which
      means a large ChangeLog has a dramatic effect on the
      size of the SVN dump. We're at 12.4GB at this moment,
      much of this is ChangeLog copies (about ~4000 of them).

2009-06-07 23:43 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/generator/qt45.qtp

  * harbour/contrib/hbqt/hbqt.h

  + harbour/contrib/hbqt/hbqt_qabstracttablemodel.cpp
  + harbour/contrib/hbqt/hbqt_qfilesystemmodel.cpp
  + harbour/contrib/hbqt/hbqt_qmodelindex.cpp

  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/qth/QAbstractTableModel.qth
  + harbour/contrib/hbqt/qth/QFileSystemModel.qth
  + harbour/contrib/hbqt/qth/QModelIndex.qth

  + harbour/contrib/hbqt/TQAbstractTableModel.prg
  + harbour/contrib/hbqt/TQFileSystemModel.prg
  + harbour/contrib/hbqt/TQModelIndex.prg

    + Added more classes. With this basic user interface classes are complete.

2009-06-07 22:14 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg

  * harbour/contrib/hbqt/hbqt_qabstractitemmodel.cpp
  * harbour/contrib/hbqt/hbqt_qabstractlistmodel.cpp
  * harbour/contrib/hbqt/hbqt_qcombobox.cpp
  * harbour/contrib/hbqt/hbqt_qdirmodel.cpp
  * harbour/contrib/hbqt/hbqt_qicon.cpp
  * harbour/contrib/hbqt/hbqt_qimage.cpp
  * harbour/contrib/hbqt/hbqt_qpainter.cpp
  * harbour/contrib/hbqt/hbqt_qpixmap.cpp
  * harbour/contrib/hbqt/hbqt_qstandarditemmodel.cpp
  * harbour/contrib/hbqt/hbqt_qstringlistmodel.cpp
  * harbour/contrib/hbqt/hbqt_qtextdocument.cpp
  * harbour/contrib/hbqt/hbqt_qwebview.cpp

  * harbour/contrib/hbqt/hbqt_slots.cpp
  * harbour/contrib/hbqt/hbqt_slots.h
  * harbour/contrib/hbqt/moc_slots.cpp

  * harbour/contrib/hbqt/tests/demoqt.prg

    ! HB_ISNIL() => HB_ISPOINTER()
    + Added more event handlers.
    + Cleaned up hbqtgen.prg.

    /*
        Now almost all the controls have events response in place.
        The exception is QListView(). I am struggling to understand
        why this widget do not respnd to events.
    */

2009-06-08 06:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added minimum tested version of MinGW.

  * make_gnu.bat
    + Added echo to display errorlevel after running GNU Make
      if it's not zero. Eventually I'd like to add proper
      error display in case GNU Make returned with error
      (not that GNU Make doesn't display it), but first I'd
      like to inspect how it works (there is no documentation
      about returned errorlevels).

  * config/win/mingw.cf
    ! Fixed 'del' command receiving wrongly formed path seps
      in non-msys mode when lib creation failed.

  * ChangeLog
    ! Typo in one yesterday's entry.

2009-06-07 16:14 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/generator/qt45.qtp

  * harbour/contrib/hbqt/hbqt.h

  * harbour/contrib/hbqt/hbqt_qabstractitemmodel.cpp
  + harbour/contrib/hbqt/hbqt_qabstractlistmodel.cpp
  * harbour/contrib/hbqt/hbqt_qcombobox.cpp
  * harbour/contrib/hbqt/hbqt_qdirmodel.cpp
  * harbour/contrib/hbqt/hbqt_qftp.cpp
  * harbour/contrib/hbqt/hbqt_qhttp.cpp
  * harbour/contrib/hbqt/hbqt_qicon.cpp
  * harbour/contrib/hbqt/hbqt_qimage.cpp
  + harbour/contrib/hbqt/hbqt_qlist.cpp
  * harbour/contrib/hbqt/hbqt_qpainter.cpp
  * harbour/contrib/hbqt/hbqt_qpixmap.cpp
  * harbour/contrib/hbqt/hbqt_qstandarditemmodel.cpp
  + harbour/contrib/hbqt/hbqt_qstringlist.cpp
  + harbour/contrib/hbqt/hbqt_qstringlistmodel.cpp
  * harbour/contrib/hbqt/hbqt_qtextdocument.cpp
  * harbour/contrib/hbqt/hbqt_qwebview.cpp
  * harbour/contrib/hbqt/hbqt_qwidget.cpp

  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/qth/QAbstractListModel.qth
  + harbour/contrib/hbqt/qth/QList.qth
  + harbour/contrib/hbqt/qth/QStringList.qth
  + harbour/contrib/hbqt/qth/QStringListModel.qth
  * harbour/contrib/hbqt/qth/QWidget.qth

  + harbour/contrib/hbqt/TQAbstractListModel.prg
  * harbour/contrib/hbqt/TQFtp.prg
  * harbour/contrib/hbqt/TQHttp.prg
  * harbour/contrib/hbqt/TQIcon.prg
  + harbour/contrib/hbqt/TQList.prg
  + harbour/contrib/hbqt/TQStringList.prg
  + harbour/contrib/hbqt/TQStringListModel.prg
  * harbour/contrib/hbqt/TQWebView.prg
  * harbour/contrib/hbqt/TQWidget.prg

  * harbour/contrib/hbqt/tests/demoqt.prg

    + Added new classes, fixed some default parameter issues.
    + Added QListView() and managed how to use QStringList() class.

2009-06-07 19:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support to redefine .prg level __ARCH*__ and __*_ENDIAN__
      macros in cross build situations. [ This doesn't seem to be
      a practical problem, but cross builds targeting *nix systems
      aren't covered and they probably won't be. ]
      Anyway, I wouldn't recommend using these macros in .prg code,
      as they won't work as expected when creating universal binaries
      (f.e. on darwin).

2009-06-07 15:43 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Documented HB_*_STATIC options.

  * external/sqlite3/sqlite3.c
  * external/sqlite3/sqlite3.h
    * sqlite upgraded to 3.6.14.2 (from 3.6.14.1)

2009-06-07 14:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/Makefile
  * contrib/hbqt/tests/hbqt.hbc
  * contrib/gtqtc/Makefile
  * contrib/gtqtc/tests/gtqtc.hbc
    + If HB_QT_STATIC is set, Harbour build will automatically
      create a hbqt lib to be used with static qt libs.
      The static version of hbqt is called hbqts to allow
      it to exist in parallel with default dynamic version.

  * contrib/hbqt/tests/hbqt.hbc
    + Added two Windows system libs which are needed for
      some QT parts (path/dir handling), but aren't part of
      default hbmk2 Windows system lib list.

  * contrib/gtalleg/Makefile
  * contrib/gtalleg/tests/gtalleg.hbc
    + If HB_ALLEGRO_STATIC is set, Harbour build will automatically
      create a gtalleg lib to be used with static allegro libs.
      The static version of gtalleg is called gtallegs to allow
      it to exist in parallel with default dynamic version.

2009-06-07 13:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/tests/hbqt.hbc
  * contrib/gtqtc/tests/gtqtc.hbc
    + Added static linking option for Windows. It can be
      enabled by setting envvar HB_QT_STATIC.
      (needs latest hbmk2)

  - contrib/gtalleg/tests/gtallegs.hbc
  - contrib/gtalleg/tests/gtallegd.hbc
  + contrib/gtalleg/tests/gtalleg.hbc
    + Merged separate static/shared config files into one.
      Static mode can now be enabled by setting evvar HB_ALLEGRO_STATIC.
      (needs latest hbmk2)

2009-06-07 11:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.prg
    + Added experimental pure C build mode. Activate with -hbc
      (cmdline only). In this mode Harbour libs won't be linked,
      .prgs won't be compiled, language files won't be handled,
      options will be treatet as C compiler ones, and obviously
      some other Harbour related hbmk2 options will be ignored.
    * Minor translation update.

2009-06-06 19:01 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile_gen

  * harbour/contrib/hbqt/hbqt_qabstractitemview.cpp
  + harbour/contrib/hbqt/hbqt_qdirmodel.cpp

  * harbour/contrib/hbqt/hbqt.h

  * harbour/contrib/hbqt/generator/hbqtgen.prg

  * harbour/contrib/hbqt/tests/demoqt.prg

  * harbour/contrib/hbqt/TQAbstractItemView.prg
  + harbour/contrib/hbqt/TQDirModel.prg

  * harbour/contrib/hbqt/qth/QAbstractItemView.qth
  + harbour/contrib/hbqt/qth/QDirModel.qth

  * harbour/contrib/hbqt/generator/qt45.qtp

    + Added one more class and fixed another.

    /*
        Now demoqt demonstrates a lot of controls.
        Central widget is added to the main window to host all other controls.

        Main window hosts
             QMenuBar()
             QToolBar()
             QStatusBar()
             QWidget() - central == drawingArea of XbpDialog() in Xbase++.

        :drawingArea hosts:
             QTableWidget() | QTableWidgetItem()
             QPushButton()
             QLabel()
             QProgressBar()
             QTabWidget()

        :tabs host:
             QTreeView()
             QLineEdit()
             QComboBox()
             QCheckBox()
             QRadioButton()
             QSpinBox()
             QTextBox()

        Feel free to play with the ToolBars. You can drag and dock them to
        any corners. Push button executes a message box. Tool buttons reacts
        to events and show up tooltips.

        As a whole, I am truely convinced, that within new couple of weeks
        Xbase++ compatible XbpParts will be a reality.
    */

2009-06-07 02:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
  + bin/hb-mkimp.bat
    + Separated import lib generation from postinst.bat into
      a separate batch file. This file can be run by users,
      and it will be included in binary builds to help users.
      HB_COMPILER, HB_LIB_INSTALL and HB_DIR_* envvars have
      to be set to make it work.
    ; TODO: Add documentation to INSTALL.

  * utils/hbmk2/hbmk2.prg
    + Recognizing SVN repositories in a rare configuration.

2009-06-06 13:15 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/tests/demoqt.prg
    + Added demo code QTableWidget() and QTableWidgetItem() classes
      to show a grid control submitted by CarozoDeQuilmes.

2009-06-06 11:59 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/hbqt_qabstractitemmodel.cpp
  * harbour/contrib/hbqt/hbqt_qradialgradient.cpp
  * harbour/contrib/hbqt/hbqt_qstyleditemdelegate.cpp
  * harbour/contrib/hbqt/hbqt_qstyleoption.cpp
  * harbour/contrib/hbqt/hbqt_qtextinlineobject.cpp
  + harbour/contrib/hbqt/hbqt_qtextobject.cpp

  * harbour/contrib/hbqt/hbqt.h

  * harbour/contrib/hbqt/generator/hbqtgen.prg

  * harbour/contrib/hbqt/tests/demoqt.prg

  + harbour/contrib/hbqt/TQAbstractItemModel.prg
  + harbour/contrib/hbqt/TQTextObject.prg

  + harbour/contrib/hbqt/qth/QAbstractItemModel.qth
  * harbour/contrib/hbqt/qth/QRadialGradient.qth
  * harbour/contrib/hbqt/qth/QStyledItemDelegate.qth
  * harbour/contrib/hbqt/qth/QStyleOption.qth
  * harbour/contrib/hbqt/qth/QTextInlineObject.qth
  + harbour/contrib/hbqt/qth/QTextObject.qth

  * harbour/contrib/hbqt/generator/qt45.qtp

    ! Added two classes and synchronized others.
      All cross references are resolved and now hbqt.lib is self contained.

    /*
        Basic components to develop GUI platform is over.

        Please submit any code you have developed based on hbqt.lib
        so that enthusiasm about it could be generated. Don't be shy about
        the quality of the code, many are there to set it right.

        Now onwards I will be concentrating on Xbase++ Parts implementation.
    */

2009-06-06 10:33 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/hbqt_qstyleoptionslider.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionspinbox.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiontab.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiontabbarbase.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiontabwidgetframe.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiontitlebar.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiontoolbar.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiontoolbox.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiontoolbutton.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionviewitem.cpp
  + harbour/contrib/hbqt/hbqt_qstylepainter.cpp

  * harbour/contrib/hbqt/hbqt.h

  * harbour/contrib/hbqt/generator/hbqtgen.prg

  + harbour/contrib/hbqt/TQStyleOptionSlider.prg
  + harbour/contrib/hbqt/TQStyleOptionSpinBox.prg
  + harbour/contrib/hbqt/TQStyleOptionTab.prg
  + harbour/contrib/hbqt/TQStyleOptionTabBarBase.prg
  + harbour/contrib/hbqt/TQStyleOptionTabWidgetFrame.prg
  + harbour/contrib/hbqt/TQStyleOptionTitleBar.prg
  + harbour/contrib/hbqt/TQStyleOptionToolBar.prg
  + harbour/contrib/hbqt/TQStyleOptionToolBox.prg
  + harbour/contrib/hbqt/TQStyleOptionToolButton.prg
  + harbour/contrib/hbqt/TQStyleOptionViewItem.prg
  + harbour/contrib/hbqt/TQStylePainter.prg

  + harbour/contrib/hbqt/qth/QStyleOptionSlider.qth
  + harbour/contrib/hbqt/qth/QStyleOptionSpinBox.qth
  + harbour/contrib/hbqt/qth/QStyleOptionTab.qth
  + harbour/contrib/hbqt/qth/QStyleOptionTabBarBase.qth
  + harbour/contrib/hbqt/qth/QStyleOptionTabWidgetFrame.qth
  + harbour/contrib/hbqt/qth/QStyleOptionTitleBar.qth
  + harbour/contrib/hbqt/qth/QStyleOptionToolBar.qth
  + harbour/contrib/hbqt/qth/QStyleOptionToolBox.qth
  + harbour/contrib/hbqt/qth/QStyleOptionToolButton.qth
  + harbour/contrib/hbqt/qth/QStyleOptionViewItem.qth
  + harbour/contrib/hbqt/qth/QStylePainter.qth

  * harbour/contrib/hbqt/generator/qt45.qtp

    + Added more classes - count == 179

2009-06-06 16:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Made clear that GNU Make installation isn't needed for mingw
      targets.

  * include/hbextern.ch
    + Added HB_EXECMSG().

  * contrib/xhb/tests/xhb.hbc
    + Added hbct, hbtip and hbwin (on Windows) to emulate xhb, which
      has these libs as part of the core.

  * utils/hbmk2/hbmk2.prg
    + Environment variables can not be used as filters.
      If an envvar with the name of the filter exists and it's
      value isn't "0" or "no", it's considered a match.
    - Deleted -EHsc-/-EHsc/-EHs-c- switch variant from msvc C flag list.
      This was copied from Harbour Make files, and most probably they
      aren't necessary even there, especially since they are set
      inconsistently (differently) for depending on msvc compiler
      version and win/wce target. These flags deal with exception
      handling, so I doubt any core code (with the exception of hbqt)
      would need it.
    + Added some level of internal support for build modes
      (release, debug, fulldebug) and unicode/ascii selection. Added
      to TODO anyway, will continue with them in the future.

2009-06-06 14:31 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
    + added hb_vmProc() function - it's hb_vmDo() but without hack to send
      messages.
      TODO: remove from hb_vmDo() support for messages so it can replace
            new hb_vmProc() function or if we really need such mixed common
            execution function then replace in HVM calls to hb_vmDo() with
            hb_vmProc()

  * harbour/source/vm/classes.c
    * replaced hb_vmFunction() call by hb_vmDo()

  * harbour/source/vm/arrays.c
  * harbour/source/vm/thread.c
    ! cleaned hb_vmDo()/hb_vmSend() usage

  * harbour/source/vm/eval.c
    ! replaced hb_vmFunction() calls by hb_vmSend()
    + added .prg function hb_execMsg( <sFuncSym>, <object>, [<params,...>] )
      which executes <sFuncSym> with <object> set as QSELF() value.
      Mindaugas, you can use it in your HashObject to execute functions
      like pseudo messages.

2009-06-06 11:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Changed directory name for embedded mingwarm tools to
      'mingwarm' from 'mingwce'.

2009-06-06 11:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added autodetection for recently released (version 0.55) mingw32ce
      packages.According to their homepage, they use slightly different
      names for packages, which is now recognized by hbmk2.
      I didn't test it though on Linux, and there is no Windows binary
      release yet for this new version.

2009-06-06 01:17 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/hbqt_qstyleditemdelegate.cpp
  + harbour/contrib/hbqt/hbqt_qstylehintreturn.cpp
  + harbour/contrib/hbqt/hbqt_qstylehintreturnmask.cpp
  + harbour/contrib/hbqt/hbqt_qstylehintreturnvariant.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoption.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionbutton.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptioncombobox.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptioncomplex.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiondockwidget.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionfocusrect.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionframe.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptiongroupbox.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionheader.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionmenuitem.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionprogressbar.cpp
  + harbour/contrib/hbqt/hbqt_qstyleoptionsizegrip.cpp
  + harbour/contrib/hbqt/hbqt.h

  * harbour/contrib/hbqt/generator/hbqtgen.prg
    ! Added new section <VARIABLES></VARIABLES>
      Some classes allow access to variables directly just like properties.

  + harbour/contrib/hbqt/TQStyledItemDelegate.prg
  + harbour/contrib/hbqt/TQStyleHintReturn.prg
  + harbour/contrib/hbqt/TQStyleHintReturnMask.prg
  + harbour/contrib/hbqt/TQStyleHintReturnVariant.prg
  + harbour/contrib/hbqt/TQStyleOption.prg
  + harbour/contrib/hbqt/TQStyleOptionButton.prg
  + harbour/contrib/hbqt/TQStyleOptionComboBox.prg
  + harbour/contrib/hbqt/TQStyleOptionComplex.prg
  + harbour/contrib/hbqt/TQStyleOptionDockWidget.prg
  + harbour/contrib/hbqt/TQStyleOptionFocusRect.prg
  + harbour/contrib/hbqt/TQStyleOptionFrame.prg
  + harbour/contrib/hbqt/TQStyleOptionGroupBox.prg
  + harbour/contrib/hbqt/TQStyleOptionHeader.prg
  + harbour/contrib/hbqt/TQStyleOptionMenuItem.prg
  + harbour/contrib/hbqt/TQStyleOptionProgressBar.prg
  + harbour/contrib/hbqt/TQStyleOptionSizeGrip.prg

  + harbour/contrib/hbqt/qth/QStyledItemDelegate.qth
  + harbour/contrib/hbqt/qth/QStyleHintReturn.qth
  + harbour/contrib/hbqt/qth/QStyleHintReturnMask.qth
  + harbour/contrib/hbqt/qth/QStyleHintReturnVariant.qth
  + harbour/contrib/hbqt/qth/QStyleOption.qth
  + harbour/contrib/hbqt/qth/QStyleOptionButton.qth
  + harbour/contrib/hbqt/qth/QStyleOptionComboBox.qth
  + harbour/contrib/hbqt/qth/QStyleOptionComplex.qth
  + harbour/contrib/hbqt/qth/QStyleOptionDockWidget.qth
  + harbour/contrib/hbqt/qth/QStyleOptionFocusRect.qth
  + harbour/contrib/hbqt/qth/QStyleOptionFrame.qth
  + harbour/contrib/hbqt/qth/QStyleOptionGroupBox.qth
  + harbour/contrib/hbqt/qth/QStyleOptionHeader.qth
  + harbour/contrib/hbqt/qth/QStyleOptionMenuItem.qth
  + harbour/contrib/hbqt/qth/QStyleOptionProgressBar.qth
  + harbour/contrib/hbqt/qth/QStyleOptionSizeGrip.qth

  * harbour/contrib/hbqt/generator/qt45.qtp

    + Added some new classes - count == 171.

2009-06-06 10:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added filter support for input files without extension.
    * Reverted prev change because it didn't solve any problems
      as *.*/* input masks aren't expanded anyway on non-*nix
      shells and it would create several problems to support it.
      Explicitly added .ch and other files are probably done with
      an intent, so there is no point in filtering them (well
      except for *nix shells, but I don't deal with this issue
      for now). It isn't a good idea to pass *.*/* to hbmk2
      anyway as it may pickup everything in the way.

2009-06-06 09:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/hbqt.h
  * contrib/hbqt/qth/QConicalGradient.qth
  * contrib/hbqt/qth/QLinearGradient.qth
  * contrib/hbqt/hbqt_qconicalgradient.cpp
  * contrib/hbqt/hbqt_qlineargradient.cpp
    ! Fixed two missing function name from .qth template.
      (the ones reported on the dev list)

  - contrib/hbqt/generator/rebuild_hbqt.bat
    - Deleted, it's no longer needed.
      Enough to build hbqtgen with:
         hbmk2 hbqtgen.prg
      Then run it:
         hbqtgen

2009-06-06 09:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/errintlo.c
    ! fixed GPF inside internal error handler for errors without default
      description and error codes not in the form 9000 + <n>

  * harbour/source/rtl/errapiu.c
    * minor formatting

2009-06-06 09:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Input files with following extensions won't be considered
      .prg source files anymore: .ch, .h, .hpp, .hxx.
      This means *.* input mask can now be used more freely.
      I cannot imagine a situation where this could be limitation,
      but if someone has any concern with this, please tell.
    ! Minor typo in code.

2009-06-05 18:46 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/hbqt_qcolor.cpp
  + harbour/contrib/hbqt/hbqt_qconicalgradient.cpp
  + harbour/contrib/hbqt/hbqt_qgradient.cpp
  + harbour/contrib/hbqt/hbqt_qimage.cpp
  + harbour/contrib/hbqt/hbqt_qimagereader.cpp
  + harbour/contrib/hbqt/hbqt_qimagewriter.cpp
  + harbour/contrib/hbqt/hbqt_qline.cpp
  + harbour/contrib/hbqt/hbqt_qlineargradient.cpp
  + harbour/contrib/hbqt/hbqt_qpalette.cpp
  + harbour/contrib/hbqt/hbqt_qpicture.cpp
  + harbour/contrib/hbqt/hbqt_qradialgradient.cpp
  + harbour/contrib/hbqt/hbqt_qresource.cpp
  + harbour/contrib/hbqt/hbqt_qsizepolicy.cpp
  + harbour/contrib/hbqt/hbqt_qsound.cpp
  + harbour/contrib/hbqt/hbqt_qstandarditem.cpp
  + harbour/contrib/hbqt/hbqt_qstandarditemmodel.cpp

  * harbour/contrib/hbqt/hbqt.h

  * harbour/contrib/hbqt/generator/hbqtgen.prg

  + harbour/contrib/hbqt/TQColor.prg
  + harbour/contrib/hbqt/TQConicalGradient.prg
  + harbour/contrib/hbqt/TQGradient.prg
  + harbour/contrib/hbqt/TQImage.prg
  + harbour/contrib/hbqt/TQImageReader.prg
  + harbour/contrib/hbqt/TQImageWriter.prg
  + harbour/contrib/hbqt/TQLine.prg
  + harbour/contrib/hbqt/TQLinearGradient.prg
  + harbour/contrib/hbqt/TQPalette.prg
  + harbour/contrib/hbqt/TQPicture.prg
  + harbour/contrib/hbqt/TQRadialGradient.prg
  + harbour/contrib/hbqt/TQResource.prg
  + harbour/contrib/hbqt/TQSizePolicy.prg
  + harbour/contrib/hbqt/TQSound.prg
  + harbour/contrib/hbqt/TQStandardItem.prg
  + harbour/contrib/hbqt/TQStandardItemModel.prg

  * harbour/contrib/hbqt/qth/QColor.qth
  + harbour/contrib/hbqt/qth/QConicalGradient.qth
  + harbour/contrib/hbqt/qth/QGradient.qth
  + harbour/contrib/hbqt/qth/QImage.qth
  + harbour/contrib/hbqt/qth/QImageReader.qth
  + harbour/contrib/hbqt/qth/QImageWriter.qth
  + harbour/contrib/hbqt/qth/QLine.qth
  + harbour/contrib/hbqt/qth/QLinearGradient.qth
  + harbour/contrib/hbqt/qth/QPalette.qth
  + harbour/contrib/hbqt/qth/QPicture.qth
  + harbour/contrib/hbqt/qth/QRadialGradient.qth
  + harbour/contrib/hbqt/qth/QResource.qth
  + harbour/contrib/hbqt/qth/QSizePolicy.qth
  + harbour/contrib/hbqt/qth/QSound.qth
  + harbour/contrib/hbqt/qth/QStandardItem.qth
  + harbour/contrib/hbqt/qth/QStandardItemModel.qth

  * harbour/contrib/hbqt/generator/qt45.qtp

    + Added few new classes. With this commit number of classes
      have reached 153.

2009-06-06 02:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
    ! fixed stupid typo in C else block scope which caused false alarm
      about corrupted index. Many thanks to Vitor Mangabeira for information
      and self contain example.

2009-06-06 01:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    ! Applied version number change to this file, too.

  * contrib/xpp/xpp.ch
    + Added minor tweak to not confuse non-Harbour compilers
      if included.

  * contrib/rddsql/sddfb/fbirddd.c
  * contrib/rddsql/sddpg/pgsqldd.c
    ! Warnings fixed.

  * contrib/hbmysql/mysql.c
    ! Fixed wrong type for file handle, causing problems for x64 builds.

  * contrib/hbnf/descendn.c
    ! Removed 'auto' keyword which is no longer recognized by
      MSVC 2010.

  * bin/postinst.bat
    + Creating implibs for msvc64/mingw64 platforms where 3rd
      parties support it. (libcurl, firebird, mysql)

  * contrib/gtwvg/wvggui.h
    ! Fixed to compile with MSVS 2010. Thanks Pritpal.

  * contrib/gtwvg/wvggui.c
    * Reenabled for MSVS 2010 after applying fix.

2009-06-05 23:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + config/mingw32-make.exe
    + Added GNU Make (Windows, 32-bit) executable (size: 173KB),
      this is the version recommended by INSTALL, found here:
      https://sourceforge.net/project/showfiles.php?group_id=2435&package_id=23918

  * make_gnu.bat
    * Modified to utilize above GNU Make binary for Harbour
      Windows/WinCE builds in order to make one thing less to
      worry about for users wishing to build from source.
      From this point the only two requirements for building
      Harbour are a C compiler and the source itself. Much less
      things to go/get wrong. If this works out good, we can
      remove a few instructions from INSTALL.
      If someone wants to override supplied version (not very
      good idea, but who knows) the supplied version has to be
      replaced by custom version.
      In case group thinks it's onorthodox or inappropriate
      (or outright illegal) to have such binaries stored in
      our repository, please shout, it's not yet late to undo
      this change.
      Also please test.

  * include/hbsetup.h
    + Added MSVS 2010 version information.

  * contrib/gtwvg/wvggui.c
    - Temporarily disabled whole file for MSVS 2010 due to lots
      of compilation errors, similar to the ones recently seen
      with letdb. (errors posted on the list)

2009-06-05 20:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_prn1.c
    ! Fixed recently introduced editing mistake which
      enabled it for WinCE.

  * contrib/hbcrypt/sha1.c
    ! Fixed poccarm warning (octal notation changed to hexa).

2009-06-05 20:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * debian/copyright
    ! Synced with COPYING.

  * contrib/gtwvg/gtwvg.c
  * source/rtl/gtwvt/gtwvt.c
    ! Fixed for WinCE, lately added feature where window is
      maximized when double clicking on caption.

  * contrib/hbwin/wapi_winbase.c
    ! Fixed previous commit for WinCE.

  * contrib/hbwin/wapi_winuser.c
    % Optimized WAPI_LOADBITMAP() (commented).

2009-06-05 20:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % Optimized filter processing loop to use FOR EACH.

  * contrib/hbwin/wapi_winbase.c
    + Added WAPI_SETPROCESSWORKINGSETSIZE().

2009-06-05 19:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/tests/hbqt.hbc
  * contrib/gtqtc/tests/gtqtc.hbc
    ! Adjusted Linux QT lib names.
      Thanks for the report to Bruno Luciani.

2009-06-05 19:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/wapi_winbase.c
    + Added:
      WAPI_GETCURRENTPROCESS()
      WAPI_GETCURRENTPROCESSID()
      WAPI_GETCURRENTTHREAD()

2009-06-05 18:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/Makefile
  + contrib/xpp
  + contrib/xpp/Makefile
  + contrib/xpp/xpp.ch
    + Added startup of an Xbase++ dialect lib (similar to xhb).
      The idea is that these will hold all Xbase++ specific functions
      with an xpp_*() prefix, and they will eventually be moved
      inside the core into source/dialect/xpp lib, so that dialect
      selection can be better integrated into Harbour compiler tools.
      Currently it holds one header only.

  + utils/hbmk2/examples/oohg.hbc
    + Added oohg hbmk2 config file. (untested)

  * utils/hbmk2/examples/fwh.hbc
  * utils/hbmk2/examples/hmg.hbc
  * utils/hbmk2/examples/hwgui.hbc
    % Minor simplification.

2009-06-05 18:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/wapi_winuser.c
    + Added WAPI_CREATEWINDOWEX() pure Windows API wrapper.

2009-06-05 17:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * -debugstub internal switch will now echo the stub source
      to stdout instead of keeping the temp file around.

2009-06-05 17:04 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdefs.h
    * cleanup in some declarations

2009-06-05 16:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + examples/hbmake
  + examples/hbmake/hbmake.hbp
  + examples/hbmake/hbmakec.c
  + examples/hbmake/hbmake.prg
    + Readded old and unsupported hbmake for convenience to
      those users who still use it. This tool won't work in
      the next (to 2.0.x) major release of Harbour, so please
      take some time and check hbmk2, its successor.
      You can build hbmake with this command:
         'hbmk2 hbmake.hbp'
      It will be copied to Harbour binary directory automatically.

2009-06-05 16:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added macros: ${hb_bin}, ${hb_lib}, ${hb_dyn}, ${hb_inc}.
      Representing HB_*_INSTALL dirs. They can be useful in
      -instpath=, if someone wants to have a copy of the target in
      a Harbour dir for easy access: -instpath=${hb_lib}/

2009-06-05 15:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + In -rebuild mode now targets will be deleted by hbmk2
      before calling compilers to create them. This will resolve
      some potential errors when compiler tools get confused about
      an existing file with the same name but perhaps created with
      another compiler. It will also make sure no attempts will be
      made to create an incremental build. If target cannot be
      deleted, a warning message will be shown by hbmk2.

  * harbour-win-spec
  * harbour-wce-spec
  * harbour.spec
  * mpkg_win.bat
  * include/hbver.h
  * doc/whatsnew.txt
  * source/vm/maindllp.c
  * bin/hb-mkdyn.bat [MISSED FILE ADDED HERE LATER]
    * 1.1.0dev -> 2.0.0dev
    ; Preparation for next rc1.

  * INSTALL
    * Long lines reflowed.

2009-06-05 10:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * mpkg_win.nsi
    * sf.net links corrected, https seems to need login.

2009-06-05 10:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    * minor cleanup
  * harbour/source/hbzlib/crc32.c
    * casting

2009-06-05 09:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Now if hbmk2 is renamed to a name which ends with '10',
      like 'hbmk210', it will automatically function in -hb10
      (Harbour 1.0.x) compatibility mode.
    % Don't add doubly defined include paths or include try paths.
    * Minor change in BCC system lib ordering.

2009-06-05 07:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * examples/terminal/trm_cli.prg
  * examples/terminal/terminal.prg
  * examples/terminal/trm_srv.prg
  * examples/terminal/trm_app.prg
    ! Fixed 100% CPU utiliziation of server.
    * NTRIM()/LTrim(Str()) -> hb_ntos()

    ; After initial testing with real app, I've found following
      issues with this solution compared to an "ideal" GTNET
      implementation. Anyhow it's a good start and nice to see
      it working.
      TOFIX: SetMode(), mouse, shift modifier, ecryption,
             incremental screen updates, port passing,
             GTWVG dependence, Windows dependence,
             ctwin support, other GT status changes
             (HB_GTI_*, like titlebar, etc), file transfer,
             remote file launch support, printing, cp
             conversions?, tone() support, direct GT
             driver instead of polling.

2009-06-05 06:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * external/libpng/LICENSE
  * external/libpng/png.c
  * external/libpng/png.h
  * external/libpng/pngconf.h
  * external/libpng/pngerror.c
  * external/libpng/pngget.c
  * external/libpng/pngmem.c
  * external/libpng/pngpread.c
  * external/libpng/pngread.c
  * external/libpng/pngrio.c
  * external/libpng/pngrtran.c
  * external/libpng/pngrutil.c
  * external/libpng/pngset.c
  * external/libpng/pngtrans.c
  * external/libpng/pngwio.c
  * external/libpng/pngwrite.c
  * external/libpng/pngwtran.c
  * external/libpng/pngwutil.c
  - external/libpng/pngtest.c
    * Updated to 1.2.37 (from 1.2.36). Quite a lot of formatting,
      plus fix to security fix in previous update.
    - Removed one unnecessary file.

2009-06-05 06:40 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Removed 'not recommended' text to not hurt any feelings.
    + Added hint to TROUBLESHOOTING section how to clear PATH
      with a simple and safe method.

  * utils/hbmk2/hbmk2.prg
    * Internal variable name change.

  * ChangeLog
    ! Fixed terminology in my prev entry (embedding -> nesting)

2009-06-05 06:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbclass.ch
    + extended support for xbase++ compatible method declaration:
         [SYNC] METHOD <methodName1>[([<params>])] ;
                       [ , <methodNameN>[([<params>])] ]

  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
  * harbour/source/vm/classes.c
    + added alternative support for SYNC method which does not use
      sync mutexes. The old method is still present. I'll remove it
      when xbase++ users confirm that the new one exactly emulates
      xbase++ behavior.

  * harbour/source/vm/classes.c
  * harbour/source/rtl/tthreadx.prg
    * switch to alternative SYNC method implementation which seems to be
      xbase++ compatible - please test
    ! fixed missing thread interrupt in recent modification for ::setInterval

2009-06-04 23:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for hbcs= lines in .hbc files. This means
      they can now be nested. Filters and macros are accepted,
      extension optional, .hbc will be added.
    ! Fixed wrongly calculated nesting level, counting now made
      simpler.
    + Added warning message if nesting level reached the maximum,
      instead of just ignoring the to be nested files.

  * COPYING
    + Added utils/hbmk2 to the COMPILER LICENSE section.
    - Deleted OLD HARBOUR LICENSE section.

  * source/lang/msgeu.c
  * source/lang/msgsr852.c
  * source/lang/msgsriso.c
  * source/lang/msgsliso.c
  * source/lang/msgslwin.c
  * source/lang/msgsl437.c
  * source/lang/msgsl852.c
    * Changed copyright to new Harbour license by group (silent)
      consent. Copyright holders kept intact, if that's a problem
      for anyone in the future, we shall delete these files from
      the repository and retranslate (or do whatever else we
      decide), notice however that msgsr*.c and msgsl*.c files
      were only containing translations for month and day names.
      msgeu.c contained translation work spanning to 40 strings.

  * source/compiler/hbusage.c
    * Updated Lorenzo Fiorini's e-mail address in credit list.

2009-06-04 17:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Change section title from:
      HOW TO BUILD AND INSTALL HARBOUR
      to
      HOW TO BUILD AND INSTALL HARBOUR FROM SOURCE
    + Added sentence which hopefully will make sure users
      understand that 'msys' isn't required (not even recommended)
      to build Harbour with MinGW. It's included because it's
      supported and possible and may give some benefit for some
      users.

2009-06-04 17:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/hbwin.ch
    + Added some constants.
      (borrowed from xhb)

2009-06-04 15:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to make pos= files relative to .hbc container location.
    ! Fixed to not macro process pos= entries, because it breaks
      ${lng} macros.
    + Added -debugi18n messages for .po update.

  * contrib/xhb/Makefile
  + contrib/xhb/xhberr.c
    + Added SETUNHANDLEDEXCEPTIONFILTER() as a dummy function,
      actual code is commented and won't work in Harbour.
      (borrowed from xhb)

2009-06-04 14:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/Makefile
  + contrib/xhb/xhbsave.c
  + contrib/xhb/xhbtrim.c
    + Added "extended" versions of some core functions,
      supporting some extra parameters formerly available
      in Harbour when compiled with (now removed) HB_EXTENSION
      option:
      XHB_TRIM(), XHB_RTRIM(), XHB_ALLTRIM(),
      XHB_SAVESCREEN(), XHB_RESTSCREEN().

2009-06-04 13:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/hbcompat.ch
    + Added INET and HASH function name conversion from
      Harbour to xhb.

2009-06-04 13:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for macros (including envvars) for .hbc references.
      F.e.: hbmk2 [...] ${MYLIB_DIR}/mylib.hbc [...]

2009-06-04 09:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/hbusage.c
    + Added contributors present on the crew list only.
      Also added e-mail addresses from that time (year 1999).

2009-06-03 23:29 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile_gen
  * harbour/contrib/hbqt/qth/QBrush.qth
  * harbour/contrib/hbqt/TQBrush.prg
    + Added QBrush class.

2009-06-03 21:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added feature to automatically process make script
      with the name hbmk.hbm if found in local directory.
      This will be processed before the first command line
      option.
    ! -quiet switch wasn't effective on embedded Harbour
      compiler command line displayed in case of error.

2009-06-03 13:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    ! Fixed import lib names for mingw where double 'lib' prefix
      is needed for transparent functionality, but wasn't generated.

2009-06-03 13:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddsql/sddmy/tests/sddmy.hbc
    + Added libmysql to lib list.

2009-06-03 12:20 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/langapi.prg
  * tests/rto_get.prg
  * tests/lnlenli2.prg
  * tests/fortest.prg
  * tests/memory.prg
  * tests/rto_tb.prg
  * tests/statinit.prg
  * tests/memfile.prg
  * tests/vec1.prg
  * tests/lnlenli1.prg
  * doc/cmdline.txt
  * doc/en-EN/hb_date.txt
  * doc/en-EN/terminal.txt
  * doc/en-EN/hb_apiln.txt
  * doc/en-EN/hb_compa.txt
  * doc/howtosvn.txt
  * INSTALL
  * bin/postinst.cmd
  * bin/postinst.bat
  * include/hbvmpub.h
  * include/vm.api
  * include/extend.api
  * include/item.api
  * include/hbapilng.h
  * include/rdd.api
  * include/gt.api
  * include/hbundoc.api
  * include/error.api
  * include/hbsetup.ch
  * include/hblang.ch
  * include/hbsetup.h
  * include/hbapigt.h
  * include/hbmemory.ch
  * include/clipdefs.h
  * include/hboo.ch
  * include/hbver.ch
  * include/hbzlib.h
  * include/fm.api
  * include/hbdate.h
  * include/extend.h
  * ChangeLog
  * harbour.spec
  * make_gnu.bat
  * make_gnu.sh
  * contrib/hbmysql/mysqlold.c
  * contrib/hbct/charmix.c
  * contrib/hbct/charevod.c
  * contrib/hbct/ctchksum.c
  * contrib/hbct/pos1.c
  * contrib/hbct/ctmisc.prg
  * contrib/hbct/ctcrypt.c
  * contrib/hbct/getinfo.prg
  * contrib/hbct/ctdummy.prg
  * contrib/hbct/readme.txt
  * contrib/hbodbc/odbcold.c
  * contrib/hbodbc/browodbc.prg
  * contrib/hbodbc/odbc.c
  * contrib/xhb/datesxhb.c
  * contrib/xhb/xhbat.c
  * contrib/xhb/xhbver.prg
  * contrib/xhb/xhbcomp.prg
  * contrib/hbziparc/hbziparc.prg
  * contrib/hbnf/iamidle.c
  * contrib/hbnf/fttext.c
  * contrib/hbnf/setkeys.c
  * contrib/hbnf/ftisprn.c
  * contrib/hbnf/setlastk.c
  * contrib/hbcurl/hbcurl.c
  * contrib/hbcurl/hbcurl.ch
  * contrib/hbcurl/hbcurlm.c
  * contrib/rddads/adsextrn.ch
  * contrib/rddads/adsmgmnt.c
  * contrib/hbmisc/strfmt.c
  * contrib/hbmisc/numtxthu.prg
  * contrib/hbmisc/doc/en/ht_str.txt
  * contrib/hbtip/utils.c
  * contrib/hbwin/win_reg.prg
  * contrib/hbwin/legacyc.c
  * contrib/hbwin/win_misc.c
  * contrib/hbwin/wapi_winbase.c
  * contrib/hbwin/wapi_winuser.c
  * contrib/hbwin/hbwinole.h
  * contrib/hbwin/hbwin.ch
  * contrib/hbwin/tests/testdll.prg
  * contrib/hbwin/tests/testole.prg
  * contrib/hbwin/win_regc.c
  * contrib/hbvpdf/hbvpsup.prg
  * contrib/hbssl/sslsess.c
  * contrib/hbssl/hbssl.h
  * contrib/hbssl/sslctx.c
  * contrib/hbssl/tests/test.prg
  * contrib/hbssl/ssl.c
  * contrib/hbssl/hbssl.ch
  * contrib/hbssl/sslciph.c
  * contrib/hbssl/sslrand.c
  * contrib/hbcrypt/tests/testsha2.prg
  * contrib/hbcrypt/hbsha2.c
  * contrib/hbcrypt/hbsha2hm.c
  * source/lang/msghuiso.c
  * source/lang/msghuwin.c
  * source/lang/msgro.c
  * source/lang/msghriso.c
  * source/lang/msghrwin.c
  * source/lang/msghe862.c
  * source/lang/msgcskam.c
  * source/lang/msgbgiso.c
  * source/lang/msgbgwin.c
  * source/lang/msgcs852.c
  * source/lang/msgfr.c
  * source/lang/msgis850.c
  * source/lang/msghu852.c
  * source/lang/msgbg866.c
  * source/lang/msghr852.c
  * source/lang/msghewin.c
  * source/lang/msghucwi.c
  * source/lang/msgcsiso.c
  * source/lang/msgcswin.c
  * source/vm/harbinit.prg
  * source/vm/asort.c
  * source/vm/itemapi.c
  * source/vm/hvm.c
  * source/vm/cmdarg.c
  * source/vm/arrays.c
  * source/vm/fm.c
  * source/vm/extrap.c
  * source/vm/proc.c
  * source/vm/memvars.c
  * source/vm/memvclip.c
  * source/vm/main.c
  * source/vm/eval.c
  * source/vm/extend.c
  * source/vm/set.c
  * source/vm/classes.c
  * source/common/hbver.c
  * source/common/hbfsapi.c
  * source/common/hbstr.c
  * source/common/hbdate.c
  * source/rtl/lennum.c
  * source/rtl/gtdos/gtdos.c
  * source/rtl/diskspac.c
  * source/rtl/setposbs.c
  * source/rtl/mousehb.c
  * source/rtl/console.c
  * source/rtl/fscopy.c
  * source/rtl/gtwin/gtwin.c
  * source/rtl/mousex.c
  * source/rtl/philes.c
  * source/rtl/adir.prg
  * source/rtl/oldclear.c
  * source/rtl/tbcolumn.prg
  * source/rtl/hbgtcore.c
  * source/rtl/fieldbl.prg
  * source/rtl/dirdrive.c
  * source/rtl/dateshb.c
  * source/rtl/philesx.c
  * source/rtl/fnsplit.c
  * source/rtl/box.c
  * source/rtl/datesx.c
  * source/rtl/filehb.c
  * source/rtl/hbfile.c
  * source/rtl/gtapiu.c
  * source/rtl/fstemp.c
  * source/rtl/accept.c
  * source/rtl/radiobhb.prg
  * source/rtl/tgethb.prg
  * source/rtl/oemansix.c
  * source/rtl/strmatch.c
  * source/rtl/readkey.prg
  * source/rtl/ampm.c
  * source/rtl/oemansi.c
  * source/rtl/xsavescr.c
  * source/rtl/gtstd/gtstd.c
  * source/rtl/gtsln/mousesln.c
  * source/rtl/disksphb.c
  * source/rtl/xhelp.c
  * source/rtl/getlist.prg
  * source/rtl/net.c
  * source/rtl/hbntos.c
  * source/rtl/tgetx.prg
  * source/rtl/samples.c
  * source/rtl/idlex.c
  * source/rtl/tget.prg
  * source/rtl/alert.prg
  * source/rtl/inkey.c
  * source/rtl/gete.c
  * source/rtl/readvar.prg
  * source/rtl/fkmax.c
  * source/rtl/strzero.c
  * source/rtl/typefilx.prg
  * source/rtl/langapi.c
  * source/rtl/word.c
  * source/rtl/gtcgi/gtcgi.c
  * source/rtl/fmhb.c
  * source/rtl/natmsgu.c
  * source/rtl/errapi.c
  * source/rtl/version.c
  * source/rtl/natmsg.c
  * source/rtl/mouse53.c
  * source/rtl/errint.c
  * source/rtl/fssize.c
  * source/rtl/errapiu.c
  * source/rtl/colorind.c
  * source/rtl/gt.c
  * source/rtl/gx.c
  * source/rtl/binnumx.c
  * source/rtl/mouseapi.c
  * source/rtl/soundex.c
  * source/rtl/memofile.c
  * source/rtl/errintlo.c
  * source/rtl/hbffind.c
  * source/rtl/gtapi.c
  * source/rtl/pad.c
  * source/rtl/hbstrsh.c
  * source/rtl/filesys.c
  * source/rtl/file.c
  * source/rtl/lang.c
  * source/rtl/val.c
  * source/rtl/isprint.c
  * source/rtl/tbrowse.prg
  * source/codepage/ucmacce.c
  * source/codepage/uc885910.c
  * source/codepage/ucmacice.c
  * source/codepage/uc885914.c
  * source/codepage/uc874.c
  * source/codepage/cpes850.c
  * source/codepage/uc1258.c
  * source/codepage/cphu852.c
  * source/codepage/cpsk852.c
  * source/codepage/uc424.c
  * source/codepage/ucmacrom.c
  * source/codepage/uc862.c
  * source/codepage/cpesisoc.c
  * source/codepage/cpbg866.c
  * source/codepage/cphu852s.c
  * source/codepage/uc8859_3.c
  * source/codepage/uc8859_7.c
  * source/codepage/ucmacgrk.c
  * source/codepage/uc037.c
  * source/codepage/cpesiso.c
  * source/codepage/uc885911.c
  * source/codepage/uc885915.c
  * source/codepage/uc875.c
  * source/codepage/uc1255.c
  * source/codepage/cphuisos.c
  * source/codepage/cpfriso.c
  * source/codepage/uc863.c
  * source/codepage/cpfrwin.c
  * source/codepage/uc1026.c
  * source/codepage/cpbgiso.c
  * source/codepage/uc8859_4.c
  * source/codepage/cpskkam.c
  * source/codepage/cpbgwin.c
  * source/codepage/uc8859_8.c
  * source/codepage/uc855.c
  * source/codepage/uc885916.c
  * source/codepage/cproiso.c
  * source/codepage/ucascii.c
  * source/codepage/cprowin.c
  * source/codepage/uc1256.c
  * source/codepage/ucatari.c
  * source/codepage/uc860.c
  * source/codepage/ucmaccyr.c
  * source/codepage/uc864.c
  * source/codepage/uc1006.c
  * source/codepage/cpsviso.c
  * source/codepage/uc8859_5.c
  * source/codepage/uc8859_9.c
  * source/codepage/cphuwins.c
  * source/codepage/ucnext.c
  * source/codepage/ucmactrk.c
  * source/codepage/uc885913.c
  * source/codepage/cphuiso.c
  * source/codepage/uc775.c
  * source/codepage/uc856.c
  * source/codepage/cpskiso.c
  * source/codepage/cphuwin.c
  * source/codepage/cpskwin.c
  * source/codepage/uc500.c
  * source/codepage/cpro852.c
  * source/codepage/uc861.c
  * source/codepage/uc865.c
  * source/codepage/cpitwin.c
  * source/codepage/uc869.c
  * source/codepage/uc8859_6.c
  * source/rdd/dbjoinx.prg
  * source/rdd/dbnubs.c
  * source/rdd/dblistx.prg
  * source/rdd/dbtotalx.prg
  * source/rdd/dbstruxx.prg
  * source/rdd/dbsortx.prg
  * source/rdd/dbupdatx.prg
  * source/rdd/dbfuncsx.prg
  * source/rdd/dbcmdhb.c
  * source/compiler/cmdcheck.c
  * source/compiler/hbusage.c
  * source/hbzlib/ChangeLog
  * utils/hbmk2/hbmk2.prg
  * utils/hbtest/rt_main.h
  * utils/hbtest/hbtest.prg
  * utils/hbtest/rt_main.ch
  * utils/hbtest/rt_trans.prg
  * utils/hbtest/rt_miscc.c
  * utils/hbtest/rt_math.prg
  * utils/hbtest/rt_hvm.prg
  * utils/hbtest/rt_hvma.prg
  * utils/hbtest/rt_misc.prg
  * utils/hbtest/make_c5x.bat
  * utils/hbtest/rt_init.ch
  * utils/hbtest/rt_str.prg
  * utils/hbtest/rt_stra.prg
  * utils/hbtest/rt_date.prg
  * utils/hbtest/rt_vars.ch
  * utils/hbtest/rt_array.prg
  * utils/hbtest/rt_file.prg
  * examples/pp/hbppcore.c
  * examples/superlib/hbsuper.prg
    * My e-mail address corrected to the same one using the
      same format in all files. Corrected mistyped ones.

2009-06-03 11:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * examples/rl/readme.txt
  + examples/rl/rl.dif
    + Added patch file for original RL sources to make them
      work with Harbour. The issue was with some longer than
      10 chars PRIVATE vars which were saved and restored from
      .mem files and they were cut to 10 chars on restore.

2009-06-03 11:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * examples/uhttpd/readme.txt
    * Minor update to instructions (really minor).

  - examples/uhttpd/modules/allmod.hbp
  + examples/uhttpd/modules.hbp
  * examples/uhttpd/readme.txt
    * Simplified build and maintainance of modules.
      Now simply with: 'hbmk2 modules.hbp'
      There is no need to update it when adding new modules.

2009-06-03 11:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * examples/rl/rl.hbp
    + Added options to create running rl executable.

  * source/rtl/achoice.prg
    ! Fixed strange and undocumented ACHOICE() calling convention
      used in RLDIALG.PRG from RL tool supplied with Clipper 5.x
      versions. In this case the user function is passed as 6th
      parameter.

  * INSTALL
    + Added note that when compiling for mingw without msys, sh.exe
      of msys musn't be in the PATH, otherwise the build won't work.

2009-06-03 12:30 UTC+0300 Alexander Kresin <alex at belacy.belgorod.su>
  * utils/hbformat/hbformat.prg
    ! Warning fixed.

2009-06-03 11:25 UTC+0300 Alexander Kresin <alex at belacy.belgorod.su>
  * utils/hbformat/hbformat.prg
    ! Bug fixed.

2009-06-03 08:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/idlex.c
    * Renamed XPP compatible SLEEP() function to XPP_SLEEP() to
      avoid collision with FlagShip and CLIP implementations.

  * contrib/hbwin/wapi_winbase.c
    + Added WAPI_SLEEP() function as a wrapper to Windows Sleep()
      function.

2009-06-03 07:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * One 'sf.net' URL changed to sourceforge.net.
      (for consistency only. both names work.)

  * utils/hbmk2/hbmk2.prg
    * Formatting.
    + Added comment to help screen on -l switch, that the <libname>
      mustn't contain path, extension and lib prefix.

2009-06-02 21:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/Makefile
  + source/rtl/idlex.c
    + Added Xbase++ compatible SLEEP() function.

2009-06-02 20:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbsetup.h
    + added HB_RESTRICT macro which can be used in some declarations
      to reach better code optimization

  * harbour/include/hbclass.ch
    + added support for Xbase++ compatible method declaration by:
         METHOD <methodName1> [ , <methodNameN> ]

  * harbour/source/rtl/tthreadx.prg
    * redirect parameters passed to ::new() method to ::init() method
      as emulation for class object new method
    + added basic support for ::setInterval in Xbase++ THREAD class

  * harbour/tests/speedtst.prg
    ! removed unused variable cDir

2009-06-02 19:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/Makefile
  + contrib/xhb/bkgtsks.c
    + Added background tasks functions. My only current goal
      was to make it compile under Harbour, plus did some
      optimizations along the way.
      (borrowed from xhb, work of Francesco Saverio Giudice)
    ; TODO: Adapt to Harbour: MT mode, Set() replacement,
            attach it to VM possibly without modifying
            the VM itself.

  * source/rtl/mlcfunc.c
    + Reenabled for default builds the parameter extension
      in memo functions (now guarded with HB_C52_STRICT).
      This breaks our effort to not introduce such extensions,
      but since was no better idea I've made an exception,
      but I personally still don't like it and this practice
      stays forbidden.
      Talking about the last parameter of these functions:
      MEMOLINE(), MLCOUNT(), MLPOS(), MLCTOPOS(), MPOSTOLC()

  * source/codepage/cphr437.c
  * source/codepage/cphr852.c
  * source/codepage/cphrwin.c
    * Fixed wrongly ordered accented chars.
    * Fixed missing accented chars in Windows CP.
    ; Submitted by Vladimir Miholic on sf.net.

  * contrib/xhb/xhb.h
    + Added hb_seconds() compatibility macro.

  * tests/speedtst.prg
    + Added SET DATE ANSI and SET CENTURY ON.

  * tests/Makefile
  + tests/brwpos.prg
    + Added TBrowse() :rowPos test submitted by Xavi to the list.

  * utils/hbmk2/hbmk2.hbp
  * utils/hbrun/hbrun.hbp
    % Minor opt to prev.

  * tests/rto_tb.prg
    + Added hb_SToD() compatibility function to make it link
      with xhb.
    + Added forced define of HB_COMPAT_C53 in xhb mode, but
      commented because it makes it RTE.

  * INSTALL
    ! Term changed to be consistent with rest of doc.

  * include/hbapi.h
    ! Typo in comment.

2009-06-01 19:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.hbp
  * utils/hbrun/hbrun.hbp
    % Don't include extra static libs in liblist for mingw targets.
      It links & works without it and the .exe is smaller.

2009-06-01 19:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * MinGW examples: version number increase.

  * utils/hbmk2/hbmk2.prg
    * Internal implementation to support multiple Harbour versions
      and dialects has been extended.
    + Added support for -hb10 cmdline switch to force Harbour 1.0.x
      compatibility mode. Experimental, please make tests with it,
      some more exotic features (like shared mode, cross compiling)
      may not work (or not as smoothly). Also added 'hb10' fiter name.
    ! Fixed to not use -Go C compiler option in xcc mode.
    ! Filter was returning constant failure due to internal
      RTE in certain situations since adding 'shared'/'static' filters.
    + Don't cover filter evaluation with BEGIN SEQUENCE to avoid
      such errors as above being kept hidden.

  * examples/superlib/readme.txt
  * examples/dbu/readme.txt
    + Made clear in text that we're needing 'GNU Patch' tool.

2009-06-01 13:41 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtgcuig.c
  * harbour/contrib/gtwvg/hbgtwvg.ch
    + GOBJ_OBJDATA_BLOCK . A useful addition to support resizing browser grids.

2009-06-01 14:20 UTC+0300 Alexander Kresin <alex at belacy.belgorod.su>
  * utils/hbformat/hbformat.prg
    ! Different fixes.

2009-05-31 13:41 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Some artifacts related with modal windows.
      Now it correctly calculates the width/height and initial row/col position.
      It now honors correctly parent GT's font size.

  * harbour/contrib/gtwvg/wvgdatar.prg
  * harbour/contrib/gtwvg/wvgscrlb.prg
  * harbour/contrib/gtwvg/wvgtabpg.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Numerics to Pointer fixes.

2009-05-31 19:40 UTC+0200 Petr Chornyj (myorg63 at mail.ru)
   * harbour/include/std.ch
    ! fixed typo of last commit

2009-05-31 17:30 UTC+0200 Petr Chornyj (myorg63 at mail.ru)
   * harbour/include/std.ch
    + added clause CODEPAGE for commands COPY, APPEND, SORT, TOTAL
   * harbour/source/rdd/dbdelim.prg
   * harbour/source/rdd/dbsdf.prg
    + added CODEPAGE support for __dbDelim, __dbSdf

2009-05-30 08:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fix to path normalizer. Last fix wasn't without side-effects
      for relative dirs.
    ! Fixed potential RTE in yesterday's *.hbp handling.

2009-05-30 01:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.pt_BR.po
  * utils/hbmk2/hbmk2.hu_HU.po
    * Update.

2009-05-30 01:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for wildcarded project specs:
      - This command will build each .hbp file found in current dir:
        > hbmk2 *.hbp
      - This command will build all .prg files in current dir,
        each into a separate executable as separate projects:
        > hbmk2 -target=*.prg

2009-05-30 01:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Minor update.

  * contrib/hbwin/axcore.c
    ! Fixed mingw64 warning.

  * examples/uhttpd/uhttpd.prg
    * Applied fix sent by Vailton to the list.

2009-05-29 18:40 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    ! Typo in hbformat command.

2009-05-29 18:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/dirstruc.txt
  * bin/postinst.bat
  * contrib/gtwvg/tests/demoxbp.prg
  * contrib/gtwvg/tests/demowvg.prg
  * examples/superlib/readme.txt
  * examples/uhttpd/uhttpdgd.hbp
  * examples/uhttpd/readme.txt
  * examples/terminal/trm_cli.hbp
  * examples/terminal/trm_srv.hbp
    ! Missing updates to prev changes.

2009-05-29 18:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - utils/hbformat/hbformat.hbm
  + utils/hbformat/hbformat.hbp
  - utils/hbmk2/hbmk2.hbm
  + utils/hbmk2/hbmk2.hbp
  - utils/hbtest/hbtest.hbm
  + utils/hbtest/hbtest.hbp
  - utils/hbi18n/hbi18n.hbm
  + utils/hbi18n/hbi18n.hbp
  - utils/hbrun/hbrun.hbm
  + utils/hbrun/hbrun.hbp
  - contrib/hbbtree/tests/test.hbm
  + contrib/hbbtree/tests/test.hbp
  - examples/pp/pp.hbm
  + examples/pp/pp.hbp
  - examples/hbdoc/hbdoc.hbm
  + examples/hbdoc/hbdoc.hbp
  - examples/superlib/hbsuper.hbm
  + examples/superlib/hbsuper.hbp
  - examples/hbsqlit2/hbsqlit2.hbm
  + examples/hbsqlit2/hbsqlit2.hbp
  - examples/hboleold/hboleold.hbm
  + examples/hboleold/hboleold.hbp
  - examples/hbapollo/hbapollo.hbm
  + examples/hbapollo/hbapollo.hbp
  - examples/pe/pe.hbm
  + examples/pe/pe.hbp
  - examples/guestbk/guestbk.hbm
  + examples/guestbk/guestbk.hbp
  - examples/hbgf/hbgfwin/hbgfwin.hbm
  + examples/hbgf/hbgfwin/hbgfwin.hbp
  - examples/hbgf/hbgfos2/hbgfos2.hbm
  + examples/hbgf/hbgfos2/hbgfos2.hbp
  - examples/hbgf/hbgfgtk/hbgfgtk.hbm
  + examples/hbgf/hbgfgtk/hbgfgtk.hbp
  + examples/uhttpd/uhttpd.hbp
  - examples/uhttpd/uhttpdgd.hbm
  + examples/uhttpd/uhttpdgd.hbp
  + examples/uhttpd/modules/allmod.hbp
  - examples/uhttpd/modules/allmod.hbm
  - examples/uhttpd/uhttpd.hbm
  - examples/dbu/dbu.hbm
  + examples/dbu/dbu.hbp
  - examples/hscript/hscript.hbm
  + examples/hscript/hscript.hbp
  - examples/hbwhat/hbwhat.hbm
  + examples/hbwhat/hbwhat.hbp
  - examples/rl/rl.hbm
  + examples/rl/rl.hbp
    * Renamed .hbm files to .hbp. So f.e. now it's possible to build
      multiple of these from one hbmk2 command and it's also more obvious
      that an .hbp files is a project (target).

2009-05-29 18:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.pt_BR.po
  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.hbm
  * utils/hbmk2/hbmk2.prg
  * utils/hbi18n/hbi18n.prg
    * hbi -> hbl (settling back, again sorry for the mess).

  * examples/terminal/trm_misc.c
    % Removed unused Windows function.

2009-05-29 18:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * examples/terminal/terminal.hbc
    ! hbwin not needed.

2009-05-29 18:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * examples/terminal/trm_cli.prg
  * examples/terminal/terminal.prg
  * examples/terminal/terminal.hbc
    ! xhb lib not needed anymore.

2009-05-29 18:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/gtwvg.h
    + Added extern for hb_wvt_GetStringAttrib(), hb_wvt_PutStringAttrib().
      Required by terminal example.

  * contrib/gtwvg/wvggui.h
    * Comment format. Synced with gtwvg.h.

  - examples/terminal/trm_server.prg
  + examples/terminal/trm_srv.prg
  - examples/terminal/trm_client.prg
  + examples/terminal/trm_cli.prg
  - examples/terminal/trm_appn.prg
  + examples/terminal/trm_app.prg
  - examples/terminal/trm_appn.hbm
  + examples/terminal/trm_app.hbp
  + examples/terminal/trm_misc.c
  + examples/terminal/trm_cli.hbp
  + examples/terminal/trm_srv.hbp
  * examples/terminal/terminal.prg
  * examples/terminal/terminal.hbc
  * examples/terminal/readme.txt
    ! Removed all inline stuff.
    ! Fixed problems with mixing C++/C objects due to
      inline and missing function declarations.
    % Windows only function replaced with RTL one.
    * Renamed *.hbm files to .hbp, so now it's easy to build
      the whole project with: hbmk2 trm_app.hbp trm_cli.hbp trm_srv.hbp
    ! Fixed hard coded local executable names + dirs.
    ! Synced client and server default ports.
    ; Now all of these tools build ok and they also work.

  * contrib/hbwin/legacyc.c
    ! Deleted recently added compat calls.
      (they are static in xhb and they collide with RTL names)

  * examples/hbgf/hbgfgtk/hbgfgtk.hbm
    ! Minor fix.

2009-05-29 17:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for filter keywords 'shared' and 'static'.

  * bin/postinst.bat
  * utils/hbmk2/hbmk2.hbm
  * utils/hbrun/hbrun.hbm
    * Moved extra libs required in shared mode to .hbm files.
    ! Fixed hbl= -> hbi=

2009-05-29 16:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fix to prev fix reported by Vailton. Could RTE when compiling .hrbs.
    + Added -hbraw switch which will make hbmk2 work like harbour compiler.
    + .hbp extension is also recognized when embedded.

  * tests/hbpptest/compare.bat
    ! Fixed long fn.

  * tests/bnch_win.bat
    ! Fix in comment.

2009-05-29 13:49 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added macro ${hb_work} which returns the builtin name
      for workdir base: '.hbmk' currently.

2009-05-29 12:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - examples/hbsuper
  + examples/superlib
    * Using original name.

2009-05-29 12:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/Makefile
    - Deleted commented 'examples' reference.

2009-05-29 12:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -echo= command line parameter. Similar to echo= in .hbc files.
    ! Fixed filename expansion behaviour on empty strings.
    * Tweaked a little the filter parser to recognize keywords using
      similar rules to Harbour compiler.
    ! Fixed filter parser not to RTE on malformed filters.

  - examples/hbapollo/Makefile
  + examples/hbapollo/hbapollo.hbm
  - examples/hboleold/Makefile
  + examples/hboleold/hboleold.hbm
  - examples/hbsqlit2/Makefile
  + examples/hbsqlit2/hbsqlit2.hbm
  - examples/hbgf/hbgfwin/Makefile
  + examples/hbgf/hbgfwin/hbgfwin.hbm
  - examples/hbgf/hbgfos2/Makefile
  + examples/hbgf/hbgfos2/hbgfos2.hbm
  - examples/hbgf/hbgfgtk/Makefile
  + examples/hbgf/hbgfgtk/hbgfgtk.hbm
  - examples/hbwhat/Makefile
  + examples/hbwhat/hbwhat.hbm
    * Replaced GNU Make files with hbmk2 make files. These should
      now work outside the source tree. Please test them, they are
      also good examples for .hbm files.

  - examples/pe/Makefile
  - examples/pp/Makefile
  - examples/hbdoc/Makefile
  - examples/guestbk/Makefile
  - examples/misc/Makefile
  - examples/dbu/Makefile
  - examples/hscript/Makefile
  - examples/rl/Makefile
  - examples/Makefile
  - examples/hbgf/Makefile
    - Deleted unnecessary make files belonging to GNU Make system.
      (these wouldn't work outside the source tree, f.e in a binary
      distro which includes these examples in source form)

  - examples/rdddbt
    - Deleted this example as it doesn't build anymore.

  * examples/hbsuper/hbsuper.hbm
    ! Added SVN header.

  * source/rtl/Makefile
  * source/rtl/errint.c
  + source/rtl/errintlo.c
    * Split hb_errInternal() and hb_errInternalRaw() for
      easier user override.

2009-05-29 11:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/examples
  + examples
  * doc/dirstruc.txt
  * doc/whatsnew.txt
  * examples/hbdoc/Makefile
  * examples/pp/Makefile
  * examples/hboleold/Makefile
  * examples/hbsqlit2/Makefile
  * examples/misc/Makefile
  * examples/hbapollo/Makefile
  * examples/rdddbt/Makefile
  * examples/guestbk/Makefile
  * examples/pe/Makefile
  * examples/hbgf/hbgfwin/Makefile
  * examples/hbgf/hbgfos2/Makefile
  * examples/hbgf/hbgfgtk/Makefile
  * examples/hbgf/Makefile
  * examples/uhttpd/readme.txt
  * examples/dbu/Makefile
  * examples/hscript/Makefile
  * examples/hbwhat/Makefile
  * examples/rl/Makefile
  * examples/Makefile
    * Moved to flatten our dir layout and sync the locations
      in unified distro and source tree.
    ; TODO: As a next step I'll replace Makefiles with .hbm
            files. This will allow users to build these parts
            outside the source distribution. [DONE]

  * doc/man/hbmk.1
  * utils/hbmk2/examples/fwh.hbc
  * utils/hbmk2/examples/hmg.hbc
  * utils/hbmk2/examples/hwgui.hbc
    * .hbp -> .hbc

2009-05-29 03:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed typo causing -i Harbour option missed in make
      modes where Harbour compiler is the final step (like -gh).
    + Directory for target is now automatically created.
    + Directory for -instpath paths are now automatically created.
    ! Fixed path normalizer not fully normalizing in some cases
      when path didn't begin with path separator (relative path).
    ! Fixed path builder to not be confused about non-native
      path separators.
    % Path builder will now normalize first to minimize steps.
    + Now all dirs *beginning* with ".hbmk" will be made hidden.
      (previously only dirs named exactly ".hbmk" were made hidden)
      (experimental)

2009-05-28 18:43 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgwnd.prg
  * harbour/contrib/hbwin/wapi_commctrl.c
    ! Changes to honor NUMERICS to POINTERS.
    ! Few artifacts in WvgCRT().

2009-05-28 19:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed -map option for mingw family. Strangely its help
      says '-Wl,-Map FILE' is the format but this only works
      if FILE exists on disk :/ otherwise it gives an error
      that FILE isn't found. 'Wl,-Map,FILE' seems to work for
      all cases. Pbly OS/2 and DJGPP should also be fixed.
    ! Applied above fix for DJGPP and OS/2 GCC. I didn't test
      it but probably works the same way as in mingw and *nix
      gcc.

2009-05-28 19:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + .hbm embedding is now allowed 10 level deep (was 3).

2009-05-28 17:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/examples/hbsuper
  + contrib/examples/hbsuper/hbsuper.hbm
  + contrib/examples/hbsuper/hbsuper.dif
  + contrib/examples/hbsuper/hbsuper.prg
  + contrib/examples/hbsuper/readme.txt
    + Added SuperLib portability patch and Harbour make script.
      Original sources need to be downloaded from The Oasis.
      This is a slightly minimal patch than my previous version
      to minimize any unnecessary space/command changes, and
      I also reverted to original C code where it was possible.

  * utils/hbmk2/hbmk2.prg
    * Minor formatting.

2009-05-28 13:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbodbc/odbc.c
    ! Eliminated last UNICODE branching, this also fixes
      embedded zero chars not being respected in UNICODE mode
      in SQLDESCRIBECOL(). Not tested, ODBC users please do,
      also someone pls review me.

  * ChangeLog
    * TODOs/TOFIXes marked as DONE.

2009-05-28 11:40 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added macros ${hb_major}, ${hb_minor}, ${hb_release}.

  * contrib/xhb/xhbver.prg
    ! Minor.

  * contrib/hbwin/legacyc.c
    + Added compatibility wrappers for printing functions.
      (mainly for xhb compatibility)

2009-05-28 09:43 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgsink.c
    ! Minor fix to returning HRESULT.

2009-05-28 00:19 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/gtwvg/wvgwin.c
    ! Small fix to previous commit.

  * contrib/gtwvg/wvgax.c
  * contrib/gtwvg/wvgsink.c
    ! Widely cleaned code.
    ! Make use of remaining number to pointers.
    ! Renamed functions to WVG_* namespace.
    ! WvgActiveXControl() can be tested both with winsink|axcore event handellers.
      NOTE: CPP mode generates a GPF when ole is unloaded due to refcount.
            Mindaugas can you fix it.

2009-05-28 08:20 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * .hbl extension changed to .hbc (Harbour Make Config).
    * -nohbl -> -nohbc
    ; Sorry for the mess.
    + Added support for instpaths= in .hbc files.
    + Added support for HB_USER_LIBPATHS envvar to specify
      lib search paths (similar to -L).
    ! Fixed so that sripping/compressing isn't attempted if
      the target didn't need an update.

  * source/rtl/Makefile
  * source/rdd/Makefile
    + Enabled -gc3 for hbrtl and hbrdd locally
      (except for wce builds). Same can be done locally
      for any libs where we find performance increase
      due to -gc3.
    ; NOTE: Probably it would be enough to compile just a few
            sensitive .prg sources (or program parts) with -gc3,
            so it would great to have such #pragma option in
            Harbour. Doesn't seem easy to implement though.

  * config/rules.cf
    * HB_GCMODE default set 0 (from 3).
      This means .prgs will be again compiled with -gc0 by default.
      Because of the contribs, this means the complete size
      of Harbour libs is now reduced significantly.

  * config/wce/global.cf
  * config/wce/msvcarm.cf
  * config/wce/mingwarm.cf
  * config/wce/poccarm.cf
    % HB_GCMODE=0 moved to wce/global.cf

  - utils/hbmk2/examples/hmg.hbl
  + utils/hbmk2/examples/fwh.hbc
  - utils/hbmk2/examples/whoo.hbl
  + utils/hbmk2/examples/xhgtk.hbc
  - utils/hbmk2/examples/xbgtk.hbl
  - utils/hbmk2/examples/hwgui.hbl
  - utils/hbmk2/examples/fwh.hbl
  + utils/hbmk2/examples/c4w.hbc
  - utils/hbmk2/examples/xhgtk.hbl
  + utils/hbmk2/examples/contrib.hbc
  - utils/hbmk2/examples/c4w.hbl
  + utils/hbmk2/examples/contribf.hbc
  - utils/hbmk2/examples/contrib.hbl
  + utils/hbmk2/examples/hmg.hbc
  + utils/hbmk2/examples/whoo.hbc
  - utils/hbmk2/examples/contribf.hbl
  + utils/hbmk2/examples/xbgtk.hbc
  + utils/hbmk2/examples/hwgui.hbc
  - contrib/gtalleg/tests/gtallegs.hbl
  - contrib/gtalleg/tests/gtallegd.hbl
  + contrib/gtalleg/tests/gtallegs.hbc
  + contrib/gtalleg/tests/gtallegd.hbc
  - contrib/hbmysql/utils/hbmysql.hbl
  + contrib/hbmysql/utils/hbmysql.hbc
  - contrib/hbmysql/tests/hbmysql.hbl
  + contrib/hbmysql/tests/hbmysql.hbc
  + contrib/hbct/tests/hbct.hbc
  - contrib/hbct/tests/hbct.hbl
  - contrib/xhb/tests/xhb.hbl
  + contrib/xhb/tests/xhb.hbc
  - contrib/hbodbc/tests/hbodbc.hbl
  + contrib/hbodbc/tests/hbodbc.hbc
  - contrib/hbtpathy/tests/hbtpathy.hbl
  + contrib/hbtpathy/tests/hbtpathy.hbc
  + contrib/hbmsql/tests/hbmsql.hbc
  - contrib/hbmsql/tests/hbmsql.hbl
  + contrib/hbmzip/tests/hbmzip.hbc
  - contrib/hbmzip/tests/hbmzip.hbl
  + contrib/hbsqlit3/tests/hbsqlit3.hbc
  - contrib/hbsqlit3/tests/hbsqlit3.hbl
  - contrib/hbblat/tests/hbblat.hbl
  + contrib/hbblat/tests/hbblat.hbc
  - contrib/hbqt/tests/hbqt.hbl
  + contrib/hbqt/tests/hbqt.hbc
  - contrib/hbfbird/tests/hbfbird.hbl
  + contrib/hbfbird/tests/hbfbird.hbc
  - contrib/hbziparc/tests/hbziparc.hbl
  + contrib/hbziparc/tests/hbziparc.hbc
  - contrib/hbnf/tests/hbnf.hbl
  + contrib/hbnf/tests/hbnf.hbc
  - contrib/hbcurl/tests/hbcurl.hbl
  + contrib/hbcurl/tests/hbcurl.hbc
  - contrib/gtqtc/tests/gtqtc.hbl
  + contrib/gtqtc/tests/gtqtc.hbc
  - contrib/rddsql/sddmy/tests/sddmy.hbl
  + contrib/rddsql/sddmy/tests/sddmy.hbc
  + contrib/rddsql/tests/rddsql.hbc
  - contrib/rddsql/tests/rddsql.hbl
  - contrib/rddsql/sddodbc/tests/sddodbc.hbl
  + contrib/rddsql/sddodbc/tests/sddodbc.hbc
  - contrib/hbhpdf/tests/hbhpdf.hbl
  + contrib/hbhpdf/tests/hbhpdf.hbc
  - contrib/rddado/tests/rddado.hbl
  + contrib/rddado/tests/rddado.hbc
  + contrib/gtwvg/tests/gtwvg.hbc
  - contrib/gtwvg/tests/gtwvg.hbl
  - contrib/hbpgsql/tests/hbpgsql.hbl
  + contrib/hbpgsql/tests/hbpgsql.hbc
  - contrib/rddads/tests/rddads.hbl
  + contrib/rddads/tests/rddads.hbc
  - contrib/hbclipsm/tests/hbclipsm.hbl
  + contrib/hbclipsm/tests/hbclipsm.hbc
  - contrib/hbfimage/tests/hbfimage.hbl
  + contrib/hbfimage/tests/hbfimage.hbc
  + contrib/hbgd/tests/hbgd.hbc
  - contrib/hbgd/tests/hbgd.hbl
  + contrib/hbmisc/tests/hbmisc.hbc
  - contrib/hbmisc/tests/hbmisc.hbl
  + contrib/hbtip/tests/hbtip.hbc
  - contrib/hbtip/tests/hbtip.hbl
  + contrib/hbwin/tests/hbwin.hbc
  - contrib/hbwin/tests/hbwin.hbl
  + contrib/hbvpdf/tests/hbvpdf.hbc
  - contrib/hbvpdf/tests/hbvpdf.hbl
  - contrib/hbssl/tests/hbssl.hbl
  + contrib/hbssl/tests/hbssl.hbc
  - contrib/hbbtree/tests/hbbtree.hbl
  + contrib/hbbtree/tests/hbbtree.hbc
  - contrib/hbcrypt/tests/hbcrypt.hbl
  + contrib/hbcrypt/tests/hbcrypt.hbc
  + contrib/examples/hbsqlit2/tests/hbsqlit2.hbc
  - contrib/examples/hbsqlit2/tests/hbsqlit2.hbl
  - contrib/examples/hbapollo/tests/hbapollo.hbl
  + contrib/examples/hbapollo/tests/hbapollo.hbc
  + contrib/examples/hbgf/tests/hbgf.hbc
  - contrib/examples/hbgf/tests/hbgf.hbl
  - contrib/examples/terminal/terminal.hbl
  + contrib/examples/terminal/terminal.hbc
  - contrib/examples/hbwhat/tests/hbwhat.hbl
  + contrib/examples/hbwhat/tests/hbwhat.hbc
    * Renamed *.hbl -> *.hbc (Harbour Make Config) in whole source tree.

2009-05-27 20:08 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/gtwvg/wvgwin.c
    + Workaround for GCLP_HBRBACKGROUND reported missing from some MinGW distros.

2009-05-27 15:21 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbinet.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
  * harbour/source/rdd/hsx/hsx.c
  * harbour/source/rdd/usrrdd/usrrdd.c
    * casting to avoid false alarm in extensive strict aliasing analyzes

2009-05-27 16:40 UTC+0300 Alexander Kresin <alex at belacy.belgorod.su>
  * utils/hbformat/hbformat.prg
    ! Handling of file mask has been fixed.

2009-05-27 13:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_prn2.c
    * Cleaned hb_parcx() vs. hb_parc() usage in one function.
      (hb_parcx() is only needed if there is no preceding HB_ISCHAR()
      check. If there is hb_parc() will also always return a valid
      pointer).

  + contrib/hbwin/tests/testprn2.prg
    + Added raw printing test.

2009-05-27 12:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % -undef/-D Harbour options will be reduced in cross-compilation
      scenarios. If a __PLATFORM__* value appears as both -undef and
      -D it will be omitted. This results in smaller command line,
      plus works around this warning:
      'Warning W0001  Redefinition or duplicate definition of #define __PLATFORM__WINDOWS'
      when using the embedded compiler (doesn't seem to happen with
      external compiler).
    + Added autodetection for mingw64 and mingwarm compilers. It should
      now be enough to use -arch=wce on the command line to initiate a
      WinCE cross-build if the compiler is setup in the path or using
      the embedded installation. So it's recommended to use -arch=wce
      instead of -arch=mingwarm from now on. For mingw64 builds, no
      extra switch is needed, if in the PATH, it will be autodetected.
    ! Added Harbour command to Harbour command line shown in case of
      error.

  * contrib/gtwvg/wvgcuig.c
    ! Fixed one GCC warning. I'm not sure if this is a correct one,
      my only goal was to make the warning disappear and to define
      a previously undefined case.
    ; TOFIX: This warning still remains, and indicates unsafe code:
             wvgsink.c:516: warning: dereferencing pointer 'hSink.33' does break strict-aliasing rules

  * contrib/gtwvg/tests/demoxbp.prg
  * contrib/gtwvg/tests/demowvg.prg
    ! Fixed hard-wired paths, so that now some more samples
      work regardless of Harbour installation dir.
    ; NOTE: Never use hard-wired absolute paths inside any Harbour
            component. We now have hb_DirBase(), please make use of it.
    ; NOTE: For me most of the samples still don't work, AX toolbar icons
            don't appear, and most of the AX samples fail with an unclosable
            window.

  * contrib/hbwin/axcore.c
  * contrib/gtwvg/wvgsink.c
    * Moved recently added extra AX functions to GTWVG.
    * Kept optimized, hbwin version of HB_AX_ATLCREATEWINDOW().
    * Others renamed and commented:
      WIN_AXGETUNKNOWN() -> WVG_AXGETUNKNOWN()
      WIN_AXSETVERB      -> WVG_AXDOVERB()
    ! HB_AX_ATLSETVERB() now accepts HWND pointers, too.
    ! HB_AX_ATLAXGETCONTROL() now accepts HWND pointers, too.
    ; TOFIX: GTWVG uses HB_AX_* prefix to denote AX function, while
             these should be named WVG_AX*(). [DONE]
    ; TODO: Probably the full content, or at least the universally
            useful portion of wvgsink.c should eventually go to hbwin,
            but all these functions need further cleanups,
            and they also have to be renamed. I don't know what we
            should stay compatible with so it's difficult to make
            any moves. Some test code showing the usefulness of
            these function would be probably help.

2009-05-27 05:34 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/harbour.spec
  * harbour/mpkg_tgz.sh
    + added hbformat

  * harbour/include/hbdefs.h
  * harbour/include/hbapi.h
  * harbour/source/common/hbarch.c
    * redefined macros used to store/retrieve integer and double values
      to/from byte arrays in little and big endian order.
      Now GCC uses inline functions which are hardly optimized by compiler
      giving on x86 machines the same code as direct casting (with the
      exception to march=i686 where putting double value forces strict
      alignment to avoid hidden CPU exception) but they respect strict
      aliasing rules. It also means that now GCC builds always respect
      strict alignment even if HB_STRICT_ALIGNMENT macro is not set.

2009-05-27 04:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbsetup.h
  * source/common/hbver.c
    + Moved CPU detection to core header. Introduced
      HB_CPU_* macros. Now they can be used to branch code
      by CPU type.

  * contrib/rddads/adsmgmnt.c
    + Added my copyright.

  * contrib/hbwin/wapi_commctrl.c
  * contrib/hbwin/wapi_winbase.c
  * contrib/hbwin/wapi_winuser.c
    ! Fixed remaining hb_parc() vs hb_parcx() usages.
    % WAPI_TABCTRL_CREATE() further simplified.
      Please review, it may be wrong.

  * utils/hbmk2/hbmk2.prg
    * Minor internal change.

2009-05-27 03:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/generator/hbqtgen.prg
  * contrib/gtqtc/tests/demoqtc.prg
  * contrib/gtqtc/tests/wvtext.prg
  * contrib/gtwvg/tests/demowvg.prg
  * contrib/examples/uhttpd/uhttpd.prg
  * contrib/examples/terminal/trm_server.prg
  * contrib/examples/terminal/terminal.prg
  * contrib/examples/terminal/trm_appn.prg
  * contrib/examples/terminal/trm_client.prg
  * contrib/examples/hbwhat/winrbar.prg
    * #include '' -> #include ""

  * contrib/gtqtc/tests/wvtext.prg
    ! Fixed #include with mixed case filename.

2009-05-27 03:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbver.ch
  * source/rtl/version.c
    + Added hb_Version( HB_VER_COMPILER_CPP ) which
      returns if the C compiler was used in C++ mode.
      Mainly added for HB_BUILDINFO() emulation, maybe it
      can be useful to set defaults in hbmk2, we will see.

  * contrib/xhb/Makefile
  + contrib/xhb/xhbver.prg
    + Added emulation of HB_BUILDINFO() xhb function.

  + contrib/xhb/xhbver.ch
    + Copied xhb's hbver.ch under this name.
      (borrowed from xhb, work of Andi Jahja)

2009-05-27 02:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/print.c
    + added PRINTSEND() support for Windows platform.
      (Borrowed from xhb, work of Pavel Tsarenko, with few minor changes)

  * contrib/gtwvg/wvgwin.c
  * contrib/gtwvg/wvgsink.c
    ! Fixed two new warnings after my recent commits.

  * contrib/hbwin/hbwapi.h
    * Tweaked previous commit. COLORREF and HRESULT now using
      hb_retnint() again to fix 32-bit numbers appearing as signed ones
      at .prg level.

  * source/rdd/usrrdd/rdds/arrayrdd.prg
    ; Added some patches recently committed to xhb:
    ! few fixes provided by Quique
    + Added AR_LOCK() function, but commented.
    ; NOTE: Francesco, would you mind reviewing these changes?

  * utils/hbmk2/hbmk2.prg
    * Minor formatting, comment added.

2009-05-26 21:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/hbwapi.h
  * contrib/hbwin/wapi_commctrl.c
    ! wapi_par_COLORREF() fixed to use hb_parnl(). COLORREF is a 32bit value.
    ! Rest of wapi_par_*() macros fixed to accept pointers only.
      If someone needs to pass numbers, use WIN_N2P() to convert them
      to pointers first.
    ! Corrected casts in wapi_par_WORD() and wapi_par_DWORD().
    ! Fixed wapi_ret_HRESULT() to use hb_retnl(). It's a 32bit status value.
    ! Fixed wapi_ret_COLORREF() to use hb_retnl().
    ! Fixed WAPI_TABCTRL_CREATE() for 64-bit mode, font type was wrong.
    ! Fixed WAPI_TABCTRL_CREATE() to return pointer instead of number.

  * contrib/hbwin/Makefile
    ! Reverted accidental edit in prev commit.

2009-05-26 20:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Minor cleanups to prev.

  * contrib/hbwin/axcore.c
    * Minor formatting.
    % Variable scopes adjusted.
    % WIN_AXCREATEWINDOW() optimized.
    - Deleted ToOutDebug() stuff. Please use TRACE() subsystem for
      these parts.
    ; NOTE: I'm note sure we should have a WIN_AXCREATEWINDOW() function
            there. Rather, we should have a WAPI_CREATEWINDOWEX() function
            which serves the same purpose, but in a generic manner, also
            usable for AX purposes. Is there anything against this idea?

  * utils/hbformat/hbformat.prg
  * contrib/gtwvg/wvgclass.prg
  * contrib/gtwvg/wvgscrlb.prg
  * contrib/gtwvg/wvgdlg.prg
  * contrib/gtwvg/wvgpaint.prg
  * contrib/gtwvg/wvgdarea.prg
  * contrib/gtwvg/wvgmle.prg
  * contrib/gtwvg/wvglistb.prg
  * contrib/gtwvg/wvgtoolb.prg
  * contrib/gtwvg/wvgpushb.prg
  * contrib/gtwvg/wvgsle.prg
  * contrib/gtwvg/wvgtreev.prg
  * contrib/gtwvg/tests/demoxbp.prg
  * contrib/gtwvg/tests/demowvg.prg
  * contrib/gtwvg/wvgwnd.prg
  * contrib/gtwvg/wvgcrt.prg
  * contrib/gtwvg/wvgdatar.prg
  * contrib/gtwvg/wvgradio.prg
  * contrib/gtwvg/wvgsysw.prg
  * contrib/gtwvg/wvgmenub.prg
  * contrib/gtwvg/wvgphdlr.prg
  * contrib/gtwvg/wvgbitmp.prg
  * contrib/gtwvg/wvgcheck.prg
  * contrib/gtwvg/wvgstatb.prg
  * contrib/gtwvg/wvgstatc.prg
  * contrib/gtwvg/wvghtmlv.prg
  * contrib/gtwvg/wincback.prg
  * contrib/gtwvg/wvgtabpg.prg
  * contrib/gtwvg/wvg3stat.prg
  * contrib/gtwvg/wvgcombo.prg
    * Some formatting. (' -> " and #include lines)

2009-05-26 07:50 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/hbwin/axcore.c
    + __XAXREGISTERHANDLER()
      An extension of __AXREGISTERHANDLER() where connection points are
      enumerated instead of finding - many OLE's have more than one interface -
      a practical discovery. Mindaugas please check if it can be the default.

    + WIN_AXATLGETCONTROL() - Normalizing PRG calling convension.
    + WIN_AXCREATEWINDOW()  - Can be dropped later.
    + WIN_AXGETUNKNOWN()    - Useful in many situations.
    + WIN_AXSETVERB()       - ---^---
    + WIN_AXRELEASEOBJECT() - Experimental
      Note that these function are primarily aimed at making experiments
      via gtwvg/winsink.c interface and after testings can be moved or removed.

      /*  Mindaugas, I receive a GPF when terminating the appln.
          Also I cannot see that ISink is ever subject to garbase collection.
          And "count" never returns to 0. I must be missing something, but...
      */

2009-05-26 09:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgax.prg
  * contrib/gtwvg/wvgwin.c
  * contrib/gtwvg/wvgsink.c
    ! Fixed HB_OLEAUTO() -> WIN_OLEAUTO()
    * Formatting.
    ! Fixed a few ISNIL()s.
    ! Fixed a few hb_parc() to hb_parcx() (many potential GPFs).
    % Removed unnecessary ISBYREF() and hb_ret() calls.
    ! Prefixed some static vars with 's_'.
    ! Fixed potential buffer overrun and memory corruption in
      Invoke() function.

  * contrib/rddads/adsfunc.c
    + Changed to always define all Harbour level functions.
      For unsupported ADS versions, these function will be stubs
      returning dummy values.
    ; TODO: Do the same in other contribs, like hbsqlit3. Anyone?

  * contrib/rddads/ads1.c
    ! Fixed typos and missing casts preventing to compile with
      pre-6.00 ACE versions.

  * contrib/rddads/Makefile
  + contrib/rddads/adsextrn.ch
    + Added EXTERNAL header.

2009-05-25 18:16 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/gtwvg/wvgsink.c
    ! HBNIL() -> HB_ISNUM() | HB_ISCHAR().
    + Few more convinience functions.

2009-05-26 02:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/Makefile
  + contrib/xhb/datesxhb.c
    + Added these xhb compatibility functions:
      TSSECS(), TIMEOFDAY(), HMS2D(), TTOD().
      Borrowed from xhb, work of Giancarlo Niccolai, Walter Negro,
      with few changes.

  * contrib/xhb/hbcompat.ch
    + Added translation for these functions:
      DATETIME(), HOUR(), MINUTE(), TTOS(), STOT(), TTOC(), CTOT()
      (NOTE: I don't know if the workings of corresponding Harbour
             functions are fully compatible. If not we can add
             xhb_*() flavours locally in xhb lib)

2009-05-26 02:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/fparse.c
  * contrib/rddsql/sddmy/mysqldd.c
  * contrib/rddsql/sqlbase.c
  * contrib/rddsql/sqlmix.c
  * contrib/rddads/adsx.c
  * contrib/examples/terminal/trm_client.prg
  * source/rdd/dbfnsx/dbfnsx1.c
    % "" -> NULL where applicable (hb_retc*(), hb_retds(), hb_itemPutC*(),
      hb_arraySetC*(), hb_errInternal(), hb_itemPutDS(), hb_arraySetDS())

  * contrib/hbqt/hbqt_qtextdocument.cpp
  * contrib/hbqt/hbqt_qgridlayout.cpp
  * contrib/hbqt/hbqt_qpainter.cpp
  * contrib/hbqt/hbqt_qeventloop.cpp
  * contrib/hbqt/hbqt_qicon.cpp
  * contrib/hbqt/hbqt_qtreeview.cpp
  * contrib/hbqt/hbqt_qtextline.cpp
  * contrib/hbqt/hbqt_qdesktopwidget.cpp
  * contrib/hbqt/hbqt_qhttp.cpp
  * contrib/hbqt/hbqt_qlineedit.cpp
  * contrib/hbqt/hbqt_qcombobox.cpp
  * contrib/hbqt/hbqt_qlistwidget.cpp
  * contrib/hbqt/hbqt_qtextcursor.cpp
  * contrib/hbqt/hbqt_qtextlayout.cpp
  * contrib/hbqt/hbqt_qftp.cpp
  * contrib/hbqt/hbqt_qclipboard.cpp
  * contrib/hbqt/hbqt_qurl.cpp
  * contrib/hbqt/hbqt_qwebpage.cpp
  * contrib/hbqt/hbqt_qtextedit.cpp
  * contrib/hbqt/hbqt_qpixmap.cpp
  * contrib/hbqt/hbqt_qsplashscreen.cpp
  * contrib/hbqt/hbqt_qtablewidget.cpp
  * contrib/hbqt/hbqt_qtreewidget.cpp
  * contrib/hbqt/generator/hbqtgen.prg
  * contrib/hbqt/hbqt_qfont.cpp
  * contrib/hbqt/hbqt_qmainwindow.cpp
  * contrib/hbqt/hbqt_qdir.cpp
  * contrib/hbqt/hbqt_qwidget.cpp
  * contrib/hbqt/hbqt_qstyle.cpp
  * contrib/hbqt/hbqt_qabstractbutton.cpp
  * contrib/hbqt/hbqt_qobject.cpp
  * contrib/hbqt/hbqt_qcolor.cpp
  * contrib/hbqt/hbqt_qtextstream.cpp
  * contrib/hbqt/hbqt_qwebview.cpp
  * contrib/hbqt/hbqt_qboxlayout.cpp
  * contrib/hbqt/hbqt_qstatusbar.cpp
  * contrib/hbqt/hbqt_qtabwidget.cpp
  * contrib/hbqt/hbqt_qscrollarea.cpp
  * contrib/hbqt/hbqt_qtextcharformat.cpp
    ! Fixed to use HB_ISNUM() instead of HB_ISNIL().
    % Don't call HB_ISNUM() where the default value is
      zero anyway. hb_parn*() functions will return zero
      anyway. (well, maybe this exploits the array-type
      bug in our Extend API.)

  * contrib/gtwvg/wvgwin.c
  * contrib/gtwvg/wvgsink.c
    * Avoiding ISNIL(). Corrected just a few occurences.
      This practice is still wrong in most of the cases in
      GTWVG code, so if the goal is GPF-free and consitently
      behaving apps, these would better be fixed. With
      string params ISNIL() is either superfluous or simply
      don't protect agains GPFs, for rest of the cases it
      either causes unexpected defaults (zero), or simply
      superfluous for the rest of the cases. IOW: Avoid it,
      use HB_ISNUM(), HB_ISCHAR() / parcx() instead.

  * contrib/hbgd/gdwrp.c
    * Formatting.

2009-05-25 15:01 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/gtwvg/wvgsink.c
    * Cleanup .
    * Next step to make it as close to hbwin/axcore.c as much possible.

2009-05-25 23:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgsink.c
    ! Fixed warning.
    * Some formatting, minor cleanup.

  * source/rtl/hbi18n2.prg
    + __I18N_POTARRAYSAVE() got logical flag to suppress Harbour version
      number in saved file comment.
    + __I18N_POTARRAYSAVE() got logical flag to suppress source
      reference information in save file. This way it's possible to
      lessen the number of .po file updates and to avoid the growth
      caused by texts moving around while files are being edited.

  * utils/hbmk2/hbmk2.prg
    + Added option to save .po files in a version repository friendly
      way, this means no Harbour version number and no source file
      references in .po files. You can activate this using -minipo
      option.

2009-05-25 23:29 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/gtwvg/wvgsink.c
    ! fixed, cleaned C++ compilation

2009-05-25 21:28 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! add missing HB_STACK_TLS_PRELOAD

2009-05-25 18:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/axcore.c
    ! Fixed one remaining minor msvc warning.

2009-05-25 18:45 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbwin/hbwinole.h
    * changed HB_OLE_C_API define to be compatible to other similar
      defines, i.e. defined() vs. !defined() instead of 1 vs. 0

  * harbour/contrib/hbwin/axcore.c
    ! fixed missing IDispatchVtbl definition in C++ mode

  * harbour/contrib/hbwin/hbwinole.h
  * harbour/contrib/hbwin/axcore.c
  * harbour/contrib/hbwin/olecore.c
    * a few C/C++ compatibility macros introduced. Cleaned code: two
      version of method call code is not required any more

2009-05-25 17:08 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbxvm.h
  * harbour/source/vm/hvm.c
  * harbour/source/compiler/gencc.c
    ! added missing RT error for wrong values used in SWITCH statement
      in code generated for -gc3 output

2009-05-25 16:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -cpp/-nocpp options to help screen.
    * Removed C++ mode from TODO. I honestly forgot what was
      missing from this feature (besides lack of support for
      pocc compiler, since I couldn't find such option there),
      please report it if you find something.

2009-05-25 16:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -target=, -target and -alltarget (was -notarget)
      to help screen.

2009-05-25 14:44 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbwin/axcore.c
    ! fixed a few C++ compile errors

2009-05-25 13:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + utils/hbformat/hbformac.c
    + Added missing file from prev commit. Sorry.

2009-05-25 13:21 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtxwc/gtxwc.c
    ! fixed typo in HB_GTXVG_SQUARE shape initialization

  * harbour/include/hbrddnsx.h
  * harbour/include/hbrddntx.h
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
    * code cleanup - use predefined #define instead of hardcoded constant
      values

  * harbour/source/rtl/valtoexp.prg
    * added REQUEST __objSetClass

  * harbour/source/compiler/gencc.c
    ! fixed -gc3 code generated for switch statement - thanks to Marek and
      Xavi for information and self contain example
      TODO: add missing RT error in -gc3 output when wrong (non integer
            and non string value) is used in SWITCH statement [DONE]

2009-05-25 15:00 UTC+0300 Alexander Kresin <alex at belacy.belgorod.su>
  * utils/hbformat/hbformat.prg
    ! Small fix

2009-05-25 12:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu.bat
    % Fixed to exclude external libs from dll phase of build.
      This will make the process a bit faster.

2009-05-25 10:30 UTC+0300 Alexander Kresin <alex at belacy.belgorod.su>
  * utils/hbformat/hbformat.prg
    ! Fixed SetOption() method.

2009-05-25 10:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/howtosvn.txt
    * Deleted sections dealing with sending commit e-mails.

  * doc/dirstruc.txt
  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.pt_BR.po
  * utils/hbmk2/hbmk2.prg
  * utils/hbi18n/hbi18n.prg
    * Shuffling extensions:
      .hbl -> .hbi (Harbour i18n)
      .hbp -> .hbl (Harbour Library)
      .hbm -> (unchanged) (Harbour Make)
      .hbt -> .hbp (Harbour Project)

  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.pt_BR.po
  * utils/hbmk2/hbmk2.prg
    + Added reference to -b switch to -debug switch description.
    + Added _HBMK_EMBEDDED_ mode (like in hbformat).
    + Accepting .hbp files (same format as .hbm) on the command
      line (top level). .hbp refers to "Harbour project file".
      Similar function to recent experimental .hbt files, but not
      embeddable.
    * Minor tweak to HB_SHARED envvar reading code.
    * Changed -nohbp switch to -nohbl.
    * Changed -hbl switch to -hbi.

      Updated usage:
      There are three ways to do multitarget hbmk2 sessions:
      1.) hbmk2 [<common_params1>] -target=target1[.hbm|.prg] [<common_params2>] -target=target2[.hbm|.prg] [<common_params3>]
          Examples:
             hbmk2 -target=prog1 -target=prog2 -target=prog3
             hbmk2 -target=prog1.prg -target=prog2.prg -target=prog3.prg
             hbmk2 -target=mylib1.hbm -target=mylib2.hbm -target=myapp.hbm
             hbmk2 -trace -pause -target=mylib1.hbm -target=mylib2.hbm -target=myapp.hbm -beep
      2.) hbmk2 [<common_params1>] -target <target1_params> -target <target2_params> [-notarget <common_params2>]
          Examples:
             hbmk2 -target hello1.prg -target hello2.prg
             hbmk2 -trace -target hello1.prg -target hello2.prg
             hbmk2 -trace -target hello1.prg -target hello2.prg -notarget -beep
      3.) hbmk2 [<common_params1>] target1.hbp [<common_params2>] target2.hbp [<common_params3>]
          where .hbp is an .hbm file just with an .hbp extension.
          Examples:
             hbmk2 mylib1.hbp mylib.hbp myapp.hbp
             hbmk2 -trace -pause mylib1.hbp mylib2.hbp myapp.hbp -beep

   + utils/hbmk2/examples/hmg.hbl
   + utils/hbmk2/examples/whoo.hbl
   + utils/hbmk2/examples/xbgtk.hbl
   - utils/hbmk2/examples/hmg.hbp
   - utils/hbmk2/examples/whoo.hbp
   - utils/hbmk2/examples/xbgtk.hbp
   + utils/hbmk2/examples/hwgui.hbl
   + utils/hbmk2/examples/fwh.hbl
   + utils/hbmk2/examples/xhgtk.hbl
   - utils/hbmk2/examples/hwgui.hbp
   - utils/hbmk2/examples/fwh.hbp
   - utils/hbmk2/examples/xhgtk.hbp
   + utils/hbmk2/examples/c4w.hbl
   + utils/hbmk2/examples/contrib.hbl
   - utils/hbmk2/examples/c4w.hbp
   - utils/hbmk2/examples/contrib.hbp
   + utils/hbmk2/examples/contribf.hbl
   - utils/hbmk2/examples/contribf.hbp
   + contrib/gtalleg/tests/gtallegs.hbl
   + contrib/gtalleg/tests/gtallegd.hbl
   - contrib/gtalleg/tests/gtallegs.hbp
   - contrib/gtalleg/tests/gtallegd.hbp
   + contrib/hbmysql/utils/hbmysql.hbl
   - contrib/hbmysql/utils/hbmysql.hbp
   + contrib/hbmysql/tests/hbmysql.hbl
   - contrib/hbmysql/tests/hbmysql.hbp
   + contrib/hbct/tests/hbct.hbl
   - contrib/hbct/tests/hbct.hbp
   + contrib/xhb/tests/xhb.hbl
   - contrib/xhb/tests/xhb.hbp
   + contrib/hbodbc/tests/hbodbc.hbl
   - contrib/hbodbc/tests/hbodbc.hbp
   + contrib/hbtpathy/tests/hbtpathy.hbl
   - contrib/hbtpathy/tests/hbtpathy.hbp
   + contrib/hbmsql/tests/hbmsql.hbl
   - contrib/hbmsql/tests/hbmsql.hbp
   - contrib/hbmzip/tests/hbmzip.hbp
   + contrib/hbmzip/tests/hbmzip.hbl
   - contrib/hbsqlit3/tests/hbsqlit3.hbp
   + contrib/hbsqlit3/tests/hbsqlit3.hbl
   + contrib/hbblat/tests/hbblat.hbl
   - contrib/hbblat/tests/hbblat.hbp
   + contrib/hbqt/tests/hbqt.hbl
   - contrib/hbqt/tests/hbqt.hbp
   + contrib/hbfbird/tests/hbfbird.hbl
   - contrib/hbfbird/tests/hbfbird.hbp
   + contrib/hbziparc/tests/hbziparc.hbl
   - contrib/hbziparc/tests/hbziparc.hbp
   + contrib/hbnf/tests/hbnf.hbl
   - contrib/hbnf/tests/hbnf.hbp
   + contrib/hbcurl/tests/hbcurl.hbl
   - contrib/hbcurl/tests/hbcurl.hbp
   + contrib/gtqtc/tests/gtqtc.hbl
   - contrib/gtqtc/tests/gtqtc.hbp
   + contrib/rddsql/sddmy/tests/sddmy.hbl
   - contrib/rddsql/sddmy/tests/sddmy.hbp
   - contrib/rddsql/tests/rddsql.hbp
   + contrib/rddsql/tests/rddsql.hbl
   + contrib/rddsql/sddodbc/tests/sddodbc.hbl
   - contrib/rddsql/sddodbc/tests/sddodbc.hbp
   + contrib/hbhpdf/tests/hbhpdf.hbl
   - contrib/hbhpdf/tests/hbhpdf.hbp
   + contrib/rddado/tests/rddado.hbl
   - contrib/rddado/tests/rddado.hbp
   + contrib/gtwvg/tests/gtwvg.hbl
   - contrib/gtwvg/tests/gtwvg.hbp
   + contrib/hbpgsql/tests/hbpgsql.hbl
   - contrib/hbpgsql/tests/hbpgsql.hbp
   + contrib/rddads/tests/rddads.hbl
   - contrib/rddads/tests/rddads.hbp
   + contrib/hbclipsm/tests/hbclipsm.hbl
   - contrib/hbclipsm/tests/hbclipsm.hbp
   + contrib/hbfimage/tests/hbfimage.hbl
   - contrib/hbfimage/tests/hbfimage.hbp
   + contrib/hbgd/tests/hbgd.hbl
   - contrib/hbgd/tests/hbgd.hbp
   + contrib/hbmisc/tests/hbmisc.hbl
   - contrib/hbmisc/tests/hbmisc.hbp
   + contrib/hbtip/tests/hbtip.hbl
   - contrib/hbtip/tests/hbtip.hbp
   - contrib/hbwin/tests/hbwin.hbp
   + contrib/hbwin/tests/hbwin.hbl
   - contrib/hbvpdf/tests/hbvpdf.hbp
   + contrib/hbvpdf/tests/hbvpdf.hbl
   + contrib/hbssl/tests/hbssl.hbl
   - contrib/hbssl/tests/hbssl.hbp
   + contrib/hbbtree/tests/hbbtree.hbl
   - contrib/hbbtree/tests/hbbtree.hbp
   + contrib/hbcrypt/tests/hbcrypt.hbl
   - contrib/hbcrypt/tests/hbcrypt.hbp
   - contrib/examples/hbsqlit2/tests/hbsqlit2.hbp
   + contrib/examples/hbsqlit2/tests/hbsqlit2.hbl
   + contrib/examples/hbapollo/tests/hbapollo.hbl
   - contrib/examples/hbapollo/tests/hbapollo.hbp
   + contrib/examples/hbgf/tests/hbgf.hbl
   - contrib/examples/hbgf/tests/hbgf.hbp
   + contrib/examples/terminal/terminal.hbl
   - contrib/examples/terminal/terminal.hbp
   + contrib/examples/hbwhat/tests/hbwhat.hbl
   - contrib/examples/hbwhat/tests/hbwhat.hbp
    * Renamed *.hbp -> *.hbl in whole source tree.

  * doc/dirstruc.txt
  * bin/postinst.bat
  * utils/hbformat/hbformat.ini
  + utils/hbformat/hbformat.hbm
  * utils/hbformat/hbformat.prg
  * utils/hbformat/Makefile
    ! Added SVN props.
    + Added hbformat.hbm (hbmk2 make file).
    % Deleted forced MT mode from Makefile (not needed for hbformat)
    ! Separated C code from .prg.
    ! Minor fix to RF_FILEREAD() (non-string param GPF)
    % Minor opts to RF_FILEREAD().
    * RF_FULLPATH() changed to .prg level macro (from C).
    * Some formatting tweaks to hbformat.prg.
    + Added generation of shared hbformat executable to build process.
    * Using DEFAULT (common.ch).
    ! Using hb_osFileMask() instead of "*.*".
    * Minor tweaks to header output.
    ! Added to distruct.txt.

2009-05-25 10:30 UTC+0300 Alexander Kresin <alex at belacy.belgorod.su>
  + utils/hbformat
  + utils/hbformat/hbformat.prg
  + utils/hbformat/hbformat.ini
  + utils/hbformat/Makefile
    + Harbour source formatter utility has been added. The command line to call it:
         hbformat [-r] [options] [@config.ini] file[s]

      -r option ( recursive ) forces formatting files in all nested directories.
      Default options ( their values you may find commented in a provided hbformat.ini )
      provides the style, accepted in Harbour prgs. The hbformat.ini must be in the same
      directory, where the hbformat.exe is. You can use additional ini file and point to
      it in a command line with the '@' before it. Options in a command line are the same,
      which are in ini file - for example, -lCase=no forces to not make case conversion.

  * utils/Makefile
    * Makefile has been changed to build the hbformat

2009-05-24 13:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Minor cleanups.

2009-05-24 13:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Changed multitarget support. Instead of special .hbt extension
      (which was not removed), not -target=<target>[.hbm|.prg] option
      can be used to force a distinct target from the command line.
      This way it's more flexible, easy to use and clear without needing
      a special extension alias.

      Here's the updated usage:
      There are two ways to do multitarget hbmk2 sessions:
      1.) hbmk2 [<common_params1>] -target=target1[.hbm|.prg] [<common_params2>] -target=target2[.hbm|.prg] [<common_params3>]
          Examples:
             hbmk2 -target=prog1 -target=prog2 -target=prog3
             hbmk2 -target=prog1.prg -target=prog2.prg -target=prog3.prg
             hbmk2 -target=mylib1.hbm -target=mylib2.hbm -target=myapp.hbm
             hbmk2 -trace -pause -target=mylib1.hbm -target=mylib2.hbm -target=myapp.hbm -beep
      2.) hbmk2 [<common_params1>] -target <target1_params> -target <target2_params> [-notarget <common_params2>]
          Examples:
             hbmk2 -target hello1.prg -target hello2.prg
             hbmk2 -trace -target hello1.prg -target hello2.prg
             hbmk2 -trace -target hello1.prg -target hello2.prg -notarget -beep

    * Changed ' = ' operators to macro LEFTEQUAL().
    + Added Set( _SET_EXACT ) setting to make sure above operator
      works regardless of caller/default state.
    ; NOTE: IMO it would be useful to add a pseudo function
            equivalent to non-exact equality operator. This would
            clear up hacks like above.

  * doc/dirstruc.txt
    ! Typo.

2009-05-24 11:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Terminology cleanup: x64 -> x86-64

2009-05-24 11:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added section: HOW TO GET SOURCE CODE.
    + Added hint how to use dirs with spaces.

  * ChangeLog
    ! Fixed header in my prev commit.

2009-05-23 14:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to morph harbour binary extension according to target
      platform. This should fix HB_INSTALL_PREFIX autodetection and
      also -trace display of harbour command line.
      Please test.

  * harbour/bin/hb-func.sh
    ! Changed comp= line to not have a filter. Filters aren't
      supported here, even the whole line isn't processed yet
      by hbmk2.

  * INSTALL
    * Minor correction.

2009-05-23 11:13 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    * reduce the scope of default options in hbmk.cfg to given platform
      and compiler {arch&comp}. Viktor please verify it.

2009-05-22 22:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % mingw tool extensions now again have ".exe" extension, but
      only on Windows, it's slightly more optimal this way.

2009-05-22 19:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/axcore.c
    ! Fixed 'this' -> 'lpThis'
    ; Lots of errors remain with msvc.

  * utils/hbmk2/hbmk2.prg
    * Minor cleanup.

2009-05-22 18:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to only add -march/-mtune gcc parameters for mingw/gcc
      targets. These values are ignored by mingwarm on Windows, but
      generate errors on Linux.

  * contrib/hbfimage/fi_winfu.c
    + FI_WINDRAW() now accepts pointer type as second parameter.
    ! FI_WINDRAW() fixed warning with gcc 4.4.0.

2009-05-22 17:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to use hb_osPathSeparator() instead of hardcoded
      backslash in mingw* init section, as it may also be used
      on *nix in cross compilation scenarios.
    ! Dropped .exe extensions from mingw* init section to also
      work on *nix systems.
    * Extended xmingw, mingw32ce detection for all *nix systems.

  * contrib/hbodbc/odbc.c
    ! Cast.

  * INSTALL
  * config/global.cf
    * Removed requirement of 3.81 or upper GNU Make, now it's a
      recommendation only. If I understand correctly after
      2009-05-22 16:28 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
      older ones can also be used without parallel build feature.
      Lowered minimum version to 3.70.

2009-05-22 07:52 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/hbqt.h
  * harbour/contrib/hbqt/hbqt_qpushbutton.cpp
  * harbour/contrib/hbqt/qth/QPushButton.qth
  * harbour/contrib/hbqt/tests/demoqt.prg
    ! Fixed an abnormality in QPushButton() implementation.
      Thanks CarozoDeQuilmes for info.

2009-05-22 16:28 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/dir.cf
    * do not enable parallel execution rules for GNU makes 3.7* and 3.80*
      which are known to have problems with them

2009-05-22 15:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added autodetection of xmingw and mingw32ce tools on Linux.
      (untested)

  * contrib/hbwin/legacy.prg
    + Added win32prn and win32bmp compatibility classes.

  * contrib/hbwin/hbwin.ch
  * contrib/hbwin/tests/testprn.prg
    * Moved macros to hbwin.ch.
    * Minor opt in test.

  * external/sqlite3/Makefile
    - Disabled for mingwarm due to compile errors.
      Error reported on sqlite3 site.

2009-05-22 13:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed extra GT for WinCE builds.

2009-05-22 12:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbodbc/odbc.c
    + Copied dummy HB_TCHAR* macros from odbcdd.c, plus
      added dummy HB_TCHAR_CONVFROM().
    % Removed separate branches for Windows platform.
      Please test it on *nix.
    ; TODO: Except one. Currently we have no TCHAR macro
            which deals with byte strings with lengths.
            [DONE]

  * contrib/rddsql/sddodbc/odbcdd.c
    + Added HB_TCHAR_CONVFROM().

2009-05-22 12:18 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/mpkg_rpm.sh
  * harbour/harbour.spec
    ! fixed to build with sddodbc library

2009-05-22 12:07 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/debugger.prg
    * minor simplification

  * harbour/contrib/rddsql/sddodbc/odbcdd.c
    ! added dummy unicode conversion macros to fix compilation in
      non windows builds

  * harbour/contrib/hbwin/olecore.c
    ! casting

  * harbour/contrib/hbwin/axcore.c
    ! fixed unicode and WinCE compilation
    ! casting

2009-05-22 10:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddsql/sddodbc/odbcdd.c
    ! Added UNICODE support to the extent it compiles. Please
      make tests. Also SQLGetData() / SQL_C_CHAR may also need
      conversion from UNICODE.

2009-05-21 14:05 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/memvars.c
    * modified __mvDbgInfo():
      - accept as 1-st parameter also  HB_MV_PRIVATE_LOCAL and
        HB_MV_PRIVATE_GLOBAL values
      - changed parameters meaning now when less then 3 parameters is
        given this function returns number of variables and the second
        parameter is the call stack level. Memvar value and optionally
        name is returned only if 3 or more parameters is given.
        3-rd party code which used this function with two parameters
        has to be updated.

  * harbour/source/debug/debugger.prg
    * mark non local private variables in monitor as "Private^" (with "^")
    * do not show public and private variables hidden by other private
      declarations

2009-05-21 12:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    - Removed file extension retaining hack for win platforms.
      Please be aware that *.prg means *.prg* on Windows platforms.

2009-05-21 11:19 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/filebuf.c
    ! refuse to share file handles if they were open in different mode
      TODO: add support for keeping more then one handle for single file
            open and allow such combinations.

  * harbour/source/rtl/hbffind.c
    % optimized *nix version of hb_fsFind*()

  * harbour/utils/hbmk2/hbmk2.prg
    ! fixed compilation on non Windows platforms (unused variable warning)

  * harbour/include/hbset.h
  * harbour/source/vm/set.c
    + added new function hb_setGetPrinterHandle() which allows to open
      closed printer port
    ! do not force opening default port after SET PRINTER TO ""
      but delay the initialization untill other code does not call
      hb_setGetPrinterHandle()
    ! fixed filename returned by _SET_PRINTFILE, _SET_ALTFILE, _SET_EXTRAFILE
    ! fixed dpossible resource leaks whne _SET_*FILE is called recurisvely
      for user error block
    ! fixed _SET_*FILE settings to not accept files which cannot be open
      (just like in Clipper)

  * harbour/source/rtl/console.c
    * use hb_setGetPrinterHandle() to access printer handler

2009-05-21 08:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added automatic configuration for bcc compiler. This kicks in
      for bcc installations missing bcc32.cfg or ilink32.cfg next to
      bcc32.exe. In this case Lib/Include dir will automatically
      added to the lib/include lists by hbmk2. This means that
      hbmk2 will work with bare bcc installations without doing any
      manual configuration.

  * config/global.cf
    + Added link to blog dealing with GNU Make.

2009-05-21 07:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * config/global.cf
    + Added Make version check and appropriate error message in case
      wrong version found.

  * ChangeLog
    ! Typos.

2009-05-20 23:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddsql/sddodbc/Makefile
    ! Applied logic from contrib/hbodbc/Makefile.

  * contrib/rddsql/sddodbc/odbcdd.c
    ! Fixed three warnings (2 casts + 1 uninit var) with MSVC.

  ; TOFIX: These errors are shown when trying to compile in UNICODE mode [DONE]:
    ../../odbcdd.c(168) : error C2664: 'SQLDriverConnectW' : cannot convert parameter 3 from 'SQLCHAR *' to 'SQLWCHAR *'
    ../../odbcdd.c(204) : error C2664: 'SQLExecDirectW' : cannot convert parameter 2 from 'SQLCHAR *' to 'SQLWCHAR *'
    ../../odbcdd.c(239) : error C2664: 'SQLExecDirectW' : cannot convert parameter 2 from 'SQLCHAR *' to 'SQLWCHAR *'
    ../../odbcdd.c(263) : error C2664: 'SQLDescribeColW' : cannot convert parameter 3 from 'SQLCHAR *' to 'SQLWCHAR *'

2009-05-20 21:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added typical ("FAQ") error message encountered with old,
      buggy, unsupported GNU Make versions which users seem to
      often use. In case someone would RTFM.

2009-05-20 21:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/set.c
    ! Applied fix sent by Xavi. Thanks.
      I did a few minor formattings and rename, and did a
      light review, please review further and test. I seem to
      remember some deeper problems with this feature,
      reported a while ago on the list.

2009-05-20 20:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Added workaround for DIRECTORY() problem under Windows.
      '*.ext' input files weren't working if the actual filenames
      had different casing (on Windows). Also changed the hack
      to only kick in on Windows platforms, *nixes seems to work
      as expected.
    ; NOTE: This workaround should probably be moved to Harbour
            FileFind API.

  * INSTALL
    + Added HB_INC_ODBC.

  * contrib/hbwin/tests/testole.prg
  * contrib/hbwin/legacyc.c
    * Updated to reflect OLE function name changes.

  * contrib/hbwin/legacyc.c
    + Added GETACTIVEOBJECT(), CREATEOBJECT(), OLEERROR()
      compatibility calls. All of them are simple aliases to
      new OLE functions, which means there may be differences
      in behaviour. Users will need to adjust them for full
      compatibility.
      However, I'd recommend changing all code to use our
      new OLE functions and classes.

  * contrib/hbwin/Makefile
  + contrib/hbwin/legacy.prg
    * Moved TOLEAUTO() compatibility class to .prg level.
      It's a stub, inheriting from WIN_OLEAUTO. I hope TOLEAUTO
      users will fill it with required compitibility methods.

  ; NOTE: Getting these warnings with bcc:
          Warning W8075 ../../axcore.c 93: Suspicious pointer conversion in function hb_ax_init
          Warning W8075 ../../axcore.c 322: Suspicious pointer conversion in function HB_FUN___AXREGISTERHANDLER

  ; NOTE: Getting these errors with msvc (default C++ mode):
          ../../axcore.c(93) : error C2440: '=' : cannot convert from 'FARPROC' to 'HRESULT (__stdcall *)(HWND,IUnknown **)'
                  This conversion requires a reinterpret_cast, a C-style cast or function-style cast
          ../../axcore.c(146) : error C2143: syntax error : missing ';' before '*'
          ../../axcore.c(146) : error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
          ../../axcore.c(146) : error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
          ../../axcore.c(175) : error C2039: 'lpVtbl' : is not a member of 'ISink'
                  ../../axcore.c(145) : see declaration of 'ISink'
          ../../axcore.c(175) : error C2227: left of '->Release' must point to class/struct/union/generic type
          ../../axcore.c(179) : error C2143: syntax error : missing ')' before 'this'
          ../../axcore.c(179) : error C2143: syntax error : missing ';' before 'this'
          ../../axcore.c(179) : error C2059: syntax error : ')'
          ../../axcore.c(180) : error C2143: syntax error : missing ';' before '{'
          ../../axcore.c(180) : error C2447: '{' : missing function header (old-style formal list?)
          [ ...snip... ]
          ../../axcore.c(198) : error C2365: 'Release' : redefinition; previous definition was 'formerly unknown identifier'
          [ ...snip... ]
          ../../axcore.c(282) : error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
          ../../axcore.c(282) : error C2146: syntax error : missing ';' before identifier 'ISink_Vtbl'
          ../../axcore.c(282) : error C4430: missing type specifier - int assumed. Note: C++ does not support default-int
          ../../axcore.c(283) : error C2440: 'initializing' : cannot convert from 'HRESULT (__stdcall *)(IDispatch *)' to 'int'
                  There is no context in which this conversion is possible
          ../../axcore.c(284) : error C2078: too many initializers
          ../../axcore.c(322) : error C2039: 'lpVtbl' : is not a member of 'ISink'
                  ../../axcore.c(145) : see declaration of 'ISink'

2009-05-20 18:15 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbwin/hbwinole.h
  * harbour/contrib/hbwin/olecore.c
    + added public functions hb_oleSetError(), hb_oleGetError()

  * harbour/contrib/hbwin/Makefile
  + harbour/contrib/hbwin/axcore.c
  + harbour/contrib/hbwin/axfunc.prg
    + added ActiveX support. Public functions are:
      WIN_AxInit() --> lSuccess
      WIN_AxGetControl( hWnd, [ bEventHandler ] ) --> oActiveX

    ; TODO: a few warnings left. I do not know howto recast function
      type pointer [DONE]

  * harbour/contrib/hbwin/oleauto.c
    * function renames
    + :__hSink, :__cargo members

  * harbour/contrib/hbwin/olecore.c
    * function renames
    + support item to variant conversion for classes inherited from
      WIN_OLEAUTO
    - removed internal OLERELEASE()
    + added optional parameter for WIN_OleErrorText( [ nOleError ] )

  * harbour/source/vm/classes.c
    * minor optimisation

2009-05-20 09:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - hbwin/legacy.c
  + hbwin/legacyc.c
  * hbwin/Makefile
    * Renamed legacy.c to legacyc.c.

  * hbwin/win_tprn.prg
  * hbwin/hbwin.ch
    * Moved #defines to hbwin.ch header.
    * Formatting.
    + Added HB_COMPAT_XPP protection for XBPBITMAP class.

  * hbwin/win_tprn.prg
  * hbwin/win_prn1.c
    * WIN_OS_ISWIN9X() removed, now using OS_ISWIN9X().
      These OS_*() functions should be renamed in the future.

2009-05-20 01:39 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Minor update to Pelles C version support.

2009-05-19 17:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.prg
    + Added support for UTF-8 output. Currently on on *nix
      systems. The current solution is just an ugly hack,
      for the most part to test this problem in real life.
      The output format is also fixed to *nix OSes, there is
      not attempt made to detect terminal encoding, so it
      may be wrong if terminal expects something else.

  * utils/hbi18n/hbi18n.prg
    * .po_ -> .po (Przemek, please verify me, or modify it as
      you think best)

2009-05-19 11:46 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/xhb/xhbmsgs.c
    ! fixed one byte string as number emulation in some math operations
      where both expressions are one byte strings, f.e.:
         ? "A" * "B"

2009-05-19 08:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.pt_BR.po
  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.prg
    + Displaying C compiler used (with path) if autodetection
      was used and -info enabled.
    ! Workaround added to MemoLine() sometimes returning empty
      string for the last line.

  * source/rtl/tget.prg
    % Minor opt.

2009-05-19 07:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * external/sqlite3/sqlite3.c
  * external/sqlite3/sqlite3.h
    * sqlite upgraded to 3.6.14.1 (from 3.6.11)

  * external/sqlite3/Makefile
    + Enabled for bcc compiler. Seems to compile fine now.
    ; NOTE: poccarm still fails, even with pocc6.

2009-05-19 07:20 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_reg.prg
  * contrib/hbwin/win_regc.c
    * Cleanups: Documenting params, changing default, using SWITCH,
      HKEY to HKCU (from HKLM) to be friendly with restricted user
      situations (code may become incompatible), removed unused params,
      changed return values to logical, more consistently filling params
      returned by ref, fixed hkResult usage, fixed hbResult to use real
      pointer type, minor opts.
      Some of these changes may create incompatibility if:
         - no hkey is passed, since the default has changed.
         - using win_reg*() functions directly, since return value and
           hbResult type has changed.
    ! Fixed potential GPF if non-string was passed for string params.

  * contrib/hbwin/tests/testreg.prg
    + Added registry write test.

  * utils/hbmk2/hbmk2.prg
  * utils/hbi18n/hbi18n.prg
  * utils/hbrun/hbrun.prg
    * Minor opt.

2009-05-18 14:26 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgax.c
    ! Fixes to newer OLE implementation.
      Thanks to Mindaugus and Przemek for doing all the spadework.
      Now I can receive events as was doing before, fantastic.

2009-05-18 21:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Changed default workdir to use output binary dir as a base.
    ! Fixed -instpath and -compr option not working with -hblib and -hbdyn modes.

  * utils/hbmk2/hbmk2.hu_HU.po
    ! Cleaned.

2009-05-18 19:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed setup of .hbl input codepages.
    + Added support to specify output CPs for Windows/DOS/OS2
      and *nix systems.
    ; TOFIX: This isn't enough as f.e. all my *nixes require
             UTF-8 output which we currently cannot provide in a
             transparent way, so accented chars are all broken
             on these platforms. I could hack it around by
             calling HB_STRTOUTF8() on all strings going to
             output when *nix is detected, but if possible it'd
             better to do it transparently.

  * utils/hbmk2/hbmk2.hu_HU.po
    * Converted to ISO CP from 852.

2009-05-18 18:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed handling of self-detected name inducted automatic
      options (like -xhb when xhbmk2 is used) after adding
      multitarget support.

2009-05-18 17:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed handling empty command lines.

2009-05-18 17:51 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/hbmk2.hu_HU.po
    * Minor cleanup to a few texts.
    ! Fixed doing nothing for single target cmdlines after latest commit.
    + Added dir/path inheritance of .hbm file path to more options
      (-hbl, -po, -o, -L, -instpath, -incpath, -incpathtry, -i, -workdir,
      -vcshead, -tshead, *.hbl + .hbp equivalents.)
    + Added dir support for VCS ID readout.

  * utils/hbmk2/hbmk2.pt_BR.po
    ! Tabs -> Spaces

2009-05-18 15:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added experimental support for multitarget command lines.
      The final usage may be changed.
      There are two ways to do multitarget hbmk2 sessions:
      1.) hbmk2 [<common_params1>] target1.hbt [<common_params2>] target2.hbt [<common_params3>]
          where .hbt is an .hbm file just with an .hbt extension.
          Examples:
             hbmk2 mylib1.hbt mylib2.hbt myapp.hbt
             hbmk2 -trace -pause mylib1.hbt mylib2.hbt myapp.hbt -beep
      2.) hbmk2 [<common_params1>] -target <target1_params> -target <target2_params> [-notarget <common_params2>]
          Examples:
             hbmk2 -target hello1.prg -target hello2.prg
             hbmk2 -trace -target hello1.prg -target hello2.prg
             hbmk2 -trace -target hello1.prg -target hello2.prg -notarget -beep
    ! Fixed not expanding wildcards in .hbm files on *nix systems.

  * contrib/xhb/xhbcomp.prg
    * Minor formatting.

2009-05-18 11:33 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/itemapi.c
    * removed some old BCC hacks. They do not resolve possible problem
      with FPE errors so there is no sense to keep them.

2009-05-18 11:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
    ! HB_USER_LIBS_DEF -> CC_HB_USER_LIBS
    ; QUESTION: Is it a problem to move these to HB_ namespace?

  * source/rtl/lang.c
    ! Fixed to return language IDs with consistent '-' separators
      instead of '_'. We may change this to consistent '_', if
      we decide it's better.

2009-05-18 11:03 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/filesys.c
    ! fixed OpenWatcom Linux builds which does not support utimes() yet.

  * harbour/contrib/rddads/ads1.c
    * pacified two BCC warnings

2009-05-18 09:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddsql/sddmy/mysqldd.c
  * contrib/rddsql/sddpg/pgsqldd.c
  * contrib/rddsql/sddfb/fbirddd.c
  * contrib/rddsql/sddodbc/odbcdd.c
    % Minor opt.

  * utils/hbmk2/hbmk2.hu_HU.po
    * Updated.

  * utils/hbmk2/hbmk2.prg
    * Minor updates (help text).

2009-05-18 08:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -map support for djgpp. (untested)

2009-05-18 08:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % bcc hack cleaned.

  * source/rtl/memoedit.prg
    * Minor.

2009-05-17 19:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Just added bcc hack fixed to not cause problems when
      bcc is explicitly selected, but the compiler cannot be
      detected in path.

2009-05-17 19:40 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added automatic bcc configuration hack to add PSDK dir to
      the libpath list. This is to fix bcc installations where
      this isn't done in bcc configuration itself in bcc32.cfg,
      ilink32.cfg. PSDK dir is required for hbmk2 because most
      libs on the standard hbmk2 list of Windows system libs
      (like winspool) included in link process are stored in
      this subdir. It's still recommended to do this tweak in
      local bcc environment.
    ; Please test it.

  * utils/hbmk2/examples/contribf.hbp
    + Added hbqt.

2009-05-17 18:45 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddsql/sddmy/mysqldd.c
  * harbour/contrib/rddsql/sddpg/pgsqldd.c
  * harbour/contrib/rddsql/sddfb/fbirddd.c
  * harbour/contrib/rddsql/sddodbc/odbcdd.c
    * removed dummy declarations for functions eliminated by previous commit

2009-05-17 19:05 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbwin/hbwinole.h
  * harbour/contrib/hbwin/olecore.c
    + functions hb_oleParam(), hb_oleItemToVariant() made public

  * harbour/contrib/rddsql/hbrddsql.h
  * harbour/contrib/rddsql/sqlbase.c
    + added NULL SDD driver. It allows to use SQLBASE, SQLMIX RDD
      without any real SDD driver. It could be usefull to implement
      memory/array RDD
    * unspecified SDD methods are "inherited" from NULL SDD

  + harbour/contrib/rddsql/tests/arrayrdd.prg
    + "Array RDD" example added

  * harbour/contrib/rddsql/sddfb/fbirddd.c
  * harbour/contrib/rddsql/sddmy/mysqldd.c
  * harbour/contrib/rddsql/sddodbc/odbcdd.c
  * harbour/contrib/rddsql/sddpg/pgsqldd.c
    * deleted empty or default SDD methods. They are inherited from
      NULL SDD now

  * harbour/contrib/rddsql/sddodbc/tests/test1.prg
    + added svn:keywords header
    * extended to show SQLMIX index features

2009-05-17 17:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
    + added new  predefined macro __TIMESTAMP__

  * harbour/source/vm/classes.c
    ! fixed compilation in MT mode and HB_HASH_MSG_ITEMS macro

  * harbour/source/compiler/compi18n.c
    * translate '\' in source code references in .pot files to '/'

  * harbour/contrib/rddsql/sddodbc/odbcdd.c
    * cleared non ANSI C initialization

  * harbour/include/hbmacro.h
  * harbour/source/vm/macro.c
  * harbour/include/hbexprb.c
    ! force memvar context to undeclared variables used with array index
      operator []. Clipper compatible behavior

  * harbour/contrib/hbwin/hbwinole.h
  * harbour/contrib/hbwin/olecore.c
    + added hb_oleItemPut()

2009-05-16 16:55 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/rddsql/hbrddsql.h
    + added field to connection structure to store database dependent
      data

  + harbour/contrib/rddsql/sddodbc
  + harbour/contrib/rddsql/sddodbc/Makefile
  + harbour/contrib/rddsql/sddodbc/sddodbc.c
  + harbour/contrib/rddsql/sddodbc/tests
  + harbour/contrib/rddsql/sddodbc/tests/sddodbc.hbp
  + harbour/contrib/rddsql/sddodbc/tests/test1.prg
  * harbour/contrib/rddsql/Makefile
    + implemented ODBC driver for RDDSQL

  * harbour/contrib/rddsql/tests/rddsql.hbp
  - harbour/contrib/rddsql/tests/test1.prg
  + harbour/contrib/rddsql/sddmy/tests
  + harbour/contrib/rddsql/sddmy/tests/sddmy.hbp
  + harbour/contrib/rddsql/sddmy/tests/test1.prg
    * moved sddmy tests to sddmy subfolder

  * harbour/contrib/rddsql/tests/rddsql.hbp
    * changed to use rddsql library only

2009-05-16 08:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/lang.c
    % Minor opt.

2009-05-16 08:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tget.prg
    ! Fixed recent regression causing negative number to be
      handled wrongly on input.

2009-05-15 19:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fix to prev commit.
    ! Fix ignoring .po input without a language macro when
      checking .hbl dependencies.
    ! Cosmetic fix to some i18n related outputs.
    ! Fixed recent RTE when generating .hbl.

2009-05-15 17:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed incremental .hbl generation not using the whole
      list of .po's as input.

2009-05-15 17:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed -beep to work on all build failures.
    + Linking gtwin/trm/dos/os2 as non-default GT for -pause
      support (gtcgi doesn't support Inkey(0)).
    + Added -pause option to force a pause on exit in case of
      any error. This only works with alternate GTs above.
    ! Added missing -beep from help screen.

2009-05-15 15:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/hbi18n2.prg
    ! Minor fix to change dir separators to "/" so that
      there won't be multiple entries for the same file
      in mixed environments.
      (like: '#: src\file.prg:1022 src/file.prg:1022')

2009-05-15 13:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + utils/hbmk2/hbmk2.pt_BR.po
  * utils/hbmk2/hbmk2.hbm
    + Added Portuguese translation. Work of Vailton Renato. Thanks!
    ; NOTE: Quite some strings has changed since version, so the .po
            file by now needs an update from source plus some parts
            translated.

  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.prg
    * Minor updates.

2009-05-15 13:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    - Removed one unnecessary line from TROUBLESHOOTING.

2009-05-15 13:05 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/hbpp.c
    ! fixed -q2 parameter in hbpp

2009-05-15 12:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % Changed default way of updating .po files. New method supports
      incremental updates, thus much faster than previous solution.
      As a side-effect, removed from source and changed translatable
      strings won't automatically disappear from .po files.
      This new method is also much friendlier to version control
      systems, as .po entry order won't change on each minor update
      (and generate a huge commit diff).
    + Added -rebuildpo option to activate a complete rebuild of .po
      files, clearing all no more existing entries. This operation
      will take more time, will create big diffs and it's recommended
      to be done when doing a complete rebuild (maybe this will
      be automatically enforced later on).
    ; With this, hbmk2 seems feature complete. (maybe C++/C mode
      switching could be added yet, it's on the TODO list)

  * bin/hb-func.sh
    * Addition of libs= entry in hbmk.cfg file will now be
      initiated by setting envvar HB_USER_LIBS_DEF (was HB_USER_LIBS),
      to avoid potential binary build problems where locally
      set HB_USER_LIBS envvar could create an unusuable (on other
      systems) builds (hbmk2 setup).

  + contrib/rddsql/readme.txt
    + Added readme (posted on the list). Work of Mindaugas.

2009-05-15 12:03 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddads/ads1.c
    ! fixed typo in recent modification which caused that character fields
      at EOF position were not returned

2009-05-15 09:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Using HB_USERLANG() to detect language, so it now also
      works on Windows.
    + Added support for -lang= switch to override language.
    + Added support for HB_LANG envvar to override language.
      (this is the recommended method)

  * include/hbextern.ch
  * source/rtl/Makefile
  + source/rtl/lang.c
    + Added HB_USERLANG() function to retrieve ietf code of
      language set by user. Works also on Windows.

  * contrib/hbwin/win_misc.c
  * contrib/hbwin/wapi_winbase.c
  * contrib/hbwin/wapi_winuser.c
    * WAPI_*() functions moved to wapi_* files.
    + WAPI_GETPROCADDRESS() added. This is a pure wrapper to
      this Windows API.

  * contrib/hbwin/win_prn1.c
  * contrib/hbwin/win_prt.c
    % hb_parnl() -> hb_parni() where it was cast to int anyway.

2009-05-14 20:08 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/legacy.c
    + Added old MESSAGEBOX() call.

  * contrib/hbwin/win_misc.c
    * WAPI_MESSAGEBOX() now accepts pointer only.
    + WAPI_LOADLIBRARY() added, pointer based only.
    + WAPI_FREELIBRARY() added, pointer based only.
    + WIN_N2P() added to convert numeric pointers to real pointers.
    + WIN_P2N() added to convert real pointers to numeric ones.
      I know this is a hack but it's IMO better than embedding the
      conversion logic to all functions, and makes it possible to
      "bridge" this parameter passing difference between existing
      apps/libs and our developing Windows API layer.
      So f.e. 3rd party app may switch to our new API, while
      keeping some parts of his local code intact by using:
      WAPI_MESSAGEBOX( WIN_N2P( MYWINFUNC_RETURNING_A_NUMHND() ), "hello", "world", MB_OK )
      Later after doing local fixes this can be changed to:
      WAPI_MESSAGEBOX( MYWINFUNC_PROPER(), "hello", "world", MB_OK )

  * contrib/hbwin/win_dll.c
    * Changed stub order for DLLLOAD()/LOADLIBRARY(),
      DLLUNLOAD()/FREELIBRARY(), so that it workd if XBase++ parts
      are disabled.

2009-05-14 19:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    * respect HB_USER_LIBS creating hbmk.cfg

  * harbour/contrib/rddads/ads1.c
    ! fixed minimal record buffer size calculation
    ! fixed adsGetValue() method hacked to not report errors due to too
      small field buffer.
      Warning! Now ADS RDD will report any error as RTE if sth wrong
      will happen in one of AdsGet*() function when field is read so
      it's possible that also some other hidden bugs will be exploited
      and you will see RTE. Please test it.

2009-05-14 19:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * -shareable -> -fullshared/-fixshared

  + contrib/hbmysql/mysqlold.c
  * contrib/hbmysql/mysql.c
  * contrib/hbmysql/Makefile
    * Compatibility function names moved to separate file.

  + contrib/hbodbc/odbcold.c
  * contrib/hbodbc/odbc.c
  * contrib/hbodbc/Makefile
    * Compatibility function names moved to separate file.

  * contrib/hbwin/win_prt.c
    ! Applied fix submitted by Alex Strickland. Thank you.

  * contrib/hbwin/legacy.c
  * contrib/hbwin/win_dll.c
    * GETLASTERROR()/SETLASTERROR() moved to legacy.c.
      We have WAPI_GETLASTERROR()/WAPI_SETLASTERROR() and
      it's recommended to use them instead.
    + XBase++ compatible DLL handling functions marked with
      HB_COMPAT_XPP.
    ! DLLLOAD() changed back to return numeric pointer. This
      is required to stay compatible with XBase++.
    ; TODO:
      - Add C API to make DLL calls.
      - Move CALLDLL*() functions to xhb lib.
      - Add WAPI_LOADLIBRARY()/WAPI_FREELIBRARY()/WIN_GETPROCADDRESS()
        functions to replace current LOADLIBRARY()/FREELIBRARY()/GETPROCADDRESS()
        calls, fixing them to work on pointers only. [DONE]

2009-05-14 14:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -shareable/-shareable- option to control the aspect
      of harbour.so absolute dir reference. It can override
      previous rule controlled by system location detection. See
      more in help.
    * Minor internal change to one of the functions.

  + source/rtl/hbzlibgz.c
  * source/rtl/hbzlib.c
  * source/rtl/Makefile
    % Split source into two, so unnecessary code parts won't be
      included in final binaries.

2009-05-14 12:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/tests/testdll.prg
  * contrib/hbwin/win_dll.c
    + DLLPREPARECALL() will now accept pointer type as dll handle.
    + DLLLOAD() will now return pointer type, instead of numeric pointer.
      May be incompatible if the value is used outside the scope of hbwin lib.
    + DLLUNLOAD() will now accept pointer type for dll handle.
    + DLLUNLOAD() will now gracefully fail if non pointer or numeric param
      is passed.
    + DLLCALL() will now accept pointer type for dll handle.
    + GETPROCADDRESS() will now accept pointer type for dll handle.
    ; TODO: Remove compatibility with numeric pointers.

  * contrib/hbwin/win_misc.c
    * WIN_SHELLEXECUTE() no longer accepts numeric pointers
      as optional first parameter. Use pointers instead.

2009-05-14 11:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddads/rddads.h
    ! Fixed version autodetection for ACE clients 9.00.0.7.
      Now 900 is detected, previously it was 910 (Sybase
      retrofitted some macros from 9.10 into this minor update.)

2009-05-14 10:55 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed regression causing -o not to work in -hbcmp mode.
      (bug introd in the compile/link phase split)
    + Added support for -o in -hbcmp mode for pocc compilers.
    + Added support for -o in -hbcmp mode for owatcom compilers.
    ; Please test.

  * contrib/rddads/rddads.h
    - Deleted some commented lines targeting compatibility with
      some now forgotten macros.

2009-05-14 08:56 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddads/ads1.c
    * re-enabled workaround code for wrong character field size returned by
      AdsGetFiled() for all ACE versions until we will not have good
      confirmation from Extended System that problem is fixed in some
      newer client versions.

2009-05-14 02:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/Makefile
  + source/rtl/tgethb.prg
  * source/rtl/tget.prg
    + HB_EXTENSION functionality (:hideInput() and :style()) moved
      from GET to a new derived class called HB_GET(). It means
      this functionality is available in default builds.
      Further extensions can be added to this class.

2009-05-14 02:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * contrib/xhb/hbcompat.ch
  * source/rtl/setkey.c
    + Added HB_SETKEY() which is similar to SETKEY() but contains
      3rd parameter extension. Now this functionality is available
      for default Harbour builds under this new function name.
    + Added cross mappings for xhb SETKEY().

  * source/rtl/setfunc.prg
    + F11/F12 key handling now protected with HB_C52_STRICT instead
      of HB_EXTENSION so it will available in default builds.
    - Other HB_EXTENSION protected feature deleted (allowing to
      assign non-string key sequences to F keys. This effect can
      easily be achieved with direct SETKEY() calls, so it wasn't
      an essential extension here.

  * source/rtl/hbffind.c
    + Internal HB_EXTENSION protected part enabled.
    - Deleted HB_EXTENSION dealing with Windows-specific attribute
      chars. Those needing this functionality can access it using
      C level API.

  * source/rtl/tpopup.prg
  * source/rtl/ttopbar.prg
    - Deleted minor (non Clipper-compatible) behaviour change
      in handling disabled menu items when HB_EXTENSION
      is enabled.

  ; Only remains few class extensions covered by HB_EXTENSION.
    Overall there is no reason anymore to use this macro.
    TODO: Solve these using inheritance. [DONE]

2009-05-14 01:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed very rare potential inconsistency between timestamp values.

2009-05-14 01:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/memoedit.prg
    ! Fixed infinite loop in code below (this was a long time problem):
      ---
      MemoEdit( "Please press F2 for infinite loop", 0, 0, MaxRow(), MaxCol(), .F., "FunCtr" )
      FUNCTION FunCtr()
         RETURN 0
      ---
      Patch provided by Xavi [jarabal]. Thank you.

  * contrib/hbwin/oleauto.prg
  * contrib/hbwin/olecore.c
    * Minor formatting.

2009-05-14 01:16 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddads/ads1.c
    * enable workaround code added in previous commit only for ACE 9.00.
      If other ACE clients need it too then please report them.
      Fernando reported that 9.10 is fixed.

2009-05-14 01:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed -map for msvc compilers.
      (regression since splitting compile/link phase)

2009-05-14 00:23 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddads/ads1.c
    ! added workaround for ACE bug: character fields longer then 23 bytes are
      increased by one byte when read by AdsGetField().

2009-05-13 23:48 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed vary bad bug: possible complex variable corruption caused by
      missing hb_itemClear().
    % minor optimization

2009-05-13 16:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/Makefile
  + contrib/hbwin/legacy.c
    + Added deprecated compatibility wrappers:
      MESSAGEBOX(), ANSITOWIDE(), WIDETOANSI(), OLE2TXTERROR().
    + Added deprecated compatibility wrapper TOLEAUTO for HB_OLEAUTO
      class. This is probably not enough as there are other remaining
      incompatibilities.
    ; TODO: users needing this please tweak it further.
    + Added deprecated compatibility wrapper hb_oleWideToAnsi(), which
      now calls hb_mbtowc(). Not fully compatible for error cases, old
      one could return NULL in some cases.
    ; TODO: Switch to hb_mbntowc().
    + Added deprecated compatibility wrapper hb_oleAnsiToWide(), which
      now calls hb_wctomb(). Not fully compatible for error cases, old
      one could return NULL in some cases.
    ; TODO: Switch to hb_wcntomb().

  * contrib/hbwin/win_misc.c
    + Added WAPI_MESSAGEBOX()
    + Added WIN_ANSITOWIDE() (rewritten using common API. Please check.)
    + Added WIN_WIDETOANSI() (rewritten using common API. Please check.)
    ; NOTE: ANSI/WIDE conversions aren't 100% compatible for error
            situations and empty strings. Old version could return NIL
            in certain situations.

  ; None of these were tested besides successful compile.

2009-05-13 14:59 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/runner.c
    % optimized memory allocation for symbol tables used in loaded .hrb
      files to store whole symbol table with all symbol names in single
      memory block. It makes HVM cloned table structure synced with the
      one used by runner.c fixing possible static memory leak.

2009-05-13 14:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to accept any kind of parameter with -runflag= switch.
    ! Fixed to not call hb_FSetAttr( ".hbmk", FC_HIDDEN ) for *nix systems.
      This creates inaccessible dirs for some reason.
    ! Fixed to not beep in -hbrun mode.

2009-05-13 08:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/olecore.c
    % Using hb_retc_const()

2009-05-13 08:29 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/Makefile
    ! Updated according to prev commit.

2009-05-13 08:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.hu_HU.po
  * utils/hbmk2/hbmk2.prg
    + Added -tshead=<file> option to create a .ch header with
      build timestamp information in it: _HBMK_BUILD_DATE,
      _HBMK_BUILD_TIME_, HB_BUILD_TIMESTAMP_.
    * -opt/-noopt -> -optim/-nooptim to avoid name ambiguity.
    + Added feature to -vcshead= to create a locally rolled
      build number if there is no version control system detected.
      In this case _HBMK_VCS_TYPE_ will be defined as "hbmk"
      and _HBMK_VCS_ID_ will be initialized with a string, starting
      with "1" and incremented on each hbmk2 call.
    * Internal change to componentize hbmk2 functionality, clearing
      away all STATIC vars and some parameter passing hacks.
      Work in progress, TODO added.
    ! Fixed cosmetic bug in debug output when making .po.

  * source/rtl/mlcfunc.c
    ! Fixed warning appeard in latest change.

  * source/rtl/trim.c
  * source/compiler/hbfunchk.c
    - Removed HB_EXTENSION protected second extended parameters
      from RTRIM() and ALLTRIM(). If you miss this option, please
      report it on the list, we may readd such functionality under
      some different name.
      INCOMPATIBLE for HB_EXTENSION builds.

  * doc/dirstruc.txt
  * bin/hb-func.sh
  * utils/hbmk2/examples/contribf.hbp
  - contrib/hbole
  * contrib/Makefile
  + contrib/hbwin/oleinit.c
  + contrib/hbwin/olecore.c
  + contrib/hbwin/hbwinole.h
  + contrib/hbwin/oleauto.prg
  + contrib/hbwin/tests/sample.odt
  * contrib/hbwin/tests/testole.prg
  - contrib/hbwin/win_tole.prg
  - contrib/hbwin/win_ole.c
  + contrib/examples/hboleold
  + contrib/examples/hboleold/tests
  + contrib/examples/hboleold/tests/testole.prg
  + contrib/examples/hboleold/win_tole.prg
  + contrib/examples/hboleold/win_ole.c
  + contrib/examples/hboleold/Makefile
    * Replaced old hbwin OLE implementation with
      new implementation in hbole. Thanks to
      Mindaugas Kavaliauskas for the new implementation.
      Those who need the old implementation in the
      meantime for any reason, can find it in contrib/example/hboleold.
    ; TODO: Fill the few missing features (ActiveX/FiveWin
            compatibility). [DONE]

  * ChangeLog
    * Marked two TODO/TOFIX done.

2009-05-13 07:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_prn2.c
  * contrib/hbwin/win_tprn.prg
  * contrib/hbwin/tests/testprn.prg
  * contrib/hbwin/win_prn1.c
    ! Trying to restore these files with their revision history,
      after recent removal.

2009-05-13 07:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-win-spec
  * harbour-wce-spec
  * bin/hb-func.sh
  * doc/dirstruc.txt
  * doc/whatsnew.txt
  - contrib/hbwinprn
  * contrib/Makefile
  * contrib/hbwin/Makefile
  + contrib/hbwin/win_prn1.c
  + contrib/hbwin/win_prn2.c
  + contrib/hbwin/win_tprn.prg
  + contrib/hbwin/tests/testprn.prg
  * utils/hbmk2/examples/hmg.hbp
  * utils/hbmk2/examples/fwh.hbp
  * utils/hbmk2/examples/contribf.hbp
    ! Undone undiscussed (worsened by recent mailing list problems)
      changes done in previous two commits.
      The direction in Harbour is that we try to gather all
      Windows specific functionality into one contrib (hbwin),
      if there is a fault or missing feature we fix it at the
      proper place (in this case in hbole) instead of splitting
      hbwin lib into pieces.
    ; TOFIX: Refix deleted change history for "moved" files. [DONE]
    ; TODO: Move hbole to hbwin and fix missing OLE bits in hbwin. [DONE]

  * ChangeLog
    ! Fixed duplicated header in one of the entries after prev two commits.

2009-05-12 15:55 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * ChangeLog
    ! Fixed header on ChangeLog

2009-05-12 15:49 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  + contrib/hbwinprn
  + contrib/hbwinprn/Makefile
  + contrib/hbwinprn/tests
  + contrib/hbwinprn/tests/hbwinprn.hbp
  + contrib/hbwinprn/tests/testprn.prg
  + contrib/hbwinprn/win_prn1.c
  + contrib/hbwinprn/win_prn2.c
  + contrib/hbwinprn/win_tprn.prg
  - contrib/hbwin/tests/testprn.prg
  - contrib/hbwin/win_prn1.c
  - contrib/hbwin/win_prn2.c
  - contrib/hbwin/win_tprn.prg
  * bin/hb-func.sh
  * contrib/hbwin/Makefile
  * contrib/Makefile
  * doc/dirstruc.txt
  * doc/whatsnew.txt
  * harbour-wce-spec
  * harbour-win-spec
  * utils/hbmk2/examples/contribf.hbp
  * utils/hbmk2/examples/fwh.hbp
  * utils/hbmk2/examples/hmg.hbp
    * WIN_PRN windows printing class moved out of "hbwin" lib
      to a new "hbwinprn" lib

2009-05-12 18:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed not recognizing -incpath/-inctrypath
    ! Removed prioritizing own C compiler when detecting
      C compiler. This resulted in msvc64 not being recognized
      when using an MSVC build of hbmk2.
    + Added -instpath= option to specifiy dirs where target gets
      copied after a successful build.

2009-05-12 18:05 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/filesys.c
    + added support for millisecond precision in hb_fsGetFileTime()/
      hb_fsSetFileTime() in Linux builds. Please note that file time
      precision depends also on used file system and Linux kernel so
      it does not have to work in all cases.

2009-05-12 16:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -hbrun option which will run the target without trying to
      build it. If target is missing, the command will fail.
    + -run/-hbrun options will now run GUI target executable using 'start'
      command on Windows platforms so that hbmk2 will return and leave
      the app running.

  * include/hbextern.ch
    + Added HB_GZPUTC().

  * include/hbsetup.ch
    - Removed HB_EXTENSION from documented list of build modifier macros.

  * source/common/hbverdsp.c
    - Deleted HB_EXTENSION dependent part.

  * source/rtl/mlcfunc.c
    - Deleted HB_EXTENSION branch. Please modify your program to
      use Set( _SET_EOL ) instead of passing EOLs explicitly to
      memo functions. This works also in xhb.
      INCOMPATIBLE for HB_EXTENSION builds.

  * source/rtl/alert.prg
    ! Minor in comment.

  * source/rtl/saverest.c
    - Removed SAVESCREEN()/RESTSCREEN() extra "lNoCheck" parameter
      when HB_EXTENSION is enabled. Please report on the list
      if you need this functionality.
      INCOMPATIBLE for HB_EXTENSION builds.

  * source/compiler/hbfunchk.c
    ! Fix to prev: AT() declaration.

  ; TODO: Clean rest of HB_EXTENSION stuff. [DONE]

2009-05-12 15:48 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbzlib.c
    + added HB_GZPUTC( <pGZipStream>, <nByte> ) => <nResult>

2009-05-12 10:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/hbcompat.ch
    + Added HB_GETENV() <-> GETENV() conversions.
    + Added MEMOWRIT() translation for xhb sources.

  * source/rtl/at.c
  * source/rtl/gete.c
  * source/rtl/memofile.c
    - Deleted HB_EXTENSION branches. Users of extended
      GETENV(), GETE(), AT() and MEMOWRIT() functionality
      will have to use hbcompat.ch to stay compatible with xhb.
      INCOMPATIBLE change for those who enabled HB_EXTENSION
      in Harbour. Hopefully xhb will implement HB_AT() and
      HB_GETENV() in the future so hbcompat.ch will become
      unnecessary.

   * include/hbextern.ch
   + source/rtl/radiobhb.prg
   * source/rtl/radiobtn.prg
     * RADIOBUTTON() Harbour extension moved to a separate file
       to cause no harm for programs defining this function locally.
       At the same time, HB_EXTENSION protection got removed so
       it can be accessed in default builds as a RADIOBUTTO()
       alternative.

2009-05-12 09:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/cmdline.txt
  * doc/howtosvn.txt
    + Added CC copyright.

  * source/rtl/alert.prg
  * include/hbextern.ch
    + HB_ALERT(). Now this function holds all extended features:
      nDelay support and any type for first parameter.
    * ALERT() now behaves completely along Clipper version, without
      extensions. HB_EXTENSION no longer modifies its behaviour, so
      if someone needs these extended features, there is no need to
      build with HB_EXTENSION, only ALERT() calls have to be
      converted to HB_ALERT(). INCOMPATIBLE (in some scenarios).

  * contrib/hbtip/utils.c
    % TIP_TIMESTAMP() code cleaned to remove redundancy of
      having two full distinct copies of this function. Now
      platform independent parts are kept common.
    ! TIP_TIMESTAMP() fixed hb_parl() to hb_parnl() for 'hours'
      parameter. I wonder how this bug wasn't noticed till now.
      Please someone test, maybe I'm missing the point of this
      parameter, but it's unlikely the intent was a logical value
      as it's later converted to timestamp.

  * contrib/hbtip/thtml.prg
  * contrib/hbtip/sendmail.prg
  * contrib/hbtip/httpcln.prg
  * contrib/hbtip/ftpcln.prg
    * END -> END*
    * Minor formatting.

  * contrib/hbtip/base64x.c
  * contrib/hbtip/smtpcln.prg
    * Formatted.
    * Minor optimizations (File() -> hb_FileExists(), ::AuthPlain()
      simplification).
    % BUILDUSERPASSSTRING() rewritten in Harbour. It's a very
      simple function.

2009-05-12 01:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -beep/nobeep/beep- options to enable beep signal
      when build is finished. In case of error a double beep
      will be heard.

  * INSTALL
    * Minor formatting.

2009-05-11 21:21 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/gencc.c
    ! added missing HB_GENC_LABEL() call in hb_p_pushtimestamp

2009-05-11 14:43 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexprop.h
  * harbour/include/hbexprb.c
  * harbour/source/common/expropt2.c
    + added compile time optimization for hb_stot() function

2009-05-11 14:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added TROUBLESHOOTING section. Contains only obvious,
      yet missed information.
    + Added few words about HB_DIR* envvar.

  * external/libpng/LICENSE
  * external/libpng/pngerror.c
  * external/libpng/pngrio.c
  * external/libpng/pngconf.h
  * external/libpng/pngset.c
  * external/libpng/pngwio.c
  * external/libpng/pngrutil.c
  * external/libpng/pngwutil.c
  * external/libpng/pngread.c
  * external/libpng/pngmem.c
  * external/libpng/png.c
  * external/libpng/pngtest.c
  * external/libpng/png.h
  * external/libpng/pngrtran.c
  * external/libpng/link.txt
    * Updated libpng to 1.2.36 (from 1.2.35)

2009-05-11 13:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/workarea.c
    * formatting

  * harbour/source/vm/Makefile
    * minor cleanup

  * harbour/config/dir.cf
    ! added protection against double build call when -j<n> is used in
      install phase

2009-05-08 14:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tget.prg
  * source/rtl/tclass.prg
    * hb_SToT( "" ) -> hb_SToT().

  * contrib/hbodbc/odbc.c
    + Added copyright, after extensive cleanup/fixing work.
    * ISCHAR() protected hb_parcx() calls changed to hb_parc().

  * contrib/hbole/tests/testole.prg
    * Checking for object creation in ADO example.

  * contrib/rddado/adordd.prg
    * Minor formatting.

2009-05-08 14:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/Makefile
    * respect HB_HVM_ALL user settings
    ! export HB_HVM_ALL value set automatically - otherwise it's not seen
      when HBVMMT is compiled

  * harbour/source/vm/classes.c
    * exteneded :classsel() build in method to repsect scope given as
      2-nd parameter and return extended information compatible with
      :ClassFullSel() implemented in xHarbour by Francesco Saverio Giudice.
      This extended info is returned when 3-rd parameter is .T.

  * harbour/source/rtl/dateshb.c
    * do not generate RTE on wrong params in HB_STOT() function

  * harbour/contrib/xhb/xhbfunc.c
    + added hacked function which allows to send messages without respecting
      scope. It works only for the most visible data and does not support
      any automatic casting.

  * harbour/contrib/xhb/dumpvar.prg
    ! fixed HB_DumpVar() results on platforms where CRLF has different
       length then 2
    % small improve in hash item presentation
    + added __objGetMsgFullList() and __objGetValueFullList() as static
      functions. Code borrowed form xHarbour by Francesco Saverio Giudice.
    * make HB_DumpVar() working with object values.

2009-05-08 10:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tclass.prg
    ! Fix to prev commit.

  * contrib/hbole/tests/testole.prg
    + Added ADODB example. Submitted by Enrico Maria Giordano.

2009-05-08 09:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to not attempt cycling through all specified languages
      if target .po or .hbl filename doesn't contain a language macro.
    ! Fixed to strip encoding from LANG value.
    * Some changes to modularize language/encoding detection.
      (work in progress)

2009-05-08 07:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tclass.prg
    % All loops optimized to use FOR EACH.

2009-05-08 07:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tclass.prg
  * source/rtl/treport.prg
  * source/rtl/tpersist.prg
    + Added support for TIMESTAMP types.

  * source/rtl/tclass.prg
    % Using SWITCH in AddData()/AddClassData().

2009-05-08 01:36 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/xhb/stream.prg
    ! disabled call to HB_IsByRef(). Such function does not exist in Harbour
      and in current xHarbour it does not work.

  * harbour/contrib/xhb/hbserv.c
    ! removed some peaces of not working old code which used pHVMFuncService.
      With some calling convention this code can cause application crash on
      exit in xHarbour so it should be fixed there too.

  * harbour/contrib/xhb/regexrpl.prg
    ! use HB_ISREGEX() instead of xHarbour only HB_ISREGEXSTRING()

  * harbour/contrib/xhb/xhbfunc.c
    + added xHarbour compatible HB_CREATELEN8() and HB_GETLEN8() functions.
      They save/restore 64bit signed integers in/from 8 bytes strings.
      In Clipper terminology they can be called: LL2BIN()/BIN2LL().
      Original xHarbour version of HB_CREATELEN8() and HB_GETLEN8() were
      implemented by Giancarlo Niccolai.

2009-05-07 19:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tget.prg
    ! Fixed to check for ::cType != NIL before
      each SWITCH ::cType statements. Thanks to Przemek
      for pointing it out.

  * source/rtl/alert.prg
    % Using hb_CStr() in extended mode. Also thanks to Przemek.
    % Some minor opt.

2009-05-07 16:52 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcompdf.h
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyc
    + added compile time optimization for switch statements with constant
      values, i.e. for code like:
            proc main()
               local x := 0
               switch 3
                  case 1;     x += 100;   exit
                  case 2;     x += 200
                  case 3;     x += 300
                  case 4;     x += 400;   exit
                  case 5;     x += 505;   exit
                  case 6;     x += 606
                  otherwise;  x += 1000
               endswitch
               ? x
            return

2009-05-07 15:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/alert.prg
    + Added TIMESTAMP support for Alert() (extended mode only)

  * contrib/xhb/dumpvar.prg
    ! Fixed hash function name.

2009-05-07 12:13 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/dbgwa.prg
    ! Guard against recursive debugger activation when a user callback
      containing debug info is implicitly called from the debugger's workarea
      browser. By Phil Krylov borrowed from xHarbour.

2009-05-07 08:55 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tget.prg
    + Added TIMESTAMP support for GETs.
    % Optimizations using SWITCH and FOR EACH.

2009-05-07 08:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/hbmk2.hu_HU.po
    % LoadPOTFiles() loop optimized. (debug condition removed,
      initializing aTrans manually, moved one assigment.)
    * Tweaked a few message texts.
    + Added support for xhb compatible platform macros.

2009-05-06 21:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % Applied __I18N_potArrayJoin() tweak to embedded LoadPOTFiles()
      function. This hugely boosts .pot merge performance for large
      number of these files.

2009-05-06 21:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/mpkg_deb.sh
    * accept also slang1 for GTSLN

2009-05-06 20:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/utils/hbi18n/hbi18n.prg
    % added support for optional reusing hIndex table in repeated calls
      to __I18N_potArrayJoin() with the same aTrans array.

  * harbour/source/rtl/hbi18n2.prg
    % reuse hIndex table in repeated calls to __I18N_potArrayJoin()

2009-05-06 20:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/hbmk2.hu_HU.po
    % Optimize to do only one .pot -> .po merge per session
      (was one merge per target language)
    + Added screen feedback for .po/.hbl related operations.
    % Don't do .po rebuild if no source file has changed.

2009-05-06 19:10 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbole/olecore.c
    ! fixed assign method return value
    * modified hb_oleVariantToItem() to save stack's return item

2009-05-06 16:05 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/rddsql/sqlbase.c
    ! fixed double memory freeing and GPF. Thanks valgrind!

2009-05-06 14:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Further fixes to .po file handling functionality after real
      life testing. What needs to be handled gracefully is that
      it's perfectly normal that a file doesn't have a .pot
      file generated (when the source doesn't have any translatable
      texts). Unfortunately this situation adds some hard-to-detect
      problems which can in turn cause .po translations to be lost.
      Since the only current way to detect if translatable texts
      exist is to check for the .pot file, if a .pot file is missing
      for other reasons (manual deletion, corruption) hbmk will take
      it normally and remove related translations from .po files.
      I don't know what could be a good solution to this problem.
      The other issue is scalability: Since there is no way to
      update .po files with only partial .pot information (coming
      from recompiled sources in that build session), each build
      session has to do a full .pot merge and update (for all
      languages). This is slow, if you have some idea how to make
      this incremental, please speak up.
      Probably we should reverse the logic and take the .po file
      (containing translations) as a base, and add new pairs from
      _available_ .pots. Pair removal (IOW cleanup) should be an
      option, done periodically (before release), but not something
      happening in each build session. This would also solve the problem
      of retaining old translations, since they will stay there until
      we specifically ask the system to remove them. Maybe that's
      what we should do. Przemek, what do you think?

2009-05-06 13:14 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/blob.ch
    ! fixed minor typo

  * harbour/source/rdd/dbffpt/dbffpt1.c
    ! fixed two bugs in garbage collector. One of them was critical and could
      cause FPT or DBV file corruption when memoblock size was smaller then 8
      bytes. Thanks to Mike Evans for self contain example.

2009-05-06 10:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbexprb.c
    + Allowing user defined 'gettext' functions to be used
      under the names hb_i18n_gettext[_strict|_noop]_*(),
      where * is a function name postfix.

2009-05-06 09:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/Makefile
    ! Disabled HB_HVM_ALL for owatcom/win compiler.
      It takes *very* long time to compile hvmall.c
      (Reported by Marek Horodyski).
      Please make tests on other platforms whether it does the same.

2009-05-06 09:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/hbmk2.hbm
  - utils/hbmk2/hbmk2.hu_HU.pot
  + utils/hbmk2/hbmk2.hu_HU.po
    * Changed hbmk to use official gettext terminology, where
      .pot refers to raw extracted translation file, .po refers
      to merged .pot files which holds the actual translations.
      hbmk switch names and extensions changed accordingly.
    ! Fixes to .po from .pot generation support.

2009-05-06 00:20 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed -pot= option mentioned in prev entry.
    ! -pot= refinement to handle missing source .pots (which
      is normal). Also added/fixed some lng related debug options.
    ! Remaining debug texts made non-translatable.
    ; NOTE: It's now possible to handle all aspect of translation
            files using hbmk2 alone. (extraction from source ->
            creation of unified translation file -> merging this
            file with previous version retaining existing
            translations -> creation of .hbl file from .pots)

2009-05-05 19:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/hbmk2.hu_HU.pot
    + Added new -pot= switch with which it's possible to create
      one .pot file for the whole project. When this switch is
      used, Harbour compiler will be run with -j parameter so
      that .pot files will be generated.
      hbmk will take care of preserving existing translations.
      This changes contains parts taken from hbi18n, work of
      Przemek, copyright retained.
    ; TOFIX: For some reason update of existing .pot file with
             new one doesn't work. It's probably something obvious
             but I cannot see what. [DONE]

2009-05-04 19:40 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/rddsql/sddmy/mysqldd.c
  * harbour/contrib/rddsql/sddpg/pgsqldd.c
    * added protection against double resource freeing

2009-05-05 18:09 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/utils/hbi18n/hbi18n.prg
    * expand wildcards in given file names on non *nix like platforms

2009-05-05 08:54 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtwvg/tests/demoxbp.prg
    ! Minor formattings.

2009-05-05 17:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Further fixes to texts.
    + Added hb_cdpSelect() call as provision. Also included a few CPs
      in executable.

  * utils/hbmk2/hbmk2.hu_HU.pot
    + Finished HU translation (probably it could be tweak with
      regards to terminology).

2009-05-05 17:19 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
    * generate .pot files when -j is used with -s switch just like .ppo
      are created when with -p is used with -s

2009-05-05 17:05 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcomp.h
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/compi18n.c
    * changed -j<path>/ and -j<file> behavior when more the one .prg file
      is compiled. Now when <path>/ is used then it's respected by all
      compiler .prg modules. When <file> is used then only single .pot
      file is generated but it contains i18n entries from all compiled
      .prg modules.
    * generate .pot files when -j is used with -s switch just like .ppo
      are created when with -p is used with -s

  * harbour/ChangeLog
    + added two thanks notes, one to Miguel and using HeapAlloc() and
      second to Walter Negro for his DATETIME work in xHarbour what gives
      valuable test platform for Harbour and was important inspiration for
      Harbour TIMESTAMP implementation.

2009-05-04 17:52 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgcore.c
  * harbour/contrib/gtwvg/wvgcuig.c
  * harbour/contrib/gtwvg/wvgcrt.prg
    ! Fixed many artifacts. Probbaly it is difficult to jot down all.

2009-05-05 03:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Minor fixes to texts.

  * utils/hbmk2/hbmk2.hu_HU.pot
    + Continued HU translation.

2009-05-05 00:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbi18n2.prg
    + added new Harbour internal i18n functions:
       __I18N_POTARRAYTRANS() and __I18N_HASHJOIN()

  * harbour/utils/hbi18n/hbi18n.prg
    + added new switch to hb18n tool:
         -a    add automatic translations to 1-st .pot file using
               translations from other .pot or .hbl files

2009-05-04 18:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbole/tests/testole.prg
    + Readded CDO and OO open examples (working).

  * utils/hbmk2/hbmk2.hbm
    + Added .hbl file generation.

  * utils/hbmk2/hbmk2.prg
    + Added translator info to banner.
    ! Minor fix to not display job # if single-threaded compilation is done.
      (Thanks for __enumBase() trick to Przemek)
    * Some steps to better support xhb shared mode (untested).
    + Added filter support for .prg and .c/.cpp input files.
      (This also means that input files with '{' '}' char pairs in them
      aren't supported anymore).
    ! Minor terminology fix in one of the rare error messages.
    ; TODO: ? Adding GNU Make support to .pot -> .hbl generation, plus
            we'd also need to develop a common rule for naming and
            placement for these translation files. Current hbmk2 method
            cannot be considered final.

  + utils/hbmk2/hbmk2.hu_HU.pot
    + Added Hungarian translation (not complete/final yet).

2009-05-04 17:40 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbole/oleauto.prg
  * harbour/contrib/hbole/olecore.c
    * added runtime error on descend FOR EACH ICollection enumeration
    * added a few more runtime errors
    * fixed reference counter managament if OLE object is used as
      parameter for another OLE function call
    + implemented array parameter support
      TODO/TOCHECK: multidimentional array support

  * harbour/contrib/hbole/tests/testole.prg
    * changed test to work with current hbole library
    + added new OppenOffice tests

2009-05-04 16:45 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/include/hbexprb.h
    * suppressed warning for hb_i18n_gettext("")

2009-05-04 10:00 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/bmdbfcdx.c
  * contrib/hbbmcdx/hbbmcdx.h
    * Synchronized with current dbfcdx.

2009-05-03 15:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Translation improvements.
    ! Fixed some strings not marked as translatable.
    + Added CVS detection (not much use, but anyway).
    ; Pls regerenate .pot files.

2009-05-03 10:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added experimental and partial support to build using/for xhb.
      This is to help some 3rd party lib developers who'd like to
      target both compilers. Some aspects of xhb support aren't working
      or working slightly differently: Default Harbour switch is
      -n instead of -n2 which isn't supported in xhb. Everything
      related to dll handling won't currently work. Cross-compiling
      won't work either due to at least differences in __PLATFORM__
      macros. Anyway, play with it and tweak the source if needed.
      I hope we can add support without adding too much hacks into
      hbmk2 source, if however we need to bend logic too far, I'd
      rather leave those problematic parts of to keep the code
      maintainable. F.e. xhb compatible COMP/ARCH values aren't
      supported and I don't plan to add them.
      Enable support by renaming hbmk2 to have an 'x' prefix: xhbmk2,
      or use -xhb command line switch. The only intent is be able
      to use hbmk2 to build binaries from sources using xhb compiler
      and libs. Also notice that I've made just very light tests
      only with bcc55 compiler.
      [ notice: xhb support doesn't mean you can compile hbmk2 with
        xhb. This wasn't intented or planned. ]

  * utils/hbmk2/examples/contribf.hbp
    ! Fixes.

2009-05-02 22:09 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Cleanup: Added few internal constants.
    * Cleanup: Some debug strings marked as non-translatable.
    + Help screen forming changed to be friendly to translators.
      Please update .pot files.

2009-05-02 12:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Minor cleanups. (func/proc scopes)

2009-05-02 12:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added multilanguage support. Now LC_ALL, LC_MESSAGES and
      LANG envvar will be checked for language ID and loading
      of translation will be attempted from <hbmkdir>hbmk2.<lang>.hbl
      file (not final name yet). You can compile such .hbl file by using
      command:
      > hbi18n -g -ohbmk2.<lang>.hbl hbmk2.<lang>.pot
      You can create .pot using this command:
      > ..\..\bin\harbour hbmk2.prg /jhbmk2-<lang>.pot /i..\..\include
      Where <lang> is preferable the std ISO language ID, like: pt_BR.

2009-05-02 10:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Minor s&r error in help text.

2009-05-01 20:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! hbmk2 -> hbmk

2009-05-01 20:09 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    ! Typo in old i18n entry.

  * utils/hbmk2/hbmk2.prg
    * Formatting.

  * contrib/xhb/hbcompat.ch
    + Added i18n() compatibility translation.

2009-05-01 16:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Changed all output texts to translatable format, using hb_StrFormat().
    + Added hb_i18n_gettext() to all translatable texts, so now it's possible
      to create a .pot file. It's not yet perfect for the help text yet.

2009-05-01 14:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added MT support for rest of C compilers (gcc, pocc).
      Please test. MT support is now complete, maybe in the
      future it can be added for resource compiling if that's
      a bottleneck for some users.

2009-05-01 13:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    + Added generation of libpq.lib from .dll for msvc. (not tested)
    + Added generation of QT implibs for msvc. (not tested)
    + Copying QT implibs for mingw.

  * source/common/hbverdsp.c
    ! Minor in comment.

  * utils/hbmk2/hbmk2.prg
    + Added MT support for C compilation phase.
      Single input compilers aren't covered yet (gcc, pocc).
    + Added -debugtime internal option to measure running time.

2009-04-30 15:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/utils/hbmk2/Makefile
    ! do not use hbvmmt on platforms which does not support MT

2009-04-30 13:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -vcshead=<file[.ch]> option. This will generate
      a header with local repository information: type of
      repository and unique ID (in case of SVN this is the
      revision number).

2009-04-30 10:55 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/hbmk2.hbm
  * utils/hbmk2/Makefile
    + Added experimental support for multithreaded compilation.
      Enable with -jobs=<x>.
      Currently Harbour compilation phase supports MT.
      If it works out well and details are polished, the same
      can be implemented for C/resource compilation phases, too.
      I'd appreciate of someone with MT experiences could review
      current code and spot bugs/problems with it before I go
      any further.
    * Changed to build hbmk2 in MT mode.

2009-04-30 09:43 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added repository ID retrieval function. Currently supports
      SVN, GIT and Mercurial. Not yet activated.

2009-04-30 01:03 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/hbdbginf.c
    ! generate debugger break point line info also for very large blocks
      (HB_P_PUSHBLOCKLARGE)

2009-04-29 20:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Refixed -map option for *nix non-darwin systems. Well,
      at least for Linux.

2009-04-29 19:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for macros in -l options.

2009-04-29 19:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Readded -map support for *nixes.
    ! Changed -strip support for darwin to use separate strip command.
    + .hbmk dir is now set hidden.
    + Target name is displayed on screen.

  * ChangeLog
    - Removed one empty line from license header after last commit.
      (Przemek pls update your script to reflect that)

2009-04-29 19:27 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/genc.c
    ! respect \ escaping in C strings when #pragma dump C code is scanned
      for static Harbour functions

2009-04-29 15:57 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
    * corrected automatically added ChangeLog entry in my last commit
      to respect new information in ChangeLog header added by Viktor.

2009-04-29 14:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexprb.c
    ! modified := optimization to keep alive original LValue name
      used in the assign expression. It fixes FOR / NEXT loops which
      in which such optimized expression were used, f.e.:
         FOR n := n + 1 TO 10; ? n; next
      In fact it's only workaround for potentially bigger problem with
      multiple references to single expression which we probably have to
      resolve if we extend the compiler to not generate PCODE online
      for each compiled statement but only after preprocessing and
      optimizing at least whole function or procedure.

2009-04-29 13:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/generator/hbqtgen.prg
  * contrib/hbqt/hbqt.h
  * contrib/gtqtc/gtqtc.h
  * contrib/gtqtc/Makefile
    ! Fixed to use no dir when including qglobal.h. This fixes
      darwin compile error.

  * utils/hbmk2/hbmk2.prg
    ! Fixed static lib output extension for rest of compilers (*nix/gcc).
    ! Fixed 'lib' prefix handling for static lib output names when dir
      was present in the name.
    * Now -inc files will be put into .hbmk/* dirs.
    ! Disabled -map option for *nix gcc as it doesn't seem supported
      (probably isn't needed on these platforms anyway).
    % Cleaned code redundancy in forming output names.
    ; TOFIX: gcc/darwin complains that -s switch is obsolete and being ignored. [DONE]

2009-04-29 11:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/dbgfxc.c
    + Using hb_vsnprintf() instead of C RTL vsnprintf().
      Not tested, but this should be a plugin replacement.

2009-04-29 00:49 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * COPYING
    + Added Creative Commons Attribution-ShareAlike 3.0 Unported (CC-by-sa)
      license section. To be used for misc text, documentation and typically
      everything which isn't source/program code. Currently these files
      (in part or whole) are covered by this license:
      INSTALL
      ChangeLog
      doc/whatsnew.txt
    ; TODO: If this works out well, IMO we should apply this license to
            all non-code parts of our repository. /doc, /man sections
            and some files in the root specifically. We can also cover
            the homepage content with this license.

  * INSTALL
    + Added CC-by-sa license.

  * doc/whatsnew.txt
  * ChangeLog
    + Added CC-by-sa license. I've covered all my past entries with
      this license, besides these, only the new entries will fall
      under the license.

  * contrib/hbblat/blatwrp.c
    ! Fixed extern declaration to work in C++ mode.

  * source/lang/msgtrwin.c
  * source/lang/msgtr857.c
    ! Typos in comments.

  * source/vm/set.c
    + Added copyright for few functions (hb_osEncode()/hb_osDecode()).

  * utils/hbmk2/hbmk2.prg
    ! Fixed RTE in Harbour-only (-gh) mode.

2009-04-28 23:54 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbole/olecore.c
    * pacified some GCC warnings

2009-04-28 23:13 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbf1.c
    ! casting

2009-04-28 21:43 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddads/ads1.c
    ! fixed two typos in last modification - thanks for the info to Mindaugas
      and Rossine.

2009-04-28 19:45 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
    * removed TOVERIFY note - Viktor checked it.

  * harbour/contrib/hbct/ctwin.c
    ! redraw windows after each WCENTER() call

  * harbour/contrib/rddads/ads1.c
    + added support for ADS_VARCHAR_FOX and ADS_VARBINARY_FOX fields
      in ADS_VFP tables

  * harbour/include/dbinfo.ch
  * harbour/include/hbrdddbf.h
  * harbour/include/hbrddcdx.h
  * harbour/include/hbrddnsx.h
  * harbour/include/hbrddntx.h
  * harbour/source/rdd/dbf1.c
  * harbour/source/rdd/workarea.c
    + added support for VFP tables with VARCHAR and VARBINARY fields
    + added support for VFP tables with NULLABLE fields
    + added new dbFieldInfo() action to check if given field is NULL, f.e.:
         ? dbFieldInfo( DBS_ISNULL, FieldPos( <cFieldName> ) )
      The above modifications were not tested with real VFP files. I do
      not have VFP. VFP users should make some real life tests with tables
      created by VFP.

2009-04-27 19:17 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddads/ads1.c
    ! fixed very bad bug in code compiled for ADS_LIB_VERSION < 600
      in ANSI<->OEM translations - the HVM item value was overloaded
      with translation results
    + added direct support for ADS_TIME, ADS_TIMESTAMP and ADS_MODTIME
      fields and HVM TIMESTAMP values in field get/put operations, seek
      and scopes.
      Warning! Support for timestamp values in VFP tables is limited
      and does not fully respect whole Harbour timestamp arithmetic, f.e.
      timestamp values read from index keys are rounded to whole seconds
      or setting scopes to data values on timestamp indexes does not work
      like in native RDDs or in ADT tables.
      To ADS users: please make some real life tests and report problems
      if any.

2009-04-27 08:59 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
    ! Fixed a very important issue of focussing. Now F3 and F4
      correctly set the focus to window in question.
      The flickering cannot be avoided as QT hides the window
      before setting the flags until I come up with another way.

2009-04-26 22:14 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/generator/qt45.qtp
  * harbour/contrib/hbqt/hbqt.h
  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/hbqt_qtextcodec.cpp
  + harbour/contrib/hbqt/hbqt_qtextencoder.cpp
  + harbour/contrib/hbqt/hbqt_qtextfragment.cpp
  + harbour/contrib/hbqt/hbqt_qtextframe.cpp
  + harbour/contrib/hbqt/hbqt_qtextframeformat.cpp
  + harbour/contrib/hbqt/hbqt_qtextimageformat.cpp
  + harbour/contrib/hbqt/hbqt_qtextinlineobject.cpp
  + harbour/contrib/hbqt/hbqt_qtextitem.cpp
  + harbour/contrib/hbqt/hbqt_qtextlayout.cpp
  + harbour/contrib/hbqt/hbqt_qtextlength.cpp
  + harbour/contrib/hbqt/hbqt_qtextline.cpp

  + harbour/contrib/hbqt/TQTextCodec.prg
  + harbour/contrib/hbqt/TQTextEncoder.prg
  + harbour/contrib/hbqt/TQTextFragment.prg
  + harbour/contrib/hbqt/TQTextFrame.prg
  + harbour/contrib/hbqt/TQTextFrameFormat.prg
  + harbour/contrib/hbqt/TQTextImageFormat.prg
  + harbour/contrib/hbqt/TQTextInlineObject.prg
  + harbour/contrib/hbqt/TQTextItem.prg
  + harbour/contrib/hbqt/TQTextLayout.prg
  + harbour/contrib/hbqt/TQTextLength.prg
  + harbour/contrib/hbqt/TQTextLine.prg

  + harbour/contrib/hbqt/qth/QTextCodec.qth
  + harbour/contrib/hbqt/qth/QTextEncoder.qth
  + harbour/contrib/hbqt/qth/QTextFragment.qth
  + harbour/contrib/hbqt/qth/QTextFrame.qth
  + harbour/contrib/hbqt/qth/QTextFrameFormat.qth
  + harbour/contrib/hbqt/qth/QTextImageFormat.qth
  + harbour/contrib/hbqt/qth/QTextInlineObject.qth
  + harbour/contrib/hbqt/qth/QTextItem.qth
  + harbour/contrib/hbqt/qth/QTextLayout.qth
  + harbour/contrib/hbqt/qth/QTextLength.qth
  + harbour/contrib/hbqt/qth/QTextLine.qth

    + Added more classes.

2009-04-26 18:43 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/tests/wvtext.cpp
    + Implemented all BOX characters including B_THIN and B_FAT.
      B_THIN protocol respects the aspect ratio means half column
      characters are exactly of size column width.

      /* Press F9 to view all box types. */

2009-04-26 11:17 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/tests/wvtext.cpp
    + Implemented destructors. Now opening/closing new windows
      release memory properly. There is a small leakage remains yet,
      about 40 kb per window, but I am not been able to figure out
      what action causes it. May be in future...
    ! Optimized "Mark & Copy" operation. Now previous buffer is used
      instead of creating a new image.
    ! "Mark & Copy" operation now do not generate INKEY() events.
      Important until we find a solution via SysMenu.

    /*
       So far I did not receive any input from anybody.
       Does it mean this project do carry little importance
       to be pushed forward ?
    */

2009-04-25 20:33 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
    + Implemented "Mark & Copy" operation.
      Just drag the mouse while left button is pressed.
      I could not access SysMenu to initiate this operation
      as is implemented in GTWVG but still it is a much needed
      feature to have it.

2009-04-25 15:47 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
    ! Formatting per Harbour standards.

2009-04-25 11:05 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
    + Implemented Box Characters B_DOUBLE_SINGLE.

  * harbour/contrib/gtqtc/tests/wvtext.prg
    + <F9 Boxes>.

2009-04-25 08:46 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
    + Implemented Box Characters independant of fonts and OS.
      At this moment only B_SINGLE.
      This feature relies on the DispBox()* functions which
      sets the attributes in GT. Final goal should be recognizing
      Box characters from the char itself, but it may be trivival to
      handle as Harbour must be heading for UNICODE.

      Przemek, your attention to this fact is requested.

  * harbour/contrib/gtqtc/tests/wvtext.prg
    ! Tweaked for inkey( 0.1 ). No more GPFs now. Play freely.

2009-04-25 10:51 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    + Added "inspired by" text for hb_retc*_buffer() functions'
      old ChangeLog entry.

2009-04-25 10:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/complex.c
    ! fixed bug reported by Ranier

  * harbour/ChangeLog
    * added information to old ChangeLog entry that the idea of parsing the
      code inside #pragma begindump to detect static harbour functions in
      C code inside was 1-st time implemented by Andi Jahja in xHarbour.

2009-04-25 02:05 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbole/olecore.c
    ! fixed OleCreateObject(), OleGetActiveObject() return value

2009-04-24 15:41 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
  * harbour/contrib/gtqtc/tests/wvtext.prg
    ! Code cleanup.
    ! Adopted KDE's calss variable naming convention.
      Class variables now begin with "_" (underscore character).
      Please follow this convention strictly.
    + IMPLEMENTED : hb_gtInfo( HB_GTI_RESIZEMODE, HB_GTI_RESIZEMODE_ROWS ).
    ! Tweaked caret implementation.
    ! Renamed :consoleArea => :drawingArea. More natural for hbqtxbp.lib.

    /* Please try like this:

       1.
       - Execute wvtext.exe
       - Press F10 -> New Window
       - Press <ESC> -> Boooooom GPF (inkey(0))

       2.
       - Execute wvtext.exe
       - Press F10 -> New Window
       - Click on Main Window
       - Click on New Window
       - Press <ESC> -> Normal Exit

       I am trying to find why to click on Main Window for
       closing the New Window. I have not been able to reach any
       logical reasoning. Help is requested.

       Play : Resize New Window - Browser expands by rows and columns.
    */

2009-04-25 01:35 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbole/olecore.c
    ! fixed C++ compile errors

2009-04-24 23:15 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbole/olecore.c
  * harbour/contrib/hbole/oleauto.prg
    + implemented FOR EACH enumeration. The code was proposed by
      Przemyslaw on mailing list. Some fixes applied.

2009-04-24 16:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/common/hbprintf.c
  * harbour/source/common/hbstr.c
    + added hb_vsnprintf() - vsnprintf() replacement
    * synced type of parameters in hb_snprintf() used for builds with and
      without HB__USE_OWN_SNPRINTF

2009-04-24 13:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    + Added support for HB_BUILD_IMPLIB for mingw.
      (only when using Windows shell to build it, which is now the
      preferred method.)
      ace32 implib method was applied to most other libs, too. I didn't
      test it, it may need further tweaks. I'll tweak it gradually, with
      hbmk2 it is probably better to use implibs from native locations
      where possible (like we do for QT on all platforms and like we do
      for all non-Win platforms), so even other compilers may get
      further changes.

2009-04-24 13:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Changed QT examples according to 4.5.1 new default dir layout.

  * contrib/gtqtc/tests/demoqtc.prg
    ! Removed zip dependency.

  * contrib/gtqtc/tests/wvtext.prg
    ! Fixed non-lower case filename.
    ! Fixed wrong reference to test .ico file.
      BTW, is .ico portable? I doubt, so we should probably
      switch to .png in context of QT.
    ! Fixed wrong reference to test.dbf.

  * contrib/hbqt/tests/hbqt.hbp
  * contrib/gtqtc/tests/gtqtc.hbp
    + Added support for HB_QT_DIR envvar to find QT libs.
      This is the same envvar which is needed for Harbour
      builds, so you may already have it set up.
    ; TODO: If this works out well, I'll add the same method
            for other contribs too.

  * utils/hbmk2/hbmk2.prg
    + libpaths will now be checked for existance before being
      added to the list.

2009-04-23 22:11 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
  * harbour/source/macro/macro.yyc
  * harbour/source/macro/macro.y
  * harbour/source/macro/macro.yyh
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyh
    * pacified some MSVC warnings

2009-04-23 17:46 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapiitm.h
  * harbour/source/vm/itemapi.c
    * declared return value of hb_itemTypeStr() as const

  * harbour/harbour.spec
    * removed hbsqlite3 from default builds - it has to be optional due
      to external dependencies in current version

2009-04-23 14:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    % optimized memory allocation in cloned symbol tables to store
      whole symbol table with all symbol names in single memory block

2009-04-23 11:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/tests/hbqt.hbp
    * Minor adjustment to supc++ lib inclusion filter.

  - contrib/gtqtc/tests/hbqt.hbp
  + contrib/gtqtc/tests/gtqtc.hbp
    - Removed .hbp with wrong name. This file also contained
      local, environment dependent QT libpath.
      Please don't add such lines to SVN !!
      Instead use a local .hbp file which points to the QT path
      in your environment:
      --- qt_path.hbp
      {win}libpaths=C:\devl\Qt\2009.01\qt\lib
      --- (don't commit this file, keep it local !)
      or, add the same line to your local hbmk.cfg file.
    + Added new .hbp file with multiplatform content.

2009-04-23 10:26 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexprb.c
    + added support for indirect (by macro or some other expression)
      assign of object items

2009-04-23 00:44 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
    ! IMPLEMENTED : MT protocol. GTQTC now responds to it but
                    there are still glitches. I think this is the
                    result of improper implementation of C++ code
                    and QT's underlying SIGNAL/SLOT mechanism.
    ! FIXED : SetMode()
              Resizing behavior, now it is acceptable.
              Cursor blinking rate, now responds quickly.
              Code cleanup.

  * harbour/contrib/gtqtc/tests/hbqt.hbp
    ! Updated for MT compilation.

  * harbour/contrib/gtqtc/tests/demoqtc.prg
  * harbour/contrib/gtqtc/tests/wvtext.prg
    ! GTQTC is now MT compliant. You may experience bumps
      as QT event loop has not been adapted to Harbour's completely.
      There are glitches which are under investigations, but
      proof of fruitation is there. Play with wvtext.exe, Press F10
      for new window, please copy /tests/tests.dbf to this folder first.
      Try to open many windows.
      NOTE: You will have to click main window twice to make it
      respond to key events. Still I do not know why it does not
      get the keyboard focus with one click.
      Try to close the windows with ESC or clicking on the X button.

   /*  I NEED YOUR INTEREST AND EFFORTS TO MAKE THIS PROJECT A SUCCESS    */
   /*                                                                     */
   /*  Przemek, please review the code and guide me what way it should go */


2009-04-22 20:39 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/hbpcre/pcreinal.h
    ! repeated BOOL typedef

  * harbour/tests/speedtst.prg
    ! fixed to compile with non [x]Harbour compilers

2009-04-22 15:51 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Stub obj wasn't deleted in all occasions.

2009-04-22 15:17 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbi18n2.prg
    % create index using hash array to speedup __I18N_POTARRAYJOIN()
      operation

2009-04-22 14:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Finished to .pot support (changed po to pot).
    * Renamed po= .hbp setting to pots=.
    ! Few minor fixes in error cases in .hbl generation.

  * utils/hbi18n/hbi18n.prg
    ! Typo in header.

2009-04-22 12:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Changed to not try to create an .hbl automatically if no
      explicit .hbl file is passed or -hbl option used. Instead
      now -hbl= or -hbl option will force creation of an .hbl
      file with an automatic name.

2009-04-22 11:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed regression in handling .c stub after recent changes.
    ! Fixed potential problem with inctrypath in some situations.

2009-04-22 10:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added .hbl file to possible input file list.
      (this is supported alternatively to -hbl= option)

  * source/hbpcre/pcrevutf.c
  * source/hbpcre/pcre.h
  * source/hbpcre/pcreconf.c
  * source/hbpcre/pcreinfo.c
  * source/hbpcre/config.h
  * source/hbpcre/pcrenewl.c
  * source/hbpcre/pcrefinf.c
  * source/hbpcre/pcreexec.c
  * source/hbpcre/pcreinal.h
  * source/hbpcre/pcretabs.c
  * source/hbpcre/pcredfa.c
  * source/hbpcre/pcrecomp.c
  * source/hbpcre/pcrexcls.c
  * source/hbpcre/pcreprni.h
  * source/hbpcre/ucp.h
    + Upgraded to PCRE 7.9 (from 7.8)

2009-04-22 08:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + Implemented .po to .hbl conversion inside hbmk2, with
    incremental feature (.hbl will only be regenerated if any
    .po file dependencies are newer). This is currently the
    default, no -inc switch is needed for that.
    You can specify .po files in the command line, in po=
    lines in .hbp files, output file is passed via -hbl= option.
    To handle multiple languages without hassle, you can use
    ${lng} macro in .po and .hbl filenames, plus pass the list
    of languages in -lng=<lang comma list> option:
    app_${lng}.po -hbl=lang/${lng}.hbl -lng=en,hu,sk,pl
    [ Actual .po -> .hbl conversion code was taken from hbi18n
    tool made by Przemek, with little modifications. ]
  ! Fixed to check included .res file timestamp, but not parse it.
  + Added macro support in libs= .hbp lines.

2009-04-21 18:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added new CPU architecture filters: x86, x86_64, ia64, arm
    + Added new CPU macro: ${hb_cpu} (returning values above)
    ! Fixed filter keyword detection on darwin due to typo.

2009-04-21 18:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbrddcdx.h
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    + added support for CLIP indexes with IgnoreCase flag

2009-04-21 08:08 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * utils/hbmk2/hbmk2.prg
    ! Line # 1056 - Parenthesis not closed.

2009-04-21 16:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added filter support to -o option.
    + Added macro support to -o option.
    ! Fixed missing win system libs from bcc linker command.
      IMPORTANT: bcc users will have to make sure they add bcc PSDK
                 lib to their bcc32.cfg and ilink32.cfg files,
                 otherwise hbmk2 won't work for them:
                 --- bcc32.cfg
                 -I"C:\devl\BCC55\Include"
                 -L"C:\devl\BCC55\Lib";"C:\devl\BCC55\Lib\PSDK"
                 --- ilink32.cfg
                 /L"C:\devl\BCC55\Lib";"C:\devl\BCC55\Lib\PSDK"
                 ---
                 (or manually pass that with -L option to hbmk2)
    * -i option moved to main help screen.

  * utils/hbmk2/examples/fwh.hbp
    + Added odbc32 lib.

2009-04-21 13:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbrddcdx.h
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    + added support for numeric indexes which store keys as modified
      32bit big endian integer values - undocumented VFP hack.

2009-04-21 12:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for ${hb_self} in .hbm files.
    + -incpath/-i will now also add paths to resource compiler.

2009-04-21 12:31 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/valtoexp.prg
    ! fixed typo in copy and past in previous modification

2009-04-21 11:56 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbdate.c
    ! fixed decoding fractional part of seconds in timestamp expressions
      when less the 3 digits were used.

  * harbour/source/rtl/dateshb.c
    + added optional logical parameter to hb_TSToStr() function to enabled
      packed/stripped form

  * harbour/source/rtl/valtoexp.prg
    % use hb_TSToStr() with new pack parameter in hb_ValToExp() and hb_CStr()

2009-04-21 04:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed minor but fatal oversight in prev commit.

2009-04-20 21:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to find headers in originating file directory.
      This may need further tweaking. This works a little
      differently in Harbour and C compilers and hbmk2 tries
      to mimic both. Possible that it's still not fully
      compatible, if you know something pls speak up.
    + Added -incpath= option and incpaths= .hbp option. This
      is now the preferred method to add headers paths. All
      path will be added to both Harbour and C compiler.
      Important: a synonym for this switch is simply -i, just
      like before, but now the path will be also added to
      C compiler command line.
    * From now on Harbour include dir will always be the first
      one on the include path list passed to compilers. Before
      in Harbour it was always first, in C compilers it was
      always last. (disregarding include dirs passed directly
      to compiler, which will always come first, but isn't
      recommended). The ordering is thus this:
      compiler ... flags harbourincludedir incpaths ...
    - Deleted include path option detection, from now on
      only those paths will be scanned wich were passed to
      hbmk2 via -incpath/-i options.
    % Added -kmo optimization for hbmk2 source.
    + -info and -quiet will now work in .hbm files.
      (they will not control some close-to-startup messages
      if specified this way though)

  * external/libhpdf/Makefile
  * external/libpng/Makefile
    + Enabled for darwin.

  * contrib/hbqt/generator/hbqtgen.prg
    ! Recent fix to hbqt.h applied to generator.

  * utils/hbmk2/hbmk2.hbm
    - Removed no longer needed -km switch.

  * utils/hbmk2/examples/hmg.hbp
  * utils/hbmk2/examples/hwgui.hbp
  * utils/hbmk2/examples/fwh.hbp
    % Updated to use -incpaths=

  * utils/hbmk2/examples/fwh.hbp
    * Updated to work like similar hwgui and hmg files.
    ; QUESTION: Is hbwin lib required for FWH?

2009-04-20 20:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/filesys.c
    ! restored hack used for non POSIX compatible _POSIX_SYNCHRONIZED_IO
      definition.

2009-04-20 20:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbver.c
    * added missing const to function return type

2009-04-20 20:17 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbsqlit3/hbsqlit3.c
    * updated to compile with older then SQLITE3.6.1 libraries

2009-04-20 17:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbqt/hbqt.h
    ! fixed QT directory names in #include directives for case sensitive
      file systems

  * harbour/source/vm/cmdarg.c
    ! fixed HB_CMDLINE() to work with linear not square cost.

2009-04-20 16:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.hbm
    + Added -km option.

  * utils/hbmk2/hbmk2.prg
    ! Fixed typo preventing filter keywords to work.

2009-04-20 16:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + -quiet will now suppress command output in case of error.
      This is useful when the commands are large and it makes
      valuable tool output visible.
    ! Fixed recent typos in help code causing RTE.

2009-04-20 16:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Typo in 'allwin' filter handling.

2009-04-20 16:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Using hb_process*() functions instead of hb_run() to elminiate
      some bad side effects of the former (like command line limits
      on Windows). hb_run() is now only used in DOS builds.

2009-04-20 14:32 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcomp.h
  * harbour/source/common/hbdate.c
  * harbour/source/rtl/strmatch.c
  * harbour/source/rtl/fssize.c
  * harbour/source/rtl/hbffind.c
  * harbour/source/rtl/filesys.c
    * enabled some POSIX function added to 1.8 Linux OpenWatcom builds
      and cleaned some workarounds not longer necessary

  * harbour/source/rtl/hbproces.c
    + added hack with small sysconf() implementation which is still missing
      in OpenWatcom 1.8. Now it's possible to build Harbour in Linux using
      officially distributed OpenWatcom 1.8

  * harbour/source/rtl/disksphb.c
    * added TODO warning message

  * harbour/source/compiler/cmdcheck.c
    ! fixed typo in memory freeing in repeated -p<path> options

2009-04-20 14:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to inherit .hbm dir before doing wildcard expansion.
      This makes wildcarded input files work in .hbm files
      located in different than current dirs.

2009-04-20 13:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed wildcarded input files to handle directory component.

2009-04-20 12:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Made possible to use -hbdyn/-hblib options in .hbm files.

2009-04-20 11:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + .c header detection now takes place before doing anything.
      Also compiler setup got moved to the beginning of the
      process.
      This allows to make a stop if something is missing. Some
      more steps are needed to exploit that in practice.
      Please test, this may cause regressions, I didn't test
      all combinations.
    * Generalized internal support for header location detection.
      (now can support any C compiler and it's also possible to
      add this feature for .prg files if needed)
    + Added new filter keywords: allgcc, allwin, allmingw, allmsvc,
      allpocc, allicc.
    + Added support for include dirs with spaces for msvc and mingw.

2009-04-20 08:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added experimental support for header directory autodetection.
      This means that you can pass a list of possible dirs to use
      when a .c header cannot be found in explicitly passed locations.
    ! Fixed to always disable -shared with -hbdyn.
    ! Added hbmaindllp in -hbdyn mode on win|wce.
    ! Fix in -nohbp parameter handling.
    + Added support for macros in -L, -*flag=, -workdir=
    + Added -stop command line parameter which stops execution.
      Can be used in conjunction with arch/comp filters to stop
      execution on certain platforms/compilers.
    ! Fixed to not create workdir in some unlikely combination of options.
    ! Fixed typo causing newer headers not being detected in resource files.
    + Now 'unix' can also be used in filters to check for any *nix platform.
    % Excluding some well-known headers from parsing (windows.h, ole2, os2.h
      currently)
    ; Above changes makes it possible to use hbmk2 to build our contribs.
      The only missing feature is 'install', what is a simple copy.
      ---
      -ohbpgsql

      # just for the sake of an example, not needed for real hbpgsql.
      -stop{dos}

      -inctrypath=${HB_INC_PGSQL}
      -inctrypath={unix}/usr/include
      -inctrypath={unix}/usr/local/pgsql/include
      -inctrypath={unix}/usr/local/pgsql/include/libpq
      -inctrypath={unix}/usr/include/pgsql
      -inctrypath={unix}/usr/include/postgresql
      -inctrypath={unix}/postgres/include
      -inctrypath={unix}/opt/local/include/postgresql83

      postgres.c

      pgrdd.prg
      tpostgre.prg
      ---

  * contrib/hbole/oleinit.c
  * contrib/hbole/hbwinole.h
    * Cleanups in header usage and content. This should fix
      missing hb_oleInit() symbol on some compilers.

  * contrib/examples/pp/hbpptbl.c
    - Removed HB_EXTENSION protected two lines.

2009-04-19 18:14 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
  * harbour/contrib/gtqtc/tests/hbqt.hbp
    + IMPLEMENTED : Resizing - Though some more refinement is necessary
                      but as a proof of concept it is working.
                    Window is now centered upon startup.

2009-04-19 06:14 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/Makefile
    ! Adopted along hbqt/Makefile pattern - fix to prev.
      Thanks Bisz Istvan.

2009-04-18 17:48 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/generator/qt45.qtp
  * harbour/contrib/hbqt/hbqt.h

  + harbour/contrib/hbqt/hbqt_qtextblock.cpp
  + harbour/contrib/hbqt/hbqt_qtextblockformat.cpp
  + harbour/contrib/hbqt/hbqt_qtextblockgroup.cpp
  + harbour/contrib/hbqt/hbqt_qtextboundaryfinder.cpp
  + harbour/contrib/hbqt/hbqt_qtextbrowser.cpp
  + harbour/contrib/hbqt/hbqt_qtextcharformat.cpp
  + harbour/contrib/hbqt/hbqt_qtextcursor.cpp
  + harbour/contrib/hbqt/hbqt_qtextdecoder.cpp
  + harbour/contrib/hbqt/hbqt_qtextdocument.cpp
  + harbour/contrib/hbqt/hbqt_qtextdocumentfragment.cpp
  + harbour/contrib/hbqt/hbqt_qtextdocumentwriter.cpp
  + harbour/contrib/hbqt/hbqt_qtextformat.cpp
  + harbour/contrib/hbqt/hbqt_qtextstream.cpp

  * harbour/contrib/hbqt/Makefile_gen

  + harbour/contrib/hbqt/qth/QClipboard.qth
  + harbour/contrib/hbqt/qth/QTextBlock.qth
  + harbour/contrib/hbqt/qth/QTextBlockFormat.qth
  + harbour/contrib/hbqt/qth/QTextBlockGroup.qth
  + harbour/contrib/hbqt/qth/QTextBoundaryFinder.qth
  + harbour/contrib/hbqt/qth/QTextBrowser.qth
  + harbour/contrib/hbqt/qth/QTextCharFormat.qth
  + harbour/contrib/hbqt/qth/QTextCursor.qth
  + harbour/contrib/hbqt/qth/QTextDecoder.qth
  + harbour/contrib/hbqt/qth/QTextDocument.qth
  + harbour/contrib/hbqt/qth/QTextDocumentFragment.qth
  + harbour/contrib/hbqt/qth/QTextDocumentWriter.qth
  + harbour/contrib/hbqt/qth/QTextFormat.qth
  + harbour/contrib/hbqt/qth/QTextStream.qth

  + harbour/contrib/hbqt/tests/demoqt.prg
  + harbour/contrib/hbqt/tests/wvtext.prg
  + harbour/contrib/hbqt/TQTextBlock.prg
  + harbour/contrib/hbqt/TQTextBlockFormat.prg
  + harbour/contrib/hbqt/TQTextBlockGroup.prg
  + harbour/contrib/hbqt/TQTextBoundaryFinder.prg
  + harbour/contrib/hbqt/TQTextBrowser.prg
  + harbour/contrib/hbqt/TQTextCharFormat.prg
  + harbour/contrib/hbqt/TQTextCursor.prg
  + harbour/contrib/hbqt/TQTextDecoder.prg
  + harbour/contrib/hbqt/TQTextDocument.prg
  + harbour/contrib/hbqt/TQTextDocumentFragment.prg
  + harbour/contrib/hbqt/TQTextDocumentWriter.prg
  + harbour/contrib/hbqt/TQTextFormat.prg
  + harbour/contrib/hbqt/TQTextStream.prg

    + Added several new classes, hbqtgen.prg adjusted for
      new definitions, implemented more info in the sources
      but deferred for next commit.


2009-04-18 17:41 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/Makefile
    ! Adopted along hbqt/Makefile pattern.

  + harbour/contrib/gtqtc/tests/wvtext.prg
    + Added harbour/tests/wvtext.prg here also.
      Change in only HB_GT_QTC_DEFAULT.
      This facilitates the comparison between GTWVT and GTQTC
    + Added harbour/tests/tests.ico
      Used as hb_gtInfo( HB_GTI_ICONFILE, 'tests.ico' )

2009-04-18 12:41 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
    + IMPLEMENTED :
        Fired Events : HB_GTE_SETFOCUS | HB_GTE_KILLFOCUS | HB_GTE_RESIZE
        Cursor       : SC_NONE | SC_NORMAL | SC_SPECIAL1 | SC_SPECIAL2
    ! IMPROVED    : Many artifacts.

  * harbour/contrib/gtqtc/tests/demoqtc.prg
    ! Modified to demonstarte above changes.

    NOTE: GTQTC is complete on base level. Only few gliches remain for
          cursor management under certain circumstances. The lib is
          tested on Winsow XP and QT 4.5 (2009.01). I am sure there
          may be few issues coming up more you test on different
          platforms.

          So I am looking for feedback especially from *nix users.

    (::)  At this point I will request Przemek to review gtqtc.c.h
          and point me to optimization it may require.

2009-04-17 11:47 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
    ! oMenuBar:show() => oWnd:setMenuBar( QT_PTROF( oMenuBar ) )
      Thanks Bisz Istvin for provising the clue.

2009-04-17 08:36 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
    ! Fixed more Windows specific contents. It should compile
      on *nixes now [ Qt::WindowCloseButtonHint could be the exception ]
    + Implemented timer event.
    + Implemented PALETTE functionality of GTWVT.
    + Implemented drawing console output to an image first and then
      rendered onto the screen. This requirement is initiated because
      nowhere I found a way to mimic blinking CARET.
      The proof of concept is implemened through part of image
      rendering in a timer event. It may introduce some overhead
      but please be noted that we have to live with it until we
      reach a proper solution.

      Rendered to image and then flushed to screen is a powerful
      feature of QT and we may take use of it in many ways in future.
      Probably QTWVG will exploit it to maximum if we do not
      plan some extenstions in GTQTC.

  * harbour/contrib/gtqtc/tests/demoqtc.prg
    ! Demonstrated implemented facts as above.
      Note the BLINKING block on the console, may be,
      implemented as a replacement to windows caret.

2009-04-17 08:07 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/generator/qt45.qtp
  * harbour/contrib/hbqt/Makefile_gen
  * harbour/contrib/hbqt/hbqt.h
  + harbour/contrib/hbqt/hbqt_qclipboard.cpp
  + harbour/contrib/hbqt/TQClipboard.prg
    + Added QClipboard class.
    ! Fixed hbqt.h generation not to include #define version...

2009-04-17 16:26 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/fm.c
    ! fixed typo in recent modification which broke compilation

2009-04-17 15:48 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbqt/hbqt.h
    * commented out #define QT_VERSION 0x040500

2009-04-17 15:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/Makefile
    + Enabled "amalgamated" VM lib for all compilers/platforms,
      except for those where this doesn't give any advantage, or
      it breaks the build, these are: pocc*, xcc, bcc, dmc.
      Please note that Open Watcom 1.7 might also fail (I didn't
      test), so make sure to upgrade to 1.8.

  * harbour-win-spec
  * harbour-wce-spec
  * mpkg_win.bat
  * mpkg_tgz.sh
  * harbour.spec
  * bin/hb-func.sh
  * include/hbsetup.h
  * source/vm/Makefile
  * source/vm/fm.c
  - source/vm/fm
  - source/vm/fmmt
  * utils/hbmk2/hbmk2.prg
    - Removed hbfm and hbfmmt lib references. These libs are
      no longer generated or used.
    * Narrowed HB_FM_STATISTICS presence in various source
      files. From now on the system default for all builds is
      HB_FM_STATISTICS_OFF. We may change this to
      HB_FM_STATISTICS_DYN_OFF if we find a solution to the
      potential and actual problems with this method.
      If someone needs to change mem stat default, it can be
      done by ususal means.

2009-04-17 10:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for envvar HB_VISUALC_VER_PRE80 to signal
      older MSVC versions (just like in Harbour builds).
    + Synced mscvarm optimization switches.
      The sync between hbmk2 and Harbour build switches is
      now done. The only - intentional - difference is that
      hbmk2 won't set any explicit C compiler warning level,
      but this also can be implemented later with optional
      switches.
    ! Fixed regression in win/icc linker name.

2009-04-17 08:20 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed -strip for gcc family. It got broken after switching
      to separate link phase.
    ! Fixed -bind_as_load and -multiply_defined suppress to be
      passed at link phase on darwin. Got broken like above.
      Change not tested.
    ! Fixed RTE in FINDNEWERHEADERS(3064).

2009-04-16 23:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -opt/-noopt switch (plus .hbp param) to control
      C compiler optimizations.
    + Added C compiler optimizations to all compilers identical
      to the ones used to build Harbour. Specifically MinGW,
      MSVC got new switches, bcc got -6, owatcom got fully
      synced.
    + Added internal support for C++ mode selection for all
      compilers.
    + Added -debug support for all compilers where it was missing
      (most).
    ! Synced poccarm switch with Harbour build.
    + Added -clipper, -blinker, -exospace, -rtlink compatibility
      cmdline switches.

  - utils/hbmk2/examples/minigui.hbp
  + utils/hbmk2/examples/hmg.hbp
    + Harbour MiniGUI hbmk2 param file updated
      and instructions added. Now it's possible
      to build hmg apps using hbmk2 very easily,
      see instructions in file.

  * utils/hbmk2/examples/hwgui.hbp
    + hwgui hbmk2 param file updated and
      instructions added. Now it's possible
      to build hwgui apps using hbmk2 very easily,
      see instructions in file.

  * source/vm/itemapi.c
  * source/rtl/hbffind.c
  * contrib/hbct/atnum.c
    ! Fixed macro related warnings.

2009-04-16 21:36 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbrdddbf.h
  * harbour/include/hbrddnsx.h
  * harbour/include/hbdbsort.h
  * harbour/include/hbrddcdx.h
  * harbour/include/hbrddfpt.h
  * harbour/include/hbrddntx.h
  * harbour/source/rdd/dbf1.c
    * simplified some internal DBFRDD macros/declaration

2009-04-16 17:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/garbage.c
    + added optional support for automatic GC activation.
      It's not enabled by default yet but by compilation with macro
      HB_GC_AUTO, f.e. after setting envvar:
         set HB_USER_CFLAGS=-DHB_GC_AUTO
      Automatic GC activation may be necessary for code which creates
      complex variables with cyclic references and does not execute
      any other code which may activate idle state GC call. It also
      makes unnecessary to explicitly call hb_gcAll() from user code,
      f.e. as some type of background task. If some of you were using
      code which needed such explicit GC activation then please remove
      it and make some tests with Harbour compiled with HB_GC_AUTO macro.

      This simple .prg code illustrates the problem. When linked with HVM
      without automatic GC it quite fast allocates all available memory
      and finished with out of memory error or is interrupted by OS.
      When automatic GC is enabled it can work unlimited time period
      with some fixed maximum memory usage.

            proc main()
               local a
               while .t.
                  a:={nil}
                  a[1]:=a
               enddo
            return

2009-04-16 00:37 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
    ! Fix to many unsuppoted defines on *nixes.
      Przemek, please compile again. Probably by now it will
      only 'WindowCloseButtonHint' error may appear. But reading
      the documents QT nowhere specifies that it is platform
      dependant member. Can you please comment out
      #define QT_VERSION 0x040500 in hbqt.h and compile again.
      It is left-over residual.

2009-04-16 16:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for wildcarded input files for Harbour,
      C, resource compiler and object input files.
      This also works in .hbm files. Note: You must specify
      the extension, so *.* won't work, but *.prg and *.c will.
      Use with care, as hbmk2 will pickup everything and this
      may not be what you want to do f.e. in our tests dirs,
      but it can be useful if you store source files belonging
      to the same project in one dir, or with some unique
      filename prefix.
      (some of these may be unnecessary on *nix platforms, where
      the shell does such expansion already, it's still useful
      though, as *nix users can also benefit from wildcard usage
      inside .hbm files)

2009-04-16 15:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % Skipping duplicate headers while walking the inclusion tree.
      This is a more efficient way to avoid inclusion loops,
      allowing deeper recursion.
    + Recursion level increased to 10 (from 4).

2009-04-16 12:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for source file parsing for headers in -inc mode.
      .prg, .c and .rc files are currently parsed recursively,
      include paths will be scanned for included files. There are
      currently three levels of scanning: disabled, partial (default)
      and full. Partial will scan the first 16K of each source file
      for performance reasons, full will scan the complete files.
      The source parser is currently very simple; '#include "<filename>"'
      pattern is recognized anywhere in the processed source, no
      other variations are supported ATM. Using this format is IMO
      best practice for user programs, if someone needs more
      than this, it needs to be developed, current method is quite
      fast, which is important when dealing with lots of source
      files.
    + Added option to control header scanning: -[no]head=<mode>
      This is also supported in .hbp files.
    + Added support to look in current dir for libs for compilers
      where this is supported.
    + Added cmdline option -resflag=, .hbp option resflags= and
      overall support for user supplied resource compiler flags.
    + Added support for cyg*.dll style libs.
    ! Fixed to handle libs with explicit dirs for compilers
      where this is supported.

  * config/dos/owatcom.cf
  * config/win/owatcom.cf
  * config/linux/owatcom.cf
  * config/os2/owatcom.cf
    + Added link to wlink options.

2009-04-16 00:37 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
    + Implemented : hb_gtInfo( HB_GTI_ICONFILE, cFileIco )
                  : K_MWFORWARD | K_MWBACKWARD

2009-04-15 22:27 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/tests/demoqtc.prg
    ! Implemented : hb_gtInfo( HB_GTI_CLOSABLE, TRUE | FALSE )
                  : hb_gtInfo( HB_GTI_RESIZABLE, TRUE | FALSE )
                  : hb_gtInfo( HB_GTI_CLIPBOARDDATA[, cText ] )

      Struggling  : How to manage caret ? Anybody to rescue ?

2009-04-16 04:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -inc support for lib dependencies. This means that
      changed libs will also force a target rebuild.
      I've implemented three separate logic for mingw/cygwin,
      gcc/linux+sunos and the rest of compilers. This may not
      be precisely the way each of the hbmk2 supported compilers
      wotk, but it probably covers most cases. Anyhow please
      tweak and correct if you find some problems. I did
      tests with mingw, msvc, bcc static and shared mode.
    ! Removed automatic path tweak in .hbp/libpaths=.

2009-04-15 16:22 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
  * harbour/contrib/gtqtc/tests/demoqtc.prg
    ! More complete.
      No more (IMO) Windows specific calls.
      Please let me know if it compiles fine on *nixes ?

2009-04-15 18:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed bcc targets linking wrong (own bcc) PCRE engine instead
      of the Harbour one by reordering lib list. This should fix
      hbtip problems reported on the list.

2009-04-15 17:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/xhb/xhbmsgs.c
  * harbour/contrib/xhb/xhbcomp.prg
    + added overloading relation operators (==, =, !=, <, <=, >, >=)
      to mimic xHarbour like one byte string behavior

2009-04-15 01:01 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
  * harbour/contrib/gtqtc/tests/demoqtc.prg
    .
    ! GTQTC has reached an acceptable level.
    .
    /*
      IMPLEMENTED : Screen Rendering.
                    Keyboard Input ( Please report missing defines )
                    Mouse Input ( 90% )
                    Most HB_GTI_* methods.

      TO_BE_DONE  : Resizing.
                    Icons.
                    SysMenu.
                    Window States.
                    Console Copy Operations.
                    Close [X] functionality.

      SUNUP       : A pure Clipper Applctn should run without problems.
    */

2009-04-15 08:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
  * utils/hbmk2/hbmk2.prg
    * Some cleanups resulting in incompatible changes:
      ${hb_parent} -> ${hb_self}
      -prgflag:<f> -> -prgflag=<f>
      -cflag:<f>   -> -cflag=<f>
      -ldflag:<f>  -> -ldflag=<f>
      -aflag:<f>   -> -aflag=<f>
      -dflag:<f>   -> -dflag=<f>
      -runflag:<f> -> -runflag=<f>
    + Added not yet used -jobs=<n> parameter.
    + Added array splitter to chunks functions.

  * contrib/hbtip/tests/dnldftp.prg
    ! Fix to prev.

2009-04-15 00:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + libpaths= can now have relative paths specified, and in this
      case the path will be adjusted by absolute path of host .hbp.
      This makes it possible to point hbmk2 to a .hbp file in a
      foreign dir, and let it pick up local lib dirs automatically.
    + .hbp files passed without absolute paths will now inherit
      the .hbm path if applicable.
    + Will now echo all explicitly specified .hbp filenames on
      screen in -info mode.
    + Added echo= support in .hbp files. The parameter will be
      echoed to stdout as is.
    + Added macro support for following .hbp lines:
      libpaths=, prgflags=, cflags=, ldflags=, echo=.
      Supported macros are:
      ${hb_root}: hbmk2 base dir
      ${hb_self}: .hbp file dir
      ${hb_arch}: architecture
      ${hb_comp}: compiler
      ${<envvar>}: any envvar
    + .hbp files are now searched in libpaths, too.
    ; NOTE: With above changes it's possible to refer to a 3rd
            party lib solely by pointing to its .hbp file, from
            that point all lib/include paths can be automatically
            picked up. Here's an example for hwgui, the file
            needs to be places in hwgui root dir:
            --- hwgui.hbp
            {win}prgflags=-i${hb_self}include
            {win}cflags=-I${hb_self}include
            {win}libpaths=${hb_self}lib
            {win}libs=hwgui hwg_qhtm procmisc hbxml
            {win}gt=gtgui
            ---
            Any hwgui apps can be compiled with this command:
            hbmk2 appname.prg C:\hwgui\hwgui.hbp

  * contrib/hbtip/tests/dnldftp.prg
    % Minor opt.

2009-04-14 20:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for -hbdyn option with bcc. .dll is created
      but I cannot test if it's usable.
    ! Worked around strange behaviour of filefind API, when it will
      return 'filename.extx' when we're looking for '*.ext' files.
      This can be seen with Directory().

2009-04-14 19:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed additional bcc link parameter to honor GUI/CUI mode.
      This should fix the command window for GUI GTs.

  * utils/hbmk2/examples/hwgui.hbp
    ! Fixed.
    ! Added gt=gtnul.

2009-04-14 09:04 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/contrib/gtwvg/gtwvg.c
    ! Fixed a long standing bug - window mismanaged when clicking on titlebar.
      Processed WM_NCLBUTTONDCLK:

2009-04-14 15:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed Borland stub for both GUI and CUI mode.
      This bug surfaced now that a separate link phase is always used.
    ! Fixed handling of libpaths with '-' chars in them for bcc.

2009-04-14 14:29 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Changed to put user supplied lib to the beginning of the lib
      list. This should fix situations where user lib is overriding
      some Harbour objects (like getsys).
    + Added internal switch to enable simple -inc debug.
    ! Fixed to add .prg extension for Harbour input files when
      checking their timestamp, so files passed without extension
      will now work in -inc mode.

2009-04-14 10:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmysql/tmysql.prg
    + Added 4th port parameter to TMySqlServer():New() method.

  * contrib/hbcurl/hbcurls/Makefile
    * Cleanup.

2009-04-14 00:54 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/moc_gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
    ! Managed to set fonts and resize window accordingly.
      So far just initially. Resizing scheduled.
    ! Code cleanup and arrangement.

  * harbour/contrib/gtqtc/tests/demoqtc.prg
    ! A little tweaked.

2009-04-14 09:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/hbcurl/hbcurls
  + contrib/hbcurl/hbcurls/Makefile
  * contrib/hbcurl/Makefile
    + Added generation of static flavour of hbcurl. This can
      be used to link against static libcurl.

  * utils/hbmk2/hbmk2.prg
    ! Fixed target exe name with msvc.
    ! Added /debug link switch for msvc in -debug mode.

2009-04-14 02:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -clean option to clean incremental work files and dir.
    + Added -rebuild option to force full rebuild in incremental mode.

2009-04-14 01:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Autodetection of embedded MinGW installation is now done
      *after* trying to detect user installed compiler. This way
      it's more natural to use the unified build as it will
      automatically use the user's C compiler if setup. It's also
      easier to override MinGW in unified builds, since there
      is no need to force compiler using -comp: option, it's
      enough to put preferred C compiler in the PATH.

2009-04-14 00:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -workdir:<dir> cmdline option to override default
      working dir (arch/comp) in -inc mode.
    + Added support for working directory in -inc mode.
      Due to lack of output dir option in certain compilers
      (most sadly in gcc family), these compilers will have to
      be executed for each input file, slightly reducing
      performance. I hope some day their developers will add such
      basic option.
    + -quiet option will now suppress the header lines for
      executed commands, creating a good progress output with
      '-trace -quiet'.
    ! Fixed output related regressions in msvc/bcc.
    * Removed explicit warning level settings from C compiler
      options. User can override if needed.
    * Returns errorlevel 19 instead of 9 in help mode. Now
      returns 9 if the working dir couldn't be created.
    ! Fixed resource compiler command for bcc, msvc, pocc.
      Turns out none of them supported multiple inputs.
    % Minor code size optimization in target output dependency
      checking.

2009-04-13 21:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to delete stub object in -inc mode.
    ! Fixed to handle .res input files with MinGW compilers.
    + Now using different extension (.reso) for compiled .rc and
      .res file with MinGW compilers instead of former .o extension
      which could collide with source files with the same name.

2009-04-13 20:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Added separate compile and link phases for gcc family.
      Please retest, this may cause regressions.
    * win/bcc made to use separate compile/link phases in all
      cases.
    + Added simple progress in -inc mode.
    ! Fixed to detect target timestamp in hblib/hbdyn modes.

2009-04-13 19:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for incremental build mode. Still a work in
      progress, many combinations weren't tested and some features
      may not work with certain compilers yet. (bcc/msvc/pocc/owatcom
      should be working, only msvc was tested)
    + Added support for multiple resource input files for mingw
      and owatcom.
    + Added support for inc=on/off .hbp option.
    + msvc targets now use separate link phase. This will automatically
      enable incremental linking if target already exists.
    ! Fixed not prepending CCPATH to resource compiler in mingw mode.

2009-04-13 10:46 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
    ! Mapping keys to Clipper constants - near completion.

2009-04-13 10:49 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/speedtst.prg
    ! Fixed missing hb_progname() for non-Harbour compilers.

  * include/hbextern.ch
    + Added time related new functions.

  * utils/hbmk2/hbmk2.prg
    + Added -runflag: option to pass flags to target executable.
    + Started -inc (incremental build) support. It's very early
      stage, don't expect it to work yet and please don't report
      any problems with this feature yet.

  * source/vm/asort.c
    ! Fixed to return Clipper compatible results when non-logical
      non-numeric value is returned from ASORT() codeblock.

  * utils/hbtest/rt_array.prg
    * Cleaned ASORT() tests when sorting block returns constant value.
      Now Clipper results aren't bent anymore, instead I've added
      different expected results for Harbour and Clipper. The
      difference is due to different sorting algorithms used,
      here the point is to get similar *pattern* for different
      invalid values.

  * source/rtl/philes.c
    % HB_FGETDATETIME(): Removed double call to hb_stortdt().

  * contrib/hbqt/tests/hbqt.hbp
    * Removed extra line at EOL.

  * contrib/gtqtc/tests/hbqt.hbp
    ! Removed environment dependent 'libspath=' line.
      Please don't add such path to Harbour SVN, since these
      can differ from system to system and is also non-portable.
      The correct name of the directive is: 'libpaths='.

  * contrib/gtqtc/Makefile
    % Removed double SVN ID.
      This file needs to be updated according to hbqt latest
      Makefile portability changes.

  * contrib/rddads/ads1.c
    * Minor formatting.

2009-04-13 00:29 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
    ! Started keyboard input, mapping keys to Clipper values.

2009-04-12 11:21 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/Makefile
    ! Few more optimizations.

  - harbour/contrib/gtqtc/qtconsolearea.cpp
  - harbour/contrib/gtqtc/qtmainwindow.cpp
    - Removed. Needed to have better control over the operations.

2009-04-12 08:57 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/qtconsolearea.cpp
  * harbour/contrib/gtqtc/tests/demoqtc.prg
    ! Few more HACKS - I know there are better ways to organize them.
      Now our inkey() loop is active and demoqtc exits properly.
      Plus you may see some activity in console.

2009-04-11 21:53 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtqtc/gtqtc.cpp
  * harbour/contrib/gtqtc/gtqtc.h
  * harbour/contrib/gtqtc/qtconsolearea.cpp
  * harbour/contrib/gtqtc/qtmainwindow.cpp
    ! More fixes. Now we get background colors as in .prg.
      It is a bit puzzling why I do not get text colors.

2009-04-11 12:51 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/contrib/gtqtc
  + harbour/contrib/gtqtc/gtqtc.cpp
  + harbour/contrib/gtqtc/gtqtc.h
  + harbour/contrib/gtqtc/Makefile
  + harbour/contrib/gtqtc/moc_gtqtc.cpp
  + harbour/contrib/gtqtc/qtconsolearea.cpp
  + harbour/contrib/gtqtc/qtmainwindow.cpp
  + harbour/contrib/gtqtc/tests
  + harbour/contrib/gtqtc/tests/demoqtc.prg
  + harbour/contrib/gtqtc/tests/hbqt.hbp
    + Added GTQTC - The terminal based on QT framework - files.
      NOTE: This is a proof of concept and needs an expert
            brain. I will request Przemek to set the basic GT framework
            in place. Rest will be quiet easy, easy than Windows itself.

            demoqtc.exe remains in the memory after closing it with
            X button. I have tried hard to set it right but have faised so far.
            So you may need to kill it from task manager.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added My_Alert() function which you can copy and
      paste in your GTWVG linked applications to have a GUI
      replacement of Alert() funtion.

2009-04-11 22:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/speedtst.prg
    + Showing CPU architecture.

2009-04-11 21:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbsetup.h
  * source/vm/hvmall.c
    ! HB_NO_FALTTEN -> HB_NO_FLATTEN (naming typo)

2009-04-11 20:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/bnch_win.bat
  * tests/speedtst.prg
    + Added --stdout option to restore old feature to redirect output
      to a file. Needed for bnch_win.bat.
    + In normal mode output will be saved in a file with the same name
      of the executable with .txt extension. Makes it easier to make
      side-by-side tests.
    ! Fixed SVN EOL.

2009-04-11 19:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/Makefile
    ! Fix to prev changes (for non-darwin).

2009-04-11 18:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/generator/hbqtgen.prg
  * contrib/hbqt/hbqt.h
    ! Deleted Windows-specific lines.

2009-04-11 18:23 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/Makefile
  * harbour/source/vm/vmmt/Makefile
  + harbour/source/vm/hvmall.c
    % added optional compilation HVM core files as single unit.
      It allows to use interprocedural optimizations for all defined
      functions. It's useful when compiler does not support IPO at link
      time. It should give some noticeable speed improvement for compilers
      which can benefit from such optimizations, f.e. GCC, ICC, MSVC.
      In my Linux box (GCC 4.3) it gives ~7% speed improvement in
      speedtst.prg linked with ST HVM and a little bit more in MT mode.
      It's interesting that it also reduces the HVM library size.
      At least for GCC builds.
      Set HB_HVM_ALL=yes envvar to enable such compilation.
      Warning some compiler may not compile such long single C file.

2009-04-11 17:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbver.c
    + Added skeleton for hb_verHostCPU()

  * source/rtl/trace.c
    ! HB_TRACESTRING() fixed potential GPF if non-string parameter
      was passed.

  * contrib/hbqt/generator/hbqtgen.prg
    ! Fixed demo to not refer to gtgui on non-Windows systems.
    ! Fixed RTE when source file isn't found. (not verified)
    ! Change EOL handling.
    ! Fixed to use portable path seps when generating demoqt.prg.

  * contrib/hbqt/generator/qt45.qtp
    ! Fixed to use forward slashes. Didn't test if this broke non-*nix.

  * contrib/hbqt/qth/QWindowsXPStyle.qth
    ! Fixed Windows specific QT function wrapper to compile on non-Windows.

  * contrib/hbqt/qth/QPixmap.qth
    ! Deleted Windows specific HBITMAP related functions.

  * contrib/hbqt/tests/hbqt.hbp
    + Added support for darwin

  * contrib/hbqt/Makefile
  * contrib/hbqt/generator/hbqtgen.prg
    + Added support for QT for Darwin official SDK package
      I had to change the way headers are included to follow the
      QT standard and pass each QT lib header dir on the command
      line instead of using subdirs in #include directives.
    ; TODO: Probably this change should be applied to all .qth files,
            but on Darwin it worked without this change for some reason.

  * contrib/hbqt/tests/demoqt.prg
  * contrib/hbqt/TQPixmap.prg
  * contrib/hbqt/hbqt_utils.cpp
  * contrib/hbqt/hbqt_qwidget.cpp
  * contrib/hbqt/hbqt.h
  * contrib/hbqt/hbqt_qwindowsxpstyle.cpp
  * contrib/hbqt/hbqt_slots.cpp
  * contrib/hbqt/hbqt_slots.h
  * contrib/hbqt/hbqt_qpixmap.cpp
    * Regenerated.

2009-04-11 13:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapi.h
  * include/hbver.ch
  * source/common/hbver.c
  * source/rtl/version.c
    + Added target CPU detection.
      c: hb_verCPU() -> "x86"
      prg: hb_version( HB_VERSION_CPU ) -> "x86"
    ; TODO: Host CPU detection.

  * contrib/rddsql/sddfb/Makefile
    + Enabled for msvc64

2009-04-11 13:04 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/macro.c
  * harbour/source/vm/codebloc.c
  * harbour/source/vm/hashes.c
  * harbour/source/vm/dynsym.c
  * harbour/source/vm/itemapi.c
  * harbour/source/vm/garbage.c
  * harbour/source/vm/arrays.c
  * harbour/source/vm/thread.c
  * harbour/source/vm/memvars.c
  * harbour/source/vm/extend.c
  * harbour/source/vm/set.c
  * harbour/source/vm/classes.c
    * updated to optionally compile with HB_STACK_PRELOAD

  * harbour/source/vm/hvm.c
    % small cleanup

2009-04-10 22:54 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbqt/Makefile
    * added /usr/include to list of directories scanned for QT header files

  * harbour/contrib/hbole/olecore.c
    ! added missing return
    * formatting and minor cleanup

  * harbour/source/vm/arrays.c
    * formatting

  * harbour/source/vm/asort.c
    ! minor CA-Cl*pper compatibility fix - if sort codeblock returns
      numeric value then it should be used as logical one (0 means FALSE)

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    + added macro to force static hb_stack declaration even if
      HB_STACK_MACROS is internally used

  * harbour/source/vm/initsymb.c
  * harbour/source/vm/hashfunc.c
  * harbour/source/vm/evalhb.c
  * harbour/source/vm/pcount.c
  * harbour/source/vm/runner.c
  * harbour/source/vm/debug.c
  * harbour/source/vm/pvalue.c
  * harbour/source/vm/cmdarg.c
  * harbour/source/vm/proc.c
  * harbour/source/vm/eval.c
  * harbour/source/vm/dynlibhb.c
    * do not use hbvmopt.h if it's not necessary or use hbvmint.h instead
      to clean all direct references to hb_stack variable

2009-04-10 08:00 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
    - Removed WIN specific castings.
  * harbour/contrib/gtwvg/wvgsink.c
    ! Commented out calls to hb_ToOutDebug().

2009-04-10 16:45 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/rddsql/sddfb/fbirddd.c
    * fixed msvc64 compile warnings and errors

2009-04-10 16:10 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbole/olecore.c
  * harbour/contrib/hbole/oleauto.prg
    * implemented OLE handlers using GC pointers

2009-04-10 04:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * external/Makefile
  * contrib/Makefile
    ! Fixed make error when all subdirs were excluded.

2009-04-09 20:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    - Disabled UPX support for all non-Linux *nix systems.

2009-04-09 10:51 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/hbqt_qwidget.cpp
  * harbour/contrib/hbqt/qth/QWidget.qth
  * harbour/contrib/hbqt/TQWidget.prg
    ! Commented out more non-portable functions belongings to
      Win Handles family.

2009-04-09 08:18 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/hbqt.h
  * harbour/contrib/hbqt/hbqt_qfont.cpp
  * harbour/contrib/hbqt/hbqt_qregion.cpp
  * harbour/contrib/hbqt/hbqt_qwidget.cpp
  * harbour/contrib/hbqt/TQFont.prg
  * harbour/contrib/hbqt/TQRegion.prg
  * harbour/contrib/hbqt/TQWidget.prg
  * harbour/contrib/hbqt/qth/QApplication.qth
  * harbour/contrib/hbqt/qth/QFileDialog.qth
  * harbour/contrib/hbqt/qth/QFont.qth
  * harbour/contrib/hbqt/qth/QRegion.qth
  * harbour/contrib/hbqt/qth/QWidget.qth
    ! Commented out non-portable functions belongings to
      Win Handles family.

2009-04-09 07:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for -compr=max, -compr=min to control level
      of compression. -compr=def means the same plain -compr.

2009-04-08 18:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added executable / dll compression using -compr switch.
      hbmk2 uses UPX, which needs to be in PATH to work.
      Not having UPX won't cause a fatal error even when -compr
      switch is specified.

2009-04-08 15:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    * Item marked done.

  * utils/hbmk2/hbmk2.prg
    ! Fixed for win/owatcom static mode. (multiple addresses)

2009-04-08 11:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/maindllh.c
  * source/vm/maindllp.c
    ! Fixed for wce/poccarm's strange Windows headers.
    ; Now this problem surfaced with wce/poccarm, and this one I really
      cannot fix:
      ---
      hbmk: Processing configuration: C:\devl\hbvc-1.1\bin\hbmk.cfg
      POLINK: error: Unresolved external symbol 'hb_wctomb'.
      POLINK: fatal error: 1 unresolved external(s).
      hbmk: Error: Running linker. 1:
      polink.exe hbtest.obj rt_array.obj rt_date.obj rt_file.obj rt_hvm.obj rt_hvma.obj rt_math.obj rt_misc.obj rt_mt.obj rt_str.obj rt_stra.obj rt_trans.obj rt_class.obj rt_miscc.obj /libpath:C:\work\harbour-new\harbour\_hb_install_temp\harbour-wce-poccarm\lib  /subsystem:windows /out:C:\work\harbour-new\harbour\_hb_install_temp\harbour-wce-poccarm\bin\hbtest-dll.exe /libpath:C:\work\harbour-new\harbour\_hb_install_temp\harbour-wce-poccarm\bin harbour-11-arm.lib hbmainstd.lib hbmainwin.lib hbcplr.lib hbdebug.lib wininet.lib ws2.lib commdlg.lib commctrl.lib uuid.lib ole32.lib
      ---

2009-04-08 10:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Cross build text fixed to be multiplatform.

  * contrib/rddsql/sddfb/Makefile
    ! Excluded for msvc64:
      ../../fbirddd.c(187) : warning C4244: 'argument' : conversion from 'ULONG' to 'short', possible loss of data
      ../../fbirddd.c(231) : warning C4244: 'argument' : conversion from 'ISC_STATUS' to 'USHORT', possible loss of data
      ../../fbirddd.c(241) : warning C4244: 'argument' : conversion from 'ISC_STATUS' to 'USHORT', possible loss of data
      ../../fbirddd.c(249) : warning C4244: 'argument' : conversion from 'ISC_STATUS' to 'USHORT', possible loss of data
      ../../fbirddd.c(265) : warning C4244: 'argument' : conversion from 'ISC_STATUS' to 'USHORT', possible loss of data
      ../../fbirddd.c(409) : error C2440: '=' : cannot convert from 'isc_stmt_handle' to 'void *'
              Conversion from integral type to pointer type requires reinterpret_cast, C-style cast or function-style cast
      ../../fbirddd.c(410) : error C2440: '=' : cannot convert from 'isc_tr_handle' to 'void *'
              Conversion from integral type to pointer type requires reinterpret_cast, C-style cast or function-style cast
      ../../fbirddd.c(446) : error C2664: 'isc_dsql_free_statement' : cannot convert parameter 2 from 'void **' to 'isc_stmt_handle *'
              Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast
      ../../fbirddd.c(451) : error C2664: 'isc_rollback_transaction' : cannot convert parameter 2 from 'void **' to 'isc_tr_handle *'
              Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast
      ../../fbirddd.c(469) : error C2664: 'isc_dsql_fetch' : cannot convert parameter 2 from 'void **' to 'isc_stmt_handle *'
              Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast
      ../../fbirddd.c(531) : error C2664: 'isc_dsql_free_statement' : cannot convert parameter 2 from 'void **' to 'isc_stmt_handle *'
              Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast
      ../../fbirddd.c(533) : warning C4244: 'argument' : conversion from 'ISC_STATUS' to 'USHORT', possible loss of data
      ../../fbirddd.c(538) : error C2664: 'isc_commit_transaction' : cannot convert parameter 2 from 'void **' to 'isc_tr_handle *'
              Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast
      ../../fbirddd.c(540) : warning C4244: 'argument' : conversion from 'ISC_STATUS' to 'USHORT', possible loss of data

2009-04-08 09:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added hbmk2 to the list of tools needed for successful
      cross builds.

  * utils/hbmk2/hbmk2.prg
    + Added link to Linux lib HOWTO.

2009-04-08 08:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Extension is also omitted when Harbour is installed
      on sys loc.

2009-04-08 03:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Possible fix for *nix shared lib problem when Harbour
      is installed in system location. Couldn't test it.
    * ar now called with 'rcs' parameter (was: cr).
      Advertized as runlib equivalent, but it doesn't seem to
      make any difference.

2009-04-08 02:08 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed bug in yesterday's changes.

2009-04-07 12:02 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/hbqt/generator/hbqtgen.prg
    ! Few more refinements.

2009-04-07 11:45 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/hbqt/generator/hbqtgen.prg
    ! Updated to post latest demoqt.prg.

2009-04-07 19:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Turned on line number permanently.

  * contrib/gtalleg/Makefile
  * contrib/hbsqlit3/Makefile
  * contrib/hbfbird/Makefile
    * Fixes.

2009-04-07 17:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu_xmingwce.sh
  * doc/man/hbmk.1
  * bin/hb-mkdyn.sh
  * bin/postinst.bat
  * bin/hb-func.sh
  * bin/postinst.sh
  * bin/hb-mkdyn.bat
  * external/sqlite3/Makefile
  * external/libhpdf/Makefile
  * external/libpng/Makefile
  * make_gnu.bat
  * contrib/gtalleg/Makefile
  * contrib/hbsqlit3/Makefile
  * contrib/hbqt/Makefile
  * contrib/hbfbird/Makefile
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
  * utils/hbmk2/hbmk2.prg
  - config/win/mingwce.cf
  - config/win/poccce.cf
  - config/win/msvcce.cf
    - Deleted targets: win/msvcce, win/mingwce, win/poccce.
      Use these instead: wce/msvcarm, wce/mingwarm, wce/poccarm

2009-04-07 16:55 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Regression fixed after latest poccarm support additions.

2009-04-07 16:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    ! Fixed shared executable creation for cross-builds.

  * utils/hbmk2/hbmk2.hbm
  * utils/hbi18n/hbi18n.hbm
    % Added -nulrdd. This will remove the hbmk2 build size overhead
      compared to GNU Make built executables.

  * utils/hbmk2/hbmk2.prg
    ! Don't add the same libdir twice in some cases.
    + Added support for wce arch in remaining places.
    ! Added hbmainwin and hbmainstd for mingw targets.
      This should fix some failing shared lib scenarios I've
      experienced with minwgce. I hope it doesn't break
      everything else (tested mingw64 and mingw scenarios worked).
    * Internal change to handle shared libname separately
      so that special extensions and handling can be added
      for it, if needed.

2009-04-07 12:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * external/libhpdf/Makefile
    ! Disabled for wce arch and mingwce comp.

2009-04-07 12:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/hbqt.h
  * contrib/hbqt/hbqt_qabstractbutton.cpp
  * contrib/hbqt/hbqt_qabstractitemview.cpp
  * contrib/hbqt/hbqt_qabstractprintdialog.cpp
  * contrib/hbqt/hbqt_qabstractscrollarea.cpp
  * contrib/hbqt/hbqt_qabstractslider.cpp
  * contrib/hbqt/hbqt_qabstractspinbox.cpp
  * contrib/hbqt/hbqt_qaction.cpp
  * contrib/hbqt/hbqt_qapplication.cpp
  * contrib/hbqt/hbqt_qboxlayout.cpp
  * contrib/hbqt/hbqt_qbrush.cpp
  * contrib/hbqt/hbqt_qcalendarwidget.cpp
  * contrib/hbqt/hbqt_qcheckbox.cpp
  * contrib/hbqt/hbqt_qcolor.cpp
  * contrib/hbqt/hbqt_qcolordialog.cpp
  * contrib/hbqt/hbqt_qcombobox.cpp
  * contrib/hbqt/hbqt_qcommandlinkbutton.cpp
  * contrib/hbqt/hbqt_qcoreapplication.cpp
  * contrib/hbqt/hbqt_qdateedit.cpp
  * contrib/hbqt/hbqt_qdatetimeedit.cpp
  * contrib/hbqt/hbqt_qdial.cpp
  * contrib/hbqt/hbqt_qdialog.cpp
  * contrib/hbqt/hbqt_qdoublespinbox.cpp
  * contrib/hbqt/hbqt_qerrormessage.cpp
  * contrib/hbqt/hbqt_qfiledialog.cpp
  * contrib/hbqt/hbqt_qfocusframe.cpp
  * contrib/hbqt/hbqt_qfont.cpp
  * contrib/hbqt/hbqt_qfontcombobox.cpp
  * contrib/hbqt/hbqt_qfontdialog.cpp
  * contrib/hbqt/hbqt_qformlayout.cpp
  * contrib/hbqt/hbqt_qframe.cpp
  * contrib/hbqt/hbqt_qgroupbox.cpp
  * contrib/hbqt/hbqt_qhboxlayout.cpp
  * contrib/hbqt/hbqt_qinputdialog.cpp
  * contrib/hbqt/hbqt_qlabel.cpp
  * contrib/hbqt/hbqt_qlayout.cpp
  * contrib/hbqt/hbqt_qlayoutitem.cpp
  * contrib/hbqt/hbqt_qlcdnumber.cpp
  * contrib/hbqt/hbqt_qlineedit.cpp
  * contrib/hbqt/hbqt_qlistview.cpp
  * contrib/hbqt/hbqt_qmainwindow.cpp
  * contrib/hbqt/hbqt_qmenu.cpp
  * contrib/hbqt/hbqt_qmenubar.cpp
  * contrib/hbqt/hbqt_qmessagebox.cpp
  * contrib/hbqt/hbqt_qobject.cpp
  * contrib/hbqt/hbqt_qpagesetupdialog.cpp
  * contrib/hbqt/hbqt_qpaintdevice.cpp
  * contrib/hbqt/hbqt_qpainter.cpp
  * contrib/hbqt/hbqt_qpen.cpp
  * contrib/hbqt/hbqt_qprintdialog.cpp
  * contrib/hbqt/hbqt_qprintpreviewdialog.cpp
  * contrib/hbqt/hbqt_qprogressbar.cpp
  * contrib/hbqt/hbqt_qprogressdialog.cpp
  * contrib/hbqt/hbqt_qpushbutton.cpp
  * contrib/hbqt/hbqt_qradiobutton.cpp
  * contrib/hbqt/hbqt_qscrollarea.cpp
  * contrib/hbqt/hbqt_qscrollbar.cpp
  * contrib/hbqt/hbqt_qsizegrip.cpp
  * contrib/hbqt/hbqt_qslider.cpp
  * contrib/hbqt/hbqt_qspinbox.cpp
  * contrib/hbqt/hbqt_qsplitter.cpp
  * contrib/hbqt/hbqt_qtabbar.cpp
  * contrib/hbqt/hbqt_qtableview.cpp
  * contrib/hbqt/hbqt_qtablewidget.cpp
  * contrib/hbqt/hbqt_qtablewidgetitem.cpp
  * contrib/hbqt/hbqt_qtabwidget.cpp
  * contrib/hbqt/hbqt_qtextedit.cpp
  * contrib/hbqt/hbqt_qtimeedit.cpp
  * contrib/hbqt/hbqt_qtoolbar.cpp
  * contrib/hbqt/hbqt_qtoolbox.cpp
  * contrib/hbqt/hbqt_qtoolbutton.cpp
  * contrib/hbqt/hbqt_qtreeview.cpp
  * contrib/hbqt/hbqt_qtreewidget.cpp
  * contrib/hbqt/hbqt_qtreewidgetitem.cpp
  * contrib/hbqt/hbqt_qvboxlayout.cpp
  * contrib/hbqt/hbqt_qwebpage.cpp
  * contrib/hbqt/hbqt_qwebview.cpp
  * contrib/hbqt/hbqt_qwidget.cpp
  * contrib/hbqt/hbqt_qwizard.cpp
  * contrib/hbqt/Makefile_gen
  * contrib/hbqt/TQAbstractButton.prg
  * contrib/hbqt/TQAbstractItemView.prg
  * contrib/hbqt/TQAbstractPrintDialog.prg
  * contrib/hbqt/TQAbstractScrollArea.prg
  * contrib/hbqt/TQAbstractSlider.prg
  * contrib/hbqt/TQAbstractSpinBox.prg
  * contrib/hbqt/TQAction.prg
  * contrib/hbqt/TQBoxLayout.prg
  * contrib/hbqt/TQCalendarWidget.prg
  * contrib/hbqt/TQCheckBox.prg
  * contrib/hbqt/TQColorDialog.prg
  * contrib/hbqt/TQComboBox.prg
  * contrib/hbqt/TQCommandLinkButton.prg
  * contrib/hbqt/TQDateEdit.prg
  * contrib/hbqt/TQDateTimeEdit.prg
  * contrib/hbqt/TQDial.prg
  * contrib/hbqt/TQDialog.prg
  * contrib/hbqt/TQDoubleSpinBox.prg
  * contrib/hbqt/TQErrorMessage.prg
  * contrib/hbqt/TQFileDialog.prg
  * contrib/hbqt/TQFocusFrame.prg
  * contrib/hbqt/TQFontComboBox.prg
  * contrib/hbqt/TQFontDialog.prg
  * contrib/hbqt/TQFormLayout.prg
  * contrib/hbqt/TQFrame.prg
  * contrib/hbqt/TQGroupBox.prg
  * contrib/hbqt/TQHBoxLayout.prg
  * contrib/hbqt/TQInputDialog.prg
  * contrib/hbqt/TQLabel.prg
  * contrib/hbqt/TQLayout.prg
  * contrib/hbqt/TQLayoutItem.prg
  * contrib/hbqt/TQLCDNumber.prg
  * contrib/hbqt/TQLineEdit.prg
  * contrib/hbqt/TQListView.prg
  * contrib/hbqt/TQMainWindow.prg
  * contrib/hbqt/TQMenu.prg
  * contrib/hbqt/TQMenuBar.prg
  * contrib/hbqt/TQMessageBox.prg
  * contrib/hbqt/TQObject.prg
  * contrib/hbqt/TQPageSetupDialog.prg
  * contrib/hbqt/TQPaintDevice.prg
  * contrib/hbqt/TQPainter.prg
  * contrib/hbqt/TQPrintDialog.prg
  * contrib/hbqt/TQPrintPreviewDialog.prg
  * contrib/hbqt/TQProgressBar.prg
  * contrib/hbqt/TQProgressDialog.prg
  * contrib/hbqt/TQPushButton.prg
  * contrib/hbqt/TQRadioButton.prg
  * contrib/hbqt/TQScrollArea.prg
  * contrib/hbqt/TQScrollBar.prg
  * contrib/hbqt/TQSizeGrip.prg
  * contrib/hbqt/TQSlider.prg
  * contrib/hbqt/TQSpinBox.prg
  * contrib/hbqt/TQSplitter.prg
  * contrib/hbqt/TQTabBar.prg
  * contrib/hbqt/TQTableView.prg
  * contrib/hbqt/TQTableWidget.prg
  * contrib/hbqt/TQTableWidgetItem.prg
  * contrib/hbqt/TQTabWidget.prg
  * contrib/hbqt/TQTextEdit.prg
  * contrib/hbqt/TQTimeEdit.prg
  * contrib/hbqt/TQToolBar.prg
  * contrib/hbqt/TQToolBox.prg
  * contrib/hbqt/TQToolButton.prg
  * contrib/hbqt/TQTreeView.prg
  * contrib/hbqt/TQTreeWidget.prg
  * contrib/hbqt/TQTreeWidgetItem.prg
  * contrib/hbqt/TQVBoxLayout.prg
  * contrib/hbqt/TQWebPage.prg
  * contrib/hbqt/TQWebView.prg
  * contrib/hbqt/TQWidget.prg
  * contrib/hbqt/TQWizard.prg
  + contrib/hbqt/hbqt_qbitmap.cpp
  + contrib/hbqt/hbqt_qcommonstyle.cpp
  + contrib/hbqt/hbqt_qdesktopwidget.cpp
  + contrib/hbqt/hbqt_qdir.cpp
  + contrib/hbqt/hbqt_qdockwidget.cpp
  + contrib/hbqt/hbqt_qevent.cpp
  + contrib/hbqt/hbqt_qeventloop.cpp
  + contrib/hbqt/hbqt_qfontinfo.cpp
  + contrib/hbqt/hbqt_qftp.cpp
  + contrib/hbqt/hbqt_qgridlayout.cpp
  + contrib/hbqt/hbqt_qheaderview.cpp
  + contrib/hbqt/hbqt_qhttp.cpp
  + contrib/hbqt/hbqt_qicon.cpp
  + contrib/hbqt/hbqt_qinputevent.cpp
  + contrib/hbqt/hbqt_qlistwidget.cpp
  + contrib/hbqt/hbqt_qlistwidgetitem.cpp
  + contrib/hbqt/hbqt_qpaintevent.cpp
  + contrib/hbqt/hbqt_qpixmap.cpp
  + contrib/hbqt/hbqt_qpoint.cpp
  + contrib/hbqt/hbqt_qpointf.cpp
  + contrib/hbqt/hbqt_qrect.cpp
  + contrib/hbqt/hbqt_qrectf.cpp
  + contrib/hbqt/hbqt_qregion.cpp
  + contrib/hbqt/hbqt_qsignalmapper.cpp
  + contrib/hbqt/hbqt_qsize.cpp
  + contrib/hbqt/hbqt_qsizef.cpp
  + contrib/hbqt/hbqt_qsplashscreen.cpp
  + contrib/hbqt/hbqt_qstatusbar.cpp
  + contrib/hbqt/hbqt_qstyle.cpp
  + contrib/hbqt/hbqt_qtimer.cpp
  + contrib/hbqt/hbqt_qurl.cpp
  + contrib/hbqt/hbqt_qvariant.cpp
  + contrib/hbqt/hbqt_qwindowsstyle.cpp
  + contrib/hbqt/hbqt_qwindowsxpstyle.cpp
  + contrib/hbqt/TQBitmap.prg
  + contrib/hbqt/TQCommonStyle.prg
  + contrib/hbqt/TQDesktopWidget.prg
  + contrib/hbqt/TQDir.prg
  + contrib/hbqt/TQDockWidget.prg
  + contrib/hbqt/TQEvent.prg
  + contrib/hbqt/TQEventLoop.prg
  + contrib/hbqt/TQFont.prg
  + contrib/hbqt/TQFontInfo.prg
  + contrib/hbqt/TQFtp.prg
  + contrib/hbqt/TQGridLayout.prg
  + contrib/hbqt/TQHeaderView.prg
  + contrib/hbqt/TQHttp.prg
  + contrib/hbqt/TQIcon.prg
  + contrib/hbqt/TQInputEvent.prg
  + contrib/hbqt/TQListWidget.prg
  + contrib/hbqt/TQListWidgetItem.prg
  + contrib/hbqt/TQPaintEvent.prg
  + contrib/hbqt/TQPen.prg
  + contrib/hbqt/TQPixmap.prg
  + contrib/hbqt/TQPoint.prg
  + contrib/hbqt/TQPointF.prg
  + contrib/hbqt/TQRect.prg
  + contrib/hbqt/TQRectF.prg
  + contrib/hbqt/TQRegion.prg
  + contrib/hbqt/TQSignalMapper.prg
  + contrib/hbqt/TQSize.prg
  + contrib/hbqt/TQSizeF.prg
  + contrib/hbqt/TQSplashScreen.prg
  + contrib/hbqt/TQStatusBar.prg
  + contrib/hbqt/TQStyle.prg
  + contrib/hbqt/TQTimer.prg
  + contrib/hbqt/TQUrl.prg
  + contrib/hbqt/TQVariant.prg
  + contrib/hbqt/TQWindowsStyle.prg
  + contrib/hbqt/TQWindowsXPStyle.prg
    * Regenerated.

2009-04-07 10:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/generator/qt45.qtp
  * contrib/hbqt/generator/hbqtgen.prg
  * contrib/hbqt/generator/rebuild_hbqt.bat
    * Changed to create files directly in live source dir.
      (can be overridden using cmdline switches)
    * qt45.qtp will be picked automatically if no project
      file is passed and the file exists.
    ! Fixed default paths for all platforms.
    + Added feedback when creating files.
    ! Fixed one FCreate() session which always failed.
    ! Fixed generation of Makefile_gen to always have two
      closing empty lines to make GNU Make happy. Otherwise
      it failed when assembling the lib with MinGW/msys.
    % Commented output of source parts.
    ; This means that the .bat file is no more necessary.
      Please use: 'hbmk2 hbqtgen.prg -run' command to generate
      hbqt sources.

2009-04-07 09:29 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/hbqt/tests/Vou.ICO
  + contrib/hbqt/tests/test.ico
    ! Renamed to have all lower case. Please stick to this rule.
      Couldn't find any reference to this file, please fix it
      where needed.

    ; TOFIX: hbqt.h has hb_ToOutDebug() declared as external. So,
             hbqt will also depend on xhb lib? If this function is
             so important I'd suggest to create a fully portable
             version of it locally in hbqt.

  - contrib/hbqt/gensource/Makefile
    - Removed duplicate copy of Makefile. I'm not sure what was
      the purpose but it wouldn't work here, and it wouldn't be
      good to update this file in two copies.

2009-04-06 23:52 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/tests/vou.ico
    + Added icon to be displayed in titlebar.

2009-04-06 23:44 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
    + New hbqt.h members.

  * harbour/contrib/hbqt/generator/qt45.qtp
    + Added new classes, Rearranged alphabetically.

  * harbour/contrib/hbqt/qth/QAction.qth
  + harbour/contrib/hbqt/qth/QBitmap.qth
  + harbour/contrib/hbqt/qth/QCommonStyle.qth
  + harbour/contrib/hbqt/qth/QIcon.qth
  + harbour/contrib/hbqt/qth/QPixmap.qth
  + harbour/contrib/hbqt/qth/QStatusBar.qth
  + harbour/contrib/hbqt/qth/QStyle.qth
  + harbour/contrib/hbqt/qth/QWindowsStyle.qth
  + harbour/contrib/hbqt/qth/QWindowsXPStyle.qth
    + Added new classes. Updated old ones.

  * harbour/contrib/hbqt/tests/demoqt.prg
    + Implemented StatusBar, Windows Icon, etc.

2009-04-06 19:19 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
    ! Fixed: warning - taken address of temprary. Thanks Xavi.
      Still need to be tested.

2009-04-07 00:41 UTC+0200 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    + Added _HTTP_RESPONSE headers
    * Renamed defineServerAdresses() function to defineServer()
      as now define all _SERVER variables
    * ParseRequest() now uses uhttpd_SplitUrl() to define URI parts
    * Host now is defined according with RFC2616
    * HRB session now is defined as UHTTPD-SESSION to avoid collision with
      SESSION in cookies
    ! uhttpd_AddHeader() renamed to uhttpd_SetHeader() to be conformed to
      RFC2616 that wants that a header variable is defined only once.
      See cookie.prg changes.
      Headers now are contained in a Hash instead of an array
    * fixed as per above also uhttpd_GetHeader() / uhttpd_DelHeader()

  * harbour/contrib/examples/uhttpd/session.prg
    * uhttpd_AddHeader() -> uhttpd_SetHeader()
  * harbour/contrib/examples/uhttpd/cgifunc.prg
    * in function uhttpd_SplitUrl() added URI hash field
  + harbour/contrib/examples/uhttpd/cookie.prg
    * To conform to RFC2616 now if Set-Cookie has more than one value than
      is created a comma separated list of cookie-name=cookie-value
    * uhttpd_AddHeader() -> uhttpd_SetHeader()

  * harbour/contrib/examples/uhttpd/modules/info.prg
    + Added _HTTP_RESPONSE display

  * harbour/contrib/examples/uhttpd/modules/cookie.prg
  * harbour/contrib/examples/uhttpd/modules/showcounter.prg
  * harbour/contrib/examples/uhttpd/modules/tableservletdb.prg
    * uhttpd_AddHeader() -> uhttpd_SetHeader()

2009-04-06 23:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to properly set errorlevels. For some reason I thought
      returning a number from MAIN() will set the errorlevel. Now
      using ErrorLevel() function.

  * contrib/hbqt/generator/rebuild_hbqt.bat
    * Added errorlevel checking after hbmk2 call.
    ! Removed HB_COMPILER check.

2009-04-06 22:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Adding hbmainstd/hbmainwin libs as object for win/owatcom.
      This fixes the startup procedure problems. Thanks Przemek.

2009-04-06 22:16 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/harbour-wce-spec
    ! fixed MinGWCE cross compilation for Pocket PC by simple removing
      __PLATFORM__WINCE from Harbour build parameters. It's now defined
      by config/wce/mingwarm.cf
      BTW why it's called mingwarm not mingwce? Is is planed to add for
      each CPU type separate .cf file? For Linux it will be more then
      20 files.
      I do not know if MS plans to release (or maybe released) WinCE for
      non ARM based computers (f.e. x86 ones) but it may happen. Just like
      non x86 normal Windows ports may exist.

2009-04-06 09:45 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/qt45.qtp
  * harbour/contrib/hbqt/hbqt.h
  + harbour/contrib/hbqt/qth/QEvent.qth
  + harbour/contrib/hbqt/qth/QEventLoop.qth
  + harbour/contrib/hbqt/qth/QInputEvent.qth
  + harbour/contrib/hbqt/qth/QPaintEvent.qth
  + harbour/contrib/hbqt/qth/QRegion.qth
  * harbour/contrib/hbqt/qth/QSize.qth
  + harbour/contrib/hbqt/qth/QVariant.qth
    + Added more classes and update qt45.qtp

2009-04-06 09:36 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
    ! StdOut() used instead of ?.
    ! More parameter resolved.

2009-04-06 19:35 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/source/rtl/hbstrfmt.c
    + added precision support for %s and %d.
      COMMENT: I've used GNU printf() function for test. Some of
      formats is not supported by it. For example, zero padding is
      ignored if left alignment is used, etc. I'm not sure if it is
      intentional.

2009-04-06 18:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    * owatcom tweaks. Build is still going dunno if this will be okay.

  * contrib/hbqt/generator/rebuild_hbqt.bat
    * Added hbmk2 dir.

  * utils/hbmk2/hbmk2.prg
    ! Fixed stupid MSVC typo.

2009-04-06 17:58 UTC+0200 Francesco Saverio Giudice (info/at/fsgiudice.com)
  + harbour/contrib/hbqt/generator/rebuild_hbqt.bat
    + Added batch to generate fresh hbqt sources from headers

2009-04-06 17:58 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    * renamed --hbbindir --hblibdir --hbincdir parameters to
      --hbdirbin --hbdirlib --hbdirinc

2009-04-06 17:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added --hbdirdyn.

2009-04-06 17:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added --hbdirbin, --hbdirlib, --hbdirinc.
    + Added --version and --help to help screen.
    ! Changed to use OS native slashed in path when calling harbour executable.
    + -quiet will now suppress messages when -traceonly option is used.
      Script dumps will still have a header for clarity.
    + Will now dump harbour executable name to Harbour command -trace
      output, even if internal compiler is used.

2009-04-06 16:04 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    + added support for displaying harbour bin, lib and include directories
      for --hbbindir --hblibdir --hbincdir parameters.
      Viktor please add such functionality also to hbmk2.
      Only given directories should be displayed without any other
      characters in the output.
      Such feature allows to use -I`hbmk --hbincdir` in *nixes build
      scripts what should greatly simplify 3-rd party projects make scripts.

2009-04-06 15:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/hbcomp.c
    ! fixed ignored -es2 compiler flag when warning is caused by startup
      parameters

  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.y
    * pacified warning

  * harbour/harbour.spec
    ! fixed doc/en directory name to doc/en-EN

  * harbour/source/vm/Makefile
  + harbour/source/vm/maindllh
  + harbour/source/vm/maindllh/Makefile
    + added hbmaindllh library - it's necessary for some compiler to create
      working harbour.dll, f.e. in OpenWatcom builds. Please updated
      harbour.dll build scripts to use this library with such compilers.
      MinGW based compilers do not need it.

  * harbour/source/vm/Makefile
    ! fixed typo which broke wce builds

  * harbour/source/vm/Makefile
  * harbour/harbour-wce-spec
  * harbour/harbour.spec
    + added mainstd mainwin maindllh maindllp to all win and wce builds

  * harbour/harbour-win-spec
  * harbour/harbour-wce-spec
  * harbour/harbour.spec
    + added support for parallel compilation (-j make flags) in RPMs
      which supports %{_smp_mflags} macro
    ! temporary fix: disabled harbour external libraries.
      I do not know what should be the final version.
    ; WCE builds are still broken due to repeated macro definitions
      but I'm lost with the new build time parameters and I do not
      know how to fix it without breaking hbce* scripts or bad introduce
      some interactions to other build/install time scripts so it will
      have to be fixed by Viktor.

2009-04-06 14:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbole/Makefile
  * contrib/hbole/olecore.c
  + contrib/hbole/hbwinole.h
    + Added C header.
    + Exported hb_oleVariantToItem().

  * contrib/hbqt/hbqt_qfont.cpp
    ! Fixed HB_IS_STRING() -> HB_ISCHAR().

2009-04-06 13:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed finding shared libs since /lib/<arch>/<comp> lib path
      autodetection was added. Please test.
    + Added -traceonly cmdline switch which will display all commands to
      be executed, without actually executing them. Notice that this isn't
      a complete "dry" run, as some temp files will may be created and
      normally created temp files are deleted along the process.

  * contrib/hbqt/Makefile
    ! Fix to include statement.

2009-04-05 14:03 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/generator/qt45.qtp
  + harbour/contrib/hbqt/qth/QPoint.qth
  + harbour/contrib/hbqt/qth/QPointF.qth
  + harbour/contrib/hbqt/qth/QRect.qth
  + harbour/contrib/hbqt/qth/QRectF.qth
  + harbour/contrib/hbqt/qth/QSizeF.qth
    + Added more classes.

2009-04-05 12:57 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/contrib/hbqt/tests/wvtext.prg
    + Added wvtext.prg [ already in harbour/tests ] modified
      to invoke QT dialogs. This demo is far from production
      environment abd is just a future concept of implementation
      what we can achieve with QT with least efforts.

2009-04-05 02:35 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/contrib/hbqt/tests/*.png
    + Added some .png files used in the demoqt.prg.

2009-04-05 02:00 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/hbqt.h
  * harbour/contrib/hbqt/generator/hbqtgen.prg
  * harbour/contrib/hbqt/generator/qt45.qtp
  + harbour/contrib/hbqt/gensource/Makefile
  * harbour/contrib/hbqt/qth/QAbstractButton.qth
  * harbour/contrib/hbqt/qth/QAbstractItemView.qth
  * harbour/contrib/hbqt/qth/QAbstractPrintDialog.qth
  * harbour/contrib/hbqt/qth/QAbstractScrollArea.qth
  * harbour/contrib/hbqt/qth/QAbstractSlider.qth
  * harbour/contrib/hbqt/qth/QAbstractSpinBox.qth
  * harbour/contrib/hbqt/qth/QAction.qth
  * harbour/contrib/hbqt/qth/QApplication.qth
  * harbour/contrib/hbqt/qth/QAxBase.qth
  * harbour/contrib/hbqt/qth/QAxBindable.qth
  * harbour/contrib/hbqt/qth/QAxObject.qth
  * harbour/contrib/hbqt/qth/QAxWidget.qth
  * harbour/contrib/hbqt/qth/QBoxLayout.qth
  * harbour/contrib/hbqt/qth/QBrush.qth
  * harbour/contrib/hbqt/qth/QCalendarWidget.qth
  * harbour/contrib/hbqt/qth/QCheckBox.qth
  * harbour/contrib/hbqt/qth/QColor.qth
  * harbour/contrib/hbqt/qth/QColorDialog.qth
  * harbour/contrib/hbqt/qth/QComboBox.qth
  * harbour/contrib/hbqt/qth/QCommandLinkButton.qth
  * harbour/contrib/hbqt/qth/QCoreApplication.qth
  * harbour/contrib/hbqt/qth/QDateEdit.qth
  * harbour/contrib/hbqt/qth/QDateTimeEdit.qth
  * harbour/contrib/hbqt/qth/QDesktopWidget.qth
  * harbour/contrib/hbqt/qth/QDial.qth
  * harbour/contrib/hbqt/qth/QDialog.qth
  * harbour/contrib/hbqt/qth/QDir.qth
  * harbour/contrib/hbqt/qth/QDockWidget.qth
  * harbour/contrib/hbqt/qth/QDoubleSpinBox.qth
  * harbour/contrib/hbqt/qth/QErrorMessage.qth
  * harbour/contrib/hbqt/qth/QFileDialog.qth
  * harbour/contrib/hbqt/qth/QFocusFrame.qth
  * harbour/contrib/hbqt/qth/QFont.qth
  * harbour/contrib/hbqt/qth/QFontComboBox.qth
  * harbour/contrib/hbqt/qth/QFontDialog.qth
  * harbour/contrib/hbqt/qth/QFontInfo.qth
  * harbour/contrib/hbqt/qth/QFormLayout.qth
  * harbour/contrib/hbqt/qth/QFrame.qth
  * harbour/contrib/hbqt/qth/QFtp.qth
  * harbour/contrib/hbqt/qth/QGridLayout.qth
  * harbour/contrib/hbqt/qth/QGroupBox.qth
  * harbour/contrib/hbqt/qth/QHBoxLayout.qth
  * harbour/contrib/hbqt/qth/QHeaderView.qth
  * harbour/contrib/hbqt/qth/QHttp.qth
  * harbour/contrib/hbqt/qth/QInputDialog.qth
  * harbour/contrib/hbqt/qth/QLabel.qth
  * harbour/contrib/hbqt/qth/QLayout.qth
  * harbour/contrib/hbqt/qth/QLayoutItem.qth
  * harbour/contrib/hbqt/qth/QLCDNumber.qth
  * harbour/contrib/hbqt/qth/QLineEdit.qth
  * harbour/contrib/hbqt/qth/QListView.qth
  * harbour/contrib/hbqt/qth/QListWidget.qth
  * harbour/contrib/hbqt/qth/QListWidgetItem.qth
  * harbour/contrib/hbqt/qth/QMainWindow.qth
  * harbour/contrib/hbqt/qth/QMenu.qth
  * harbour/contrib/hbqt/qth/QMenuBar.qth
  * harbour/contrib/hbqt/qth/QMessageBox.qth
  * harbour/contrib/hbqt/qth/QObject.qth
  * harbour/contrib/hbqt/qth/QPageSetupDialog.qth
  * harbour/contrib/hbqt/qth/QPaintDevice.qth
  * harbour/contrib/hbqt/qth/QPainter.qth
  * harbour/contrib/hbqt/qth/QPen.qth
  * harbour/contrib/hbqt/qth/QPrintDialog.qth
  * harbour/contrib/hbqt/qth/QPrintPreviewDialog.qth
  * harbour/contrib/hbqt/qth/QProgressBar.qth
  * harbour/contrib/hbqt/qth/QProgressDialog.qth
  * harbour/contrib/hbqt/qth/QPushButton.qth
  * harbour/contrib/hbqt/qth/QRadioButton.qth
  * harbour/contrib/hbqt/qth/QScrollArea.qth
  * harbour/contrib/hbqt/qth/QScrollBar.qth
  * harbour/contrib/hbqt/qth/QSignalMapper.qth
  + harbour/contrib/hbqt/qth/QSize.qth
  * harbour/contrib/hbqt/qth/QSizeGrip.qth
  * harbour/contrib/hbqt/qth/QSlider.qth
  * harbour/contrib/hbqt/qth/QSpinBox.qth
  * harbour/contrib/hbqt/qth/QSplashScreen.qth
  * harbour/contrib/hbqt/qth/QSplitter.qth
  * harbour/contrib/hbqt/qth/QTabBar.qth
  * harbour/contrib/hbqt/qth/QTableView.qth
  * harbour/contrib/hbqt/qth/QTableWidget.qth
  * harbour/contrib/hbqt/qth/QTableWidgetItem.qth
  * harbour/contrib/hbqt/qth/QTabWidget.qth
  * harbour/contrib/hbqt/qth/QTextEdit.qth
  * harbour/contrib/hbqt/qth/QTimeEdit.qth
  * harbour/contrib/hbqt/qth/QTimer.qth
  * harbour/contrib/hbqt/qth/QToolBar.qth
  * harbour/contrib/hbqt/qth/QToolBox.qth
  * harbour/contrib/hbqt/qth/QToolButton.qth
  * harbour/contrib/hbqt/qth/QTreeView.qth
  * harbour/contrib/hbqt/qth/QTreeWidget.qth
  * harbour/contrib/hbqt/qth/QTreeWidgetItem.qth
  * harbour/contrib/hbqt/qth/QUrl.qth
  * harbour/contrib/hbqt/qth/QVBoxLayout.qth
  * harbour/contrib/hbqt/qth/QWebPage.qth
  * harbour/contrib/hbqt/qth/QWebView.qth
  * harbour/contrib/hbqt/qth/QWidget.qth
  * harbour/contrib/hbqt/qth/QWizard.qth
    ! Restructured the layout of .qth source headers.
      List of section blocks:
         <CLASS>   </CLASS>
         <CODE>    </CODE>
         <ENUMS>   </ENUMS>
         <PROTOS>  </PROTOS>
         <SLOTS>   </SLOTS>
         <SIGNALS> <SIGNALS>
      This layout will be useful for future extensions.
      We can spread anything outside of these blocks wheatever
      is required.

      The <hbqtgen> engine has been reworked and enhanced to a
      great extent. At this moment about 99% functions are compiled
      properly. Except for one warning everypiece compiles fine:
          : warning: taking address of temporary
      which is the result of code like as below:
          /*
           * QIcon icon () const
           */
          HB_FUNC( QT_QABSTRACTBUTTON_ICON )
          {
             hb_retptr( &( ( QIcon ) hbqt_par_QAbstractButton( 1 )->icon() ) );
          }
      is spread all over. I have no clue how to suppress it.
      This is why I have not posted the files in root folder.
      NOTE: Make system fails for <Makefile_gen>, Viktor?

      The demoqt.prg is updated with many features. Just play.

      And an Experiment: /tests/wvtext.prg can be updated to work with
      QT Widgets. Though this is not the end goal of QT, you may take
      advantage of QT's powerful yet simple classes to embed in your
      console applications.

2009-04-05 09:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Enabled rtlink/blinker parsing code, so now hbmk2 will
      work as a plugin replacement for clipper, rtlink/blinker/exospace
      when renamed to these names. Example:
      ---
      > copy hbmk2.exe clipper.exe
      > copy hbmk2.exe rtlink.exe
      > clipper hello.prg
      > echo OUT myhello FI hello > rtl.lnk
      > rtlink @rtl.lnk
      ---

2009-04-04 17:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Minor.

  * utils/hbmk2/hbmk2.prg
    ! Fixed to add 'lib' prefix when -hblib option is used with
      GCC family compilers.
    ! Fixed to not override compiler output when -hblib option is used.

  * contrib/hbqt/generator/hbqtgen.prg
  + contrib/hbqt/Makefile_gen
  * contrib/hbqt/Makefile
    + Added Makefile_gen which holds the generated part of
      the Makefile. This way there is no (less) hidden make
      logic inside hbqtgen.

  * config/wce/global.cf
    - Removed gtwin.
    ; TODO: Move GT inclusion logic to GT local Makefiles.

2009-04-03 15:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-wce-spec
  * INSTALL
  * bin/postinst.bat
  * Makefile
  * make_gnu.bat
  * external/sqlite3/Makefile
  * external/libhpdf/Makefile
  * external/libpng/Makefile
  * contrib/gtalleg/Makefile
  * contrib/hbodbc/Makefile
  * contrib/hbtpathy/Makefile
  * contrib/hbole/Makefile
  * contrib/hbsqlit3/Makefile
  * contrib/hbqt/generator/hbqtgen.prg
  * contrib/hbqt/Makefile
  * contrib/hbfbird/Makefile
  * contrib/hbwin/Makefile
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
    + Added wce arch and mingwarm/msvcarm/poccarm support.
      In parallel with old win/mingwce|msvcce|poccce support.
      As soons as this new one works, the old one will be deleted.

  * make_gnu.bat
    ! Fixed to work like rest of targets for GCC family.
      It will now only initiate a 'clean install' if HB_BUILD_DLL=yes.

  * utils/hbmk2/hbmk2.prg
    + Added Przemek's code for rtlink/blinker script parsing.
      Not yet activated.

2009-04-03 11:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    ! Attempt to fix owatcom shared executable generation.
      (still GPFs, or does nothing)

  * utils/hbmk2/hbmk2.prg
    ! Fixed typo in prev commit, causing RTE.

2009-04-03 03:45 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/dircmd.prg
    ! small fix in 'DIR <filemask>' DOS like output formatting.
      Note: this function uses strict DOS like 8.3 file name convention
            in the output so it will play well with long file names.
            Maybe we should change the output formatting?

2009-04-03 02:49 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
  * harbour/source/vm/fm.c
  * harbour/source/vm/cmdarg.c
    ! fixed GPF when hb_vmInit() is called without initializing
      application startup parameters by hb_cmdargInit().
      Thanks to Enrico's friends for information about the problem.
    * some code cleanup

2009-04-03 01:20 UTC+0200 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    + added Application Root folder
      Also as ini command and -a command line switch
    * fixed starting path
    ! fixed CGI/HRB execution path
      now uhttpd runs CGI and HRB pointing to document root
      as execution path. Pay attention to update existing cgi and
      hrb modules.
    + added console rows and cols to alter console display
      either as ini command than as -cr and -cc command line switch
    ! fixed $(APP_DIR) and $(DOCROOT_DIR) macro substitution
      now it is possible to run uhttpd executable from a different
      folder specifying uhttpd.ini path, application root path and
      document root path that may differ from default
    * updated help screen

  * harbour/contrib/examples/uhttpd/uhttpd.ini
    + added new commands
  * harbour/contrib/examples/uhttpd/session.prg
    * work in progress to fix error in session handling
  * harbour/contrib/examples/uhttpd/modules/tableservletdb.prg
    * updated path of test.dbf that now is relative to document root
      and not to application path

2009-04-03 00:20 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed warning.

2009-04-02 22:01 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexpra.c
    ! verify all expression POP operation for usage as LValue

  * harbour/include/hbexprb.c
    ! fixed possible GPF in unverified send context
    + added support for IIF() usage as LValue even if it cannot be
      reduced during [macro]compilation

  * harbour/source/macro/macro.yyc
  * harbour/source/macro/macro.y
  * harbour/source/macro/macrolex.c
    * removed support for some characters unsupported by Clipper in
      macro expressions like chr(10) as trailing expression character, f.e.:
         ? &("DATE()"+chr(10))

  * harbour/source/compiler/complex.c
    * formatting

2009-04-02 17:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Enabled embedded Harbour compiler. This will simplify
      cross-compile scenarios.

2009-04-02 17:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added msvcce (msvcarm) support. Untested, those who have such
      working environment please do. (pre 8.0 MSVC isn't supported)

2009-04-02 16:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Made clear that Windows examples are all pure .bat scripts.
    + Made clear that HB_BUILD_IMPLIB isn't supported for MinGW targets.
      (and in most cases either not needed or not possible automatically)

  * contrib/hbct/ctstrfil.c
    ! Fixed missing #include which could cause unresolved externals.

2009-04-02 15:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for pocc64, poccce.
      This is a very gray area for pocc. Currently it doesn't work
      because polib is broken and doesn't generate an implib:
      POLIB: fatal error: Internal error (create_archive_file).
    ; TOFIX: poccce also doesn't work, but this is probably solvable,
             there are unresolved externals when linking.

2009-04-02 15:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
  + utils/hbi18n/hbi18n.hbm
    + Generating hbmk2-dll and hbi18n-dll shared-mode executables.

  * utils/hbmk2/hbmk2.prg
    ! Fixed shared libnames for MinGW family.
    ; TOFIX: Still doesn't build shared-mode executables.

2009-04-02 13:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
  * bin/postinst.bat
    + Added support for GCC family .dll creation. (Cygwin not tested)
      This will also create .def files. Also implib .a files are possible,
      code is there commented.
    + Added 'wce' ARCH support.
    ! Fixed to not include gtwin in WinCE .dlls.
    + Added support for HB_DLLIBS envvar.
    ; NOTE: The benefits of using cmd shell instead of msys to create
            mingw builds is that hbrun-dll and hbtest-dll are also
            created and you don't have use forward slashes in HB_INC_*
            envvars. It also allows to more easily add implib creation
            in the future. Overall the Windows build environment is
            more uniform this way. msys build output though is much
            sleeker and also seems faster.
            If this method turns out to be okay, it may become the
            default/support/standard way to build Harbour with MinGW
            on Windows. (if not we can return to the msys method)

    ; TOFIX: Shared MinGW executables cannot be built if Harbour was built
             with -DHB_DYNLIB. IMO this macro should be ignored in MinGW
             builds as there is no separate DLL build and non-DLL.
             [ I cannot fix this. ]
             Until then I had to add a hack to starter batch files.

  * mpkg_win.bat
    * Switched to use make_gnu.bat instead of make_gnu.sh to build
      GCC family targets.

  * make_gnu.bat
    + Added special codepath for GCC familty as it needs one pass only
      to create .dlls.

  * INSTALL
    * Updated to reflect now possible non-msys MinGW build.
    * Updated example to use non-msys flavours.
    + Readded MinGW + msys example.
    % Minor simplification in mingw64/mingwce targets.
      (HB_CCPATH no longer needed on Windows)

2009-04-02 11:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu_xmingwce.sh
  * bin/hb-mkdyn.sh
  * bin/hb-func.sh
  * bin/postinst.sh
  * mpkg_win.bat
  * external/sqlite3/Makefile
  * make_gnu.sh
    + Added 'wce' ARCH support and 'mingwce' COMP support where needed.
    ; TODO: Start using above in local contrib Makefiles. [DONE]

  * bin/hb-mkdyn.sh
    + Added comment on how to generate implib when creating the .dll.

  * bin/hb-mkdyn.bat
    ! Added missing setlocal.

  * ChangeLog
    ! Typos.

  * make_gnu.bat
    + Will now exit with message if tried to run with mingw/cygwin
      targets.

2009-04-01 22:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/doc/Makefile
    ! removed unexisting license.txt file

  * harbour/include/hbapidbg.h
    * do not export Harbour debugger functions. If someone wants to create
      3-rd party debugger then we should agree the list of functions which
      should be public.

  * harbour/include/hbstack.h
    * minor cleanup in some definitions

  * harbour/include/hbdefs.h
    + added HB_DLL_ENTRY_POINT macro to set default DLL entry point for
      different Windows compilers

  * harbour/source/vm/maindllh.c
  * harbour/source/vm/maindllp.c
    * use HB_DLL_ENTRY_POINT macro

  * harbour/include/hbsetup.h
    * added internal macro to disable flatten optimization

  * harbour/include/hbmath.h
  * harbour/source/rtl/math.c
    * make default math error handler function static

  * harbour/include/hbatomic.h
    + added atomic inc/dec inline asm code to OW x86 builds

  * harbour/source/rtl/console.c
    * small code reorganization to not mix public and private function calls

  * harbour/source/rtl/hbregex.c
  * harbour/source/hbpcre/_hbpcreg.c
    * do not use hb_xfree() function pointer directly to avoid problems
      with different calling conventions.

  * harbour/config/win/owatcom.cf
  * harbour/config/os2/owatcom.cf
    * removed unnecessary in recent OpenWatcom versions explicit wlink.lnk
      including.

2009-04-01 14:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added clipper/rtlink/exospace/blinker self-name recognition.
      clipper will switch it to hbcmp mode,
      rtlink/exospace/blinker will switch it to hblnk mode.
      rtlink parameter recognition is yet to be done.

  * contrib/hbct/ctmisc.prg
    ! Fixed CENTER() to not LTrim() the input string.

  * contrib/hbwin/wapi_commctrl.c
    ! 0/1 -> FALSE/TRUE
    ! Fixed to use proper macro instead of hb_parnint().
    % Using hb_arraySetNL() rather than hb_arraySet().

  * mpkg_win.nsi
    * Minor.

2009-04-01 10:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/Makefile
    ! Removed license.txt.

  * INSTALL
    + Added Windows/Windows CE build examples.
      Cleaned mingw64 and mingwce cross-builds.

  * mpkg_win.bat
    * Using make_gnu.sh instead of make_gnu_xmingwce.sh
      for mingwce target for uniformity.

  * utils/hbmk2/hbmk2.prg
    ! Fixed silly typo causing RTE if compiler autodetection
      fails to detect any tier-one compilers (or none).
    + Added automatic postfixing external Harbour executable
      name if hbmk2 executable name is also postfixed. Currently
      -x64 and -ia64 are recognized. Useful to call harbour-x64.exe
      / harbour-ia64.exe when hbmk2-x64.exe / hbmk2-ia64.exe is used.

  * make_gnu_xmingwce.sh
  * config/rules.cf
  * config/win/mingwce.cf
  * config/win/poccce.cf
  * config/win/msvcce.cf
  * config/wce/global.cf
    * Moved -D__PLATFORM__WINCE to .cf files. This also fixes
      missing __PLATFORM__WINCE for poccce and msvcce targets.

2009-03-31 18:41 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/contrib/hbqt/qth/QAxBase.qth
  + harbour/contrib/hbqt/qth/QAxBindable.qth
  + harbour/contrib/hbqt/qth/QAxObject.qth
  + harbour/contrib/hbqt/qth/QAxWidget.qth
  + harbour/contrib/hbqt/qth/QDesktopWidget.qth
  + harbour/contrib/hbqt/qth/QDir.qth
  + harbour/contrib/hbqt/qth/QDockWidget.qth
  + harbour/contrib/hbqt/qth/QFontInfo.qth
  + harbour/contrib/hbqt/qth/QFtp.qth
  + harbour/contrib/hbqt/qth/QGridLayout.qth
  + harbour/contrib/hbqt/qth/QHeaderView.qth
  + harbour/contrib/hbqt/qth/QHttp.qth
  + harbour/contrib/hbqt/qth/QListWidget.qth
  + harbour/contrib/hbqt/qth/QListWidgetItem.qth
  + harbour/contrib/hbqt/qth/QSignalMapper.qth
  + harbour/contrib/hbqt/qth/QSplashScreen.qth
  + harbour/contrib/hbqt/qth/QTimer.qth
  + harbour/contrib/hbqt/qth/QUrl.qth
    + Added more source headers - RAW - not compiled.

2009-03-31 21:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    ! Fixed regression causing shared hbrun/hbtest binaries to
      not be built on x64 targets.

  * external/sqlite3/Makefile
    ! Removed header installer rules. There are no headers here
      to install.

2009-03-31 19:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added information on HB_EXTERNAL* envvar settings.

  * utils/hbmk2/hbmk2.prg
    + Added support for wce target. Currently in parallel
      with win/*ce targets.

2009-03-31 14:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddsql/sddfb/Makefile
    ! Excluded for pocc64 due to compile errors.

2009-03-31 13:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/hbinet.c
    ! Reverted. Damn.

2009-03-31 13:39 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbfbird/Makefile
    ! Excluded for pocc64 due to compile errors.

  * source/rtl/hbinet.c
    ! Fixed two warnings for pocc64.

2009-03-31 12:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    + Added pocc64 support.

  * contrib/gtalleg/Makefile
    ! Excluded for pocc64 due to compile errors.

  * contrib/hbsqlit3/Makefile
    ! Excluded for pocc64 due to overflow.

  * contrib/hbqt/generator/hbqtgen.prg
  * contrib/hbqt/Makefile
    ! Excluded for pocc64.

2009-03-31 12:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/dbf2txt.c
    ! Fixed for Win64.

  * contrib/xhb/hbserv.c
    - Excluded for Win64 builds.

  * contrib/hbqt/generator/hbqtgen.prg
    * Minor formatting in generated code. (Using double quotes
      in #include, CLASS -> CREATE CLASS, DATA -> VAR to follow
      Class(y) syntax.)

2009-03-31 12:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + config/wce
  + config/wce/dir.cf
  + config/wce/global.cf
  + config/wce/install.cf
  + config/wce/msvcarm.cf
  + config/wce/mingwarm.cf
  + config/wce/poccarm.cf
    + Added new arch for WinCE: wce
      These will now live in parallel with old win/*ce targets
      until they are fully functional. We can also back up from
      here in case this new method turns out to be a dead end
      for any reason. The upgrade path is:
      win/msvcce  -> wce/msvcarm
      win/mingwce -> wce/mingwarm
      win/poccce  -> wce/poccarm
      The idea is that this way we may continue adding support
      for non-ARM WinCE platforms, if needed. It also makes it
      easier to do things globally for wce platform only.

2009-03-31 11:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Moved Windows CE compilers into a separate section.

  * bin/hb-mkdyn.bat
    * Changes made to allow wce arch. (provision for wce arch)

  * mpkg_win.bat
    * Allows to override HB_ARCHITECTURE. (provision for wce arch)
    + Include arch in target directory. (provision for wce arch)

  * include/hbatomic.h
    - Turned off inline asm for _MSC_VER compilers in 64-bit mode. (pocc64, msvc64)
      These target don't support inline asm.
      This fixes previously reported regressions with these targets.

  * utils/hbmk2/hbmk2.prg
    % win/owatcom: Pentium Pro scheduling.
    * win/owatcom: Temply set back stack calling convention.

  * external/libhpdf/Makefile
    - Disabled for pocc64 due to errors, even internal compiler error:
      ---
      can't spill register variable: rcx (3) image
      ../../hpdf_image.c(480): fatal error: Internal error: best_spillee.
      ---

  * config/win/bcc.cf
    + Added comment about -4, -5, -6.

  * ChangeLog
    ! Minor fix to prev entry.

2009-03-31 01:50 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile
    % Makefile is auto generated by <hbqtgen.exe> and is placed
      in hbqt/gensource.

  * harbour/contrib/hbqt/hbqt_base.cpp
  * harbour/contrib/hbqt/hbqt_qabstractbutton.cpp
  * harbour/contrib/hbqt/hbqt_qabstractitemview.cpp
  * harbour/contrib/hbqt/hbqt_qabstractprintdialog.cpp
  * harbour/contrib/hbqt/hbqt_qabstractscrollarea.cpp
  * harbour/contrib/hbqt/hbqt_qabstractslider.cpp
  * harbour/contrib/hbqt/hbqt_qabstractspinbox.cpp
  * harbour/contrib/hbqt/hbqt_qaction.cpp
  * harbour/contrib/hbqt/hbqt_qapplication.cpp
  * harbour/contrib/hbqt/hbqt_qboxlayout.cpp
  + harbour/contrib/hbqt/hbqt_qbrush.cpp
  * harbour/contrib/hbqt/hbqt_qcalendarwidget.cpp
  * harbour/contrib/hbqt/hbqt_qcheckbox.cpp
  + harbour/contrib/hbqt/hbqt_qcolor.cpp
  * harbour/contrib/hbqt/hbqt_qcolordialog.cpp
  * harbour/contrib/hbqt/hbqt_qcombobox.cpp
  * harbour/contrib/hbqt/hbqt_qcommandlinkbutton.cpp
  * harbour/contrib/hbqt/hbqt_qcoreapplication.cpp
  - harbour/contrib/hbqt/hbqt_qcqlendarwidget.cpp
  * harbour/contrib/hbqt/hbqt_qdateedit.cpp
  * harbour/contrib/hbqt/hbqt_qdatetimeedit.cpp
  * harbour/contrib/hbqt/hbqt_qdial.cpp
  * harbour/contrib/hbqt/hbqt_qdialog.cpp
  * harbour/contrib/hbqt/hbqt_qdoublespinbox.cpp
  * harbour/contrib/hbqt/hbqt_qerrormessage.cpp
  * harbour/contrib/hbqt/hbqt_qfiledialog.cpp
  * harbour/contrib/hbqt/hbqt_qfocusframe.cpp
  * harbour/contrib/hbqt/hbqt_qfont.cpp
  * harbour/contrib/hbqt/hbqt_qfontcombobox.cpp
  * harbour/contrib/hbqt/hbqt_qfontdialog.cpp
  * harbour/contrib/hbqt/hbqt_qformlayout.cpp
  * harbour/contrib/hbqt/hbqt_qframe.cpp
  * harbour/contrib/hbqt/hbqt_qgroupbox.cpp
  * harbour/contrib/hbqt/hbqt_qhboxlayout.cpp
  * harbour/contrib/hbqt/hbqt_qinputdialog.cpp
  * harbour/contrib/hbqt/hbqt_qlabel.cpp
  * harbour/contrib/hbqt/hbqt_qlayout.cpp
  * harbour/contrib/hbqt/hbqt_qlayoutitem.cpp
  * harbour/contrib/hbqt/hbqt_qlcdnumber.cpp
  * harbour/contrib/hbqt/hbqt_qlineedit.cpp
  * harbour/contrib/hbqt/hbqt_qlistview.cpp
  * harbour/contrib/hbqt/hbqt_qmainwindow.cpp
  * harbour/contrib/hbqt/hbqt_qmenu.cpp
  * harbour/contrib/hbqt/hbqt_qmenubar.cpp
  * harbour/contrib/hbqt/hbqt_qmessagebox.cpp
  * harbour/contrib/hbqt/hbqt_qobject.cpp
  * harbour/contrib/hbqt/hbqt_qpagesetupdialog.cpp
  + harbour/contrib/hbqt/hbqt_qpaintdevice.cpp
  + harbour/contrib/hbqt/hbqt_qpainter.cpp
  + harbour/contrib/hbqt/hbqt_qpen.cpp
  * harbour/contrib/hbqt/hbqt_qprintdialog.cpp
  * harbour/contrib/hbqt/hbqt_qprintpreviewdialog.cpp
  * harbour/contrib/hbqt/hbqt_qprogressbar.cpp
  * harbour/contrib/hbqt/hbqt_qprogressdialog.cpp
  * harbour/contrib/hbqt/hbqt_qpushbutton.cpp
  * harbour/contrib/hbqt/hbqt_qradiobutton.cpp
  * harbour/contrib/hbqt/hbqt_qscrollarea.cpp
  * harbour/contrib/hbqt/hbqt_qscrollbar.cpp
  * harbour/contrib/hbqt/hbqt_qsizegrip.cpp
  * harbour/contrib/hbqt/hbqt_qslider.cpp
  * harbour/contrib/hbqt/hbqt_qspinbox.cpp
  * harbour/contrib/hbqt/hbqt_qsplitter.cpp
  * harbour/contrib/hbqt/hbqt_qtabbar.cpp
  * harbour/contrib/hbqt/hbqt_qtableview.cpp
  * harbour/contrib/hbqt/hbqt_qtablewidget.cpp
  * harbour/contrib/hbqt/hbqt_qtablewidgetitem.cpp
  * harbour/contrib/hbqt/hbqt_qtabwidget.cpp
  * harbour/contrib/hbqt/hbqt_qtextedit.cpp
  * harbour/contrib/hbqt/hbqt_qtimeedit.cpp
  * harbour/contrib/hbqt/hbqt_qtoolbar.cpp
  * harbour/contrib/hbqt/hbqt_qtoolbox.cpp
  * harbour/contrib/hbqt/hbqt_qtoolbutton.cpp
  * harbour/contrib/hbqt/hbqt_qtreeview.cpp
  * harbour/contrib/hbqt/hbqt_qtreewidget.cpp
  * harbour/contrib/hbqt/hbqt_qtreewidgetitem.cpp
  * harbour/contrib/hbqt/hbqt_qvboxlayout.cpp
  + harbour/contrib/hbqt/hbqt_qwebpage.cpp
  * harbour/contrib/hbqt/hbqt_qwebview.cpp
  * harbour/contrib/hbqt/hbqt_qwidget.cpp
  * harbour/contrib/hbqt/hbqt_qwizard.cpp
  * harbour/contrib/hbqt/hbqt_slots.cpp
  * harbour/contrib/hbqt/hbqt_utils.cpp
  * harbour/contrib/hbqt/moc_slots.cpp
  * harbour/contrib/hbqt/hbqt.h
  + harbour/contrib/hbqt/hbqt_slots.h
  - harbour/contrib/hbqt/slots.h
    +- Added | Changed | Deleted Sources.
     Now these sources are auto generated by the HB-QT generator.
     Please never try to modify these. Instead look at /qth folder
     and .qth source definition files. I will write a detailed
     description once it becomes fully operational as I have
     drawn on the drawing board. The above code is fully functional
     to the extent it is generated but still about 30% functions
     have not been translated. A work in progress...

  + harbour/contrib/hbqt/TQAbstractButton.prg
  + harbour/contrib/hbqt/TQAbstractItemView.prg
  + harbour/contrib/hbqt/TQAbstractPrintDialog.prg
  + harbour/contrib/hbqt/TQAbstractScrollArea.prg
  + harbour/contrib/hbqt/TQAbstractSlider.prg
  + harbour/contrib/hbqt/TQAbstractSpinBox.prg
  + harbour/contrib/hbqt/TQAction.prg
  + harbour/contrib/hbqt/TQBoxLayout.prg
  + harbour/contrib/hbqt/TQCalendarWidget.prg
  + harbour/contrib/hbqt/TQCheckBox.prg
  + harbour/contrib/hbqt/TQColorDialog.prg
  + harbour/contrib/hbqt/TQComboBox.prg
  + harbour/contrib/hbqt/TQCommandLinkButton.prg
  + harbour/contrib/hbqt/TQDateEdit.prg
  + harbour/contrib/hbqt/TQDateTimeEdit.prg
  + harbour/contrib/hbqt/TQDial.prg
  + harbour/contrib/hbqt/TQDialog.prg
  + harbour/contrib/hbqt/TQDoubleSpinBox.prg
  + harbour/contrib/hbqt/TQErrorMessage.prg
  + harbour/contrib/hbqt/TQFileDialog.prg
  + harbour/contrib/hbqt/TQFocusFrame.prg
  + harbour/contrib/hbqt/TQFontComboBox.prg
  + harbour/contrib/hbqt/TQFontDialog.prg
  + harbour/contrib/hbqt/TQFormLayout.prg
  + harbour/contrib/hbqt/TQFrame.prg
  + harbour/contrib/hbqt/TQGroupBox.prg
  + harbour/contrib/hbqt/TQHBoxLayout.prg
  + harbour/contrib/hbqt/TQInputDialog.prg
  + harbour/contrib/hbqt/TQLabel.prg
  + harbour/contrib/hbqt/TQLayout.prg
  + harbour/contrib/hbqt/TQLayoutItem.prg
  + harbour/contrib/hbqt/TQLCDNumber.prg
  + harbour/contrib/hbqt/TQLineEdit.prg
  + harbour/contrib/hbqt/TQListView.prg
  + harbour/contrib/hbqt/TQMainWindow.prg
  + harbour/contrib/hbqt/TQMenu.prg
  + harbour/contrib/hbqt/TQMenuBar.prg
  + harbour/contrib/hbqt/TQMessageBox.prg
  + harbour/contrib/hbqt/TQObject.prg
  + harbour/contrib/hbqt/TQPageSetupDialog.prg
  + harbour/contrib/hbqt/TQPaintDevice.prg
  + harbour/contrib/hbqt/TQPainter.prg
  + harbour/contrib/hbqt/TQPrintDialog.prg
  + harbour/contrib/hbqt/TQPrintPreviewDialog.prg
  + harbour/contrib/hbqt/TQProgressBar.prg
  + harbour/contrib/hbqt/TQProgressDialog.prg
  + harbour/contrib/hbqt/TQPushButton.prg
  + harbour/contrib/hbqt/TQRadioButton.prg
  + harbour/contrib/hbqt/TQScrollArea.prg
  + harbour/contrib/hbqt/TQScrollBar.prg
  + harbour/contrib/hbqt/TQSizeGrip.prg
  + harbour/contrib/hbqt/TQSlider.prg
  + harbour/contrib/hbqt/TQSpinBox.prg
  + harbour/contrib/hbqt/TQSplitter.prg
  + harbour/contrib/hbqt/TQTabBar.prg
  + harbour/contrib/hbqt/TQTableView.prg
  + harbour/contrib/hbqt/TQTableWidget.prg
  + harbour/contrib/hbqt/TQTableWidgetItem.prg
  + harbour/contrib/hbqt/TQTabWidget.prg
  + harbour/contrib/hbqt/TQTextEdit.prg
  + harbour/contrib/hbqt/TQTimeEdit.prg
  + harbour/contrib/hbqt/TQToolBar.prg
  + harbour/contrib/hbqt/TQToolBox.prg
  + harbour/contrib/hbqt/TQToolButton.prg
  + harbour/contrib/hbqt/TQTreeView.prg
  + harbour/contrib/hbqt/TQTreeWidget.prg
  + harbour/contrib/hbqt/TQTreeWidgetItem.prg
  + harbour/contrib/hbqt/TQVBoxLayout.prg
  + harbour/contrib/hbqt/TQWebPage.prg
  + harbour/contrib/hbqt/TQWebView.prg
  + harbour/contrib/hbqt/TQWidget.prg
  + harbour/contrib/hbqt/TQWizard.prg
    + Added auto generated classes with exact same class hierarchy
      which QT has outlined with inheritance. QT implements
      constructors with dynamic parameters which on prg level
      are difficult to manage. So I have adopted a simple
      approach. :New() accepts only one argument <pParent> i.e.,
      pointer to the parent object, if any, and which is universal
      in QT implementation. This class implementation implies
      that PRG code will pass <pPointer> to a method and will
      receive <oObject> | <pPointer>. We can build higher level
      classes inheriting from above and implement whatever way we wish
      to pass and receive objects. I would like those higher
      level classes to confirm Xbase++ standards.

  * harbour/contrib/hbqt/qth/QAbstractButton.qth
  * harbour/contrib/hbqt/qth/QAbstractItemView.qth
  * harbour/contrib/hbqt/qth/QAbstractPrintDialog.qth
  * harbour/contrib/hbqt/qth/QAbstractScrollArea.qth
  * harbour/contrib/hbqt/qth/QAbstractSlider.qth
  * harbour/contrib/hbqt/qth/QAbstractSpinBox.qth
  * harbour/contrib/hbqt/qth/QAction.qth
  * harbour/contrib/hbqt/qth/QBoxLayout.qth
  * harbour/contrib/hbqt/qth/QCalendarWidget.qth
  * harbour/contrib/hbqt/qth/QCheckBox.qth
  * harbour/contrib/hbqt/qth/QColorDialog.qth
  * harbour/contrib/hbqt/qth/QComboBox.qth
  * harbour/contrib/hbqt/qth/QCommandLinkButton.qth
  * harbour/contrib/hbqt/qth/QDateEdit.qth
  * harbour/contrib/hbqt/qth/QDateTimeEdit.qth
  * harbour/contrib/hbqt/qth/QDial.qth
  * harbour/contrib/hbqt/qth/QDialog.qth
  * harbour/contrib/hbqt/qth/QDoubleSpinBox.qth
  * harbour/contrib/hbqt/qth/QErrorMessage.qth
  * harbour/contrib/hbqt/qth/QFileDialog.qth
  * harbour/contrib/hbqt/qth/QFocusFrame.qth
  * harbour/contrib/hbqt/qth/QFontComboBox.qth
  * harbour/contrib/hbqt/qth/QFontDialog.qth
  * harbour/contrib/hbqt/qth/QFormLayout.qth
  * harbour/contrib/hbqt/qth/QFrame.qth
  * harbour/contrib/hbqt/qth/QGroupBox.qth
  * harbour/contrib/hbqt/qth/QHBoxLayout.qth
  * harbour/contrib/hbqt/qth/QInputDialog.qth
  * harbour/contrib/hbqt/qth/QLabel.qth
  * harbour/contrib/hbqt/qth/QLayout.qth
  * harbour/contrib/hbqt/qth/QLayoutItem.qth
  * harbour/contrib/hbqt/qth/QLCDNumber.qth
  * harbour/contrib/hbqt/qth/QLineEdit.qth
  * harbour/contrib/hbqt/qth/QListView.qth
  * harbour/contrib/hbqt/qth/QMainWindow.qth
  * harbour/contrib/hbqt/qth/QMenu.qth
  * harbour/contrib/hbqt/qth/QMenuBar.qth
  * harbour/contrib/hbqt/qth/QMessageBox.qth
  * harbour/contrib/hbqt/qth/QObject.qth
  * harbour/contrib/hbqt/qth/QPageSetupDialog.qth
  + harbour/contrib/hbqt/qth/QPaintDevice.qth
  * harbour/contrib/hbqt/qth/QPainter.qth
  * harbour/contrib/hbqt/qth/QPrintDialog.qth
  * harbour/contrib/hbqt/qth/QPrintPreviewDialog.qth
  * harbour/contrib/hbqt/qth/QProgressBar.qth
  + harbour/contrib/hbqt/qth/QProgressDialog.qth
  * harbour/contrib/hbqt/qth/QPushButton.qth
  * harbour/contrib/hbqt/qth/QRadioButton.qth
  * harbour/contrib/hbqt/qth/QScrollArea.qth
  * harbour/contrib/hbqt/qth/QScrollBar.qth
  * harbour/contrib/hbqt/qth/QSizeGrip.qth
  * harbour/contrib/hbqt/qth/QSlider.qth
  * harbour/contrib/hbqt/qth/QSpinBox.qth
  * harbour/contrib/hbqt/qth/QSplitter.qth
  * harbour/contrib/hbqt/qth/QTabBar.qth
  * harbour/contrib/hbqt/qth/QTableView.qth
  * harbour/contrib/hbqt/qth/QTableWidget.qth
  * harbour/contrib/hbqt/qth/QTableWidgetItem.qth
  * harbour/contrib/hbqt/qth/QTabWidget.qth
  * harbour/contrib/hbqt/qth/QTextEdit.qth
  * harbour/contrib/hbqt/qth/QTimeEdit.qth
  * harbour/contrib/hbqt/qth/QToolBar.qth
  * harbour/contrib/hbqt/qth/QToolBox.qth
  * harbour/contrib/hbqt/qth/QToolButton.qth
  * harbour/contrib/hbqt/qth/QTreeView.qth
  * harbour/contrib/hbqt/qth/QTreeWidget.qth
  * harbour/contrib/hbqt/qth/QTreeWidgetItem.qth
  * harbour/contrib/hbqt/qth/QVBoxLayout.qth
  + harbour/contrib/hbqt/qth/QWebPage.qth
  + harbour/contrib/hbqt/qth/QWebView.qth
  * harbour/contrib/hbqt/qth/QWidget.qth
  + harbour/contrib/hbqt/qth/QWizard.qth
    + Added | Changed source definitions to honor class construction.

  * harbour/contrib/hbqt/generator/hbqtgen.prg
    ! Enhanced to generate .cpp | .h | .prg | .txt.
      Now .cpp sources contain information about which functions
      are still awaiting to be included plus the percentage in this form:
      -   189/229 [ 73.78% ]

  * harbour/contrib/hbqt/generator/qt45.qtp
    ! Added new .qth source definitions.

  * harbour/contrib/hbqt/tests/demoqt.prg
    ! Auto generated demo program. Just play with it and
      you will be surprised how simple it is to use QT; all
      gadgets provided.

    SUMUP: Auto Generated Files:
             - hbqt/gensource/hbqt_q*.cpp   source files
             - hbqt/doc/Q*.txt              documentation on function calls
             - hbqt/tests/demoqt.prg        demonstration program
             - hbqt/gensource/hbqt.h
             - hbqt/gensource/hbqt_slots.h
             - hbqt/gensource/hbqt_slots.cpp
             - hbqt/gensource/hbqt_base.cpp
             - hbqt/gensource/moc_slots.cpp

     PROGNOSIS:
           - Stay in harbour/contrib/hbqt/generator
           - hbmk2.exe hbqtgen
           - del ..\gensource\*.*
           - del ..\doc\*.*
           - hbqtgen.exe qt45.qtp
           - cd ..
           - you should be staying at harbour/contrib/hbqt
           - del *.* ( be careful that you are under the right folder )
           - copy gensource/*.*
           - invoke QT specific build batch
           - cd tests
           - hbmk2.exe demoqt
           - demoqt.exe
           - .
           - play with gadgets


2009-03-31 02:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbsetup.h
    % '( defined(__POCC_TARGET__) && __POCC_TARGET__ == 2 ) )'
      removed altogether. WinCE is detected anyway by using _WINCE.

  * external/sqlite3/Makefile
    - Disabled for poccce due to errors.

  * external/libpng/Makefile
    ! Fix to prev (poccce).

  * config/win/poccce.cf
    ! Added -D_M_ARM.

  * config/win/owatcom.cf
    % Pentium Pro scheduling.
    * Changed back to __cdecl calling convention from register based
      until we find a way to tweak HB_EXPORT to force __cdecl for
      .dll exported functions.
    ; TOFIX: Find out how to force __cdecl for HB_EXPORT functions in owatcom.
             Or, if this is no good solution for owatcom users, or not
             an option and performace is more important, we must rename
             owatcom Harbour .dlls to a distinct name: harbour[mt]-11-ow.dll.
             We should try to avoid that.

  * config/win/bcc.cf
    % -4 -> -6 for Pentium Pro instructions. Looking at the generated
      code this looks like rescheduling, if someone now can test Harbour
      or plain Pentium, it would be good to know if it still works.

2009-03-31 02:46 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/dos/owatcom.cf
  * harbour/config/win/owatcom.cf
  * harbour/config/linux/owatcom.cf
  * harbour/config/os2/owatcom.cf
  * harbour/utils/hbmk2/hbmk2.prg
    * removed unnecessary linker options
    * use 'SYS causeway' to enable causeway stub in DOS builds instead
      of setting it manually. DOS users can also use DOS4G (default) or
      PMODE (commercial) stubs.

2009-03-31 01:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * external/libhpdf/Makefile
  * external/libpng/Makefile
  * contrib/hbqt/Makefile
    - Disabled for poccce due to errors.

2009-03-30 23:56 UTC+0200 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    ! fixed CGI POST variables handling
      now it sends correctly variables to external executables.

2009-03-30 23:02 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/gtwvg/Makefile
    ! check HB_ARCHITECTURE=win before compiling GTWVG.
      It fixes non Windows OpenWatcom and ICC builds.

2009-03-30 22:17 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/dlmalloc.c
    ! fixed casting

  * harbour/source/vm/fm.c
    % use DLMALLOC as default memory manager in OpenWatcom Windows builds.
      Warning: HB_FM_DLMT_ALLOC does not work with OpenWatcom.

  * harbour/config/dos/owatcom.cf
  * harbour/config/win/owatcom.cf
  * harbour/config/linux/owatcom.cf
  * harbour/config/os2/owatcom.cf
    * changed alignment settings from 8 to 4
    * synced optimization flags used in different builds
    ! fixed linker parameters when HB_BUILD_DEBUG=yes is set
    ; TOVERIFY: I do not remember what calling convention should be used
      in OpenWatcom MT OS2 builds to eliminate GPF when APIENTRY16 functions
      are called. It's possible that current settings are wrong.

  * harbour/config/win/owatcom.cf
    * removed STACK=65536 from OpenWatcom linker parameters.
      This switch probably was inherited from old DOS WatcomC builds.
      Later I'll test current OpwnWatcom builds to check if we can also
      remove it from DOS builds when cwstub.exe is used.
    * restored -bm switch. When DLMALLOC is used it does not cause
      noticeable performance reduction.
    * use default register calling convention. We can change it
      in the future but 1-st we should check the performance overhead.
      If calling convention is a problem only for .DLLs then it can
      be resolved by modifying HB_EXTERN declaration and adding function
      attributes which will force given calling convention.

  * harbour/config/linux/owatcom.cf
    * enabled pentium pro instruction in OpenWatcom Linux builds.
      It reduces the code size and increase performance a little bit.
      Windows users which do not need pure pentium CPU support can make
      the same.

  * harbour/utils/hbmk2/hbmk2.prg
    ! fixed object extension used in OpenWatcom Linux builds: it's .o not .obj
    ! fixed linker parameters in OpenWatcom Linux builds: DEBUG ALL is single
      option
    ! fixed OpenWatcom calling convention settings. Viktor you cannot chose
      simultaneously register and stack calling convention. You have to chose
      one and keep it synced with Harbour compile time settings. Otherwise
      you will have unresolved external or you will force creating by linker
      dynamically function call wrappers (of course if OW support such
      functionality) what may strongly reduce the performance.
    ! removed -j compile time switch - it's not used to compile core code
    * synced optimization flags with core code

   I'm really interested in current OpenWatcom speedtst results compared
   with other Windows builds (MSVC, MinGW, BCC, POCC) in ST and MT builds.

2009-03-30 21:05 UTC+0200 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * error string formatting
      using hb_GTInfo() functions. Tested only in windows.
  * harbour/contrib/examples/uhttpd/session.prg
    + added retrying in case of error in writing / deleting session files.
  * harbour/contrib/examples/uhttpd/cgifunc.prg
    * changed FCreate() to hb_FCreate()

2009-03-30 20:13 UTC+0200 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    + added support for closing console using "X" system button
      using hb_GTInfo() functions. Tested only in windows.
    * formatting
  * harbour/contrib/examples/uhttpd/uhttpdc.c
    * added WM_CLOSE event in win_SysRefresh()
  * harbour/contrib/examples/uhttpd/session.prg
    * minor change

2009-03-30 17:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbfbird/Makefile
  * contrib/gtalleg/Makefile
    - Disabled for poccce due to errors.

  * contrib/hbfimage/fi_winfu.c
    - Disabled Windows specific functions for poccce due to errors.

  * config/win/owatcom.cf
    % Removed -bm (MT mode) switch, because besides creating MT friendly
      code, it kills performance. Pls shout if MT mode is now broken in
      any ways.

  * mpkg_win.bat
    * Generate .zip file first.

2009-03-30 13:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtalleg/Makefile
    - Disabled for minwgce.

2009-03-30 13:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Split Windows compiler list to 'recommended' and 'supported'
      sublists. Recommended are MinGW and MSVC.
      Some comments on the rest:
      - pocc: lack of 3rd party support, mediocre performance.
      - owatcom: lack of 3rd party support, bad performance,
        proprietary object format.
      - bcc: lack of 3rd party support, mediocre performance, has known bugs,
        proprietary object/dll format.
      - xcc: for testing only.
      - icc: for testing and code validation only.
      - cygwin: for some niche purposes. MinGW is a superior choice.

  * mpkg_win.bat
    + Added support for mingw64 and mingwce.

2009-03-30 12:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/Makefile
    - Disabled for bcc and pocc due to compilation error.
    ; Maybe it's possible to make them work (at least bcc) by using
      some special defines, please play with it if you're interested.
      QT seems to like MinGW the best MSVC is also high on the
      support list, so IMO we should also put the focus there.

2009-03-30 11:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/Makefile
    - Disabled for owatcom due to compilation error.

  * contrib/hbhpdf/tests/hbhpdf.hbp
    + Added libpng.

2009-03-30 11:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * external/libhpdf/Makefile
    - Disabled for owatcom due to compilation error.
      If someone is interested in patching it for this compiler,
      please do.

2009-03-30 10:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Don't attempt to strip leading 'lib' from libnames, since
      this breaks libs which actually begin with 'lib', not meant
      as a prefix. F.e. libpng, libhpdf, libjpeg.

  * contrib/hbqt/tests/hbqt.hbp
    + Added static QT libname as comment (for now).

2009-03-30 11:30 UTC+0200 Petr Chornyj (myorg63 at mail.ru)
   * contrib/hbsqlit3/hbsqlit3.ch
   * contrib/hbsqlit3/hbsqlit3.c
      * Added support for sqlite_exec() callback.
         Now the 3rd parameter is an optional callback that is invoked
         once for each row of any query results.
      * Now we can pass name of logfile as third parameter of
         sqlite3_trace(), sqlite3_profile().
      + Added sqlite3_set_authorizer() -
         Compile-Time Authorization Callbacks.
      + Added sqlite3_busy_handler() -
         A Callback To Handle SQLITE_BUSY Errors.
      + Added sqlite3_progress_handler() - Query Progress Callbacks.
      + Added sqlite3_commit_hook(), sqlite3_rollback_hook() -
         Commit And Rollback Notification Callbacks
      + Added sqlite3_backup_*() API for backups purposes.
      + Added sqlite3_initialize(), sqlite3_shutdown(), sqlite3_interrupt(),
         sqlite3_status(), sqlite3_db_status(), sqlite3_stmt_status(),
         sqlite3_sql(), sqlite3_extended_errcode(), sqlite3_threadsafe(),
         sqlite3_memory_used(), sqlite3_memory_highwater().
      ! Fixed sqlite3_table_column_metadata().
      - Temporary disabled sqlite3_db_handle().
      * Minor changes, cleanup and formating.
   + contrib/hbsqlit3/tests/authorizer.prg
   + contrib/hbsqlit3/tests/backup.prg
   + contrib/hbsqlit3/tests/hooks.prg
      + Added for demonstration of new possibilities.
   + contrib/hbsqlit3/tests/metadata.prg
      * Minor changes

2009-03-30 10:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/owatcom.cf
  * config/linux/owatcom.cf
  * config/os2/owatcom.cf
    - Reverted yesterdays attempt to make owatcom builds faster.
      After the change the compilation time went slower, the
      binaries got smaller, but execution speed got actually worse.
      I've left -oz option removed for win, that's the only
      remaining change, plus -5r in os2/dos.
      owatcom seems not very useful for production.

2009-03-30 09:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added two Windows system libs. (also needed for QT)

2009-03-29 22:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/hbserv.c
    ! Fixed issues with prev commit. (Thanks Francesco)

2009-03-29 09:03 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/contrib/hbqt/doc
    + Added folder to receive auto-generated Q*.txt documentation
      files with PRG level functions with parameters and return value like:
      Qt_QWidget_setContentsMargins( pQWidget, nLeft, nTop, nRight, nBottom ) -> NIL

  + harbour/contrib/hbqt/gensource
    + Added folder to receive auto generated .cpp sources.
      The idea is to have freedom to generate sources and test them
      prior to committing to distribution folder.

  * harbour/contrib/hbqt/hbqt.h
    + Added more parameter and return macros.

  + harbour/contrib/hbqt/hbqt_utils.c
    + Added generic conversion routins to support parameters and return values.

  + harbour/contrib/hbqt/hbqt_qtreewidget.cpp
  + harbour/contrib/hbqt/hbqt_qtreewidgetitem.cpp
  * harbour/contrib/hbqt/hbqt_qtreeview.cpp

  * harbour/contrib/hbqt/generator/hbqtgen.prg
    ! Rearrangement of sequences in .qht files.
      Implemented project files with .qtp extension.
      Implemented auto generation of document files with .txt extension.
         USAGE: hbqtgen.exe @qt45.qtp will generate files as:
                .
                ../gensource/hbqt_Q*.cpp
                ../doc/Q*.txt

  + harbour/contrib/hbqt/generator/qt45.qtp
    + Added project file to generate sources and documenttaion for tested widgets.

  + harbour/contrib/hbqt/qth/QAbstractButton.qth
  + harbour/contrib/hbqt/qth/QAbstractItemView.qth
  + harbour/contrib/hbqt/qth/QAbstractPrintDialog.qth
  + harbour/contrib/hbqt/qth/QAbstractScrollArea.qth
  + harbour/contrib/hbqt/qth/QAbstractSlider.qth
  + harbour/contrib/hbqt/qth/QAbstractSpinBox.qth
  + harbour/contrib/hbqt/qth/QAction.qth
  + harbour/contrib/hbqt/qth/QApplication.qth
  + harbour/contrib/hbqt/qth/QBoxLayout.qth
  + harbour/contrib/hbqt/qth/QBrush.qth
  + harbour/contrib/hbqt/qth/QCalendarWidget.qth
  + harbour/contrib/hbqt/qth/QCheckBox.qth
  + harbour/contrib/hbqt/qth/QColor.qth
  + harbour/contrib/hbqt/qth/QColorDialog.qth
  + harbour/contrib/hbqt/qth/QComboBox.qth
  + harbour/contrib/hbqt/qth/QCommandLinkButton.qth
  + harbour/contrib/hbqt/qth/QCoreApplication.qth
  + harbour/contrib/hbqt/qth/QDateEdit.qth
  + harbour/contrib/hbqt/qth/QDateTimeEdit.qth
  + harbour/contrib/hbqt/qth/QDial.qth
  + harbour/contrib/hbqt/qth/QDialog.qth
  + harbour/contrib/hbqt/qth/QDoubleSpinBox.qth
  + harbour/contrib/hbqt/qth/QErrorMessage.qth
  + harbour/contrib/hbqt/qth/QFileDialog.qth
  + harbour/contrib/hbqt/qth/QFocusFrame.qth
  + harbour/contrib/hbqt/qth/QFont.qth
  + harbour/contrib/hbqt/qth/QFontComboBox.qth
  + harbour/contrib/hbqt/qth/QFontDialog.qth
  + harbour/contrib/hbqt/qth/QFormLayout.qth
  + harbour/contrib/hbqt/qth/QFrame.qth
  + harbour/contrib/hbqt/qth/QGroupBox.qth
  + harbour/contrib/hbqt/qth/QHBoxLayout.qth
  + harbour/contrib/hbqt/qth/QInputDialog.qth
  + harbour/contrib/hbqt/qth/QLabel.qth
  + harbour/contrib/hbqt/qth/QLayout.qth
  + harbour/contrib/hbqt/qth/QLayoutItem.qth
  + harbour/contrib/hbqt/qth/QLCDNumber.qth
  + harbour/contrib/hbqt/qth/QLineEdit.qth
  + harbour/contrib/hbqt/qth/QListView.qth
  + harbour/contrib/hbqt/qth/QMainWindow.qth
  + harbour/contrib/hbqt/qth/QMenu.qth
  + harbour/contrib/hbqt/qth/QMenuBar.qth
  + harbour/contrib/hbqt/qth/QMessageBox.qth
  + harbour/contrib/hbqt/qth/QObject.qth
  + harbour/contrib/hbqt/qth/QPageSetupDialog.qth
  + harbour/contrib/hbqt/qth/QPainter.qth
  + harbour/contrib/hbqt/qth/QPen.qth
  + harbour/contrib/hbqt/qth/QPrintDialog.qth
  + harbour/contrib/hbqt/qth/QPrintPreviewDialog.qth
  + harbour/contrib/hbqt/qth/QProgressBar.qth
  + harbour/contrib/hbqt/qth/QPushButton.qth
  + harbour/contrib/hbqt/qth/QRadioButton.qth
  + harbour/contrib/hbqt/qth/QScrollArea.qth
  + harbour/contrib/hbqt/qth/QScrollBar.qth
  + harbour/contrib/hbqt/qth/QSizeGrip.qth
  + harbour/contrib/hbqt/qth/QSlider.qth
  + harbour/contrib/hbqt/qth/QSpinBox.qth
  + harbour/contrib/hbqt/qth/QSplitter.qth
  + harbour/contrib/hbqt/qth/QTabBar.qth
  + harbour/contrib/hbqt/qth/QTableView.qth
  + harbour/contrib/hbqt/qth/QTableWidget.qth
  + harbour/contrib/hbqt/qth/QTableWidgetItem.qth
  + harbour/contrib/hbqt/qth/QTabWidget.qth
  + harbour/contrib/hbqt/qth/QTextEdit.qth
  + harbour/contrib/hbqt/qth/QTimeEdit.qth
  + harbour/contrib/hbqt/qth/QToolBar.qth
  + harbour/contrib/hbqt/qth/QToolBox.qth
  + harbour/contrib/hbqt/qth/QToolButton.qth
  + harbour/contrib/hbqt/qth/QTreeView.qth
  + harbour/contrib/hbqt/qth/QTreeWidget.qth
  + harbour/contrib/hbqt/qth/QTreeWidgetItem.qth
  + harbour/contrib/hbqt/qth/QVBoxLayout.qth
  + harbour/contrib/hbqt/qth/QWidget.qth
    + Added or changed(4) base header input files to generate sources.

    ; TODO - Create <Makefile> for generated sources. [DONE]
           - Generate Classes based on compiled members supporting
             QT's class hirarchy. As of now generated sources
             have limited usage. [DONE]

    ; REQUEST ( Przemek ) - Can you please provide a GTWVT.C like
             skeleton .cpp which I could use as a base for GTQTC ?


2009-03-29 22:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * config/dos/owatcom.cf
  * config/win/owatcom.cf
  * config/linux/owatcom.cf
  * config/os2/owatcom.cf
    % Tweaked optimization options. This will result in slower
      build process, but more optimal runtime performance and
      executable sizes. One option is now turned on which can
      cause bad code with OW 1.1, so make sure you use latest
      Open Watcom version, after all the upgrade is free.
      It'd be great if owatcom users could make speedtst runs
      with this revision and older ones to see the difference,
      maybe now owatcom won't perform so poorly as before.
    + Added link to C compiler option docs.
    ! Fixed to convert slashes in HB_USER_CFLAGS.
    % Enabled -5r for DOS and OS/2.

  * contrib/hbct/disk.c
    ! Disabled some volume/disk related code for WinCE.

  * contrib/xhb/hbserv.c
    ! Disabled for poccce.

  * contrib/hbnf/getenvrn.c
    ! Disabled FT_GETE() for poccce.
    ! Fixed FT_GETE() to return zero/empty string on platforms not
      supported (like also OS/2).

  * doc/en-EN/Makefile
  - doc/en-EN/error.txt
  + doc/en-EN/errsys.txt
  * source/rtl/Makefile
  - source/rtl/fserror.c
  - source/rtl/errorapi.c
  - source/rtl/errorapu.c
  - source/rtl/errorint.c
  - source/rtl/errorsys.prg
  + source/rtl/fserr.c
  + source/rtl/errapi.c
  + source/rtl/errint.c
  + source/rtl/errapiu.c
  + source/rtl/errsys.prg
  * contrib/examples/hbdoc/examples/core_es/Makefile
  - contrib/examples/hbdoc/examples/core_es/error.txt
  + contrib/examples/hbdoc/examples/core_es/errsys.txt
    * Most filenames containing 'error' renamed to make
      it easier to search for errors in build logs.
    ; Three headers remain.

2009-03-29 22:07 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    * added warning message when HVM debugger is enabled

2009-03-29 19:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * external/sqlite3/Makefile
    ! Added necessary configuration for WinCE builds.

  * bin/hb-func.sh
  * source/vm/maindllp.c
    * mingwce will now generate dll by the name: harbour*-*-arm.dll
    ; TOFIX: mingwce .dlls should probably be generated in bin dir just
             like in every other cases, but I don't know why it's
             explicitly put in lib dir in this case.

  * bin/hb-mkdyn.bat
    + Added .dll generation for msvcce and poccce.

  * source/vm/maindllp.c
    * Formatting.
    ! Fixed to compile for WinCE. Please review me.

  * contrib/hbct/disk.c
    ! DRIVETYPE() made a dummy under WinCE to make it compile.

  * contrib/gtwvg/Makefile
    ! Limited GTWVG builds to 32-bit Windows compilers as it's
      still broken for WinCE, this time with pocce. Notice
      HB_OS* macros aren't available before #including Harbour
      headers. Reenable them after being fixed and tested.

  * contrib/hbole/olecore.c
    ! Fixed compilation errors below with poccce. Please review me.
      pocc.exe -I. -Ze -Go -W1 -Ot -Tarm-coff -D_WINCE -DUNICODE -DHB_NO_WIN_CONSOLE -I../../../../include     -c ../../olecore.c -Foolecore.obj
      ../../olecore.c(188): error #2152: Unknown field 'llVal' of 'union (no name)'.
      ../../olecore.c(273): error #2152: Unknown field 'llVal' of 'union (no name)'.
      ../../olecore.c(290): error #2152: Unknown field 'ullVal' of 'union (no name)'.

  * contrib/hbsqlit3/Makefile
    ! Excluded for poccce.

  ; TOFIX:
      pocc.exe -I. -Ze -Go -W1 -Ot -Tarm-coff -D_WINCE -DUNICODE -DHB_NO_WIN_CONSOLE -I../../../../include     -c ../../getenvrn.c -Fogetenvrn.obj
      ../../getenvrn.c(177): warning #2027: Missing prototype for 'GetEnvironmentStrings'.
      ../../getenvrn.c(177): error #2168: Operands of = have incompatible types 'wchar_t *' and 'int'.
      ../../getenvrn.c(246): warning #2027: Missing prototype for 'FreeEnvironmentStrings'.
      pocc.exe -I. -Ze -Go -W1 -Ot -Tarm-coff -D_WINCE -DUNICODE -DHB_NO_WIN_CONSOLE -I../../../../include     -c ../../hbserv.c -Fohbserv.obj
      ../../hbserv.c(391): error #2048: Undeclared identifier 'CTRL_C_EVENT'.
      ../../hbserv.c(392): error #2048: Undeclared identifier 'CTRL_BREAK_EVENT'.
      ../../hbserv.c(393): error #2048: Undeclared identifier 'CTRL_CLOSE_EVENT'.
      ../../hbserv.c(394): error #2048: Undeclared identifier 'CTRL_LOGOFF_EVENT'.
      ../../hbserv.c(395): error #2048: Undeclared identifier 'CTRL_SHUTDOWN_EVENT'.
      ../../hbserv.c(398): error #2069: Initializer must be constant.
      ../../hbserv.c(511): warning #2027: Missing prototype for 'CallNextHookEx'.
      ../../hbserv.c(528): warning #2027: Missing prototype for 'CallNextHookEx'.
      ../../hbserv.c(635): error #2048: Undeclared identifier 'SEM_NOALIGNMENTFAULTEXCEPT'.
      ../../hbserv.c(635): error #2048: Undeclared identifier 'SEM_NOGPFAULTERRORBOX'.
      ../../hbserv.c(636): error #2048: Undeclared identifier 'SEM_NOOPENFILEERRORBOX'.
      ../../hbserv.c(638): warning #2027: Missing prototype for 'SetUnhandledExceptionFilter'.
      ../../hbserv.c(639): warning #2027: Missing prototype for 'SetWindowsHookEx'.
      ../../hbserv.c(639): error #2048: Undeclared identifier 'WH_GETMESSAGE'.
      ../../hbserv.c(639): error #2048: Undeclared identifier 'HOOKPROC'.
      ../../hbserv.c(639): error #2001: Syntax error: expected ')' but found 's_MsgFilterFunc'.
      ../../hbserv.c(639): error #2168: Operands of = have incompatible types 'HHOOK' and 'int'.
      ../../hbserv.c(639): error #2001: Syntax error: expected ';' but found 's_MsgFilterFunc'.
      ../../hbserv.c(639): error #2001: Syntax error: expected ';' but found ')'.
      ../../hbserv.c(639): error #2061: Illegal statement termination.
      ../../hbserv.c(640): warning #2027: Missing prototype for 'SetConsoleCtrlHandler'.
      ../../hbserv.c(665): warning #2027: Missing prototype for 'SetUnhandledExceptionFilter'.
      ../../hbserv.c(668): warning #2027: Missing prototype for 'UnhookWindowsHookEx'.
      ../../hbserv.c(672): warning #2027: Missing prototype for 'SetConsoleCtrlHandler'.
      ../../hbserv.c(776): warning #2027: Missing prototype for 'FreeConsole'.

2009-03-29 19:57 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/fm.c
    ! fixed typo and add missing HVM stack preload macros

2009-03-29 19:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/fm.c
    + added support for thread local memory allocators by using MSPACE
      mechanism in DLALLOC.
      It can be enabled by compiling Harbour with HB_FM_DLMT_ALLOC macro.
      By default up to 16 (HB_MSPACE_COUNT macro) independent memory
      allocators is dynamically created for new threads. When more threads
      is used then allocators are shared between them and HVM tries to
      balance used allocators to reduce number of threads using the
      same allocator.
      It should give noticeable scalability improvement in some OS-es
      where default memory manages has pure MT performance.
      Please try to compiler speedtst.prg with Harbour compiled with
      and without HB_FM_DLMT_ALLOC and compare results in this test:
         speedtst --thread=2 --scale
      using real multiCPU machine.

  * harbour/source/vm/dlmalloc.c
    * pacified warning when FOOTERS are enabled

  * harbour/source/vm/garbage.c
    * cleanup comment

2009-03-29 09:03 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgsink.c
    ! Fixed remaining non-ANSI C comments. Just had been overlooked!

2009-03-29 15:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.sh
  * bin/hb-func.sh
    + Added support for .dll creation and hbmk for mingw64.
    * Synced Windows system liblist for dll creation.
    * wsock32 -> ws2_32

  * bin/hb-mkdyn.bat
    ! wsock32 -> ws2_32

  * contrib/gtwvg/gtwvg.c
    ! Fixed embedded ANSI C comments.
  * contrib/gtwvg/wvgsink.c
    ! Fixed a few non-ANSI C comments.
    * There is more, see: 'grep // *.c'

2009-03-29 11:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * external/Makefile
  + external/libhpdf/*
  + external/libpng/*
    + Added libharu and libpng to Harbour repository.
      Now it's possible to use libhpdf as static lib on all
      platforms. This is useful because this lib isn't yet part
      of Linux distros.
      libpng is only built for win/dos/os2 platforms.
      It's possible to override libpng location by using
      HB_INC_LIBPNG envvar.

  * contrib/hbhpdf/Makefile
    + Look for libharu headers in /external dir.

  * external/sqlite3/Makefile
    - Disabled for bcc. Latest sqlite3 version breaks with this compiler:
      ---
      Error E2293 ../../sqlite3.c 29156: ) expected in function winCurrentTime
      Warning W8013 ../../sqlite3.c 29157: Possible use of 'timeW' before definition in function winCurrentTime
      Error E2379 ../../sqlite3.c 29157: Statement missing ; in function winCurrentTime
      Error E2379 ../../sqlite3.c 29158: Statement missing ; in function winCurrentTime
      Error E2379 ../../sqlite3.c 29160: Statement missing ; in function winCurrentTime
      Error E2293 ../../sqlite3.c 29161: ) expected in function winCurrentTime
      Error E2379 ../../sqlite3.c 29162: Statement missing ; in function winCurrentTime
      Error E2293 ../../sqlite3.c 29163: ) expected in function winCurrentTime
      Warning W8057 ../../sqlite3.c 29171: Parameter 'prNow' is never used in function winCurrentTime
      *** 7 errors in Compile ***
      ---
      bcc users can report this problem here:
      http://www.sqlite.org/cvstrac/tktnew

  + tests/bnch_win.bat
  - tests/bnchmark
    * Moved bnch_win.bat to tests.

2009-03-28 21:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added autofilling CCPREFIX on Windows platform when
      -comp=mingw64 or -comp=mingwce is specified.
    + Added autofilling CCPATH on Windows platform when
      -comp=mingw64 or -comp=mingwce is specified and
      corresponding embedded MinGW installations are found in
      Harbour directory.

    ; IOW this means that it's now possible to create a unified,
      self-contained install kit, which is able to easily build
      x64, WinCE and x86 executables with command below:
      > hbmk2 test.prg            => test.exe for x86
      > hbmk2 -comp=mingw64 a.prg => test.exe for x64
      > hbmk2 -comp=mingwce a.prg => test.exe for ARM/WinCE
      Can it be any simpler than that?

      My sample install .zip is 322MB and it contains Harbour libs
      for msvc, mingw, mingw64, mingwce, bcc, owatcom and contains
      all required MinGW files.
      It will be even easier if we add CPU platform identifiers
      to Harbour.

2009-03-28 18:09 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/dos/owatcom.cf
  * config/win/owatcom.cf
  * config/linux/owatcom.cf
  * config/os2/owatcom.cf
    + Added HB_BUILD_MODE=c/cpp support for Watcom compilers.
    + Tweaked optimization options to work with wcc386 (C mode compiler).
    + Tweaked C make rule for wcc386 (only accepts backslashes).
    ; So now sqlite3 will be forced to C mode and will compile.
    ; TOFIX: .cpp file compilation will be broken in forced C mode,
             so more cleanup will be needed here if we want to allow
             all combinations.

2009-03-28 00:20 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/wvggui.h

  * harbour/contrib/gtwvg/wvtwin.ch

  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgcore.c
  * harbour/contrib/gtwvg/wincallb.c
  * harbour/contrib/gtwvg/wvgcuig.c
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgutils.c
  * harbour/contrib/gtwvg/wvgwin.c

  * harbour/contrib/gtwvg/wincback.prg
  * harbour/contrib/gtwvg/wvg3stat.prg
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgbitmp.prg
  * harbour/contrib/gtwvg/wvgcheck.prg
  * harbour/contrib/gtwvg/wvgclass.prg
  * harbour/contrib/gtwvg/wvgcombo.prg
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdarea.prg
  * harbour/contrib/gtwvg/wvgdatar.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvghtmlv.prg
  * harbour/contrib/gtwvg/wvglistb.prg
  * harbour/contrib/gtwvg/wvgmenub.prg
  * harbour/contrib/gtwvg/wvgmle.prg
  * harbour/contrib/gtwvg/wvgpaint.prg
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgpushb.prg
  * harbour/contrib/gtwvg/wvgradio.prg
  * harbour/contrib/gtwvg/wvgscrlb.prg
  * harbour/contrib/gtwvg/wvgsle.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgsysw.prg
  * harbour/contrib/gtwvg/wvgtabpg.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgtreev.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Comments converted to ANSI standards.
    ! Formatting whereever needed.

    ; Perhaps no comment is left which do not confirm to ANSI standards.

2009-03-28 00:59 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    + added #define FIXED_THREADS that disable (temporarly) dynamic threads
      support, until I will find a correct way to implement.
    * changed default GT in Linux from GTXWC to GTTRM
    + added Actions and Handlers support
      rewrote handlers part, now separated and similar to Apache
    * changed internal ScripAlias Hash name from Aliases to ScriptAliases
    + added Alias support
    + added PATH_INFO and PATH_TRANSLATED support
      this means that parts of urls longer than the real file url are passed to
      file as parameters. Actually valid for any file.
    * fixed CGIKill() to correct handle killing of not responding CGI apps
    * formatting and minor changes
    ; NOTE: not tested under Linux, more tests to do
    ; TOFIX: in case of error of cgi executables error output is missing,
             this I have to check better.
  * harbour/contrib/examples/uhttpd/uhttpd.ini
    * changed [ALIASES] section name to [SCRIPTALIASES]
    + added [ALIASES] correct section
  * harbour/contrib/examples/uhttpd/session.prg
    + added retrying in case of error in reading session files.
      to check it better
  ; NOTE: still work in progress.
    Any comments and suggestions are welcome

2009-03-27 18:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/poccce.cf
  * config/win/pocc.cf
    * Warning level taken down to -w2.

  * contrib/hbsqlit3/Makefile
    - Disabled for pocc, as it chokes on the new version of
      sqlite3.h.

  * INSTALL
    * Minor update.

  * include/hbapifs.h
  * include/hbdbsort.h
  * include/hbsetup.h
  * contrib/hbct/files.c
  * contrib/hbct/disk.c
  * contrib/hbmzip/hbmzip.c
  * contrib/rddads/ads1.c
  * contrib/hbbmcdx/bmdbfcdx.c
  * contrib/examples/pp/pp.c
  * contrib/examples/pp/hbppcore.c
  * source/pp/ppcore.c
  * source/pp/hbpp.c
  * source/vm/runner.c
  * source/vm/estack.c
  * source/vm/hvm.c
  * source/vm/cmdarg.c
  * source/vm/fm.c
  * source/vm/proc.c
  * source/vm/extrap.c
  * source/vm/memvars.c
  * source/vm/set.c
  * source/main/harbour.c
  * source/common/hbfsapi.c
  * source/common/hbwince.c
  * source/rtl/spfiles.c
  * source/rtl/defpath.c
  * source/rtl/philes.c
  * source/rtl/fnsplit.c
  * source/rtl/fstemp.c
  * source/rtl/gtchrmap.c
  * source/rtl/errorint.c
  * source/rtl/filebuf.c
  * source/rtl/hbffind.c
  * source/rtl/filesys.c
  * source/rtl/file.c
  * source/rdd/dbfntx/dbfntx1.c
  * source/rdd/sdf1.c
  * source/rdd/dbfnsx/dbfnsx1.c
  * source/rdd/dbfcdx/dbfcdx1.c
  * source/rdd/delim1.c
  * source/rdd/dbf1.c
  * source/rdd/hsx/hsx.c
  * source/rdd/dbffpt/dbffpt1.c
  * source/rdd/hbsix/sxsem.c
  * source/rdd/hbsix/sxfname.c
  * source/compiler/hbmain.c
  * source/compiler/genc.c
  * source/compiler/harbour.yyc
  * source/compiler/harbour.y
  * source/compiler/compi18n.c
  * source/compiler/genhrb.c
  * source/compiler/gencobj.c
  * source/compiler/genobj32.c
    * _POSIX_PATH_MAX + 1 -> HB_PATH_MAX
    * _POSIX_PATH_MAX -> HB_PATH_MAX - 1
      Please update your .c code to use new constant.
      Harbour initialization of the value is now HB_LEGACY_LEVEL2
      and will be removed in next version.
    ; Please review me.

2009-03-27 16:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * external/sqlite3/sqlite3.c
  * external/sqlite3/sqlite3.h
    * Updated to latest version.

2009-03-27 16:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * debian/dirs
    * Changed en -> en-EN.

  * external/sqlite3/Makefile
  * external/sqlite3/_sqlite3.c
    + Disabled warnings and forced C mode for sqlite3.
    - Deleted no longer needed stub.

  * include/hbsetup.h
    + Added HB_PATH_MAX.

  * source/compiler/genc.c
    * Minor modification to recent addition to make code
      more grep friendly.

  * config/win/msvc.cf
  * config/win/msvcce.cf
    + Added HB_BUILD_MODE=c and HB_BUILD_MODE=cpp support
      to force specific build mode.
      ATTENTION: Don't use this for normal Harbour code,
                 it's only meant for external libs hosted
                 inside Harbour source tree.

  * config/win/pocc.cf
  * config/win/poccce.cf
    + Added -w3 (default is -w2).

  * config/darwin/gcc.cf
  * config/hpux/gcc.cf
  * config/dos/owatcom.cf
  * config/dos/djgpp.cf
  * config/win/mingwce.cf
  * config/win/poccce.cf
  * config/win/icc.cf
  * config/win/cygwin.cf
  * config/win/msvc.cf
  * config/win/owatcom.cf
  * config/win/msvcce.cf
  * config/win/mingw.cf
  * config/win/pocc.cf
  * config/win/bcc.cf
  * config/linux/owatcom.cf
  * config/linux/gcc.cf
  * config/linux/icc.cf
  * config/os2/owatcom.cf
  * config/os2/gcc.cf
  * config/sunos/gcc.cf
  * config/bsd/gcc.cf
    + Added support for HB_BUILD_WARN=no to reset warning levels
      to compiler defaults.
      ATTENTION: Don't use this for normal Harbour code,
                 it's only meant for external libs hosted
                 inside Harbour source tree.

2009-03-27 15:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * external/sqlite3/Makefile
    * Don't build it for linux and darwin.

  * contrib/hbsqlit3/Makefile
    * Changed to plain standard external dependency search method.
    + Added searching in local sqlite3 copy for win and os2.

2009-03-27 15:01 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbodbc/odbc.c
    ! Fixed potential buffer overrun in SQLDRIVERCONNECT() in UNICODE mode.

  * utils/hbmk2/hbmk2.prg
    - Removed debug line left in.

2009-03-27 14:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbodbc/odbc.c
    * BYTE -> char
    ! GetDesktopWindow() -> NULL

  * contrib/hbmsql/tmsql.prg
  * contrib/hbqt/tests/demoqt.prg
  * contrib/hbpgsql/postgres.c
    * Formatting.

  * contrib/examples/hbapollo/Makefile
    ! Changed root dir after recent move.

2009-03-27 14:02 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
    + added void hb_vmAtQuit( HB_INIT_FUNC pFunc, void * cargo );
      AtQuit functions are executed after deallocating all HVM items and
      disabling .prg destructors. They can make final cleanup at C level
      but should not reenter HVM.

  * harbour/contrib/hbole/oleinit.c
    * use hb_vmAtQuit() instead of hb_vmAtExit() - it resolves the problem
      with executing destructors to OLE objects after closing OLE connection.

  * harbour/contrib/hbole/olecore.c
    + added translation for VT_R4 and VT_CY values.
    ! fixed MT support by moving OLE error code to TSD

2009-03-27 12:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbqt/tests/hbqt.hbp
    + Removed mingw32 lib not necessary.
    + Added gt=gtnul to suppress the console window.

  * utils/hbmk2/hbmk2.prg
    ! Fixed gtnul usage in one remaining place.

2009-03-27 11:45 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    * One TOFIX marked as DONE.

  * contrib/hbmysql/tmysql.prg
    % Optimizations (using SWITCH)

  * contrib/hbqt/qth/QFont.qth
  * contrib/hbqt/qth/QPen.qth
  * contrib/hbqt/hbqt_qfont.cpp
    ! Fixed HB_IS*() macro usage.

  * contrib/hbqt/tests/hbqt.hbp
    + Added C++ and runtime MinGW lib.
    ; TOFIX: I still get: [SOLVED]
      harbour/lib/win/mingw/libhbvm.a(fm.o):fm.c:(.text+0x39b): undefined reference to `__mingw_vfprintf'
    + gui=yes

2009-03-27 02:03 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/hbqt.h
  * harbour/contrib/hbqt/hbqt_qfont.cpp
    + Added more functions.

  + harbour/contrib/hbqt/generator
  + harbour/contrib/hbqt/generator/hbqtgen.prg
    + Implemented protocol to generate .cpp source file
      from QT Header definitions lifted from its help manual.
      It has lot more potentials to incorporate more features,
      it is just the begining.

  + harbour/contrib/hbqt/qth
  + harbour/contrib/hbqt/qth/QBrush.qth
  + harbour/contrib/hbqt/qth/QFont.qth
  + harbour/contrib/hbqt/qth/QPen.qth
  + harbour/contrib/hbqt/qth/QWidget.qth
    + Added .qth contining prototypes and user code to be embedded
      into the resulting .cpp source file.

    /*
       COMPILE  : hbmk2 hbqtgen
       USAGE    : hbqtgen -I<qthHeaderFilesPath> -O<cppSourceFilePath> <qthFile1.qth> <qthFile2.qth> <...>
                  hbqtgen -help
       EXAMPLE  : hbqtgen -Ic:\harbour\hbqt\qth  -Oc:\temp QFont.qth QWidget.qth

       NEXT     : hbqtgen @QtProjectFile.qtp

       OVERVIEW : .qth


                     enum Capitalization { MixedCase, AllUppercase, AllLowercase, SmallCaps, Capitalize }
                     enum SpacingType { PercentageSpacing, AbsoluteSpacing }
                     enum Stretch { UltraCondensed, ExtraCondensed, Condensed, SemiCondensed, ..., UltraExpanded }
                     enum Style { StyleNormal, StyleItalic, StyleOblique }
                     enum StyleHint { AnyStyle, SansSerif, Helvetica, Serif, ..., System }
                     enum StyleStrategy { PreferDefault, PreferBitmap, PreferDevice, PreferOutline, ..., PreferQuality }
                     enum Weight { Light, Normal, DemiBold, Bold, Black }


                     <CODE>

                     /*
                     QFont ()
                     QFont ( const QString & family, int pointSize = -1, int weight = -1, bool italic = false )
                     QFont ( const QFont & font, QPaintDevice * pd )
                     QFont ( const QFont & font )
                     */
                     HB_FUNC( QT_QFONT )
                     {
                        if( HB_IS_STRING( 1 ) )
                        {
                           hb_retptr( ( QFont* ) new QFont() );
                        }
                        else
                        {
                           hb_retptr( ( QFont* ) new QFont( hbqt_par_QString( 1 ),
                                                            HB_IS_NUMERIC( 2 ) ? hb_parni( 2 ) : -1,
                                                            HB_IS_NUMERIC( 3 ) ? hb_parni( 3 ) : -1,
                                                            hb_parl( 4 ) ) );
                        }
                     }

                     </CODE>



                     bool bold () const
                     Capitalization capitalization () const
                     QString defaultFamily () const
                     bool exactMatch () const
                     QString family () const
                     bool fixedPitch () const
                     FT_Face freetypeFace () const
                     bool fromString ( const QString & descrip )
                     HFONT handle () const
                     //bool isCopyOf ( const QFont & f ) const
                     bool italic () const
                     bool kerning () const
                     QString key () const
                     QString lastResortFamily () const
                     QString lastResortFont () const
                     qreal letterSpacing () const
                     SpacingType letterSpacingType () const
                     //quint32 macFontID () const
                     bool overline () const
                     int pixelSize () const
                     int pointSize () const
                     qreal pointSizeF () const
                     bool rawMode () const
                     QString rawName () const
                     QFont resolve ( const QFont & other ) const
                     void setBold ( bool enable )
                     void setCapitalization ( Capitalization caps )
                     void setFamily ( const QString & family )
                     void setFixedPitch ( bool enable )
                     void setItalic ( bool enable )
                     void setKerning ( bool enable )
                     void setLetterSpacing ( SpacingType type, qreal spacing )
                     void setOverline ( bool enable )
                     void setPixelSize ( int pixelSize )
                     void setPointSize ( int pointSize )
                     void setPointSizeF ( qreal pointSize )
                     void setRawMode ( bool enable )
                     void setRawName ( const QString & name )
                     void setStretch ( int factor )
                     void setStrikeOut ( bool enable )
                     void setStyle ( Style style )
                     void setStyleHint ( StyleHint hint, StyleStrategy strategy = PreferDefault )
                     void setStyleStrategy ( StyleStrategy s )
                     void setUnderline ( bool enable )
                     void setWeight ( int weight )
                     void setWordSpacing ( qreal spacing )
                     int stretch () const
                     bool strikeOut () const
                     Style style () const
                     StyleHint styleHint () const
                     StyleStrategy styleStrategy () const
                     QString toString () const
                     bool underline () const
                     int weight () const
                     qreal wordSpacing () const



       Comments   :  #  //

       Enumerators: enum definitions must be included what exists in the
                    help documenttaion. It has special significan while
                    parsing the prototypes.

       UserCode   : Anything contained in <CODE> </CODE> construct will be
                    written directly in the .cpp as is. Developer is responsible
                    to insert syntatically correct code. usually constructor
                    function goes here. And may be complex functions be
                    put under it. Also if some special #include command is needed.

       Prototype  : Not all prototypes are included in the source .cpp at the
                    moment. I need more help on this front how we detect and
                    format the parameters. I am struck specially at something
                    like   <const QFont & other> . Przemek?

                    Bottom line: Copy and Paste all prototypes from the docs,
                    generate the .cpp, compile it, check which function raises
                    error, comment it out in .qth with either "//" or "#",
                    regenerate .cpp until all errors are covered, copy .cpp
                    into production folder.

    */

2009-03-27 10:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added autodetection of lib/<arch>/<comp> lib dir. This
      makes it possible to use hbmk2 in multicompiler scenarios
      without 'make install'ing Harbour, or even multicompiler
      end-user configurations for any compiler regardless of
      lib format and naming.

  + contrib/hbqt/tests/hbqt.hbp
    + Added .hbp file for hbqt.

  * contrib/hbodbc/odbc.c
    * Further type cleanup.
    * Formatting.

  * contrib/hbole/tests/testole.prg
    * Minor cleanups.

  * contrib/hbole/olecore.c
    * Using hb_itemGetCPtr2() instead of hb_itemGetCLPtr()

  * contrib/hbwin/wapi_commctrl.c
  * contrib/hbwin/wapi_winuser.c
    ! WinCE fixes.
    * Formatting.

  * contrib/examples/hbwhat/tests/hbwhat.hbp
    - Removed no longer necessary Windows libs.


2009-03-27 02:53 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    * redirect output to file using SET ALTERNATE ... instead of stdout()

  * harbour/contrib/hbole/olecore.c
    * updated to compile with C and C++ OLE interface.
      Please make some tests with different compilers.

2009-03-27 01:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * contrib/hbole/tests/hbole.hbp
  * contrib/gtwvg/tests/gtwvg.hbp
  * contrib/hbwin/tests/hbwin.hbp
  - utils/hbmk2/examples/winapi.hbp
    + Added all important Windows system libs to all
      win compilers in hbmk2.
    - Removed above libs from .hbp files.

  * contrib/hbodbc/todbc.prg
  * contrib/hbodbc/browodbc.prg
  * contrib/hbodbc/odbc.c
    * Further cleanups.
      SETNUMLEN() -> SQLNUMSETLEN(). This should probably be a core
      function by the name HB_NUMSETLEN().

  * contrib/hbole/tests/testole.prg
  * contrib/hbole/tests/sample.odt
    + Updated to latest hbole code.
    ; TOFIX: hbole code doesn't compile with MSVC in default C++
             even if #define CINTERFACE 1 is enabled. [DONE]
    ; TOFIX: OpenOffice example fails at some point. It probably
             needs array support.

  * contrib/hbole/olecore.c
    * Minor formatting.

  * contrib/hbqt/hbqt_qabstractitemview.cpp
    ! Fixed backslash to forward slash.

  * contrib/hbct/tests/ctwtest.prg
  * contrib/hbnf/dispmsg.prg
  * contrib/hbnf/pegs.prg
  * contrib/hbnf/tbwhile.prg
  * contrib/hbnf/calendar.prg
  * contrib/gtwvg/tests/demowvg.prg
  * contrib/examples/terminal/trm_server.prg
  * contrib/examples/terminal/trm_client.prg
    ! Using manifest constants.

  * contrib/hbmysql/mysql.c
  * contrib/hbodbc/odbc.c
    * Minor cleanup.

  * contrib/hbodbc/tests/odbcdemo.prg
  * contrib/hbodbc/tests/odbccall.prg
  * contrib/hbodbc/tests/testodbc.prg
    * Minor.

2009-03-26 22:01 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbodbc/tests/odbcdemo.prg
  * contrib/hbodbc/tests/testodbc.prg
  * contrib/hbodbc/todbc.prg
  * contrib/hbodbc/odbc.c
  * contrib/hbodbc/Makefile
    + Platform protection moved to Makefile level.
    + Lots of type cleanups to use SQL types rather than Windows types.
    + Lots of type cleanups to use large integers where needed.
    * Synced Harbour integers API calls with SQL integer sizes.
    + Cleaned __DMC__ hacks.
    ! Fixed to compile with ODBCVER == 0x0100 and ODBCVER == 0x0200.
    * Update Harbour level function names as follows. Old names are
      still available, you can disabled them by defining HB_ODBC_LEGACY_LEVEL_OFF macro:
      SQLALLOCEN          => SQLALLOCENV
      SQLALLOCCO          => SQLALLOCCONNECT
      SQLDRIVERC          => SQLDRIVERCONNECT
      SQLDISCONN          => SQLDISCONNECT
      SQLFREECON          => SQLFREECONNECT
      SQLALLOCST          => SQLALLOCSTMT
      SQLFREESTM          => SQLFREESTMT
      SQLEXECDIR          => SQLEXECDIRECT
      SQLNUMRES           => SQLNUMRESULTCOLS
      SQLDESCRIB          => SQLDESCRIBECOL
      SQLEXTENDE          => SQLEXTENDEDFETCH
      SQLFETCHSC          => SQLFETCHSCROLL
      SQLROWCOUN          => SQLROWCOUNT
      SQLSETCONNECTOPTION => SQLSETCONNECTATTR
      SQLSETSTMTOPTION    => SQLSETSTMTATTR
      SQLGETCONNECTOPTION => SQLGETCONNECTATTR
      SQLGETSTMTOPTION    => SQLGETSTMTATTR

  * contrib/hbmysql/mysql.c
    % Replaced Windows headers with winsock2.h which seems to
      be required by mysql headers.

  * contrib/hbfbird/firebird.c
  * contrib/rddsql/sqlmix.c
  * contrib/hbssl/sslrand.c
    % Removed Windows headers.

  * contrib/gtwvg/gtwvg.h
  * contrib/gtwvg/wvggui.h
    + Readded ugly workaround for mingw64.

2009-03-26 20:54 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbole/olecore.c
    ! added some very basic protection against possible GPF if wrong
      parameters are passed to some OLE*() functions
    + added timestamp support
    * minor formatting and some cleanups in casting

2009-03-26 16:58 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  - contrib/hbapollo
  * contrib/Makefile
  + contrib/examples/hbapollo
    * Moved hbapollo to examples.
    ; TODO: This, hbwhat, hbgf and hbsqlit2 should be IMO permanently
            removed from repository. If there are no objections, I'll
            do it next week. [DONE]

2009-03-26 16:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbole/olecore.c
    * added two notes with default defines for windows header files
    ! small correction and fixes in casting
    ; Now this code can be compiled by MinGW and OpenWatcom if we uncomment
      CINTERFACE setting. Anyhow I'd prefer to use C++ friendly declarations.
      Mindaugas, this code uses static variable: s_lOleError.
      Can we make it thread local? It should resolve the problem with using
      this code in MT programs.
      The next thing is the place where OLE is uninitialized.
      It's done by hb_vmAtExit(). In some cases it may be problematic
      because after hb_vmAtExit() some .prg destructors can be executed
      yet, f.e. when public variables are destroyed. The HB_OLEAUTO()
      objects uses destructor which can be activated after executing
      hb_ole_exit(). To resolve this problem you can replicate the trick
      with pointer variable stored inside static .prg var I added to old
      OLE code in contrib/whbwin/ (.prg destructors are disabled just
      before releasing static variables). It's not elegant solution
      but it will work. Probably we should think about two levels of
      exit procedures. The second one can be used only for pure C code
      which does not try to reenter HVM.

  * harbour/contrib/gtwvg/gtwvg.h
    ! moved _WIN32_IE declaration before #include ... to fix MinGW32
      compilation

2009-03-26 15:54 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added autodetection of embedded MinGW64 and MinGWCE
      compilers.

2009-03-26 15:47 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/en/Makefile
  * doc/Makefile
  - doc/en
  + doc/en-EN
    * Renamed.

  + man
  + man/nfdoc
  + man/manpages
    + Added new dir for Harbour manuals.
    ; TODO: Move files here from /doc.

  * contrib/hbtpathy/tests/testtp.prg
    * Applied update/fix by Barry Jackson.

  * utils/hbmk2/hbmk2.prg
    + Added autodetection of MinGW compiler if installed in the
      Harbour directory tree in the mingw dir.
      This way it's possible to create a fully setup-free
      install kit, which is able to produce Harbour executables
      right after unzip by simply issuing command: hbmk2 hello.prg

2009-03-26 14:10 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/hbole/olecore.c
    * fixed compile time warning

2009-03-25 23:21 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
    ! fixed line number set for C preprocessor in #pragma begindump

  * harbour/include/hbcomp.h
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/genc.c
    * added detection of static Harbour functions in #pragma begindump
      code. I do not like it because it cannot be well implemented on
      other then real C compiler/preprocessor level but it's probably
      better then different workarounds I see in some [x]Harbour 3-rd
      party projects.
      Warning this functionality is not officially supported. It's a hack
      to existing #pragma begindump hack and activated only for dumped C
      code. It tries to detect Harbour static functions declared by
      HB_FUNC_STATIC( name ) but it does not make any real C preprocessing.
      Only strips comments and strings and then looks for above statement
      dividing the code to some basic tokens so it will give wrong results
      for code like:

         #if 0
            HB_FUNC_STATIC( MYFUNC )
         #else
            HB_FUNC( MYFUNC )
         #endif
            {
               hb_retc( "MyFunc" );
            }

      but it works correctly for simple code which does not use conditional
      compilation and does not try to redefine HB_FUNC_STATIC() macro, f.e:

         proc main()
            ? YEAR( DATE() ), MONTH( DATE() ), DAY( DATE() ), TEST()
         return
         #pragma begindump
         #include "hbapi.h"
         /* are comments stripped? If not then HB_FUNC_STATIC( DATE )
            in comment can create troubles. */
         // HB_FUNC_STATIC( YEAR ) just like this one in C++ comments
         #define MYHB_FUNC_STATIC( fun )  #fun // to test whole word tokens
         /* COMMENT */HB_FUNC_STATIC( TEST )
         {
            hb_retc( "HB_FUNC_STATIC( DAY )->" MYHB_FUNC_STATIC( MONTH ) );
         }
         #pragma enddump

      Before we had wrong results for any code like:

            HB_FUNC_STATIC( MYFUNC )
            {
               hb_retc( "MyFunc" );
            }

      so it's not making anything worse (I hope ;-)).
      The implementation is intentionally local to -gc output to not
      effect other compiler code.
      The idea of parsing the code inside #pragma begindump to detect
      static harbour functions in C code inside was 1-st time implemented
      by Andi Jahja in xHarbour.

2009-03-25 16:32 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - doc/license.txt
    % Removed duplicate copy of this text. Now /COPYING is the
      only one in repo.

2009-03-25 16:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * bin/hb-mkdyn.bat
  * bin/hb-mkdyn.sh
  * bin/postinst.bat
  * bin/postinst.cmd
  * bin/postinst.sh
  * contrib/examples/hbdoc/examples/core_es/array.txt
  * contrib/examples/hbdoc/examples/core_es/binnum.txt
  * contrib/examples/hbdoc/examples/core_es/browse.txt
  * contrib/examples/hbdoc/examples/core_es/clipper.txt
  * contrib/examples/hbdoc/examples/core_es/cmdline.txt
  * contrib/examples/hbdoc/examples/core_es/codebloc.txt
  * contrib/examples/hbdoc/examples/core_es/command.txt
  * contrib/examples/hbdoc/examples/core_es/compiler.txt
  * contrib/examples/hbdoc/examples/core_es/datetime.txt
  * contrib/examples/hbdoc/examples/core_es/dbdelim.txt
  * contrib/examples/hbdoc/examples/core_es/dbsdf.txt
  * contrib/examples/hbdoc/examples/core_es/dbstrux.txt
  * contrib/examples/hbdoc/examples/core_es/dir.txt
  * contrib/examples/hbdoc/examples/core_es/dirstruc.txt
  * contrib/examples/hbdoc/examples/core_es/diskspac.txt
  * contrib/examples/hbdoc/examples/core_es/error.txt
  * contrib/examples/hbdoc/examples/core_es/eval.txt
  * contrib/examples/hbdoc/examples/core_es/file.txt
  * contrib/examples/hbdoc/examples/core_es/garbage.txt
  * contrib/examples/hbdoc/examples/core_es/harbext.txt
  * contrib/examples/hbdoc/examples/core_es/hb_apiln.txt
  * contrib/examples/hbdoc/examples/core_es/hb_set.txt
  * contrib/examples/hbdoc/examples/core_es/hb_vm.txt
  * contrib/examples/hbdoc/examples/core_es/howtobsd.txt
  * contrib/examples/hbdoc/examples/core_es/hvm.txt
  * contrib/examples/hbdoc/examples/core_es/idle.txt
  * contrib/examples/hbdoc/examples/core_es/input.txt
  * contrib/examples/hbdoc/examples/core_es/lang.txt
  * contrib/examples/hbdoc/examples/core_es/license.txt
  * contrib/examples/hbdoc/examples/core_es/macro.txt
  * contrib/examples/hbdoc/examples/core_es/math.txt
  * contrib/examples/hbdoc/examples/core_es/memo.txt
  * contrib/examples/hbdoc/examples/core_es/memvar2.txt
  * contrib/examples/hbdoc/examples/core_es/misc.txt
  * contrib/examples/hbdoc/examples/core_es/nation.txt
  * contrib/examples/hbdoc/examples/core_es/objfunc.txt
  * contrib/examples/hbdoc/examples/core_es/pcode.txt
  * contrib/examples/hbdoc/examples/core_es/pragma.txt
  * contrib/examples/hbdoc/examples/core_es/rdd.txt
  * contrib/examples/hbdoc/examples/core_es/readme.txt
  * contrib/examples/hbdoc/examples/core_es/sayget.txt
  * contrib/examples/hbdoc/examples/core_es/setmode.txt
  * contrib/examples/hbdoc/examples/core_es/statics.txt
  * contrib/examples/hbdoc/examples/core_es/strotype.txt
  * contrib/examples/hbdoc/examples/core_es/subcodes.txt
  * contrib/examples/hbdoc/examples/core_es/tbrowse.txt
  * contrib/examples/hbdoc/examples/core_es/tclass.txt
  * contrib/examples/hbdoc/examples/core_es/tgetlist.txt
  * contrib/examples/hbdoc/examples/core_es/tlabel.txt
  * contrib/examples/hbdoc/examples/core_es/tracing.txt
  * contrib/examples/hbdoc/examples/core_es/treport.txt
  * contrib/examples/hbdoc/examples/core_es/var.txt
  * contrib/examples/hbdoc/examples/core_es/vm.txt
  * contrib/examples/pp/hbppcore.c
  * contrib/gtwvg/gtwvg.c
  * contrib/gtwvg/wvgcore.c
  * contrib/gtwvg/wvgcuig.c
  * contrib/gtwvg/wvggui.c
  * contrib/gtwvg/wvgutils.c
  * contrib/gtwvg/wvgwin.c
  * contrib/hbct/datetime.c
  * contrib/hbct/pack.c
  * contrib/hbct/video.c
  * contrib/hbfbird/firebird.c
  * contrib/hbfbird/tfirebrd.prg
  * contrib/hbfimage/readme.txt
  * contrib/hbgd/doc/hbgd.txt
  * contrib/hbmisc/dates2.c
  * contrib/hbmisc/doc/en/dates2.txt
  * contrib/hbmisc/doc/en/ht_class.txt
  * contrib/hbmisc/doc/en/ht_conv.txt
  * contrib/hbmisc/doc/en/ht_dbf.txt
  * contrib/hbmisc/doc/en/ht_doc.txt
  * contrib/hbmisc/doc/en/ht_str.txt
  * contrib/hbmysql/mysql.c
  * contrib/hbnf/fttext.c
  * contrib/hbodbc/odbc.c
  * contrib/hbpgsql/postgres.c
  * contrib/hbpgsql/tpostgre.prg
  * contrib/hbsqlit3/hbsqlit3.c
  * contrib/hbsqlit3/hbsqlit3.ch
  * contrib/hbsqlit3/tests/blob.prg
  * contrib/hbsqlit3/tests/metadata.prg
  * contrib/hbsqlit3/tests/pack.prg
  * contrib/hbsqlit3/tests/sqlite3_test.prg
  * contrib/hbtip/utils.c
  * contrib/hbwin/win_prn1.c
  * contrib/hbwin/win_tprn.prg
  * contrib/rddads/doc/en/adsfuncs.txt
  * doc/class_tp.txt
  * doc/en/array.txt
  * doc/en/binnum.txt
  * doc/en/browse.txt
  * doc/en/command.txt
  * doc/en/datetime.txt
  * doc/en/dbdelim.txt
  * doc/en/dbsdf.txt
  * doc/en/dbstrux.txt
  * doc/en/dir.txt
  * doc/en/diskspac.txt
  * doc/en/error.txt
  * doc/en/eval.txt
  * doc/en/file.txt
  * doc/en/hb_api.txt
  * doc/en/hb_apier.txt
  * doc/en/hb_apifs.txt
  * doc/en/hb_apigt.txt
  * doc/en/hb_apiit.txt
  * doc/en/hb_apiln.txt
  * doc/en/hb_apird.txt
  * doc/en/hb_compa.txt
  * doc/en/hb_date.txt
  * doc/en/hb_macro.txt
  * doc/en/hb_set.txt
  * doc/en/hb_vm.txt
  * doc/en/hvm.txt
  * doc/en/input.txt
  * doc/en/lang.txt
  * doc/en/math.txt
  * doc/en/memo.txt
  * doc/en/menu.txt
  * doc/en/misc.txt
  * doc/en/nation.txt
  * doc/en/objfunc.txt
  * doc/en/rdd.txt
  * doc/en/rdddb.txt
  * doc/en/rddmisc.txt
  * doc/en/rddord.txt
  * doc/en/set.txt
  * doc/en/setmode.txt
  * doc/en/string.txt
  * doc/en/tclass.txt
  * doc/en/terminal.txt
  * doc/en/tgetlist.txt
  * doc/en/tlabel.txt
  * doc/en/treport.txt
  * doc/en/var.txt
  * doc/hdr_tpl.txt
  * harbour-wce-spec
  * harbour-win-spec
  * harbour.spec
  * include/hbapigt.h
  * include/hbclass.ch
  * include/hboo.ch
  * make_gnu.bat
  * make_gnu.sh
  * mpkg_deb.sh
  * mpkg_rpm.sh
  * mpkg_rpm_from_svn.sh
  * mpkg_rpm_wce.sh
  * mpkg_rpm_win.sh
  * mpkg_tgz.sh
  * mpkg_win.bat
  * mpkg_win.nsi
  * source/common/hbdate.c
  * source/common/hbstr.c
  * source/common/hbver.c
  * source/compiler/cmdcheck.c
  * source/compiler/hbmain.c
  * source/debug/dbgtwin.prg
  * source/debug/debugger.prg
  * source/lang/msgpt.c
  * source/lang/msgptiso.c
  * source/rtl/accept.c
  * source/rtl/alert.prg
  * source/rtl/console.c
  * source/rtl/dates.c
  * source/rtl/dateshb.c
  * source/rtl/errorapi.c
  * source/rtl/filesys.c
  * source/rtl/gete.c
  * source/rtl/getsys.prg
  * source/rtl/getsys53.prg
  * source/rtl/gtapi.c
  * source/rtl/gtcrs/hb-charmap.def
  * source/rtl/gtdos/gtdos.c
  * source/rtl/gtos2/gtos2.c
  * source/rtl/gtwin/gtwin.c
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/gx.c
  * source/rtl/idle.c
  * source/rtl/inkey.c
  * source/rtl/mouseapi.c
  * source/rtl/natmsg.c
  * source/rtl/natmsgu.c
  * source/rtl/net.c
  * source/rtl/objfunc.prg
  * source/rtl/round.c
  * source/rtl/setpos.c
  * source/rtl/tclass.prg
  * source/rtl/tgetlist.prg
  * source/rtl/tobject.prg
  * source/rtl/transfrm.c
  * source/rtl/valtype.c
  * source/rtl/xsavescr.c
  * source/vm/arrays.c
  * source/vm/classes.c
  * source/vm/eval.c
  * source/vm/extend.c
  * source/vm/extrap.c
  * source/vm/fm.c
  * source/vm/hvm.c
  * source/vm/itemapi.c
  * source/vm/memvars.c
  * source/vm/proc.c
  * tests/bnchmark/bnch_win.bat
  * tests/langmsg.prg
  * tests/rto_tb.prg
  * utils/hbmk2/hbmk2.prg
  * utils/hbtest/make_c5x.bat
    * Changed reference:
      doc/license.txt -> COPYING.
      One step to allow the reorganization of doc dir.

2009-03-25 15:55 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * external/Makefile
    + Added HB_EXTERNAL_ADDON envvar support.

  * config/win/bcc.cf
    * -d moved to optimization switches.

2009-03-25 14:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + external/Makefile
    + Added missing file.

2009-03-25 14:09 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added HB_INC_SQLITE3

  * include/hbapi.h
    + Added HB_IS*() flavour of classic Clipper compatibility IS*()
      macros. I'd recommend everyone to start using these new ones,
      as the old ones might be deprecated in future versions.

  * Makefile
    + Added new 'external' dir to host foreign, non-Harbour code.

  + external
  + external/sqlite3
  + external/sqlite3/_sqlite3.c
  + external/sqlite3/sqlite3.c
  + external/sqlite3/sqlite3.h
  + external/sqlite3/Makefile
  - contrib/hbsqlit3/sqlite3
    + Moved sqlite3 code into its dedicated place.

  * contrib/hbsqlit3/tests/hbsqlit3.hbp
    + Added sqlite3 to liblist.

  * contrib/hbsqlit3/hbsqlit3.c
  * contrib/hbsqlit3/Makefile
    + Changed to use external headers just like other external
      dependent libs. The only difference here is that it will
      pickup the locally hosted sqlite3 source from
      external/sqlite3 if not specified by user.
    * Changed to no embed sqlite3 code anymore.
      ATTENTION: This also means that hbsqlit3 users will now
                 have to add sqlite3 lib to their liblist, since
                 this code isn't anymore embedded into hbsqlit3.

  * contrib/hbqt/hbqt_qfontcombobox.cpp
  * contrib/hbqt/hbqt_qgroupbox.cpp
  * contrib/hbqt/hbqt_qcombobox.cpp
  * contrib/hbqt/hbqt_qtoolbutton.cpp
  * contrib/hbqt/slots.h
  * contrib/hbqt/hbqt_qpushbutton.cpp
  * contrib/hbqt/hbqt_qpagesetupdialog.cpp
  * contrib/hbqt/hbqt_qprintpreviewdialog.cpp
  * contrib/hbqt/hbqt_qlabel.cpp
  * contrib/hbqt/hbqt_qinputdialog.cpp
  * contrib/hbqt/hbqt_qprogressdialog.cpp
  * contrib/hbqt/hbqt_qtoolbox.cpp
  * contrib/hbqt/hbqt_qcommandlinkbutton.cpp
  * contrib/hbqt/hbqt_qmenubar.cpp
  * contrib/hbqt/hbqt_qhboxlayout.cpp
  * contrib/hbqt/hbqt_qabstractbutton.cpp
  * contrib/hbqt/hbqt_qabstractprintdialog.cpp
  * contrib/hbqt/hbqt_qwizard.cpp
  * contrib/hbqt/hbqt_qabstractspinbox.cpp
  * contrib/hbqt/hbqt_qfont.cpp
  * contrib/hbqt/hbqt_qdial.cpp
  * contrib/hbqt/hbqt_qtablewidgetitem.cpp
  * contrib/hbqt/hbqt_qlcdnumber.cpp
  * contrib/hbqt/hbqt_qmainwindow.cpp
  * contrib/hbqt/hbqt_qprintdialog.cpp
  * contrib/hbqt/hbqt_qcalendarwidget.cpp
  * contrib/hbqt/hbqt_qabstractitemview.cpp
  * contrib/hbqt/hbqt_qaction.cpp
  * contrib/hbqt/hbqt_qspinbox.cpp
  * contrib/hbqt/hbqt_qwidget.cpp
  * contrib/hbqt/hbqt_slots.cpp
  * contrib/hbqt/hbqt_qdateedit.cpp
  * contrib/hbqt/hbqt_qcheckbox.cpp
  * contrib/hbqt/hbqt_qprogressbar.cpp
  * contrib/hbqt/hbqt_qframe.cpp
  * contrib/hbqt/hbqt_qfocusframe.cpp
  * contrib/hbqt/hbqt_qtabbar.cpp
  * contrib/hbqt/hbqt_qcqlendarwidget.cpp
  * contrib/hbqt/hbqt_qerrormessage.cpp
  * contrib/hbqt/hbqt_qfiledialog.cpp
  * contrib/hbqt/hbqt_qformlayout.cpp
  * contrib/hbqt/hbqt_qtoolbar.cpp
  * contrib/hbqt/hbqt_qdatetimeedit.cpp
  * contrib/hbqt/hbqt_qmenu.cpp
  * contrib/hbqt/hbqt_qabstractslider.cpp
  * contrib/hbqt/hbqt_qwebview.cpp
  * contrib/hbqt/hbqt_qlayout.cpp
  * contrib/hbqt/hbqt_qslider.cpp
  * contrib/hbqt/hbqt_qtableview.cpp
  * contrib/hbqt/hbqt_qfontdialog.cpp
  * contrib/hbqt/hbqt_qboxlayout.cpp
  * contrib/hbqt/hbqt_qtreeview.cpp
  * contrib/hbqt/hbqt_qtextedit.cpp
  * contrib/hbqt/hbqt_qradiobutton.cpp
  * contrib/hbqt/hbqt_qcolordialog.cpp
  * contrib/hbqt/hbqt_qapplication.cpp
  * contrib/hbqt/hbqt_qtimeedit.cpp
  * contrib/hbqt/hbqt_qsplitter.cpp
  * contrib/hbqt/hbqt_qlistview.cpp
  * contrib/hbqt/hbqt_qtabwidget.cpp
  * contrib/hbqt/hbqt_qabstractscrollarea.cpp
  * contrib/hbqt/hbqt_qvboxlayout.cpp
  * contrib/hbqt/hbqt_qdoublespinbox.cpp
  * contrib/hbqt/hbqt_qscrollbar.cpp
  * contrib/hbqt/hbqt_qscrollarea.cpp
  * contrib/hbqt/hbqt_qtablewidget.cpp
  * contrib/hbqt/hbqt_qsizegrip.cpp
  * contrib/hbqt/hbqt_qlayoutitem.cpp
  * contrib/hbqt/hbqt_qmessagebox.cpp
  * contrib/hbqt/hbqt_qlineedit.cpp
    * Formatting, indenting.
    ! ISNIL() usage removed.

  * contrib/hbwin/wapi_commctrl.c
  * contrib/hbwin/wapi_winuser.c
    ! ISNIL() usage removed.

  * contrib/hbfbird/tfirebrd.prg
  * contrib/hbpgsql/tests/simple.prg
  * contrib/hbpgsql/tests/test.prg
  * contrib/hbpgsql/tests/cache.prg
  * contrib/hbpgsql/tests/stress.prg
  * contrib/hbpgsql/tests/dbf2pg.prg
  * contrib/hbpgsql/tpostgre.prg
  * contrib/examples/uhttpd/uhttpd.prg
  * contrib/examples/uhttpd/uhttpdc.c
  * contrib/examples/terminal/trm_server.prg
    * ISNIL() usage and other code cleanup, formatting.

2009-03-25 13:35 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  - harbour/contrib/hbole/ole2.c
  * harbour/contrib/hbole/oleauto.prg
  + harbour/contrib/hbole/oleinit.c
  + harbour/contrib/hbole/olecore.c
    + added my own implementation of OLE library. It is bases on old
      code written by Jose F. Gimenez. Code is changed to be reentrant,
      more clean, but only basic features are implemented.

2009-03-25 12:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
    ! disabled inline assembler code to retrieve HVM stack pointer from TLS
      in Win64 builds. In summary I do not even know if Win64 uses the same
      memory addresses for TLS as Win32 so it's not safe to enable such code
      now. Maybe in the future though I hope that new 64 bit compilers will
      have fast enough native TLS support.

2009-03-25 11:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * tests/testhtml.prg
    * Update by Vailton Renato applied.

  * INSTALL
    * Minor formatting.

  * bin/postinst.bat
    + Minor cleanup to creation of hbrun/hbtest dll versions.
      (now it's more difficult to mislead it by already existing
      foreign .dlls)

  * contrib/hbqt/Makefile
  * contrib/hbapollo/Makefile
    - Disabled for mingw64.

  * contrib/rddads/rddads.h
    + Added workaround to compile under mingw64.

  * contrib/gtwvg/gtwvg.h
  * contrib/gtwvg/wvggui.h
    ! Fixed to _not_ override _WIN32_IE. Overriding these version
      numbers is generally a very bad idea. Instead the code should
      adapt to whatever values are defined by system headers.
      This fixes most mingw64 errors. Please test other compilers.

  * contrib/xhb/hbxml.c
  * contrib/hbfimage/fi_winfu.c
  * contrib/hbwin/wapi_commctrl.c
    ! Pointer/handle to integer conversion.

  * contrib/gtwvg/wvgcuig.c
  * contrib/gtwvg/wvgwin.c
    ! Fixed NULL used instead of 0.
    ! Fixed ISNIL() usage. GTWVG code is full of ISNIL() macros,
      which makes the code prone to GPFs and other unexpected
      behaviour when wrong type is passed. The solution is to
      change all these to type specific IS*() macros.

  ; TOFIX: (core and all contribs) [DONE]

    C:/DOCUME~1/vszakats/LOCALS~1/Temp/ccVcE53g.s: Assembler messages:
    C:/DOCUME~1/vszakats/LOCALS~1/Temp/ccVcE53g.s:20: Error: `0x0e10(%rax,%ecx,4)' is not a valid base/index expression

    In these files:
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../hvm.c -ohvm.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../arrays.c -oarrays.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../asort.c -oasort.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../classes.c -oclasses.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../cmdarg.c -ocmdarg.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../debug.c -odebug.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../dynlibhb.c -odynlibhb.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../dynsym.c -odynsym.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../codebloc.c -ocodebloc.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../estack.c -oestack.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../eval.c -oeval.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../evalhb.c -oevalhb.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../extend.c -oextend.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../fm.c -ofm.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../garbage.c -ogarbage.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../hashes.c -ohashes.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../hashfunc.c -ohashfunc.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../itemapi.c -oitemapi.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../macro.c -omacro.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../memvars.c -omemvars.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../pcount.c -opcount.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../proc.c -oproc.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../pvalue.c -opvalue.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../runner.c -orunner.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../set.c -oset.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer  -DHB_MT_VM  -c ../../../thread.c -othread.o
    x86_64-pc-mingw32-gcc -I. -I../../../../../include -Wall -W -O3 -fomit-frame-pointer   -DHB_FM_STATISTICS -DHB_MT_VM  -c ../../../fm.c -ofm.o

    ../../dbfntx1.c: In function 'hb_ntxTagHeaderCheck':
    ../../dbfntx1.c:1054: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfntx1.c:1054: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfntx1.c:1055: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfntx1.c:1055: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfntx1.c:1055: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfntx1.c:1055: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c: In function 'hb_nsxTagHeaderCheck':
    ../../dbfnsx1.c:1282: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1284: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1285: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1285: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1285: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1285: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c: In function 'hb_nsxPageFree':
    ../../dbfnsx1.c:1573: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1573: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1573: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1573: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c: In function 'hb_nsxPageNew':
    ../../dbfnsx1.c:1622: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1622: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1622: warning: dereferencing type-punned pointer will break strict-aliasing rules
    ../../dbfnsx1.c:1622: warning: dereferencing type-punned pointer will break strict-aliasing rules

    ../../hb_btree.c: In function 'StackSkip':
    ../../hb_btree.c:643: warning: cast from pointer to integer of different size
    ../../hb_btree.c: In function 'Grow':
    ../../hb_btree.c:739: warning: cast from pointer to integer of different size

    ../../getenvrn.c: In function 'HB_FUN_FT_GETE':
    ../../getenvrn.c:178: warning: implicit declaration of function 'GetEnvironmentStrings'
    ../../getenvrn.c:178: warning: initialization makes pointer from integer without a cast

    ../../win_dll.c: In function 'DllExec':
    ../../win_dll.c:509: warning: cast from pointer to integer of different size
    ../../win_dll.c:603: warning: cast to pointer from integer of different size
    ../../win_dll.c:672: warning: cast to pointer from integer of different size
    ../../win_dll.c:689: warning: cast to pointer from integer of different size

    ../../hbserv.c: In function 's_serviceSetHBSig':
    ../../hbserv.c:638: warning: passing argument 1 of 'SetUnhandledExceptionFilter' from incompatible pointer type

    ../../firebird.c: In function 'HB_FUN_FBCREATEDB':
    ../../firebird.c:87: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:88: warning: initialization makes integer from pointer without a cast
    ../../firebird.c: In function 'HB_FUN_FBCONNECT':
    ../../firebird.c:115: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:143: warning: cast to pointer from integer of different size
    ../../firebird.c: In function 'HB_FUN_FBCLOSE':
    ../../firebird.c:149: warning: cast from pointer to integer of different size
    ../../firebird.c: In function 'HB_FUN_FBSTARTTRANSACTION':
    ../../firebird.c:172: warning: cast from pointer to integer of different size
    ../../firebird.c:173: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:179: warning: cast to pointer from integer of different size
    ../../firebird.c: In function 'HB_FUN_FBCOMMIT':
    ../../firebird.c:184: warning: cast from pointer to integer of different size
    ../../firebird.c: In function 'HB_FUN_FBROLLBACK':
    ../../firebird.c:195: warning: cast from pointer to integer of different size
    ../../firebird.c: In function 'HB_FUN_FBEXECUTE':
    ../../firebird.c:206: warning: cast from pointer to integer of different size
    ../../firebird.c:207: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:215: warning: cast from pointer to integer of different size
    ../../firebird.c: In function 'HB_FUN_FBQUERY':
    ../../firebird.c:249: warning: cast from pointer to integer of different size
    ../../firebird.c:250: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:253: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:270: warning: cast from pointer to integer of different size
    ../../firebird.c:375: warning: cast to pointer from integer of different size
    ../../firebird.c:379: warning: cast to pointer from integer of different size
    ../../firebird.c: In function 'HB_FUN_FBFETCH':
    ../../firebird.c:395: warning: cast from pointer to integer of different size
    ../../firebird.c: In function 'HB_FUN_FBFREE':
    ../../firebird.c:419: warning: cast from pointer to integer of different size
    ../../firebird.c:421: warning: cast from pointer to integer of different size
    ../../firebird.c: In function 'HB_FUN_FBGETBLOB':
    ../../firebird.c:613: warning: cast from pointer to integer of different size
    ../../firebird.c:614: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:615: warning: initialization makes integer from pointer without a cast
    ../../firebird.c:624: warning: cast from pointer to integer of different size

    ../../fbirddd.c: In function 'fbConnect':
    ../../fbirddd.c:164: warning: initialization makes integer from pointer without a cast
    ../../fbirddd.c:192: warning: cast to pointer from integer of different size
    ../../fbirddd.c: In function 'fbOpen':
    ../../fbirddd.c:217: warning: initialization makes integer from pointer without a cast
    ../../fbirddd.c:218: warning: initialization makes integer from pointer without a cast
    ../../fbirddd.c:409: warning: assignment makes pointer from integer without a cast
    ../../fbirddd.c:410: warning: assignment makes pointer from integer without a cast
    ../../fbirddd.c: In function 'fbClose':
    ../../fbirddd.c:446: warning: passing argument 2 of 'isc_dsql_free_statement' from incompatible pointer type
    c:/devl/Firebird-2.1.1/include/ibase.h:629: note: expected 'isc_stmt_handle *' but argument is of type 'void **'
    ../../fbirddd.c:451: warning: passing argument 2 of 'isc_rollback_transaction' from incompatible pointer type
    c:/devl/Firebird-2.1.1/include/ibase.h:780: note: expected 'isc_tr_handle *' but argument is of type 'void **'
    ../../fbirddd.c: In function 'fbGoTo':
    ../../fbirddd.c:469: warning: passing argument 2 of 'isc_dsql_fetch' from incompatible pointer type
    c:/devl/Firebird-2.1.1/include/ibase.h:622: note: expected 'isc_stmt_handle *' but argument is of type 'void **'
    ../../fbirddd.c:531: warning: passing argument 2 of 'isc_dsql_free_statement' from incompatible pointer type
    c:/devl/Firebird-2.1.1/include/ibase.h:629: note: expected 'isc_stmt_handle *' but argument is of type 'void **'
    ../../fbirddd.c:538: warning: passing argument 2 of 'isc_commit_transaction' from incompatible pointer type
    c:/devl/Firebird-2.1.1/include/ibase.h:524: note: expected 'isc_tr_handle *' but argument is of type 'void **'

2009-03-25 02:49 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    * simplified xHarbour MT test - use mutexes as internal thread IDs
      as workarounds for race conditions in xHarbour .prg MT API.

2009-03-24 18:34 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/tbrowse.prg
    ! fixed Clipper compatibility in configure() action - it does not
      set refreshAll flag and only invalidates all records
    ! recalculate visible columns in colorRect() method
    * enabled strict Clipper compatible behavior for non character
      footers and headers

2009-03-24 13:27 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gttrm/gttrm.c
    * formatting

2009-03-24 01:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    * updated to compile with FlagShip

2009-03-23 22:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgcuig.c
  * harbour/contrib/gtwvg/wvgcore.c
    ! pacified MinGW-CE builds warnings

2009-03-23 21:42 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbodbc/odbc.c
  * harbour/contrib/hbtpathy/tpwin.c
  * harbour/contrib/hbwin/win_ole.c
  * harbour/contrib/hbwin/win_regc.c
    ! casting

2009-03-23 20:46 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbclass.ch
    + added support for xBase++ method code declaration by
         METHOD <clasName>:<methodName>[ ( <parameters,...> ) ]
      f.e.:
         METHOD TBrowse:Configure( nMode )

  * harbour/source/rtl/tthreadx.prg
  * harbour/source/rtl/thfuncx.prg
    ! fixed 0 timeout parameter in some xBase++ compatible functions
      In xBase++ timeout 0 means wait forever

  * harbour/tests/speedtst.prg
    * update to compile with MT support using xBase++ MT .prg API.
      I tested it only using Harbour by compiling this code with
      -D__XPP__ macro and it works using only xBase++ MT .prg API
      we are emulating.
      Please make some tests with real xBase++ compiler.

2009-03-23 17:04 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/itemapi.c
  * harbour/source/common/hbprintf.c
    * use isfinite() instead of finite() in MinGW builds.
      It's possible that it can resolve problems with MinGW64 builds.

2009-03-23 16:06 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
    ! fixed typo in data constant values written to .ppo files

2009-03-23 14:54 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/debian/dirs
  * harbour/harbour.spec
    ! removed doc/es form direcotry list

2009-03-23 02:17 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
  * harbour/source/common/hbdate.c
  * harbour/source/macro/macrolex.c
  * harbour/source/compiler/complex.c
    + added alternative support for date constant values as: d"YYYY-MM-DD"
      As delimiter the following characters can be used: "-", "/", "."
      Just like in t"..."

2009-03-22 22:50 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/hbwin/win_ole.c
    * removed debug lines

2009-03-22 22:33 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rtl/tscalart.c
    * fixed header
    ; copyright leaved to Przemek as I have only changed function name, but
      the code is the same

2009-03-22 22:28 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rtl/tscalart.c
    ! fixed SVN attributes
    ; I hope I did correctly

2009-03-22 22:13 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  + harbour/source/rtl/tscalart.c
    + Added scalar TIMESTAMP
  * harbour/source/rtl/Makefile
    + tscalart.c added
  * harbour/include/hbclass.ch
    * added HBTIMESTAMP scalar type to ENABLE TYPE CLASS
  * harbour/source/rtl/tscalar.prg
    + added scalar class TIMESTAMP with methods to extract
      parts from Timestamp:
      Date(), Time(), Year(), Month(), Day(), Hour(), Minute(), Sec()
    * added methods Year(), Month(), Day() to Date scalar class
  * harbour/contrib/hbwin/win_ole.c
    * updated for new Timestamp type

2009-03-22 21:54 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/valtoexp.prg
    + added timestamp support to hb_valToExp() and hb_cStr() functions

2009-03-22 18:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
    * added alternative asm inline function to __MINGW32__ builds which
      operates on 64bit pointers. It's used when __MINGW64__ macro is
      defined. I do not know if such macro existing in 64bit MinGW version.

  * harbour/include/hbdefs.h
    + added HB_PTRUINT

  * harbour/source/common/hbprintf.c
    * used HB_PTRUINT for %p casting

2009-03-21 09:01 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/Makefile
    + Added new files.

  * harbour/contrib/hbqt/hbqt.h
  + harbour/contrib/hbqt/slots.h
    + Slots.h could be renamed to hbqt_slots.h, Marcos ?

  + harbour/contrib/hbqt/hbqt_qabstractscrollarea.cpp
  + harbour/contrib/hbqt/hbqt_qabstractslider.cpp
  + harbour/contrib/hbqt/hbqt_qabstractspinbox.cpp
  + harbour/contrib/hbqt/hbqt_qaction.cpp
  + harbour/contrib/hbqt/hbqt_qapplication.cpp
  + harbour/contrib/hbqt/hbqt_qboxlayout.cpp
  + harbour/contrib/hbqt/hbqt_qcalendarwidget.cpp
  + harbour/contrib/hbqt/hbqt_qcheckbox.cpp
  + harbour/contrib/hbqt/hbqt_qcolordialog.cpp
  + harbour/contrib/hbqt/hbqt_qcombobox.cpp
  + harbour/contrib/hbqt/hbqt_qcommandlinkbutton.cpp
  + harbour/contrib/hbqt/hbqt_qcoreapplication.cpp
  + harbour/contrib/hbqt/hbqt_qcqlendarwidget.cpp
  + harbour/contrib/hbqt/hbqt_qdateedit.cpp
  + harbour/contrib/hbqt/hbqt_qdatetimeedit.cpp
  + harbour/contrib/hbqt/hbqt_qdial.cpp
  * harbour/contrib/hbqt/hbqt_qdialog.cpp
  + harbour/contrib/hbqt/hbqt_qdoublespinbox.cpp
  + harbour/contrib/hbqt/hbqt_qerrormessage.cpp
  + harbour/contrib/hbqt/hbqt_qfiledialog.cpp
  + harbour/contrib/hbqt/hbqt_qfocusframe.cpp
  + harbour/contrib/hbqt/hbqt_qfont.cpp
  + harbour/contrib/hbqt/hbqt_qfontcombobox.cpp
  + harbour/contrib/hbqt/hbqt_qfontdialog.cpp
  + harbour/contrib/hbqt/hbqt_qformlayout.cpp
  + harbour/contrib/hbqt/hbqt_qframe.cpp
  + harbour/contrib/hbqt/hbqt_qgroupbox.cpp
  + harbour/contrib/hbqt/hbqt_qhboxlayout.cpp
  + harbour/contrib/hbqt/hbqt_qinputdialog.cpp
  + harbour/contrib/hbqt/hbqt_qlabel.cpp
  + harbour/contrib/hbqt/hbqt_qlayout.cpp
  + harbour/contrib/hbqt/hbqt_qlayoutitem.cpp
  + harbour/contrib/hbqt/hbqt_qlcdnumber.cpp
  + harbour/contrib/hbqt/hbqt_qlinedit.cpp
  + harbour/contrib/hbqt/hbqt_qlineedit.cpp
  + harbour/contrib/hbqt/hbqt_qlistview.cpp
  + harbour/contrib/hbqt/hbqt_qmainwindow.cpp
  + harbour/contrib/hbqt/hbqt_qmenu.cpp
  + harbour/contrib/hbqt/hbqt_qmenubar.cpp
  + harbour/contrib/hbqt/hbqt_qmessagebox.cpp
  + harbour/contrib/hbqt/hbqt_qobject.cpp
  + harbour/contrib/hbqt/hbqt_qpagesetupdialog.cpp
  + harbour/contrib/hbqt/hbqt_qprintdialog.cpp
  + harbour/contrib/hbqt/hbqt_qprintpreviewdialog.cpp
  + harbour/contrib/hbqt/hbqt_qprogressbar.cpp
  + harbour/contrib/hbqt/hbqt_qprogressdialog.cpp
  + harbour/contrib/hbqt/hbqt_qpushbutton.cpp
  + harbour/contrib/hbqt/hbqt_qradiobutton.cpp
  + harbour/contrib/hbqt/hbqt_qscrollarea.cpp
  + harbour/contrib/hbqt/hbqt_qscrollbar.cpp
  + harbour/contrib/hbqt/hbqt_qsizegrip.cpp
  + harbour/contrib/hbqt/hbqt_qslider.cpp
  + harbour/contrib/hbqt/hbqt_qspinbox.cpp
  + harbour/contrib/hbqt/hbqt_qsplitter.cpp
  + harbour/contrib/hbqt/hbqt_qtabbar.cpp
  + harbour/contrib/hbqt/hbqt_qtableview.cpp
  + harbour/contrib/hbqt/hbqt_qtablewidget.cpp
  + harbour/contrib/hbqt/hbqt_qtablewidgetitem.cpp
  + harbour/contrib/hbqt/hbqt_qtabwidget.cpp
  + harbour/contrib/hbqt/hbqt_qtextedit.cpp
  + harbour/contrib/hbqt/hbqt_qtimeedit.cpp
  + harbour/contrib/hbqt/hbqt_qtoolbar.cpp
  + harbour/contrib/hbqt/hbqt_qtoolbox.cpp
  + harbour/contrib/hbqt/hbqt_qtoolbutton.cpp
  + harbour/contrib/hbqt/hbqt_qtreeview.cpp
  + harbour/contrib/hbqt/hbqt_qvboxlayout.cpp
  + harbour/contrib/hbqt/hbqt_qwebview.cpp
  * harbour/contrib/hbqt/hbqt_qwidget.cpp
  + harbour/contrib/hbqt/hbqt_qwizard.cpp
  + harbour/contrib/hbqt/hbqt_slots.cpp
  + harbour/contrib/hbqt/moc_slots.cpp
    + Added re-worked code supplied by Marcos Gambeta, thanks.
      Please ensure that all future developments should respect
      hbqt.h api conventions.

  + harbour/contrib/hbqt/tests
  + harbour/contrib/hbqt/tests/demoqt.prg
    + Added a small test. Marcos please check which MinGW flag is
      needed so that it does not show up console screen as parent
      of App or Dialogs.

    ; NOTE: Marcos, can you update your PHP script to write
            output file in format I showed in above files?

2009-03-21 16:07 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    ! restored default optimization flag (-O3) in hb* scripts

  * harbour/harbour.spec
    ! fixed recent modification

  * harbour/contrib/rddads/ads1.c
  * harbour/contrib/rddads/adsfunc.c
  * harbour/contrib/hbmisc/strfmt.c
  * harbour/contrib/hbcrypt/sha1.c
    ! fixed wrongly used C reference operator

  * harbour/contrib/hbwin/win_prn2.c
  * harbour/contrib/hbwin/wapi_commctrl.c
  * harbour/source/vm/maindllp.c
    ! fixes for unicode builds

  * harbour/include/std.ch
    + added SET TIME FORMAT [TO] <f>

  * harbour/include/set.ch
  * harbour/include/hbset.h
  * harbour/source/vm/set.c
    + added _SET_TIMEFORMAT
      The folowing modifiers are supported:
         hh - hours
         mm - minutes
         ss - seconds
         fff - fraction part of seconds
         p - 1-st letter from PM / AM signature. When used time is shown
             in 12 hour format otherwise 24 hour format is used
      ex: Set( __SET_TIMEFORMAT, "hh:mm pm" )
      default _SET_TIMEFORMAT value is "hh:mm:ss:fff"
    + added C function: char * hb_setGetTimeFormat( void );

  * harbour/include/hbpp.h
  * harbour/source/pp/ppcore.c
    + added support for timestamp constant values in the form:
         t"YYYY-MM-DD HH:MM:SS.fff"
      The exact accepted timestamp pattern is is:
         YYYY-MM-DD [H[H][:M[M][:S[S][.f[f[f[f]]]]]]] [PM|AM]
      i.e.:
         tValue := t"2009-03-21 5:31:45.437 PM"
      or:
         YYYY-MM-DDT[H[H][:M[M][:S[S][.f[f[f[f]]]]]]] [PM|AM]
      with literal "T" as date and time part delimiters (XML timestamp
      format), i.e.:
         tValue := t"2009-03-21T17:31:45.437"
      The folowing characters can be used as date delimiters: "-", "/", "."
      if PM or AM is used HH is in range < 1 : 12 > otherwise
      in range < 0 : 23 >

  * harbour/source/compiler/complex.c
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.yyh
    + added support for t"YYYY-MM-DD HH:MM:SS.fff" time stamp constant
      to compiler
    + added support for VFP datetime constant values:
         { ^ [ YYYY-MM-DD [,] ] [ HH[:MM[:SS][.FFF]] [AM|PM] ] }
      The following characters can be used as date delimiters: "-", "/".
      Dot "." as date delimiter is not supported.
      There is no limit on number of characters in YYYY, MM, DD, HH, MM,
      SS, FFF parts. Important is only their value. This is the format
      in semi PP notation:
         { ^ <YEAR> <sep:/-> <MONTH> <sep:/-> <DAY> [[<sep2:,>]
           [ <HOUR> [ : <MIN> [ : <SEC> [ . <FRAQ> ] ] ] [AM|PP] ] }
      In practice it allows to also parse xHarbour datetime constant
      values with compatible conditions though xHarbour support onlu "/"
      as date delimiter.
      NOTE: there is one important difference to VFP and xHarbour in
      decoding above format. In VFP and xHarbour when date part is
      missing then it's set by default to: 1899-12-30 so this code:
         { ^ 12:00 }
      gived the same results as:
         { ^ 1899/12/30 12:00 }
      Harbour does not set any default date value when timestamp
      constant value contains only time part.
      If you want we can change it for strict VFP compatiblity.
      Now this extension is enabled by default for testing. In the future
      it will be probably covered by HB_COMPAT_FOXPRO macro.

  * harbour/source/macro/macro.yyc
  * harbour/source/macro/macro.y
  * harbour/source/macro/macro.yyh
  * harbour/source/macro/macrolex.c
    + added support for t"YYYY-MM-DD HH:MM:SS.fff" time stamp constant
      to macro compiler

  * harbour/include/hbmacro.h
  * harbour/source/vm/macro.c
    + added new function:
      void hb_macroGenPushTimeStamp( LONG lDate, LONG lTime, HB_COMP_DECL );

  * harbour/include/hberrors.h
  * harbour/source/compiler/hbgenerr.c
    + added new compile time error: "Invalid timestamp constant '%s'"

  * harbour/source/compiler/cmdcheck.c
    * use Harbour API timestamp functions instead of calling system
      functions

  * harbour/include/hbpcode.h
  * harbour/source/compiler/hbfix.c
  * harbour/source/compiler/hbpcode.c
  * harbour/source/compiler/hbdead.c
  * harbour/source/compiler/genc.c
  * harbour/source/compiler/gencc.c
  * harbour/source/compiler/hblbl.c
  * harbour/source/compiler/hbstripl.c
  * harbour/source/compiler/hbopt.c
    + added new PCODE HB_P_PUSHTIMESTAMP (replaced one unused PCODE value)
      to store timestamp constant values in the PCODE

  * harbour/include/hbcomp.h
  * harbour/source/compiler/hbmain.c
    + added new function:
      void hb_compGenPushTimeStamp( LONG lDate, LONG lTime, HB_COMP_DECL );

  * harbour/include/hbexprop.h
  * harbour/source/common/expropt1.c
    + added new C functions:
      HB_EXPR_PTR hb_compExprNewTimeStamp( LONG, LONG, HB_COMP_DECL );

  * harbour/include/hbexprb.c
  * harbour/include/hbcompdf.h
  * harbour/source/common/expropt2.c
    + added timestamp expressions support
    + added compile time optimization for timestamp expressions
    * updated function optimization for timestamp expressions

  * harbour/include/hbdate.h
  * harbour/source/common/hbdate.c
    * changed hb_dateMilliSeconds() to return UTC julian timestamp in
      milliseconds
    * changed existing seconds, time and timestamp functions to operate
      on common OS specific functions to eliminate possible problems
      with different OS time counters
    + added new functions to operates on time and timestamp values.
      See source code for details.

  + harbour/source/rtl/cputime.c
    * moved double hb_secondsCPU( int n ) function to separate file

  * harbour/source/rtl/seconds.c
    - removed old version of date/seconds functions

  * harbour/source/vm/hashes.c
  * harbour/source/vm/arrays.c
    + added support for timestamp values as hash item indexes

  * harbour/source/vm/hashfunc.c
    + added support for find timestamp values in hash and array items
      by simple date value in AScan(), hb_HScan(), hb_AScan() and hb_RAScan()
      functions when exact comparison is not used.

  * harbour/source/vm/asort.c
    + added support for sorting timestamp values

  * harbour/source/vm/classes.c
    + added support for timestamp scallar classes
    + added support for timestamp typed instance variables

  * harbour/source/vm/memvars.c
    + added support for timestamp values in .mem files

  * harbour/source/vm/estack.c
    + show timestamp values in stack dump

  * harbour/include/hbapi.h
  * harbour/source/vm/arrays.c
    + added new C functions:
      double hb_arrayGetTD( PHB_ITEM pArray, ULONG ulIndex );
      BOOL hb_arraySetTD( PHB_ITEM pArray, ULONG ulIndex, double dTimeStamp )
      BOOL hb_arrayGetTDT( PHB_ITEM pArray, ULONG ulIndex,
                           LONG * plJulian, LONG * plMilliSec );
      BOOL hb_arraySetTDT( PHB_ITEM pArray, ULONG ulIndex,
                           LONG lJulian, LONG lMilliSec );

  * harbour/include/hbapi.h
  * harbour/source/vm/extend.c
    + accept timestamp items in date functions - use only date part of
      timestamp value
    + added new C functions:
      double hb_partd( int iParam, ... );
      BOOL hb_partdt( LONG * plJulian, LONG * plMilliSec , int iParam, ... );
      void hb_rettd( double dTimeStamp );
      void hb_rettdt( LONG lJulian, LONG lMilliSec );
      int hb_stortd( double dTimeStamp, int iParam, ... );
      int hb_stortdt( LONG lJulian, LONG lMilliSec, int iParam, ... );

  * harbour/include/hbapiitm.h
  * harbour/source/vm/itemapi.c
    + accept timestamp items in date functions - use only date part of
      timestamp value
    + added new C functions:
      char * hb_itemGetTS( PHB_ITEM pItem, char * szDateTime );
      PHB_ITEM hb_itemPutTS( PHB_ITEM pItem, const char * szDateTime );
      double hb_itemGetTD( PHB_ITEM pItem );
      PHB_ITEM hb_itemPutTD( PHB_ITEM pItem, double dTimeStamp )
      BOOL hb_itemGetTDT( PHB_ITEM pItem, LONG * plJulian, LONG * plMilliSec );
      PHB_ITEM hb_itemPutTDT( PHB_ITEM pItem, LONG lJulian, LONG lMilliSec );
    + support for timestamp items in hb_itemString(), hb_itemPadConv() and
      hb_itemTypeStr() functions

  * harbour/include/hbvm.h
  * harbour/include/hbxvm.h
  * harbour/include/hbapi.h
  * harbour/source/vm/hvm.c
    + added HB_IT_TIMESTAMP items
    * modified HB_IT_DATE internal item structure to use common structure
      with HB_IT_TIMESTAMP - it  simplifies HVM code and eliminates additional
      RT conditions.
    + added HB_IS_TIMESTAMP() and ISTIMESTAMP() macros
    + added HB_IS_DATETIME() and ISDATETIME() macros - they return true
      if item/parameter is DATE or TIMESTAMP type.
    + added void hb_vmPushTimeStamp( long lJulian, long lMilliSec );
      and xhb_vmPushTimeStamp()
    + added support for timestamp values in relational operators:
         <, <=, >, >=, =, ==
      When two timestamp values are compared then VM compares date and
      time parts in both values.
      When date and timestamp values are used in <, <=, >, >=, = operations
      then VM compares only date part in both values.
      When date and timestamp values are used in == operation then VM
      compares date part in both values and then check if time part
      of timestamp value is 0.
    + added support for timestamp values in + and - math operations.
      The following rules are used in timestamp arithmetic:
         <t> + <t> => <t>
         <t> - <t> => <n>
         <t> + <n> => <t>
         <n> + <t> => <t>
         <t> - <n> => <t>
         <d> + <t> => <t>
         <t> + <d> => <t>
         <d> - <t> => <n>
         <t> - <d> => <n>
      When number is result or argument of timestamp operation then the
      its integer part is a number of day and fractional part is the time.

  * harbour/source/rtl/dateshb.c
    + added new .prg functions to mange date and timestamp values:
      HB_DATETIME() -> <tTimeStamp>
      HB_CTOD( <cDate> [, <cDateFormat> ] ) -> <dDate>
      HB_DTOC( <dDate> [, <cDateFormat> ] ) -> <cDate>
      HB_NTOT( <nValue> ) -> <tTimeStamp>
      HB_TTON( <tTimeStamp> ) -> <nValue>
      HB_TTOC( <tTimeStamp>, [ <cDateFormat> ] [, <cTimeFormat> ] ) ->
                                                            <cTimeStamp>
      HB_CTOT( <cTimeStamp>, [ <cDateFormat> ] [, <cTimeFormat> ] ) ->
                                                            <tTimeStamp>
      HB_TTOS( <tTimeStamp> ) -> <cYYYYMMDDHHMMSSFFF>
      HB_STOT( <cDateTime> ) -> <tTimeStamp>
         <cDateTime> should be in one of the above form:
            - "YYYYMMDDHHMMSSFFF"
            - "YYYYMMDDHHMMSSFF"
            - "YYYYMMDDHHMMSSF"
            - "YYYYMMDDHHMMSS"
            - "YYYYMMDDHHMM"
            - "YYYYMMDDHH"
            - "YYYYMMDD"
            - "HHMMSSFFF"
            - "HHMMSSF"
            - "HHMMSS"
            - "HHMM"
            - "HH"
         Important is number of digits.
      HB_TSTOSTR( <tTimeStamp> ) -> <cTimeStamp> // YYYY-MM-DD HH:MM:SS.fff
      HB_STRTOTS( <cTimeStamp> ) -> <tTimeStamp>
         <cTimeStamp> should be in one of the above form:
            YYYY-MM-DD [H[H][:M[M][:S[S][.f[f[f[f]]]]]]] [PM|AM]
            YYYY-MM-DDT[H[H][:M[M][:S[S][.f[f[f[f]]]]]]] [PM|AM]
         The folowing characters can be used as date delimiters: "-", "/", "."
         T - is literal "T" - it's for XML timestamp format
         if PM or AM is used HH is in range < 1 : 12 > otherwise
         in range < 0 : 23 >
      HB_HOUR( <tTimeStamp> ) -> <nHour>
      HB_MINUTE( <tTimeStamp> ) -> <nMinute>
      HB_SEC( <tTimeStamp> ) -> <nSeconds>   // with milliseconds

  * harbour/source/rtl/datec.c
    + accept timestamp parameters in CMONTH() and CDOW() functions

  * harbour/source/rtl/empty.c
    + added support for timestamp items

  * harbour/source/rtl/itemseri.c
    + added support for timestamp items serialization

  * harbour/source/rtl/minmax.c
    + added support for timestamp values to MIN() and MAX() functions.
      when only one of given parameters is timestamp value and other
      is date value and date parts are equal then always date item
      is returned as both MIN() or MAX() value.

  * harbour/source/rtl/dates.c
    + added new C functions: hb_timeFormat(), hb_timeUnformat(),
      hb_timeStampFormat(), hb_timeStampUnformat()

  * harbour/source/rtl/valtype.c
    + added .prg functions: HB_ISDATETIME(), HB_ISTIMESTAMP()

  * harbour/source/rtl/transfrm.c
    + added support for timestamp items formatting.
    + added new function modifier @T.
      When @T is used without @D then only time part of timestamp value
      is formatted and return.
      When @D is used without @T then only date part of timestamp value
      is formatted and return.

  * harbour/source/rtl/tbrowse.prg
    + display timestamp values

  * harbour/source/rtl/philes.c
    + accept timestamp value as second parameter of HB_FSETDATETIME()
      function
    + store file data and time in second parameter of HB_FGETDATETIME()
      as timestamp value.
    Old parameters (2-dDate, 3-cTime) are still supported but please think
    about removing them - they are redundant.

  * harbour/source/rtl/filesys.c
    * updated function names


  * harbour/source/rdd/dbf1.c
    + added native support for time and timestamp fields

  * harbour/include/hbrddcdx.h
  * harbour/include/hbrddnsx.h
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
    + added support for indexing timestamp fields
    + added support for using DATE values with timestamp fields
      which replicate HVM behavior.
      SEEK and SEEKLAST with date value when active index is on
      timestamp positions to 1-st or last record where date part
      of indexed timesamp value is equal.
      Settings scopes to date values when active index is on timestamp
      value reduce the visible record range to these ones which have
      date part of timestamp value in the range of dates values used
      for scopes. It possible to mix date and timestamp values in scope
      and set one scope to date value and the second to timesamp.

  * harbour/source/rdd/sdf1.c
  * harbour/source/rdd/delim1.c
    + added support for exporting timestamp fields

  * harbour/source/rdd/dbsql.c
    ! fixed typo in logical value export
    + export timestamp fields.
      Please update the format to given SQL syntax.


  * harbour/contrib/hbct/files.c
    + changed SETFDATI() to optionally accept timestamp parameter
      instead of two parameters dDate and cTime

  * harbour/contrib/hbct/misc1.c
    + added timestamp support to XTOC() function

  * harbour/contrib/hbct/misc2.c
    + added timestamp support to COMPLEMENT() function

  * harbour/contrib/hbct/dattime2.c
    + accept timestamp values in ADDMONTH(), DOY(), ISLEAP(), QUARTER()
      LASTDAYOM(), WEEK() functions

  * harbour/contrib/hbmzip/hbmzip.c
    + updated HB_ZipFileCreate( hZip, cZipName, tDateTime, cTime, ... )
      functions to optionaly accept timestamp value in 3-rd parameter
      instead od dDate, and cTime in 3-rd and 4-th parameters.
    + updated HB_UnzipFileInfo( hUnzip, @cZipName, @tDateTime, @cTime, ... )
      to return timestamp value in 3-rd parameter instead of date value.
      TODO: Please think about removing 4-th parameter from:
               HB_ZipFileCreate( hZip, cZipName, tDateTime, cTime, ... )
               HB_UnzipFileInfo( hUnzip, @cZipName, @tDateTime, @cTime, ... )
            Now it's redundant.
  * harbour/contrib/hbmzip/readme.txt
    * updated parameters description for above functions

  * harbour/contrib/hbnf/descendn.c
    + added timestamp support to FT_DESCEND() function

  * harbour/contrib/hbclipsm/date.c
    + accept timestamp values in DATEASAGE(), DATEASARRAY() and DATEISLEAP()
      functions

  * harbour/contrib/hbmisc/dates2.c
    + accept timestamp values in ISLEAPYEAR(), DAYSINMONTH(), EOM(), BOM(),
      WOM(), WOY(), EOY() and BOY() functions


   The following contrib files should be updated but I'm leaving it to
   other developers who want to keep this code alive:
         contrib/hbtip/utils.c
         contrib/hbvpdf/hbvpdf.prg
         contrib/hbvpdf/hbvpdft.prg
         contrib/hbwin/win_dll.c
            some minor cleanups if necessary and authors will find
            timestamp values usable

         contrib/hbole/ole2.c
         contrib/hbwin/win_ole.c
            add support for timestamp values in OLE

         contrib/rddado/adordd.prg
         contrib/rddads/ads1.c
         contrib/rddads/adsx.c
         contrib/rddsql/...
            add support for timestamp values in RDDs

   Warning: this implementation is not xHarbour compatible. There are many
   important differences. Mostly on C level and used API. Please be careful
   in porting xHarbour source code to Harbour.
   Many thanks to Walter Negro for his DATETIME implementation in xHarbour
   which allowed me to tests some different aspects of DAYTIME/TIMESTAMP
   behavior and was important inspiration for this job.

2009-03-21 15:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbtpathy/tpwin.c
  * contrib/hbwin/win_regc.c
    ! mingw64 reported (64-bit) problems fixed.

  * contrib/hbwin/wapi_winbase.c
    ! mingw64 reported (64-bit) problem fixed.
    ! ISNIL() -> ISCHAR(). It appears many times, but using ISNIL()
      has the same cost IS<ACTUAL_TYPE>(), yet only covers one
      case, so it's very dangerous and leave potential GPFs when
      passing wrong type. So, when there is no strong special reason
      to use ISNIL() (like we really want to allow all types except NIL),
      always use ISCHAR(), ISNUM(), ISPOINTER(), ... instead.

  * ChangeLog
    - Deleted resolved mingw64 warnings from entry.

2009-03-21 15:12 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_dll.c
  * contrib/hbwin/win_ole.c
    ! Fixed most mingw64 spotted errors/warnings.

2009-03-21 15:02 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * config/win/icc.cf
  * config/win/cygwin.cf
  * config/win/msvc.cf
  * config/win/owatcom.cf
  * config/win/xcc.cf
  * config/win/mingw.cf
  * config/win/pocc.cf
    * Changed Harbour to uniformly link against ws2_32 winsock
      lib on Windows. Previous we've been using a mixture of
      ws2_32 and wsock32, sometimes both. For some platforms
      one of these libs is automatically included by linker,
      f.e. for bcc, wsock32 is used.
    ! This fixes wsock32 no longer available for mingw64.
    ; These platforms should be retested if this causes any
      problems, but ws2_32 should be available for all since long.

  * utils/hbmk2/hbmk2.prg
    ! Typo in prev commit.

  * source/vm/maindllp.c
  * source/vm/extrap.c
    ! Fixed for mingw64.
    ! Fixed warning for mingw64.
      ; TODO: Check for possible regression. [DONE]

  * contrib/hbodbc/odbc.c
    ! Fixed mingw64 warning.
    ; TODO: Check for possible regression. [DONE]

2009-03-21 14:23 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * utils/hbmk2/hbmk2.prg
  + config/win/mingw64.cf
  * config/win/mingw.cf
    + Added support for mingw64. MinGW 64-bit mode.
      Harbour doesn't build yet due to some compiling errors
      (plus some internal MinGW ones to be investigated).
    ; TODO: Add support in postinst.sh. [DONE]

  * source/vm/extrap.c
    * win32 -> win.

2009-03-21 13:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/mingwce.cf
  * config/win/cygwin.cf
  * config/win/mingw.cf
    + Added -fomit-frame-pointer switch for win/gcc family.
      It causes quite a huge improvement in all areas, bringing
      MinGW very close to MSVC and even faster in many aspects.
      Some FP operations are still slower a bit, and this seems
      to be the only remaining - small - disadvantage.
      For C level debugging this switch should be turned off AFAIK.

2009-03-21 10:17 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * tests/bnchmark/bnch_win.bat
    + Added option to override benchmark program name, so now
      it can be used with customized speedtst versions or other
      benchmark apps.
    + Added HB_CMP_FLAGS envvar to define common compilation flags.
    + Now echoing all benchmark settings to output.

  * config/win/icc.cf
    + Added -nologo.
    * Changed -W4 to -W3, as -W3 is really verbose in this compiler.

  * INSTALL
  * bin/hb-mkdyn.bat
  * utils/hbmk2/hbmk2.prg
  + config/win/iccia64.cf
    + Added Intel(R) C++ Compiler IA64 support.
      All Harbour libs (including contribs) compiled successfully,
      but I couldn't try linking any executables.
    ; TODO: Add processor information to appropriate places into
            Harbour. Currently we have only bit width and endianness,
            but no actual CPU family info. CPU instruction families
            Harbour can currently be built on out of the box:
            x86, amd64, IA64, PPC, PPC64, ARM. [DONE]

2009-03-20 17:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * tests/bnchmark
  + tests/bnchmark/bnch_win.bat
    + Added speedtst comparison tool, featuring:
      - CPU + physical memory info dump from WMI
      - Tasklist before and after test runs
      - Harbour /build info included in output
      - Complete dump of commands executed, hbmk2 output
      - Dir listing of tested .exes
      - All tests repeated three times by default (configurable)
      - 8 slots maximum to compare different speedtst scenarios
      - By default it will run -st vs. -mt tests.
    ; Please read the comments in the file for usage instructions.
      Here's an example for parameter setup:
      --
      set PATH=C:\devl\MinGW-432\bin;%PATH%
      set HB_BENCH_RUNS=3
      set HB_RUN_FLAGS=--exclude=030
      set HB_CMP_FLAGS_1=-gc2
      set HB_CMP_FLAGS_2=-gc3
      call bnch_win.bat > results.txt 2>&1
      --

  * config/rules.cf
    + Restored -ko flag. Thanks Mindaugas for analysing test result.

  * contrib/hbodbc/todbc.prg
  * contrib/hbodbc/odbc.c
    * Formatting + minor cleanups.

2009-03-20 00:41 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/xhb/inet.h
    + Added from xhb.

  * contrib/xhb/xhbfunc.c
    + Added HB_POINTER2STRING() and HB_STRING2POINTER().
      Just for the record, I've commented them, as they're both
      very dangerous and violating basic programming rules.

  * contrib/hbwin/win_prn2.c
    + Added XISPRINTER() from xhb.
    % Optimizations / cleanups in Windows spaghetti code.
      Would need a complete 'refactor'.

2009-03-19 20:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/Makefile
  + contrib/xhb/stream.prg
  + contrib/xhb/traceprg.prg
  + contrib/xhb/xhberr.prg
  * contrib/xhb/xhbfunc.c
    + More ports: HB_CMDARGARGV(), HB_VMMODE(), TRACELOG(), Stream classes,
      xhb errorsys (activate by calling xhb_ErrorSys())

  * contrib/xhb/fparse.c
  * contrib/xhb/dumpvar.prg
  * contrib/xhb/xhbat.c
  * contrib/xhb/ttable.prg
  * contrib/xhb/txtline.c
    * Fixes/cleanups to previous ports.

2009-03-19 19:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * xhb/Makefile
  * xhb/dumpvar.prg
  + xhb/decode.prg
    + Added HB_DECODE().
    * Syntax adapted for Harbour.

2009-03-19 19:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/maindll.c
  * source/vm/maindllp.c
    ! HB_EXPORT moved to beginning of declaration.

  * contrib/hbmysql/tmysql.prg
  * contrib/hbmysql/tsqlbrw.prg
    * More formatting.

  * xhb/Makefile
  * xhb/hbcompat.ch
  + xhb/xhbis.c
  + xhb/xhbscr.c
  + xhb/xhbat.c
  + xhb/txtline.c
  + xhb/dumpvar.prg
    + Added xhb remaining stuff:
      ISALNUM()
      ISSPACE()
      ISXDIGIT()
      ISCNTRL()
      ISGRAPH()
      ISPRINT()
      ISPUNCT()
      ISASCII()
      SCROLLFIXED()
      ATSKIPSTRINGS()
      HB_TABEXPAND()
      HB_READLINE()
      __OutDebug()
      HB_DumpVar()
      HBCONSOLELOCK() (emulation, might be wrong)
      HBCONSOLEUNLOCK() (emulation, might be wrong)
    ; Please review, my only goal was to make them compile.

2009-03-19 18:06 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/maindll.c
  * source/vm/maindllp.c
    ! Fixed placement of HB_EXPORT in declaration.

  * contrib/hbmysql/tmysql.prg
    * Reformatting (heavy). Minor optimizations along the way. Pls test.
    ! S&R typo fixed.
    + Added lFormat parameter to FieldDec() method.
      Submitted by Mitja Podgornik.

  * contrib/xhb/Makefile
  + contrib/xhb/fparse.c
    + Added part from xhb RTL.
      (pls review changed PHB_ITEM usage)

2009-03-19 08:10 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbqt/hbqt.h
  * harbour/contrib/hbqt/hbqt_qdialog.cpp
  * harbour/contrib/hbqt/hbqt_qabstractbutton.cpp
  + harbour/contrib/hbqt/hbqt_qabstractitemview.cpp
  + harbour/contrib/hbqt/hbqt_qabstractprintdialog.cpp
  + harbour/contrib/hbqt/hbqt_qwidget.cpp
    ! Formatting and new additions.

2009-03-19 15:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * contrib/Makefile
    + Added QT to the mainstream build. See INSTALL how to
      enable it. We will disable it before release if it will
      be a build blocker.

  + contrib/hbqt/hbqt_base.cpp
    + Added missing file from previous commit.

  * utils/hbmk2/hbmk2.prg
    + Added -dflag: and -aflag: options.

2009-03-19 12:58 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/rules.cf
    % Removed -ko option as it slightly decreases performance in -gc3 mode.
      (it's better in -gc[0-2] only)

2009-03-19 12:27 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/Makefile
  + contrib/xhb/hbserv.h
  + contrib/xhb/hbserv.ch
  + contrib/xhb/trpccli.prg
  + contrib/xhb/hbrpc.ch
  + contrib/xhb/ttable.prg
  + contrib/xhb/trpc.prg
  + contrib/xhb/ttable.ch
  + contrib/xhb/hbserv.c
    + Added few components from xhb. They compile without warnings,
      but I didn't try any of them.

  * contrib/hbqt/hbqt_qabstractbutton.cpp
  * contrib/hbqt/hbqt_qdialog.cpp
  * contrib/hbqt/hbqt.h
  * contrib/hbqt/Makefile
    + Added QT_VERSION(), QT_VERSION_STR()
    + Added QT version protection.
    ! Fixed to use forward slashes in #include filenames.
    * Changed Linux include dir autodetection.
    * Changed autodetection to look for qglobal.h.

  * contrib/rddads/tests/testmg.prg
    - Removed unnecessary lines.

2009-03-19 09:10 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    - Removed generation of odbc32.lib for BCC.
      You should configure BCC to include <bcc>/Lib/PSDK in
      the lib paths in bcc32.cfg and ilink32.cfg. It's not
      Harbour's job to generate it.

  - contrib/hbodbc/tests/harbour.mdb
  + contrib/hbodbc/tests/test.mdb
  * contrib/hbodbc/tests/odbcdemo.prg
  * contrib/hbodbc/tests/odbccall.prg
  * contrib/hbodbc/tests/testodbc.prg
    * Created working test table from test.dbf.
      (previous .mdb was broken)

  * contrib/hbodbc/tests/odbcdemo.prg
  * contrib/hbodbc/tests/odbccall.prg
  * contrib/hbodbc/tests/testodbc.prg
  * contrib/hbodbc/todbc.prg
  * contrib/hbodbc/browodbc.prg
  * contrib/hbodbc/sql.ch
    * Formatting.
    * Optimizations and cleanups. (could still use a lot more)
    ! Fixed to not use Alert().

2009-03-19 01:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmysql/mysql.c
  * contrib/hbmysql/tmysql.prg
    * Renamed all functions to standard mysql equivalents.
      Please update your code and turn off old function
      names with -DHB_MYSQL_LEGACY_LEVEL_OFF to test for
      success. Legacy function names will be removed from
      Harbour in the next release. This move allows to use
      hbmysql and hbodbc in the same app.
      SQLAND() has to be replaced with HB_BITAND(), be aware
      that latter will RTE when non-numeric var is passed,
      while SQLAND() was silently ignoring it.
      Changed functions names:
      SQLVERSION()      => mysql_get_server_version()
      SQLCONNECT()      => mysql_real_connect()
      SQLCLOSE()        => mysql_close()
      SQLCOMMIT()       => mysql_commit()
      SQLROLLBACK()     => mysql_rollback()
      SQLSELECTD()      => mysql_select_db()
      SQLQUERY()        => mysql_query()
      SQLSTORER()       => mysql_store_result()
      SQLUSERES()       => mysql_use_result()
      SQLFREER()        => mysql_free_result()
      SQLFETCHR()       => mysql_fetch_row()
      SQLDATAS()        => mysql_data_seek()
      SQLNROWS()        => mysql_num_rows()
      SQLFETCHF()       => mysql_fetch_field()
      SQLFSEEK()        => mysql_field_seek()
      SQLNUMFI()        => mysql_num_fields()
      SQLFICOU()        => mysql_field_count()
      SQLLISTF()        => mysql_list_fields()
      SQLGETERR()       => mysql_error()
      SQLLISTDB()       => mysql_list_dbs()
      SQLLISTTBL()      => mysql_list_tables()
      SQLAFFROWS()      => mysql_affected_rows()
      SQLHOSTINFO()     => mysql_get_host_info()
      SQLSRVINFO()      => mysql_get_server_info()
      DATATOSQL()       => mysql_escape_string()
      FILETOSQLBINARY() => mysql_escape_string_from_file()
      SQLAND()          => hb_bitAnd()

  * source/vm/maindll.c
  * source/vm/maindllh.c
  * source/vm/maindllp.c
  * contrib/hbodbc/odbc.c
    * Minor formatting.

2009-03-18 20:17 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/Makefile
  + source/vm/maindllp
  + source/vm/maindllp/Makefile
    + Added generation of hbmaindllp lib, to create pcode .dlls
      on Windows platform. -DHB_DYNLIB is always defined for
      this lib. This is just the first step, we will need compiler,
      hbmk2 and other changes. I'll contribute with hbmk2 changes.

  * source/vm/maindllp.c
    % Code made less verbose.
    ! Created HB_EXPORT declaration for DllEntryPoint().

  * config/win/icc.cf
    * Changed optimization to -O3 (from MSVC ones).
      With max optim (-Ox) it was just a bit faster than MSVC 2008.

  + contrib/hbqt
  + contrib/hbqt/hbqt_qabstractbutton.cpp
  + contrib/hbqt/hbqt_qdialog.cpp
  + contrib/hbqt/hbqt.h
  + contrib/hbqt/Makefile
    + Added initial QT wrapper lib layout with content posted
      by Pritpal to the list. (I did a few renames, please check
      them)

  * contrib/hbwin/hbwapi.h
    * Fixes in header.

2009-03-18 20:07 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/minmax.c
    ! fixed min()/max() functions to always return the 1-st item when
      items are equal. It's Clipper behavior and can be important when
      two items with the same wight have different other attributes
      like formatted value size or number of decimal places.

2009-03-18 19:59 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-mkdyn.bat
  * harbour/config/linux/icc.cf
  * harbour/contrib/xhb/xhbcls.ch
  * harbour/contrib/hbblat/tests/f_listtext.txt
  * harbour/contrib/hbblat/tests/f_sample.txt
  * harbour/contrib/hbblat/tests/f_ps.txt
  * harbour/contrib/hbblat/tests/f_sample1.txt
  * harbour/contrib/hbblat/tests/blattest.prg
  * harbour/contrib/hbblat/tests/f_subjectline.txt
  * harbour/contrib/hbblat/tests/blatcmd.prg
  * harbour/contrib/hbblat/syntax.txt
  * harbour/contrib/hbblat/hbblat.ch
  * harbour/contrib/hbblat/blatcls.prg
  * harbour/contrib/hbblat/blatwrp.c
  * harbour/contrib/hbblat/Makefile
  * harbour/contrib/examples/uhttpd/session.prg
  * harbour/tests/ac_test2.prg
  * harbour/tests/gtxfnt.prg
    * updated SVN attributes

  * harbour/tests/speedtst.prg
    * use chr(13)+chr(10) as EOL in outstd() in Clipper and XPP builds.

  * harbour/source/compiler/genc.c
    ! fixed one printf modifier

  * harbour/source/compiler/gencc.c
  * harbour/include/hbcompdf.h
    % do not call hb_xvmExitProc() if hb_xvmEndProc() was not executed
      inside function compiled by -gc3

2009-03-18 15:11 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    + Added .dll generation support for win/icc.

2009-03-18 13:09 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapi.h
    ! Added HB_EXPORT declaration for hb_vmSetLinkedMain().

  * utils/hbmk2/hbmk2.prg
    ! Regression regarding -ldflag: option handling.

2009-03-18 12:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    ! fixed typo.

2009-03-18 11:58 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Enabled lib grouping for minwgce.

  * include/hbtypes.h
  * source/vm/maindllp.c
    * Formatting.

2009-03-18 10:09 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbsqlit3/tests/blob.prg
  * contrib/hbsqlit3/tests/pack.prg
  * contrib/hbsqlit3/tests/metadata.prg
  * contrib/hbsqlit3/tests/sqlite3_test.prg
  * contrib/hbsqlit3/hbsqlit3.ch
  * contrib/hbsqlit3/hbsqlit3.c
    * Changed GPL license to GPL + Harbour exception with
      kind permission of author Petr Chornyj. Many thanks!

2009-03-18 09:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for multiple input files when using pocc.
    ! Fixed some mingw/mingwce mis-identifications.

2009-03-18 02:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbatomic.h
    ! fixed inline assembler code for atomic inc/dec operations.
      It's late and I haven't wrote anything in assembler using
      Intel syntax for years.
    * reenabled inline assembler code for atomic inc/dec operations
      for POCC/XCC builds - such version should work. Please check.

2009-03-18 01:14 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/utils/hbtest/rt_hvma.prg
    * use #pragma -ko- / #pragma -ko+ to make 3 RTE messages clipper
      compatible

2009-03-18 01:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbatomic.h
    ! Typo (__inline__ -> __inline).
    ! Temply disabled new _MSC_VER inline asm code, because it causes this with POCC5:
      include\hbatomic.h(268): error #3114: [asm] Invalid combination of opcode and operands.
      include\hbatomic.h(273): error #3114: [asm] Invalid combination of opcode and operands.

2009-03-18 00:50 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for -o for executables in win/pocc.

2009-03-18 00:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbatomic.h
    % removed unnecessary in such version xor

2009-03-18 00:49 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbatomic.h
    + added atomic inc/dec inline assembler code for 32bit MSVC builds
      and probably also to other compilers which defines _MSC_VER
      macro (XCC/POCC). Thanks to Viktor for help. Please make some tests.

  * harbour/source/compiler/hbopt.c
    ! disabled one assert() in PCODE optimization code.
      Mindaugas, I left note which explains why.

2009-03-18 00:31 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/rules.cf
    + Added -ko optimization switch for Harbour.
    ; TODO: Disable it for specific places of hbtest. [DONE]

  * bin/hb-mkdyn.bat
    + Added missing pocc implib generation.

  * utils/hbmk2/hbmk2.prg
    + mingwce support synced with mingw some more.
      F.e. now resources are supported for mingwce executables.

2009-03-17 20:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.sh
  * bin/hb-func.sh
    ! mingw/cygwin .dll name generation tweaked to work
      properly. This fixes both TOFIXes in prev commit.

  * mpkg_win.bat
    + Added -9 switch to zip.

  - contrib/examples/hbdoc/examples/core_es/hbpplib.txt
  * contrib/examples/hbdoc/examples/core_es/dirstruc.txt
    * Cleanup.

2009-03-17 17:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmysql/readme.txt
  * contrib/hbapollo/readme.txt
  * contrib/gtwvg/tests/demowvg.prg
  * contrib/rddads/doc/en/readme.txt
  * contrib/rddads/readme.txt
  * contrib/hbbtree/hb_btree.c
    * Minor updates to make method/b32 references.

2009-03-17 17:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.sh
  * bin/hb-mkdyn.bat
  * source/vm/maindllp.c
  * utils/hbmk2/hbmk2.prg
    + Renamed all Windows Harbour .dlls to harbour-11.dll and
      harbourmt-11.dll. This means that MinGW will now have a versioned
      name to be in sync with other builds. It also means that
      -vc, -pocc, -ow postfixes are gone (and additionally DMC
      could also be supported). What remains is -x64 to
      signal an x64 and -ia64 to signal a IA64 build. Another thing
      which remains is -b32 (now renamed to -bcc to be in sync with
      rest of Harbour), because Borland has an non-standard
      name mangling, and while it can be made work with other
      compilers since the calling convention is the same, it requires
      the .dll user applications to be rebuilt with some implib tricks.
      Overall Borland isn't recommended for .dll creation.
      Please do further tests for binary compatibility.

    ; TOFIX: Location of .dll still differs for mingw/cygwin, they
             are created in lib while rest of compilers create it in
             bin. I think we should sync them by creating a copy
             of the .dlls in bin for mingw/cygwin. Przemek, could
             you help here? [DONE]
    ; TOFIX: "Making <dllname>..." screen messages. I'll need some
             help here also. [DONE]

  * bin/hb-mkdyn.sh
    * ${MAJOR} default set to 1.

  * make_gnu_os2.cmd
    * Minor formatting.

  * contrib/hbgd/gdwrp.c
    ! Minor correction to recent change. (avoiding warning for MinGW)

2009-03-17 16:14 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    + added new tests of dynamic code blocks performance
    * modified to compile by __XPP__ and __CLIP__ - now for single
      thread only

2009-03-17 13:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-win-spec
  * harbour-wce-spec
  * make_gnu_xmingw.sh
  * make_gnu_xmingwce.sh
  * mpkg_rpm_win.sh
  * mpkg_tgz.sh
  * bin/hb-mkdyn.sh
  * bin/hb-func.sh
  * bin/postinst.sh
  * config/win/mingwce.cf
  * config/win/mingw.cf
    * CCPATH -> HB_CCPATH
    * CCPREFIX -> HB_CCPREFIX

2009-03-17 12:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + tests/server.prg
  * tests/Makefile
    + Added inet example from xhb.

  * source/vm/thread.c
    ! Fixed nested comment.

  * contrib/xhb/hbcompat.ch
  * contrib/xhb/xhb.ch
    ! Moved xhb.lib dependent translation to xhb.ch.

  * contrib/examples/hbdoc/examples/core_es/Makefile
  * contrib/examples/hbdoc/examples/core_en/genhtm.bat
  - contrib/examples/hbdoc/examples/core_en/genhtm.sh
    * Cleanup.

2009-03-17 10:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * debian/rules
  * harbour-win-spec
  * harbour-wce-spec
  * harbour.spec
  * mpkg_tgz.sh
    - hbdoc removed from core.

  - doc/Makefile
  - doc/es
  + contrib/examples/hbdoc/examples/core_es
    * Moved.

  - doc/man/hbdoc.1
  + contrib/examples/hbdoc/hbdoc.1
    * Moved.

  - doc/en/genhtm.lnk
  - doc/en/genhtm.sh
  - doc/en/genhtm.rsp
  - doc/en/genhtm.bat
  + contrib/examples/hbdoc/examples/core_en/genhtm.rsp
  + contrib/examples/hbdoc/examples/core_en/genhtm.lnk
  + contrib/examples/hbdoc/examples/core_en/genhtm.bat
  + contrib/examples/hbdoc/examples/core_en/genhtm.sh
    * Moved.

  - contrib/hbgt/doc/gendoc.bat
  - contrib/hbgt/doc/libgt.lnk
  - contrib/hbgt/doc/libgt.rsp
  - contrib/rddads/doc/gendoc.bat
  - contrib/rddads/doc/rddads.lnk
  - contrib/rddads/doc/rddads.rsp
    - Deleted.

  * utils/Makefile
  - utils/hbdoc
  + contrib/examples/hbdoc
  - contrib/hbmisc/doc/gendoc.bat
  - contrib/hbmisc/doc/hbmisc.lnk
  - contrib/hbmisc/doc/hbmisc.rsp
  + contrib/examples/hbdoc/examples/hbmisc/gendoc.bat
  + contrib/examples/hbdoc/examples/hbmisc/hbmisc.lnk
  + contrib/examples/hbdoc/examples/hbmisc/hbmisc.rsp
    * Moved.

  - contrib/hbgt/doc/en/ht_gt.txt
  + contrib/hbgt/doc/en/hbgt.txt
    * Renamed.

2009-03-17 09:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbdoc/genos2.prg
  * utils/hbdoc/genng.prg
  * utils/hbdoc/genasc.prg
  * utils/hbdoc/genchm.prg
  * utils/hbdoc/genhpc.prg
  * utils/hbdoc/ft_funcs.prg
  * utils/hbdoc/hbdoc.prg
  * utils/hbdoc/genhtm.prg
  * utils/hbdoc/genpdf1.prg
  * utils/hbdoc/gentrf.prg
  * utils/hbdoc/genrtf.prg
    + Enabled line number for all files to aid finding crashes.
    ! Few crashes fixed. Still far from usable state.

  * source/vm/thread.c
    + Added short Harbour level API description. (from Przemek)

  * contrib/xhb/Makefile
  * contrib/xhb/hbcompat.ch
  + contrib/xhb/xhbmt.prg
    + Added translation for all xhb MT functions.
      (Thanks a lot Przemek)

2009-03-17 00:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed mingw -fmstat in static mode. (shared mode gives
      warnings and doesn't work)
    + Added -[no]fmstat for all compilers. (untested)

2009-03-16 23:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-win-spec
  * harbour-wce-spec
    % Removed forced -O2 options, -O3/-O2 are the defaults already.

  * mpkg_win.bat
    + Adds -DHB_FM_STATISTICS_OFF to HB_USER_CFLAGS.

  * utils/hbmk2/hbmk2.prg
    ! Setting gtwvt for msvcce targets as default GT.

  * source/debug/debugger.prg
    % Minor optimization. (platform branching done at PP
      time rather than runtime).

  * contrib/xhb/hbcompat.ch
    + Added DestroyMutex() compatibility #translate.

2009-03-16 18:31 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added __PLATFORM__* macro support for cross-compilation situations.

  * include/hbsetup.ch
    * Minor

2009-03-16 09:39 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wincallb.c
  * harbour/contrib/gtwvg/wvgwin.c
    ! Fixed MSVC warnings.

2009-03-16 09:07 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgcuig.c
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgwin.c
    ! Fixes for warnings on all compilers.

2009-03-16 15:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    ! Typo in bcc / fbclient.
    % Cleanup for owatcom, fbclient fixed.

2009-03-16 15:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added 3.81 or upper as GNU Make requirement. Older ones
      have bugs exploitet by current .cf files.

  * contrib/hbssl/Makefile
    - Disabled for owatcom.

  * config/win/msvc.cf
    ! Fixed -TP switch. Stopped using CFLAGS.
    * Changed to use link.exe directly instead of cl.exe.

  * config/win/msvcce.cf
    * Minor cleanup.

2009-03-16 13:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for win/mingwce.
    + Honoring HB_CCPATH for ar in gcc *nix.
    + Honoring HB_CCPATH for gcc win.

2009-03-16 12:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
    + Enabled new Harbour types. Still incomplete, and relying
      on old unsafe types in places.

  * contrib/gtwvg/gtwvg.c
    ! Warning.

  * contrib/gtwvg/wvgcuig.c
    ! Cast errors.

  * config/win/msvc.cf
    + Enabled C++ mode. This should result in stricter compiler
      warnings/errors, and also enables to use standard init
      method (non-C++ method is broken when using LTCG
      and potentially in other scenarios like IA64). Note, this
      doesn't mean we'd allow non-ANSI C usage inside Harbour,
      so no C++ features are allowd. This won't cause any
      drawbacks for the user AFAIK, if you know otherwise, pls
      speak up. [Notice that we're using C++ mode for owatcom
      on all platforms.]

  * doc/whatsnew.txt
    + Documented win/owatcom and OpenSSL incompatibility.
      (maybe it can be resolved, I didn't spend time on it)

  * INSTALL
    * C compiler -> ANSI C compiler.

2009-03-16 11:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    ! Fixed typo in prev.

  * bin/hb-mkdyn.bat
    ! owatcom IMPLIB generation restored.

  * source/lang/msgpt.c
  * source/lang/msgeo.c
  * source/lang/msgfr.c
  * source/lang/msgptiso.c
  * source/lang/msgko.c
    ! Fixed missing commas.

  * source/vm/dynsym.c
  * source/vm/hvm.c
  * source/rdd/dbfnsx/dbfnsx1.c
    * while( TRUE ) -> for( ;; ) to avoid warning.

  * utils/hbmk2/hbmk2.prg
    ! Fixed to owatcom support.
    ! Fixed to honor HB_CCPREFIX in mingw detection.

  * config/dos/owatcom.cf
  * config/win/owatcom.cf
  * config/linux/owatcom.cf
  * config/os2/owatcom.cf
    + Enabled -w3 warning level (from -w2)
    + Added -bm (MT) switch for win.
    + Using -5s and -3s (when NOOPT) in win.
    * Synced win owatcom options with GNU Make.

  ; TOFIX: ../../dbf1.c(208): Warning! W007: col(55) '&array' may not produce intended result

2009-03-15 23:10 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgcuig.c
    ! A fix for UNICODE | non-UNICODE. Not sure if it is the
      right way, but it works. Please fix me.

2009-03-16 01:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
  * source/vm/maindllp.c
  * utils/hbmk2/hbmk2.prg
    + Added .dll generation for pocc.
    + Added -shared support for pocc.

  * utils/hbmk2/hbmk2.prg
    ! Warning after prev commit is fixed.

  * source/vm/Makefile
    * All win targets will generate maindllh lib.

2009-03-15 16:42 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)

  * harbour/contrib/gtwvg/hbgtwvg.ch
    + #define HB_GTI_SETPOSANDSIZE
    + #define HB_GTI_HB_GTI_REFRESH
      + Two more events to manage new CUI-GUI objects.

    + #define GOBJ_OBJSTATE_*
    + #define GOBJ_OBJDATA_*
    + #define GOBJ_IMAGESOURCE_*
      + Constants to manage CUI=GUI objects.

  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/wvggui.h
    ! Updated to be compilable for WinCE builds.

  * harbour/contrib/gtwvg/gtwvg.c
    ! Updated to honor WinCE builds.
    ! Implemented double-buffering of console. Now flickering
      should be the topic of the past.

  * harbour/contrib/gtwvg/wvggui.c
    ! Updated to honor WinCE builds.

  * harbour/contrib/gtwvg/wvgcuig.c
    + Implemented a highly optimized GUI controls for CUI consoles.
      Implementation includes auto-destruction, data-substitution,
      enable/disable feast, etc. These controls are almost identical
      which are available with Wvt_Draw*() namespace but with a
      great difference that these are tied to the urrent GT and
      are handelled transparently by the GT itself. Developer
      has only to define it. The only requirement is that
      SaveScreen()/RestScreen() needs to be changed to new
      Modal GT window. Appln screens will never get blurred. It
      also employs optimized double-buffering and hence almost
      eliminates screen flickering.

  * harbour/contrib/gtwvg/wvgcore.c
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgutils.c
  * harbour/contrib/gtwvg/wvgwin.c
    ! Updated to honor WinCE builds.

  * harbour/contrib/gtwvg/wvgcrt.prg
    ! A couple of methods fine-tuned.
    ! Modal GT's more responsive to user needs.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Demonstrated the latest implemention of CUI-GUI controls. See below.
      Please try <Traditional><WVG Console with CGUI> option in the main menu.
      Also note the usage of Modal GT to simulate Alert() in new window.
      Every GUI object returns a handle to it which may be used to
      change its parameters.

    ; TOFIX( WINCE BUILDS ) - GetSystemDirectory()


    /*    IMPLEMENTATION OF CUI-GUI CONTROLS - A CODE PREVIEW



         #xTranslate Alert( => MyAlert(

         PROCEDURE GCUIConsole( oCrt )
            LOCAL dDate      := date()
            LOCAL cName      := pad( 'Some Usefule Name'   , 35 )
            LOCAL cAdd1      := pad( 'Linda Goldman Avenue', 35 )
            LOCAL cAdd2      := pad( 'Excellent Street'    , 35 )
            LOCAL cAdd3      := pad( 'Suit #415'           , 35 )
            LOCAL nSlry      := 9000
            LOCAL nColGet    := 8
            LOCAL GetList    := {}
            LOCAL cLabel     := "VOUCH, that GROWS with you"
            LOCAL oTab, oStat, hBoxR, hTxt

            SET SCOREBOARD OFF

            SetColor( "N/W,N/GR*,,,N/W*" )
            CLS
            hb_gtInfo( HB_GTI_WINTITLE, "WVG Simplified yet Powerful CUI-GUI Console!" )

            @ MaxRow(), 0 SAY PadC( "Navigate the Gets", maxcol()+1 ) COLOR "W+/B"

            @  2, nColGet SAY "< Date >"
            @  5, nColGet SAY "<" + PadC( "Name"   , 33 ) + ">"
            @  8, nColGet SAY "<" + PadC( "Address", 33 ) + ">"
            @ 15, nColGet SAY "< Salary >"

            @  3, nColGet GET dDate  ;
                                     WHEN  {|| Wvg_SetGObjData( hTxt, 1, FetchText( 1 ) ) } ;
                                     Valid {|| Wvg_SetGObjData( hTxt, 6, RGB( 255,0,0 ) ), .t. }
            @  6, nColGet GET cName  ;
                                     WHEN  {|| Wvg_SetGObjData( hTxt, 1, FetchText( 2 ) ) } ;
                                     Valid {|| Wvg_SetGObjData( hTxt, 6, RGB( 255,255,0 ) ), ;
                                                           Wvg_SetGObjState( hBoxR, 3 ), .t. }
            @  9, nColGet GET cAdd1  ;
                                     WHEN  {|| Wvg_SetGObjData( hTxt, 1, FetchText( 3 ) ) } ;
                                     Valid {|| Wvg_SetGObjData( hTxt, 6, RGB( 255,0,255 ) ), .t. }
            @ 11, nColGet GET cAdd2  ;
                                     WHEN  {|| Wvg_SetGObjData( hTxt, 1, FetchText( 4 ) ) } ;
                                     Valid {|| Wvg_SetGObjData( hTxt, 6, RGB( 255,255,255 ) ), ;
                                                           Wvg_SetGObjState( hBoxR, 1 ), .t. }
            @ 13, nColGet GET cAdd3  ;
                                     WHEN  {|| Wvg_SetGObjData( hTxt, 6, RGB( 198,21,140 ) ), .t. }
            @ 16, nColGet GET nSlry PICTURE "@Z 9999999.99" ;
                                     WHEN  {|| Wvg_SetGObjData( hTxt, 6, RGB( 0,0,0 ) ), .t. }

            // The only additional calls to render your console GUI
            //
            // The GETLIST  : This can be embedded via  @ GET preprocessor command
            aEval( GetList, {|oGet| Wvg_BoxGet( oGet:Row, oGet:Col, Len( Transform( oGet:VarGet(), oGet:Picture ) ) ) } )
            //
            hBoxR := Wvg_BoxRaised( 1,2,18,49, {-5,-5,5,5} )
            //
            Wvg_BoxRecessed( 1,2,18,49 )
            //
            // Wvg_BoxGroup( 2,4,17,47 )
            //
            Wvg_BoxGroupRaised( 2,4,17,47, {-7,-7,7,7} )
            //
            hTxt := Wvg_TextBox( 3,57,16,75, {10,10,-10,-10}, 'This is first TextBox Line!', 2, 2 )
            //
            Wvg_Image( 15,36,16,42, {-3,-3,3,3}, GOBJ_IMAGESOURCE_FILE, 'Vouch1.bmp' )
            //
            Wvg_BoxRaised( 15,36,16,42,{-2,-2,2,2} )
            //
            Wvg_ShadedRect( 1,54,18,79, { -5,-5,5,5 }, 0, {65000,21000,7000,56000}, {255,32255,16000,32500} )
            //
            Wvg_BoxRaised( 1,54,18,79, {-5,-5,5,5} )

            // Instruct GT to Repaint the Screen with GUI elements.
            oCrt:refresh()

            // Issue the read
            READ

            Alert( 'How did you like the "Alert" replacement?', { 'WOW','OK','OOps'} )

            RETURN
         /*----------------------------------------------------------------------*/
         #xUntranslate alert( =>

         FUNCTION MyAlert( cMsg, aOpt )
            LOCAL nSel, oCrt

            oCrt := WvgCrt():New( , , { -1,-1 }, { 9, MaxCol()-6 }, , .t. )
            oCrt:lModal := .t.
            oCrt:icon   := "dia_excl.ico"
            oCrt:create()
            oCrt:resizable := .t.

            SetColor( 'N/W' )
            CLS
            hb_gtInfo( HB_GTI_WINTITLE, cMsg )

            nSel := Alert( cMsg, aOpt )

            oCrt:destroy()

            RETURN nSel

         #xTranslate Alert( => MyAlert(
         /*----------------------------------------------------------------------*/
         STATIC FUNCTION FetchText( nMode )
            LOCAL cText

            DO CASE
            CASE nMode == 1
               cText := 'Do you know Harbour is gaining a popularity what Clipper enjoyed at one time! '
               cText += 'Enjoy it.'
            CASE nMode == 2
               cText := 'Do you know Harbour can host pure console, cui+gui console, pure gui consoles applications? '
               cText += 'This demonstration is a proof of that.'
            CASE nMode == 3
               cText := 'Do you know Harbour is a multi-gt, multi-window, multi-thread compiler far superior than others in the market! '
               cText += 'And is FREE.'
            CASE nMode == 4
               cText := 'Enjoy and contribute to the project any way you can. Develop, Debug, Support, and spread a word of mouth!'
            ENDCASE

            RETURN cText
         /*----------------------------------------------------------------------*/
    */

    ;TODO - Write a comprehensive help to exploit CUI-GUI functionality.
            Will do in a few days.


2009-03-16 00:38 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    + Added owatcom and pocc support for implib generation.

  * utils/hbmk2/hbmk2.prg
    + Fixed win/pocc support.
    + Added resource support for win/pocc.
    + Added .dll support for win/pocc.
    + Added win/xcc support (untested).
    + -DHB_DYNLIB is passed to C compiler in -hbdyn (.dll) mode
      for win targets. (still need fixing to create usable .dlls)
    ; NOTE: pocc support is very limited as pocc compiler doesn't
            support multiple input files.

2009-03-15 20:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Documented cross-build config for minwgce.

  * utils/hbmk2/hbmk2.prg
    + Added static lib generation support for owatcom compilers on
      platforms.
    + Added static lib generation support for gcc family.
      Please review it's probably incomplete.
    + Honoring HB_CCPREFIX on win platform for gcc family.
    ! Fixed typo on .c stub function declaration for bcc/owatcom.

  * contrib/xhb/hbcompat.ch
    + #xtranslate hb_funcptr(<x>) => __dynsn2sym(<x>)

2009-03-14 16:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbgt/strasint.c
    % Using HB_ISDIGIT()
    ! Fixed to not include hbtrace.h directly.

  * make_gnu.bat
    % make clean and install phases merged in HB_BUILD_DLL mode.

  * bin/postinst.bat
    ! Fix to recent change.

  * include/hbdefs.h
    ! Moved #include hbtrace.h after HB_EXPORT is defined.
      (hack)

2009-03-14 15:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbfimage/fi_winfu.c
  * contrib/hbfimage/fi_wrp.c
    % Unnecessary Harbour headers removed.

2009-03-14 14:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu_xmingwce.sh
    - Disabled modifying PATH when host OS is Windows.
    ; NOTE: Hack.

  * include/hbtrace.h
    + Added HB_EXPORT.

  * doc/whatsnew.txt
  * contrib/hbfimage/fi_winfu.c
  * contrib/hbfimage/fi_wrp.c
  * contrib/hbfimage/Makefile
    - Restored previous state, because latest changed addressing
      Linux build failure were causing problems for the Windows
      platform.
    ; TOFIX: We must clean our types, to avoid these problems
             and all bad hacks to work it around.

  * mpkg_win.bat
  * mpkg_win.nsi
    + Added files ChangeLog, TODO, ERRATA, INSTALL to root dir.
    * Some changed to batch targeting robustness for situations
      which cannot normally happen in normal cases, but it's
      useful for debugging.

2009-03-13 23:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu.bat
  * config/win/global.cf
    * HB_BUILD_DLL is now processed by make_gnu.bat and another
      internal envvar is used to request DLL flags from the GNU
      Make. This way some side effects are avoided when doing a
      make_gnu.sh launched build.

  * make_gnu.sh
    + Emptying CLIPPER/HARBOUR envvars before starting the build.
      (please test)

  * contrib/hbfbird/firebird.c
    * Minor formatting.

  * contrib/hbcurl/hbcurl.c
    ! Fixed warning/bug in recently added feature.

2009-03-13 16:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * mpkg_win.bat
    * Cleanup.
    - Removed checking for errorlevel as it made it exit
      even when doing successful builds. [ Why? Could someone
      look at this? ]

  * contrib/hbwin/wapi_commctrl.c
    ! Fix of the fix of the fix for non-ANSI comment fixes.

2009-03-13 13:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * tests/ac_test2.prg
    * Updated.
  * source/rtl/achoice.prg
    ! Fixed to not call user func in AC_NOITEM mode.
    ! Added more visual corrections for better CA-Cl*pper compatibility.
  ; Thanks to Vladislav Lavrecky for the above.

2009-03-13 12:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Further refined GNU Make usage instructions for Windows
      compilers. The recommended way of setting it up is now
      stricter and there is mention of recommended build and
      version number.

  * contrib/hbapollo/apollo.c
  * contrib/hbapollo/apollo1.prg
    * Formatting.

2009-03-13 03:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddsql/sddpg/pgsqldd.c
    ! MSVC C++ potentially uninit'ed var warning fixed.

2009-03-13 02:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/wapi_commctrl.c
    ! Fix to prev commit.

  * contrib/hbwin/win_ole.c
    ! Disabled whole code for WinCE.

2009-03-13 01:45 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/wapi_commctrl.c
  * contrib/hbwin/wapi_winuser.c
    ! Lots of non-ANSI C comments converted to ANSI.
      (may I please ask to pay attention to this?)
    ! Fixed WAPI_GETSCROLLRANGE() return value.
    ! non-WinCE compatible functions converted to stubs
      when compiled for WinCE.
    * Formatting.

  * contrib/Makefile
  - contrib/hbgf
  + contrib/examples/hbgf
  * contrib/examples/hbgf/hbgfwin/Makefile
  * contrib/examples/hbgf/hbgfos2/Makefile
  * contrib/examples/hbgf/hbgfgtk/Makefile
  * contrib/examples/hbgf/Makefile
    * hbgf moved from contrib to examples.

  * contrib/examples/Makefile
    * Updated.

2009-03-13 01:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/dos/owatcom.cf
  * config/win/poccce.cf
  * config/win/pocc64.cf
  * config/win/owatcom.cf
  * config/win/pocc.cf
  * config/linux/owatcom.cf
  * config/os2/owatcom.cf
    ! Cleanups and fixes after yesterday's changes.
      Turned out that CFLAGS has an important and strange
      difference compared to CPPFLAGS: It's also passed to the
      _linker_ :( This should be cleaned in the future.
    ! HB_USER_LDFLAGS honored in dos/owatcom.

2009-03-13 01:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbgf/hbgfwin/winapi.c
    * Formatting.

  * contrib/hbwin/win_misc.c
    ! Fixed WIN_SHELLEXECUTE() for WinCE (converted to stub).
    ! Fixed WIN_RUNDETACHED() to compile with WinCE (4th parameter
      is ignored and fixed to CREATE_NEW_CONSOLE).

  * contrib/hbwin/win_regc.c
    ! HKEY_CURRENT_CONFIG disabled for WinCE builds.

  * source/rtl/gtwvt/gtwvt.c
    ! Complete "layered" window support disabled for WinCE builds.

2009-03-12 16:10 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/achoice.prg
  * tests/ac_test2.prg
    ! ACHOICE() made more Clipper compatible. Still not fully, pls
      continue Clipper/Harbour tests with updated ac_test2.prg.

2009-03-12 14:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + harbour/tests/ac_test2.prg
    + added achoice() test by Vladislav Lavrecky - many thanks.

2009-03-12 13:32 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gttrm/gttrm.c
    + added some missing xterm key sequences

  * harbour/utils/hbmk2/hbmk2.prg
    ! fixed curses name in SunOS builds (here we are using native curses
      library not ncurses)

  * harbour/config/hpux/global.cf
  * harbour/config/sunos/global.cf
    * enabled GTXWC disabled for default builds

2009-03-12 10:55 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbtpathy/telepath.prg
    ! Fixed to use __PLATFORM__UNIX instead of __PLATFORM__LINUX.
    ! Fixed to check for string lengths instead of using Empty().
      This way full whitespace data is also handled now.

  * source/rtl/memoedit.prg
    * Minor formatting.

2009-03-12 10:28 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/achoice.prg
    ! Fixed to always dehilight active item on exit.
      (probably could be done more efficiently, feel free to
      optimize it.)
      Please test.
    ; TOFIX: ? gttrm on Darwin changes console color from my
             default green, to Harbour default gray on exit.

  * doc/whatsnew.txt
    * Minor.

2009-03-12 03:45 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
  * mpkg_win.bat
    * HB_DIR_IMPLIB -> HB_BUILD_IMPLIB
      ATTENTION: Please modify your local settings. This setting
                 is now closer to final.

  * mpkg_win.bat
    + Turning on optimizations.
    + Turning off debug mode.

2009-03-12 03:42 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/rules.cf
    + Do not add -l Harbour option when HB_BUILD_DEBUG=yes.

2009-03-12 03:07 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    * Added comment to previous entry. (-d1 vs -d2 in owatcom)

  * config/rules.cf
    ! Fixed typo in prev.

  * config/dos/owatcom.cf
  * config/win/owatcom.cf
  * config/linux/owatcom.cf
  * config/os2/owatcom.cf
    % Removed unnecessary -i C compiler options. (pls check,
      I've tested with Windows and applied it to other platforms)
    % Removed DOS cmdline length hack from win/os2.

2009-03-12 02:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/dos/owatcom.cf
  * config/linux/owatcom.cf
    + Added support for HB_BUILD_DEBUG=yes.
      (using -d2 instead of -d1 to be in sync with win,
      please correct this if wrong)

  + config/os2/owatcom.cf
    + Added os2/owatcom build file. OS/2 users please test.

  * config/win/owatcom.cf
    * Minor formatting.

2009-03-12 02:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * config/darwin/gcc.cf
  * config/hpux/gcc.cf
  * config/dos/owatcom.cf
  * config/dos/djgpp.cf
  * config/win/mingwce.cf
  * config/win/poccce.cf
  * config/win/icc.cf
  * config/win/cygwin.cf
  * config/win/msvc.cf
  * config/win/owatcom.cf
  * config/win/xcc.cf
  * config/win/msvcce.cf
  * config/win/mingw.cf
  * config/win/pocc.cf
  * config/win/bcc.cf
  * config/linux/owatcom.cf
  * config/linux/gcc.cf
  * config/linux/icc.cf
  * config/os2/gcc.cf
  * config/sunos/gcc.cf
  * config/bsd/gcc.cf
    + Added HB_BUILD_OPTIM=no setting to disable all C compiler
      optimizations (for quick draft builds, or debugging, testing).

  * config/win/xcc.cf
    % Cleaned -I options.
      (please verify)

2009-03-12 02:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/achoice.prg
    ! Fixed handling of empty items.

  * INSTALL
  * config/rules.cf
  * config/darwin/gcc.cf
  * config/hpux/gcc.cf
  * config/dos/djgpp.cf
  * config/win/mingwce.cf
  * config/win/poccce.cf
  * config/win/pocc64.cf
  * config/win/icc.cf
  * config/win/cygwin.cf
  * config/win/msvc.cf
  * config/win/owatcom.cf
  * config/win/xcc.cf
  * config/win/msvcce.cf
  * config/win/mingw.cf
  * config/win/pocc.cf
  * config/win/bcc.cf
  * config/linux/gcc.cf
  * config/linux/icc.cf
  * config/os2/gcc.cf
  * config/sunos/gcc.cf
  * config/bsd/gcc.cf
    + Added support HB_BUILD_DEBUG=yes.
      This will work identically to the former non-GNU make
      systems.
    ! Added missing -MT for MSVC. (from non-GNU make)
    * Changed a few CPPFLAGS to CFLAGS. (these are currently
      synonyms, and both are utilized without any apparent order).
      This could use more cleanup.

2009-03-11 22:48 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbgete.c
    * disabled unsetenv() from Watcom builds - looks that this function
      exists only in OpenWatcom header files.

  * harbour/source/common/hbprintf.c
    * do not use some FL functions which operates on long double values
      in SunOS builds

2009-03-11 17:45 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdate.h
  * harbour/source/common/hbgete.c
  * harbour/source/common/hbdate.c
  * harbour/source/rtl/seconds.c
  * harbour/source/rtl/hbffind.c
  * harbour/source/rtl/filesys.c
  * harbour/source/compiler/cmdcheck.c
  * harbour/contrib/hbct/files.c
  * harbour/contrib/xhb/filestat.c
  * harbour/contrib/hbmzip/hbmzip.c
  * harbour/contrib/hbtip/utils.c
  * harbour/contrib/examples/uhttpd/uhttpdc.c
    * cleaned feature test macros usage

2009-03-11 16:27 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbdate.c
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/rtl/idle.c
  * harbour/source/rtl/seconds.c
  * harbour/source/rtl/fssize.c
  * harbour/source/rtl/hbffind.c
  * harbour/source/rtl/filesys.c
  * harbour/contrib/hbct/files.c
    * cleaned feature test macros usage

2009-03-11 08:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
    + Added new entries since last update. Please review, etc...
    ; TODO: There is still 500K worth of ChangeLog to process
            for the timeframe 200808/09-20081219.
            Someone pls help.

  * doc/man/hbmk.1
    * CC* envvar name change.

2009-03-11 00:51 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbgete.c
    ! fixed setenv() usage in some OpenWatcom ports

  * harbour/source/compiler/cmdcheck.c
    ! fixed casting for C++ compilation

  * harbour/source/rtl/gttrm/gttrm.c
    * removed some trailing spaces

2009-03-10 18:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
 * ChangeLog
   * Updates.

 * contrib/xhb/txml.prg
   * Update HB_REGEXMATCH() calls, to keep old logic.
   ; TOFIX: Above doesn't mean it's now correct, so
            someone familiar with this code, please
            correct it.

 * contrib/hbapollo/apollo.c
   * Removed essentially empty comments.

 * source/rtl/achoice.prg
   ! Applied fix from Vladislav Lavrecky.
     I didn't test it just assumed okay, please do so.

2009-03-10 17:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/hbregex.c
    * Fixed HB_REGEXMATCH(). Now the HAS/LIKE mode can be controlled
      by 5th logical parameter (was 3rd), so 3rd parameter is solely
      controlling case-sensitivity as indicated in the documentation.
      Users are recommended to use HB_REGEXHAS() and HB_REGEXLIKE()
      functions as unambiguous alternatives, which work equally
      well on all Harbour versions. HB_REGEXMATCH() is now deprecated,
      but kept for compatibility.

2009-03-10 15:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * -debug description extended.

  * contrib/xhb/hbcompat.ch
    - Disabled dangerous bitop compatibility macros + comment added.
      Enabled them with #define XHB_BITOP. Or even better
      to change code to use HB_BIT*() functions natively.

2009-03-10 12:23 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/garbage.c
    ! fixed one bad typo
    * cleanup

  * harbour/tests/speedtst.prg
    + added one new test

2009-03-10 03:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for static lib creation (experimental).
      win/msvc, win/bcc are supported.
    + Added support for dynamic lib creation (experimental).
      win/msvc is currently support.
    ; Please help adding support for the rest of compilers.

2009-03-10 01:12 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/hbusage.c
    ! fixed the /u+ description - it does not work like #include.
      Only preprocessor command are significant in files included
      by -u<file> and -u+<file>

  * harbour/doc/man/harbour.1
    + add -u+<file> description

  * harbour/source/pp/ppcore.c
    ! fixed typo in error message table (missing ',')

  * harbour/source/compiler/cmdcheck.c
    * generate error when -u+ is used without <file>

  * harbour/source/compiler/hbmain.c
    * do not display usage screen if other errors were generated before

2009-03-09 23:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/hbusage.c
    + Added -u+ to help screen.
    * One remaining non-ASCII char cleaned from credit list.

  * include/hbpp.h
  * source/pp/ppcore.c
    ! Renamed HB_PP_MAX_REPATS to HB_PP_MAX_REPEATS.

  * ChangeLog
    * Added one line to my prev entry.

2009-03-09 17:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcompdf.h
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/ppcomp.c
    + added support for extended definition files in Harbour compiler
      switches: -u+<file>
      This option can be repeated if user wants to use more then one
      file with extended definitions. The definitions are added after
      standard ones and after defines specified by -D<name>[=<value>]
      Harbour compiler switch.
      The behavior of -u[<file>] remains unchanged and -u or -u<file>
      can can be used together with -u+<file>.
      Note for xHarbour users: it's not exactly the same behavior as
      in xHarbour compiler.
    ! fixed memory leak when repeated -u[<file>] options are used.

2009-03-09 16:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu_os2.cmd
  * make_gnu.bat
    + Clearing HARBOUR/CLIPPER envvars while building Harbour.
    * bcc32 no longer accepted as compatibility HB_COMPILER value.

  * utils/hbmk2/hbmk2.prg
    * TODO section update.

2009-03-09 14:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbpp.h
    ! changed the NOT operator precedence - it should be bigger then
      logical .and./.or. operators in #if expressions

  * harbour/source/vm/thread.c
    ! fixed typo HB_OS_WIM -> HB_OS_WIN - thanks to Francesco.

2009-03-09 00:19 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
    * emulate POSIX thread conditional variables in Windows builds.
      It should fix some possible bad behavior in MS-Windows Harbour
      MT programs.

  * harbour/source/rtl/hbinet.c
    ! fixed typo in HB_INETDATAREADY() - the second parameter (timeout)
      was ignored.

  * harbour/contrib/examples/uhttpd/uhttpdc.c
    * fixed typo in conditional iMsec usage.

  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * set default timeout for socket operations to 3 sec.
    * use timeout parameter in HB_INETDATAREADY() and
      increased default timeout for accept to 250 millisecs.
      Please correct this modification if you prefer different values.

2009-03-08 19:29 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/uhttpd/uhttpdgd.hbm
    + Added Darwin/MacPorts support.

2009-03-08 18:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added short information for Darwin/MacPorts and contribs.

  * contrib/hbmysql/Makefile
  * contrib/gtalleg/Makefile
  * contrib/rddsql/sddmy/Makefile
  * contrib/rddsql/sddpg/Makefile
  * contrib/hbpgsql/Makefile
    + Enabled on Darwin (for MacPorts).

  * include/hbdefs.h
  * contrib/hbfimage/fi_wrp.c
  * contrib/hbfimage/Makefile
    + Enabled on Darwin (for MacPorts).
    + Added ugly hack to make it compile on Darwin.

  * contrib/hbtpathy/Makefile
    + Enabled on Darwin.

2009-03-08 15:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Normalizing paths of cfg files.
    * CCPREFIX, CCPATH renamed to HB_CCPREFIX, HB_CCPATH
      (seems these are Harbour specific settings)

  * contrib/examples/uhttpd/home/testxmldb.html
    * Added Safari as unsupported browser.
      (BTW, what would it need to support Safari and Chrome, or
      WebKit browsers in general?)

2009-03-08 00:43 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    - Commented hb_GCAll() in main loop, I got newly one GPF randomly.
      In meanwhile I will do other tests.
    ! Reverted and corrected closing threads because with last changes
      finished threads were not correctly released.

2009-03-07 22:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed to recognize GT libs in dynlibhas= lines,
      and add them to core GT list.

2009-03-07 19:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbgete.c
    * added suport for BSD systems

  * harbour/contrib/examples/uhttpd/uhttpd.prg
    ! fixed private declaration - after last modification they were not
      declared for threads at all
    ! fixed close procedure, s_aRunningThreads and s_aServiceThreads
      where not protected at all in the moment when these variables
      variables where used inside aeval() and other threads were
      resizing them removing their pointers. In short word it was
      in practice impossible to cleanly close uhttpd server without
      GPF, deadlock or other bad side effects. I changed this code so
      these arrays are modified only by calling procedure.
      I do not know why it was written in such way but I guess it
      was workaround for xHarbour bugs. In xHarbour is race condition
      inside some functions like ThreadJoin() (RTE if thread finished
      just before ThreadJoin(<pThID>)). Harbour does not have such
      problems so I simply cleaned this code making it much simpler.
    * reactivated hb_gcAll( .T. ) in the main loop for tests.
      I made some tests with linux and current uhttpd works perfectly
      without any problems with and without hb_gcAll( .t. ).
      I haven't noticed any problems. I used this scripts to make
      tests:
         #!/bin/sh
         function GT_UHTTPD()
         {
            while curl http://127.0.0.1:8082/ > /dev/null
            do
               if ! curl http://127.0.0.1:8082/serverstatus > /dev/null
               then
                  exit
               fi
               # disable it if you want to increase traffic
               if ! curl http://127.0.0.1:8082/info > /dev/null
               then
                  exit
               fi
               if [ -f stop ]
               then
                  exit
               fi
            done
         }
         for i in `seq 10`
         do
            GT_UHTTPD &>/dev/null &
         done
         wait

      on three CPU machine. Please make some test with other systems.

2009-03-07 13:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/uhttpd/uhttpdgd.hbm
    + Added *nix GD lib name.

  * contrib/hbwin/win_prt.c
    ! WINPORTWRITE() potential GPF if non char type is passed as 2nd arg.

2009-03-07 12:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fix to prev (off by one).

2009-03-07 12:38 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed recently introd problem with path sep translation.

  * source/common/hbgete.c
    + Enabled Darwin support.

  * contrib/examples/uhttpd/modules/showcounter.prg
    ! Protected whole code with GD_SUPPORT.

2009-03-07 11:43 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * Updated uHTTPD (Work in progress)
      - Commented hb_GCAll() in main loop, I got one GPF randomly.
      * Fixed an error on threads number calculation

2009-03-07 02:53 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/classes.c
    * forbid some usage of __clsModMsg() and unblock some others
      It should make some xHarbour users using OVERRIDE METHOD happy
      but please remember it's still undocumented and unsupported
      functionality - use for your own risk.

2009-03-06 13:32 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Wrong prg at previous commit.

2009-03-06 13:14 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/Makefile
    + wvgtabpg.prg

  * harbour/contrib/gtwvg/wvtwin.ch
  * harbour/contrib/gtwvg/wvgparts.ch
    + Added constants to manage Tab Pages

  * harbour/contrib/gtwvg/gtwvg.c
    ! Changed the behavior if a GT is child of another GT.

  * harbour/contrib/gtwvg/wincallb.c
    ! Cleanups.

  * harbour/contrib/gtwvg/wvgsink.c
    ! Cleanup.
    % Fixed a potential nasty bug. Kept it in the code to refer if some
      problem arises in the future.

  * harbour/contrib/gtwvg/wvgwin.c
    ! Cleanup. Removed yet unfinished code.

  * harbour/contrib/gtwvg/wvgcombo.prg
    ! Cleanups and documentation update.

  * harbour/contrib/gtwvg/wvgcrt.prg
    ! Changed the style of modal GT console.

  * harbour/contrib/gtwvg/wvgwnd.prg
    % Rearrangement of methods.
    ! Updated to use either protocol - HB_ASCallBck() or SetProp()
      controllable by a #define constant.

  + harbour/contrib/gtwvg/wvgtabpg.prg
    + Started WvgTabPage() compatible with - XbpTabPage() of Xbase++.
      Unfinished but yet usable as demonstrated in demowvg.prg.

  * harbour/contrib/hbwin/hbwapi.h
    + Added wapi_par_WORD|DWORD() macros.

  * harbour/contrib/hbwin/wapi_commctrl.c
    + Added TabCtrl_* WINAPI macros as functions.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Updated to execute pure Xbase++ code in all its fury.
    + Added WvgTabPage() implementation via CUI+GUI demo in
      <Traditional><WVG Console with GCUI> menu option.

2009-03-06 21:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/dirdrive.c
    ! fixed ISDISK() and DISKCHANGE() return value - due to typo the
      logical value .T./.F. was reverted

2009-03-06 17:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/Makefile
    * Minor reordering.

  * config/win/poccce.cf
  * config/win/pocc.cf
    ! Turned off -Ox, left -Ot.
      "When it comes to optimizations, the -Ot option (in this case) is the much
       more important than -Ox. The -Ox option will only rarely find things to
       optimize, and in your case it will cause a GPF. I suggest you skip the -Ox
       option and just use the -Ot option for now...
       Pelle"

2009-03-06 17:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbinit.h
    * disabled HB_MSC_STARTUP in C++ MSVC builds.

2009-03-06 11:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/usrrdd/usrrdd.c
    ! removed unnecessary declaration

  * harbour/source/compiler/harbour.yyc
    ! removed unnecessary ";"

  * harbour/source/vm/classes.c
  * harbour/source/compiler/hbpcode.c
    * pacified some warnings for compilers which can detect that
      hb_errInternal() does not returns

  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/contrib/rddads/adsx.c
    * marked all places where we put some link time bindings after
      hb_errInternal() as: /* not executed, only to force linking ... */

2009-03-06 10:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed -gh switch detection and workings.
      (Francesco, pls check now allmod.hbm)
    + -gt switch can now be filtered. (-gtwin{win})
    ! -gui switch won't anymore add '-Wl,-mwindows' C compiler switch
      on *nix systems. Someone pls confirm this is right.
    * icc will use -vc postfixed .dlls. They seem to be binary
      compatible, but I didn't test.
    % Using __PLATFORM__UNIX macro where applicable.
    ! Ignoring -o Harbour option passed using '-prgflag:'

  * INSTALL
    + Added some details.

  * mpkg_win.bat
    ! Don't create install files if the make process returned
      with error.

  * source/lang/msg_tpl.c
    ! Removed ending ';'.

  * source/vm/Makefile
    + Added icc to generate maindllh.lib.

  * source/common/hbfsapi.c
    ! Removed obsolete 'extern hb_fhnd_ForceLink()'.

  * config/rules.cf
  * config/lib.cf
  * config/bin.cf
    % Compiling all .prg files with -n1 switch.

  * contrib/examples/uhttpd/uhttpdc.c
    * Cleaned Windows headers usage.
      #define HB_OS_WIN_USED is safe to use on all platforms,
      it just requests the Windows headers, and if compiled on
      Windows, it will #include them.

  * contrib/examples/uhttpd/uhttpd.prg
    + Automatically sets USE_HB_INET on non-Windows platforms.

  - contrib/examples/uhttpd/uhttpd-inet.hbm
  - contrib/examples/uhttpd/uhttpdgd-inet.hbm
    - Removed files no longer necessary.

  * contrib/examples/uhttpd/uhttpd.hbm
    + Added comment about -DUSE_HB_INET option.
    % Removed -lhbct

2009-03-06 04:25 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpdc.c
    * Fixed error in windows header include
    ; TOCHECK: Viktor, could you check if this is correct ? [DONE]

2009-03-06 04:13 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * Updated uHTTPD (Work in progress)
      * Updated to work in Linux.
      * Fixed PRIVATE use and threads as per Przemek suggestions
      * Marked WIN_SYSREFRESH() with USE_WIN_ADDONS define
      * Changed WIN_TIMEZONEBIAS() to hb_UTCoffset()
      * Changed WIN_SETENV() to hb_SetEnv()
      * Minor changes
  * harbour/contrib/examples/uhttpd/uhttpdc.c
    * Marked WIN_SYSREFRESH() as only windows function
    - Deleted WIN_SETENV()
    - Deleted WIN_TIMEZONEBIAS()
    + Added hb_UTCoffset()
  * harbour/contrib/examples/uhttpd/socket.c
    * Guarded for only windows build
  * harbour/contrib/examples/uhttpd/session.prg
    * Changed FileDate() to hb_FGetDateTime()
  * harbour/contrib/examples/uhttpd/uhttpd.ini
    * Minor fixes
  * harbour/contrib/examples/uhttpd/modules/showcounter.prg
  * harbour/contrib/examples/uhttpd/modules/tableservletdb.prg
    * fixed Linux build
  + harbour/contrib/examples/uhttpd/uhttpd-inet.hbm
  + harbour/contrib/examples/uhttpd/uhttpdgd-inet.hbm
    + Added as temporary files to build uhttpd under Linux
      (they haven't -gui flags that give error as per Przemek
      note, instead add -gtxwc as standard gui)
  ; NOTE:
    Przemek please check if hb_UTCOffSet() it is correct, then we have to move in
    other place.
    Tested all samples and they works.
    Modules build need to be fixed (Viktor?) but hrb are built. Need to be copied
    manually to ../home/cgi-bin

2009-03-06 02:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbpp.h
  * harbour/include/hbhash.h
  * harbour/source/pp/pplib2.c
  * harbour/source/pp/hbpp.c
  * harbour/source/lang/msghuiso.c
  * harbour/source/lang/msgskiso.c
  * harbour/source/lang/msgrukoi.c
  * harbour/source/lang/msghuwin.c
  * harbour/source/lang/msgzhgb.c
  * harbour/source/lang/msgskwin.c
  * harbour/source/lang/msgruwin.c
  * harbour/source/lang/msgelwin.c
  * harbour/source/lang/msgro.c
  * harbour/source/lang/msgpt.c
  * harbour/source/lang/msghriso.c
  * harbour/source/lang/msghrwin.c
  * harbour/source/lang/msgsliso.c
  * harbour/source/lang/msgbe866.c
  * harbour/source/lang/msghe862.c
  * harbour/source/lang/msgslwin.c
  * harbour/source/lang/msgcskam.c
  * harbour/source/lang/msggl.c
  * harbour/source/lang/msgtrwin.c
  * harbour/source/lang/msgeo.c
  * harbour/source/lang/msgbgiso.c
  * harbour/source/lang/msgbgwin.c
  * harbour/source/lang/msgskkam.c
  * harbour/source/lang/msges.c
  * harbour/source/lang/msguakoi.c
  * harbour/source/lang/msgzhb5.c
  * harbour/source/lang/msgeu.c
  * harbour/source/lang/msgpl852.c
  * harbour/source/lang/msgsr852.c
  * harbour/source/lang/msguawin.c
  * harbour/source/lang/msgde.c
  * harbour/source/lang/msgtr857.c
  * harbour/source/lang/msgru866.c
  * harbour/source/lang/msgcs852.c
  * harbour/source/lang/msgfr.c
  * harbour/source/lang/msgis850.c
  * harbour/source/lang/msgnl.c
  * harbour/source/lang/msghu852.c
  * harbour/source/lang/msgsk852.c
  * harbour/source/lang/msgplmaz.c
  * harbour/source/lang/msgca.c
  * harbour/source/lang/msgpliso.c
  * harbour/source/lang/msgbgmik.c
  * harbour/source/lang/msgplwin.c
  * harbour/source/lang/msgbg866.c
  * harbour/source/lang/msgid.c
  * harbour/source/lang/msgltwin.c
  * harbour/source/lang/msgptiso.c
  * harbour/source/lang/msgsriso.c
  * harbour/source/lang/msgel.c
  * harbour/source/lang/msgsrwin.c
  * harbour/source/lang/msgbewin.c
  * harbour/source/lang/msgdewin.c
  * harbour/source/lang/msghr437.c
  * harbour/source/lang/msghr852.c
  * harbour/source/lang/msgko.c
  * harbour/source/lang/msgua866.c
  * harbour/source/lang/msghewin.c
  * harbour/source/lang/msgit.c
  * harbour/source/lang/msgsl437.c
  * harbour/source/lang/msgsl852.c
  * harbour/source/lang/msghucwi.c
  * harbour/source/lang/msgcsiso.c
  * harbour/source/lang/msgcswin.c
  * harbour/source/lang/msgeswin.c
  * harbour/source/vm/macro.c
  * harbour/source/vm/hashes.c
  * harbour/source/vm/memvars.c
  * harbour/source/common/expropt1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/source/rdd/hbsix/sxutil.c
  * harbour/source/compiler/harbour.y
    * minor code cleanup:
      - pacified some warnings
      - added some missing declarations
      - removed redundant ;

2009-03-06 00:09 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbsqlit3/sqlite3/sqlite3.c
    * pacified one optimization warning

2009-03-05 21:52 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbwince.c
    ! added missing return statement

2009-03-05 21:24 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbbtree/tests/test.hbm
  * contrib/examples/guestbk/guestbk.hbm
  * contrib/examples/pe/pe.hbm
  * contrib/examples/dbu/dbu.hbm
  * contrib/examples/terminal/terminal.hbp
  * contrib/examples/hscript/hscript.hbm
  * contrib/examples/uhttpd/modules/allmod.hbm
  * contrib/examples/rl/rl.hbm
  * utils/hbdoc/hbdoc.hbm
  * utils/hbmk2/hbmk2.hbm
  * utils/hbtest/hbtest.hbm
  * utils/hbrun/hbrun.hbm
    - Removed -n switches no longer necessary.

2009-03-05 21:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added HB_SETENV()

  * utils/hbmk2/hbmk2.prg
    * Minor cleanups.

  * contrib/examples/uhttpd/uhttpd.hbm
    - Removed -n. It's now automatic.
    ; TODO: Remove the rest. [DONE]

  * INSTALL
  * doc/man/hbmk.1
  + config/win/icc.cf
  * utils/hbmk2/hbmk2.prg
    + Added Intel(R) C++ compiler support for Windows.
    + Added initial support also in hbmk2.
    ; This compiler is actively developed and its famous of
      generating the fastest running code of all C compilers.
      It also outputs an extremely detailed warning list.
      And the best thing: It compiled Harbour without a single
      hitch. hbtest is also running fine. hbmk2 is able to
      create executables.

2009-03-05 19:44 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/include/hbwince.h
  * harbour/source/common/hbgete.c
  * harbour/source/common/hbwince.c
    + added BOOL hb_setenv( const char * szName, const char * szValue )
      It sets or deletes (szValue==NULL) environment variable.
      Please add support for other compilers/OS-es or define
      unsupported platforms to eliminate TODO warning.
      For sure OS2 version have to be updated.

  * harbour/source/rtl/gete.c
    + added .prg function:
         HB_SETENV( <cEnvName>, [<cNewVal>] [, <lOsCP>] ) -> <lOK>
      which sets or deletes (when <cNewVal> is NIL) process environment
      variable <cEnvName>. <lOsCP> controls character translation to
      OS encoding. By default is enabled.
      TOFIX: <cEnvName> OS character encoding is missing in [HB_]_GETENV()

2009-03-05 18:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    * do not use modfl() in WinCE POCC builds. If MSVC also does not
      support if in WinCE builds then please change the condition to
      global HB_OS_WIN_CE

2009-03-05 16:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/man/hbmk.1
  * INSTALL
  * utils/hbmk2/hbmk2.prg
  - config/win/dmc.cf
  - config/os2/icc.cf
    - Removed win/dmc (Digital Marc C) C compiler from supported
      compiler list. The compiler was added last year, but
      it turned out to be too buggy for any kind of production
      work, and the compiler's development seem to have been
      stalled year ago.
      This is part of the pruning effort to leave here what's
      really needed and beneficiary for users. This will
      reduce the test matrix and give way to more important
      things.
    - Removed os2/icc. IBM Visual Age isn't available for OS/2
      since very long, and no one seems to use this compiler
      on this platform. Harbour support also wasn't tested
      since long.

2009-03-05 16:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/man/hbmk.1
  * INSTALL
  * utils/hbmk2/hbmk2.prg
  - config/win/icc.cf
    - Deleted win/icc from supported compiler list. This was
      never working and the compiler isn't available anymore
      for Windows. For AIX we could support it though.

  * INSTALL
    * Minor typos.

  * mpkg_win.bat
    + Added zip link. Made NSIS link more direct.

2009-03-05 15:10 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Deeper link to MinGW GNU Make download.

2009-03-05 14:38 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/man/hbmk.1
  * INSTALL
  * utils/hbmk2/hbmk2.prg
  * config/dos/global.cf
  - config/dos/rsx32.cf
  - config/win/rsxnt.cf
    - Pruned rsx32 and rsxnt compiler support. Both are dead
      product since long years. Their successor is MinGW on win,
      and DJGPP on dos.
    ; NOTE: More candidates for such pruning are:
            - dmc (buggy and compiler not updated)
            - xcc (based on very old version of pocc)
            Any opinions?

  * config/dos/global.cf
    - Cleaned emx, watcom, rsx, bcc16 related branches.

  * mpkg_win.bat
  * mpkg_win.nsi
    ! Exclusion of junk files is now done in batch, so
      the .zip is now also free from them.

2009-03-05 14:34 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdefs.h
  * harbour/source/vm/hvm.c
    * respect HB_START_PROCEDURE in all builds if such public
      function/procedure exists.
      Now whole Harbour code can be compiled with -n1 in all builds.
      Warning for Windows/DOS users:
         if you have main() function in your .prg code then it will be
         automatically detected as application startup entry just like
         in other systems.
         Otherwise the 1-st linked function will be used like so far.
    + added HB_START_PROC_STRICT macro which causes that HVM ignores
      HB_FS_FIRST attribute. Before this modification HB_START_PROCEDURE
      has such meaning.

2009-03-05 12:48 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbgtcore.c
    * small modification in instruction order as workaround for PellesC bug

2009-03-05 12:04 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/memvars.c
    ! added protection against pushing new private variable on HVM stack
      if such private variable is already created by the same function.
      Clipper also has such protection. This code illustrates it:
         proc main()
            memvar var1, var2, var3
            private var1 := "a", var2 := "b", var3 := "c"
            ? var1, var2, var3
            private var1 := "A", var2, var3 := "C"
            ? var1, var2, var3
            private var1 := NIL, var2, var3
            ? var1, var2, var3
         return
      compare Clipper and current Harbour results with old Harbour ones or
      with xHarbour results.

2009-03-05 11:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -prgflag:, -cflag:, -ldflag: options.
      To lessen the chance to mess up hbmk and underlying
      tools, only "-" and (on non-*nix) "/" prefixed values
      are accepted. Values are slash corrected by hbmk and
      filters can also be used.
    + -hbcc and -hblnk will now consider raw (unrecognized and
      prefixed) options as C/linker flags respectively. Values
      are slash corrected and filters can also be used.
    ; NOTE: Passing C/linker flags directly to underlying
            tools isn't a very good idea if you want to stay
            portable across tools and OSes. The only exception
            is the '-D' C flag which seems universally available
            on all C compilers.
    * "/" prefixed Harbour options will now be recognized
      in normal mode on non-*nix systems.
    ! DOS EOL char is now ignored in .hbp/.hbm files.
    + Added -bm owatcom C compiler switch in -mt mode for win/os2/linux.
      Pls test on os2/linux.
    * TOFIX: Attempted to add -gui support for win/owatcom. Harbour
             still complains about "It's not a GUI app". This compiler
             is a real bitch with tons of similarly looking options
             and no adequate online docs, so if someone feels like
             it, pls correct the TOFIX section in source.
             Until then GTWVT and GTWVG won't work with owatcom.
    ; NOTE: Most probably not, but I hope hbmk2 now qualifies for
            "basic functionality".

  * mpkg_win.nsi
    ! Fixed to not include some more unnecessary files generated
      by certain linkers along the build process.

2009-03-04 19:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/ppcomp.c
    ! #pragma -k? options are now case-insensitive like all
      other Harbour options.
      This completes this change:
      2008-08-06 22:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)

2009-03-04 18:42 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added warning msg if referenced .hbm file cannot be found.
    + filename without extension referenced with @ prefix
      will get an .hbm extension added automatically.
    ! Typo in prev fixed.
    * Filename updated in comment.

2009-03-04 17:59 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/man/hbmk.1
    * Updates. Work in progress.

  * utils/hbmk2/hbmk2.prg
    + Added man page, troff/groff links.
    ! Reversed the logic shared lib paths were included by.
    * Changed the meaning -hbcc again. Now it will switch hbmk2
      to a mode where it accept -c option. If -c is sensed, it
      will stop after calling the C compiler.
    ! gtwxc removed from default GT list for *nix systems.
      It should be added there by hbmk.cfg.

2009-03-04 15:02 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_gnu.sh
    * small cleanup

2009-03-04 14:12 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/man/hbmk.1
    * Updated. Blindly.
      Do someone know a tool which can render man pages and show
      it without having to install this file first?

  * utils/hbmk2/hbmk2.prg
    ! Fixed to not create .c stub if only C compilation is requested.
      In this case it won't do any entry function detection either.
    ! Attempt to fix core GT dependencies not automatically linked
      with gcc/*nix for gtsln/gtcrs/gtxwc (in static mode).
    % Not adding some (now unnecessary) system libraries when in
      shared mode for gcc family compilers on all platforms.
      See: 2009-03-04 12:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
    ; Please test above changes.

2009-03-04 12:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    * explicitly bind system libraries with harbour shared library.
      RPM/DEB packages should automatically detect these dependencies.
      Viktor, now you do not have to pass system libraries like
      m, dl, rt, pthread, socket, nsl, resolv, curses, slang, x11,
      wininet, ws2, commdlg, commctrl, uuid, ole32 ... when you create
      shared binaries by hbmk2 - all bindings are in harbour shared
      library. They are necessary only for static builds.

2009-03-04 10:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.sh
  * bin/postinst.sh
    + Added some level of cygwin support.
    ; TOFIX: .dlls are not generated.

  * make_gnu.sh
    * Change recently added '==' operators to '='.
    + Added link to GNU bash and POSIX shell docs.
      For Harbour we need to comply with the latter
      (at least for OS neutral script parts).

  * INSTALL
  * mpkg_win.bat
  * config/global.cf
    * Formatting.

2009-03-04 00:34 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgsink.c
    ! Pacified long-standing warning.

2009-03-04 09:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! gtnul removed from gt list. It's probably enough to
      not add it to liblist when passing -gtnul.

2009-03-04 08:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added few NOTEs on HB_INC_* usage.
    * Other minor clarifications and cleanups.

  * mpkg_win.bat
    ! Forces import lib generation off.

2009-03-04 08:28 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * mpkg_win.bat
    + Added cygwin support.

  * utils/hbmk2/hbmk2.prg
    * Updated some details on the help screen.
    - Removed gcc as a valid win target.

2009-03-04 08:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * HB_INC_OPENSSL sample corrected to point to real-life header dir.
    + Added cygwin compiler. gcc temply removed from doc list.
    % Removed unnecessary -n hbmk2 switches.
    + Added cygwin section.

  * utils/hbmk2/hbmk2.prg
    + Don't add gtnul as a real library.
      Please test, I've never used GTNUL.
    + Added support for cygwin compiler value.
      (works the same as current 'win/gcc' combination)
    ! Typo in rare error messages.
    ! Removed -no-cygwin option from cygwin gcc command line.

  * source/common/hbprintf.c
  * contrib/hbssl/sslrand.c
    ! Fixed to compile with cygwin.
    ; TOFIX:
      when running hbtest.exe:
      Error DBFNTX/1011  Write error: _hbtmp_.dbf
      Called from DBCREATE(0)
      Called from TEST_BEGIN(0)
      Called from MAIN(0)

  * make_gnu.sh
    + Added cygwin detection.

  * config/win/gcc.cf
  + config/win/cygwin.cf
    + Added separate cygwin make config.
      gcc is now just a map to cygwin.

2009-03-04 02:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * mpkg_win.bat
    ! Fixed dirs inside the .zip file.
    * Missing 'clean' added.

2009-03-04 01:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * make_gnu.bat
    - 'msvc' is no longer the default choice for win.
      HB_COMPILER must always be specified.

  * mpkg_win.bat
    + Removes tmp install dir before creating the build.
    + Added support for MinGW.
    + Added creation of .zip packages. (Info-ZIP zip.exe
      is required).

  * make_gnu.sh
  * INSTALL
    + on win/dos/os2 systems it will create HB_*_INSTALL dirs
      automatically (sync with make_gnu.bat).
    + on dos/os2 it will also automatically set HB_DOC_INSTALL.
    + on win/dos/os2 it will automatically convert
      HB_INSTALL_PREFIX and HB_*_INSTALL to use forward slashes.

  * utils/hbmk2/hbmk2.prg
    + Added gtnul to standard list of GTs.
      Attempt to solve the problem reported by Barry Jackson.
      Please test if this solves anything.

  * doc/Makefile
    ! Deleted files removed.

2009-03-04 00:53 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed problem reported by Istvan Bisz.
      Wrong function declarations were used in static mode.

2009-03-03 23:58 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * mpkg_win.bat
    ! Not polluting caller environment vars.
    * Changed to always override HB_INSTALL_PREFIX to a local temp dir.
      (to avoid picking up any other misc files accidentally present
      in a user supplied directory)
    + Added --deltemp option which will delete the temp install dir.
    + Completed requirement list.

  * mpkg_win.nsi
    * Formatting.

2009-03-03 23:56 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * Updated uHTTPD (Work in progress)
      ! Fixing memory usage attempt.
        Set PRIVATE vars to NIL when not more used and force
        collect memory with hb_GCAll( .T. )
      * Set Service Threads initial value to 0
      + Added support for directory index files
      + Added support for filters (WIP)
      * Added creation of error.log file in case of error
      * Minor changes
  * harbour/contrib/examples/uhttpd/cgifunc.prg
    * Fixed comment
  * harbour/contrib/examples/uhttpd/uhttpd.ini
    + DirectoryIndex entry
  ; NOTE: Please check me for memory usage. I have added a comment
          // FSG - memory check
          to interested lines. But I'm not sure if this solves the
          problem.

2009-03-03 22:22 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    * updated to work with CA-Cl*pper

2009-03-03 20:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Extended 'HOW TO ENABLE OPTIONAL COMPONENTS BEFORE BUILD'
      section a bit. (HB_DIR_* stuff still not included as it's
      early to document it yet, refer to the ChangeLog for info
      on it).

  * bin/hbmk.bat
    - Removed -n switch.

  + mpkg_win.bat
    + Added Windows installer creator script.
    ; TODO: Move all mpkg_*.* and related files to new /package dir.

  * mpkg_win.nsi
    + Changed to use HB_*_INSTALL envvars for source file locations.
    ! Fixed to exclude .tds files.
    + Will now will include version number, architecture and compiler
      in installer .exe name.
    + Default install destination will now include compiler name.

  * source/compiler/hbmain.c
  * source/compiler/cmdcheck.c
  * source/compiler/gencobj.c
  * source/compiler/hbusage.c
    + Marked -go option as HB_LEGACY_LEVEL2. Deprecated text
      shown on help screen.

  * utils/hbmk2/hbmk2.prg
    ! Fixed entry func autodetection problem with gcc when
      source file is passed without .prg extension.
      Reported by Maurilio.

2009-03-03 19:54 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbproces.c
    * check if some define constants exists before use - it should
      fix compilation in some WinCE builds, f.e. with MSVC

  * harbour/source/common/hbprintf.c
    * disabled _LIB_VERSION setting in DJGPP builds - if we need it
      for some reasons then it should be done in different which does
      not create multiple instances of this variable

2009-03-03 19:34 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/dir.cf
    * disabled parallel execution rules for make 3.79.1

2009-03-03 16:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/Makefile
    ! fixed compilation with C compilers which does not support MT mode
      (HB_MT=no) - it's seldom situation but may exists on some platforms,
      f.e. in *nixes when PTHREADS is not available

  * harbour/config/win/bcc.cf
    ! fixed compilation in SHELL environment
      (if exists ... del ...  is COMMAND.COM/CMD.EXE only command)

  * harbour/source/rtl/hbstrfmt.c
    ! casting for C++ compilation

  * harbour/contrib/xhb/dbf2txt.c
    ! casting for C++ compilation
    ! fixed two bad bugs which can cause GPF or some other bad results
      I'd seen after short check. I haven't analyzed this code carefully
      for others.

  * harbour/bin/postinst.sh
    ! fixed hb*-mkslib link in cross builds (MinGW/MinGWCE)

2009-03-03 10:42 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Now hbmk will show the filename of each processed .hbp file.
    * Changed -quiet meaning: it will now suppress above messages.

  * ChangeLog
    + Added new line for previous entry about new --version option.

2009-03-03 10:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    - Bison requirement moved next to the parser related option,
      to not cause any unnecessary confusion.

  * utils/hbmk2/hbmk2.prg
    * Made -hbcc and -hbcmp to behave the same. They'll no both
      generate objects.
    + Added --version option.

2009-03-02 23:59 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * debian/rules
  + doc/man/hbmk.1
  - doc/man/hbmake.1
    - Removed hbmake doc.
    + Added hbmk doc. (bare one)

  - doc/genhtm.rsp
  - doc/genhtm.lnk
  - doc/genhtm.bat
  - doc/genhtm.sh
  + doc/en/genhtm.lnk
  + doc/en/genhtm.sh
  + doc/en/genhtm.rsp
  + doc/en/genhtm.bat
    * Moved.

2009-03-02 23:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/Makefile
  - contrib/hbwhat
  + contrib/examples/hbwhat
  * contrib/examples/hbwhat/Makefile
    * Moved hbwhat to contrib/examples.

2009-03-02 23:27 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    - Removed HB, HBPP envvars as cross-compilation requirements.

  * make_gnu_os2.cmd
    + Now honors HB_USER_MAKEFLAGS setting.

  * utils/hbmk2/hbmk2.prg
    + Added -n2 Harbour switch as default.
    ; TODO: If this works out well, we can remove explicit
            -n switches from .hbm files. [DONE]

  * config/win/bcc.cf
    + Suppressing some OS commands to not pollute output.

2009-03-02 21:28 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcomp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbexpra.c
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/genc.c
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyh
  * harbour/source/compiler/ppcomp.c
  * harbour/source/compiler/hbdbginf.c
  * harbour/source/compiler/genhrb.c
  * harbour/source/compiler/hbusage.c
    ! fixed static variables indexes in the generated PCODE when static
      variables are declared inside extended codeblocks - in some cases
      wrong PCODE was generated
    ! fixed initialization PCODE for thread static variables declared
      inside extended codeblocks
    ! fixed modulename generated for debugger to always contain function name
      part for extended codeblock declared as file wide static variables.
      In such case "(_INITSTATICS)" is used as function name.
      Without it debugger does not register entering such codeblocks and
      GPFs.
    + added support for automatic adding 1-st function with the same name
      as compiled .prg file if some code statements are used before 1-st
      function/procedure declared explicitly in .prg file. Such mode can
      be enabled by -n2 new harbour compiler switch.

2009-03-02 18:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Compiler value unknown message now shows the actual value.

2009-03-02 17:53 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Automatically switching to -hbcmp mode if /gh switch is used.
    + In -hbcmp mode it will pass /o option directly to Harbour.

  - contrib/examples/uhttpd/modules/bldhrb.bat
  + contrib/examples/uhttpd/modules/allmod.hbm
    + Replaced batch file with hbmk2 make file. It will build
      all .hrb files and place them to cgi-bin dir.

2009-03-02 16:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - obj
  - make_b32.bat
  - make_b32.mak
  - make_gcc.sh
  - make_gcc.mak
  - make_vc.bat
  - make_vc.mak
  - common.mak
  - contrib/mtpl_b32.mak
  - contrib/mtpl_b32.bat
  - contrib/make_b32_all.bat
  - contrib/mtpl_gcc.mak
  - contrib/mtpl_gcc.sh
  - contrib/make_gcc_all.sh
  - contrib/mtpl_vc.mak
  - contrib/mtpl_vc.bat
  - contrib/make_vc_all.bat
  - contrib/hbmysql/common.mak
  - contrib/hbmysql/make_gcc.sh
  - contrib/hbmysql/make_b32.bat
  - contrib/hbmysql/make_vc.bat
  - contrib/gtalleg/common.mak
  - contrib/gtalleg/make_gcc.sh
  - contrib/gtalleg/make_b32.bat
  - contrib/gtalleg/make_vc.bat
  - contrib/hbct/make_b32.bat
  - contrib/hbct/make_gcc.sh
  - contrib/hbct/make_vc.bat
  - contrib/hbct/common.mak
  - contrib/hbodbc/common.mak
  - contrib/hbodbc/make_gcc.sh
  - contrib/hbodbc/make_b32.bat
  - contrib/hbodbc/make_vc.bat
  - contrib/xhb/make_b32.bat
  - contrib/xhb/make_gcc.sh
  - contrib/xhb/make_vc.bat
  - contrib/xhb/common.mak
  - contrib/hbtpathy/common.mak
  - contrib/hbtpathy/make_gcc.sh
  - contrib/hbtpathy/make_b32.bat
  - contrib/hbtpathy/make_vc.bat
  - contrib/hbgt/make_b32.bat
  - contrib/hbgt/common.mak
  - contrib/hbgt/make_gcc.sh
  - contrib/hbgt/make_vc.bat
  - contrib/hbmsql/common.mak
  - contrib/hbmsql/make_gcc.sh
  - contrib/hbmsql/make_b32.bat
  - contrib/hbmsql/make_vc.bat
  - contrib/hbsqlit3/common.mak
  - contrib/hbsqlit3/make_gcc.sh
  - contrib/hbsqlit3/make_b32.bat
  - contrib/hbsqlit3/make_vc.bat
  - contrib/hbole/common.mak
  - contrib/hbole/make_gcc.sh
  - contrib/hbole/make_b32.bat
  - contrib/hbole/make_vc.bat
  - contrib/hbmzip/make_b32.bat
  - contrib/hbmzip/common.mak
  - contrib/hbmzip/make_gcc.sh
  - contrib/hbmzip/make_vc.bat
  - contrib/hbblat/common.mak
  - contrib/hbblat/make_b32.bat
  - contrib/hbblat/make_vc.bat
  - contrib/hbfbird/common.mak
  - contrib/hbfbird/make_gcc.sh
  - contrib/hbfbird/make_b32.bat
  - contrib/hbfbird/make_vc.bat
  - contrib/hbapollo/common.mak
  - contrib/hbapollo/make_gcc.sh
  - contrib/hbapollo/make_b32.bat
  - contrib/hbapollo/make_vc.bat
  - contrib/hbziparc/common.mak
  - contrib/hbziparc/make_gcc.sh
  - contrib/hbziparc/make_b32.bat
  - contrib/hbziparc/make_vc.bat
  - contrib/hbnf/make_b32.bat
  - contrib/hbnf/make_gcc.sh
  - contrib/hbnf/make_vc.bat
  - contrib/hbnf/common.mak
  - contrib/hbcurl/common.mak
  - contrib/hbcurl/make_gcc.sh
  - contrib/hbcurl/make_b32.bat
  - contrib/hbcurl/make_vc.bat
  - contrib/rddsql/common.mak
  - contrib/rddsql/sddmy/common.mak
  - contrib/rddsql/sddmy/make_gcc.sh
  - contrib/rddsql/sddmy/make_b32.bat
  - contrib/rddsql/sddmy/make_vc.bat
  - contrib/rddsql/sddpg/common.mak
  - contrib/rddsql/sddpg/make_gcc.sh
  - contrib/rddsql/sddpg/make_b32.bat
  - contrib/rddsql/sddpg/make_vc.bat
  - contrib/rddsql/sddfb/common.mak
  - contrib/rddsql/sddfb/make_b32.bat
  - contrib/rddsql/sddfb/make_vc.bat
  - contrib/rddsql/make_gcc.sh
  - contrib/rddsql/make_b32.bat
  - contrib/rddsql/make_vc.bat
  - contrib/hbhpdf/common.mak
  - contrib/hbhpdf/make_gcc.sh
  - contrib/hbhpdf/make_b32.bat
  - contrib/hbhpdf/make_vc.bat
  - contrib/rddado/common.mak
  - contrib/rddado/make_gcc.sh
  - contrib/rddado/make_b32.bat
  - contrib/rddado/make_vc.bat
  - contrib/gtwvg/make_b32.bat
  - contrib/gtwvg/make_gcc.sh
  - contrib/gtwvg/make_vc.bat
  - contrib/gtwvg/common.mak
  - contrib/hbpgsql/common.mak
  - contrib/hbpgsql/make_gcc.sh
  - contrib/hbpgsql/make_b32.bat
  - contrib/hbpgsql/make_vc.bat
  - contrib/hbclipsm/make_b32.bat
  - contrib/hbclipsm/common.mak
  - contrib/hbclipsm/make_gcc.sh
  - contrib/hbclipsm/make_vc.bat
  - contrib/rddads/make_b32.bat
  - contrib/rddads/common.mak
  - contrib/rddads/make_gcc.sh
  - contrib/rddads/make_vc.bat
  - contrib/hbfimage/common.mak
  - contrib/hbfimage/make_gcc.sh
  - contrib/hbfimage/make_b32.bat
  - contrib/hbfimage/make_vc.bat
  - contrib/hbgd/make_b32.bat
  - contrib/hbgd/common.mak
  - contrib/hbgd/make_gcc.sh
  - contrib/hbgd/make_vc.bat
  - contrib/hbmisc/make_b32.bat
  - contrib/hbmisc/common.mak
  - contrib/hbmisc/make_gcc.sh
  - contrib/hbmisc/make_vc.bat
  - contrib/hbgf/hbgfwin/common.mak
  - contrib/hbgf/hbgfwin/make_b32.bat
  - contrib/hbgf/hbgfwin/make_vc.bat
  - contrib/hbtip/make_b32.bat
  - contrib/hbtip/common.mak
  - contrib/hbtip/make_gcc.sh
  - contrib/hbtip/make_vc.bat
  - contrib/hbwin/make_b32.bat
  - contrib/hbwin/common.mak
  - contrib/hbwin/make_gcc.sh
  - contrib/hbwin/make_vc.bat
  - contrib/hbbmcdx/common.mak
  - contrib/hbbmcdx/make_gcc.sh
  - contrib/hbbmcdx/make_b32.bat
  - contrib/hbbmcdx/make_vc.bat
  - contrib/hbvpdf/common.mak
  - contrib/hbvpdf/make_gcc.sh
  - contrib/hbvpdf/make_b32.bat
  - contrib/hbvpdf/make_vc.bat
  - contrib/hbssl/common.mak
  - contrib/hbssl/make_gcc.sh
  - contrib/hbssl/make_b32.bat
  - contrib/hbssl/make_vc.bat
  - contrib/hbbtree/common.mak
  - contrib/hbbtree/make_gcc.sh
  - contrib/hbbtree/make_b32.bat
  - contrib/hbbtree/make_vc.bat
  - contrib/hbcrypt/make_b32.bat
  - contrib/hbcrypt/common.mak
  - contrib/hbcrypt/make_gcc.sh
  - contrib/hbcrypt/make_vc.bat
  - contrib/hbwhat/make_b32.bat
  - contrib/hbwhat/make_gcc.sh
  - contrib/hbwhat/make_vc.bat
  - contrib/hbwhat/common.mak
  - contrib/examples/hbsqlit2/common.mak
  - contrib/examples/hbsqlit2/make_gcc.sh
  - contrib/examples/hbsqlit2/make_b32.bat
  - contrib/examples/hbsqlit2/make_vc.bat
    - Deleted components of "non-GNU" (MSVC, BCC and GCC
      specific) make systems. Leaving GNU Make as the
      unified make platform for Harbour.
      This also means that Harbour is now much portable
      in the sense that with a few rare exceptions all tasks should
      be carried exactly the same way across the OSes.
      Platform specific script file statistics before:
      - Bash          54  (end-user oriented: 49 - including package creation)
      - Windows/DOS  105  (end-user oriented: 90)
      - OS/2           2  (end-user oriented:  1)
      Platform specific script file statistics now:
      - Bash          14  (end-user oriented:  9 - including package creation)
      - Windows/DOS   19  (end-user oriented:  4)
      - OS/2           2  (end-user oriented:  1)
      Some of these will be further cleaned (hbdoc related: 5,
      hbmk compatibility: 2)

2009-03-02 16:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * contrib/hbfbird/readme.txt
    * Updates.

2009-03-02 11:55 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/global.cf
    ! Corrected GNU Make doc link.

  * INSTALL
    * Updates.

  * contrib/xhb/regexrpl.prg
  * contrib/gtwvg/gtwvg.c
    ! Fixed warnings.

2009-03-02 09:43 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapi.h
  * source/rtl/hbstrfmt.c
    * C level function renamed to hb_strFormat().
    + Added to headers, exported.

2009-03-02 09:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/Makefile
  * include/hbextern.ch
  + source/rtl/hbstrfmt.c
    + Added HB_STRFORMAT() sprintf()-like formatting.
    + Added hb_StrFormat() C level function.
    ; Work of Mindaugas sent to the list, with some minor
      cleanups applied. Please test on your platform/compiler.

  * contrib/examples/uhttpd/uhttpd.prg
  * contrib/examples/uhttpd/cgifunc.prg
  * contrib/examples/uhttpd/session.prg
  * contrib/examples/uhttpd/uhttpd.hbm
    * xhb compatibility cleanups.
    - xhb lib and header dependency removed.

  * utils/hbmk2/hbmk2.prg
    * Changed so that libs won't inherit their .hbm file paths.
    + Embedded .hbm files will inherit their parents dir.

2009-03-02 08:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Updates.

  * source/vm/Makefile
    - Removed sensing HB_MT value and building pure MT version
      of Harbour. This is to avoid yet another unnecessary
      variation of Harbour builds. For MT, just simply hbvmmt lib
      should be linked.

2009-03-01 23:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/xhb/regexrpl.prg
    + Added HB_REGEXREPLACE() from xhb. Work of Francesco.
      (missed from prev commit)

  * contrib/xhb/common.mak
    * Updated.

2009-03-01 23:54 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/examples/uhttpd/hbmk.bat
  + contrib/examples/uhttpd/uhttpdgd.hbm
  * contrib/examples/uhttpd/uhttpd.prg
  * contrib/examples/uhttpd/readme.txt
    * Added separate GD enabled .hbm file.
    * Remaining hbmk.bat features moved to .prg code and into readme.txt.

  * utils/hbmk2/hbmk2.prg
    + Added support for @ and .hbm parameters inside .hbm files.
      Currently three levels deep nesting in allowed.

  * contrib/xhb/Makefile
  + contrib/xhb/dbf2txt.c
    + Added DBF2TXT() function from xhb.
    ; TODO: RPC support and HB_SERVICE*() API ? [DONE]

2009-03-01 18:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/uhttpd/hbmk.bat
  * contrib/examples/uhttpd/uhttpd.hbm
    + Changed to build without using hbmk.bat.
      (socket.c is now always linked)

2009-03-01 18:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * make_b32.bat
  * doc/gmake.txt
  * bin/postinst.bat
  * bin/hb-mkdyn.bat
  * make_gnu.bat
  * contrib/hbfimage/readme.txt
  * contrib/examples/uhttpd/modules/bldhrb.bat
  * source/vm/Makefile
  * source/rtl/console.c
  * source/compiler/gencobj.c
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/examples/winapi.hbp
  - config/win/bcc32.cf
  + config/win/bcc.cf
    * Long time TODO done: Renamed bcc32 compiler name to bcc.
      bcc32 is still accepted by make_gnu.bat, but will be
      removed in the future, so it's recommended to update
      your local settings to use:
      set HB_COMPILER=bcc

  - config/dos/bcc16.cf
    - Deleted bcc16 compiler support. I didn't work since ages,
      and Harbour doesn't support 16-bit compilers anyway.

2009-03-01 17:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/bcc32.cf
    ! Fix to prev.

2009-03-01 16:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/bcc32.cf
    ! Fixed to use response files with tlib, to avoid command line
      length limits on some systems.

  - tests/run_prg.bat
  + tests/run.bat
  - tests/run_prg_all.bat
  + tests/run_all.bat
    * Renamed to short name.

2009-03-01 15:27 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/hbct/ctflist.txt
  - contrib/hbodbc/odbc.txt
  - contrib/hbodbc/readme.txt
  - contrib/hbpgsql/readme.txt
  - contrib/hbgd/readme.txt
  * contrib/hbgd/tests/counter.prg
  * contrib/hbgd/Makefile
  - contrib/hbvpdf/readme.txt
  + contrib/hbvpdf/ChangeLog
    * Some cleanups.

  * doc/gmake.txt
    * '-r' requirement removed.

  * doc/codestyl.txt
    * Grammar.

  - doc/funclist.txt
  - doc/howtomak.txt
  - doc/hrb_faq.txt
  - doc/hbmake.txt
  - doc/lang_id.txt
    - Deleted obsolete files.

  * INSTALL
    + Added Bison version required.
    * Minor typo.

  * contrib/hbvpdf/tests/files/test.txt
    * Changed text to lorem ipsum.

  * utils/hbmk2/hbmk2.prg
    * Two line ending spaces removed from output.

  * mpkg_win.nsi
    ! Fixed to include subdir for doc dir.

  * config/global.cf
    + Added comment from doc file.

2009-03-01 13:58 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/include/hbstack.h
  * harbour/source/vm/hvm.c
  * harbour/source/vm/estack.c
  * harbour/source/vm/memvars.c
    ! fixed __M[V]CLEAR()/ __M[V]RESTORE() to be exactly Clipper compatible
      and do not release PUBLIC GetList value. Here it's small example
      which illustrates current behavior and exploits bug in previous
      version:
         memvar getlist
         proc main()
            getlist:="public:getlist"
            ? getlist
            private getlist:="private:getlist"
            ? getlist
            CLEAR MEMORY
            ? getlist
         return

  * harbour/source/compiler/gencc.c
    + added Harbour exception to the license - it's mine code with
      few lines added/modified by Ryszard and Viktor. I hope they do
      not have anything against.

  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/hbident.c
    * minor formatting

2009-02-28 15:51 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/common.mak
  * harbour/contrib/gtwvg/Makefile
    + Added wvgcuig.c

  * harbour/contrib/gtwvg/gtwvg.h
    + Added PHB_GOBJS structure to hold static CUI enhancement elements.

  * harbour/contrib/gtwvg/gtwvg.c
    ! Implemented hb_gt_wvt_PaintGObjects( PHB_GTWVT pWVT, RECT *uRect )
      just before EndPaint() call.

  + harbour/contrib/gtwvg/wvgcuig.c
    + Implementation of pure static controls with Clipper like
      approach leaving away the details of heavy GTWVG base
      protocol.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Implemented simplified GUI look to a CUI console.
      Now it is possible TO build console dialogs pretty fast.
      This implementation assumes that appln will NOT use
      overlapping screens as with SaveScreen()/RestScreen()
      functions. Instead a new window will be opened to host
      overlapping screens.

      Please look at <Traditional><WVG Console with GCUI> to
      look at this functionality. The code goes below:

      /*    PROCEDURE GCUIConsole()
               LOCAL dDate      := ctod( "" )
               LOCAL cName      := Space( 35 )
               LOCAL cAdd1      := Space( 35 )
               LOCAL cAdd2      := Space( 35 )
               LOCAL cAdd3      := Space( 35 )
               LOCAL nSlry      := 0
               LOCAL nColGet    := 8
               LOCAL GetList    := {}
               LOCAL cLabel     := "VOUCH, that GROWS with you"

               SetColor( "N/W,N/GR*,,,N/W*" )
               CLS
               hb_gtInfo( HB_GTI_WINTITLE, "WVG Simplified GUI Console" )

               @ MaxRow(), 0 SAY PadC( "GTWVG Simplified GUI Console", maxcol()+1 ) COLOR "W+/B*"

               @  2, nColGet SAY "< Date >"
               @  5, nColGet SAY "<" + PadC( "Name", 33 ) + ">"
               @  8, nColGet SAY "<" + PadC( "Address", 33) + ">"
               @ 15, nColGet SAY "< Salary >"

               @  3, nColGet GET dDate
               @  6, nColGet GET cName
               @  9, nColGet GET cAdd1
               @ 11, nColGet GET cAdd2
               @ 13, nColGet GET cAdd3
               @ 16, nColGet GET nSlry PICTURE "@Z 9999999.99"

               // The only additional calls to render your console GUI
               //
               // The GETLIST  : This can be embedded via  @ GET preprocessor command
               aEval( GetList, {|oGet| Wvg_BoxGet( oGet:Row, oGet:Col, Len( Transform( oGet:VarGet(), oGet:Picture ) ) ) } )

               // And thsese can be another @ SAY commands
               Wvg_BoxRaised( 1, 2, 18, 49, { -5,-5,5,5 } )

               Wvg_BoxRecessed( 1, 2, 18, 49 )

               Wvg_BoxGroupRaised( 2, 4, 17, 47, { -7,-7,7,7 } )

               // Instruct GT to Repaint the Screen with GUI elements.
               Wvt_InvalidateRect( 0, 0, maxrow(), maxcol() )

               // Issue the read
               READ

               RETURN
      */

2009-02-28 13:51 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/tests/demoxbp.prg
    ! Fixed to honor recent GTWVG changes.

2009-02-28 12:12 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu_os2.cmd
  * make_gnu.sh
    + Setting HB_DOC_INSTALL dir.
      (the .sh sets it only for mingw, please test)

  * INSTALL
  * contrib/hbhpdf/make_b32.bat
  * contrib/hbhpdf/make_vc.bat
  * contrib/hbgd/make_b32.bat
  * contrib/hbgd/make_vc.bat
    ! Old typos in two HB_INC_* examples.

2009-02-28 10:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    * Cleaned the section dealing with GNU Make on Windows.
      ---
      3.) Make sure to have GNU Make. We recommend the one distributed
          with MinGW. To get it:
          - Use your search engine with 'mingw gnu make'
          - Use this link:
            http://sourceforge.net/project/showfiles.php?group_id=2435
          If you have it, you have three choices:
          - Put mingw32-make.exe anywhere in your PATH. (recommended)
          - Put mingw32-make.exe in Harbour source root dir.
          - Rename mingw32-make.exe to make.exe and put it in
            your PATH _before_ your compiler tools.
      ---

  * make_gnu.bat
    + mingw32-make.exe is now also accepted in Harbour's source
      tree root.

2009-02-28 10:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Reenabled and fixed call to entry function autodetection
      for gcc.
    + Now all Harbour dirs are always normalized (stripped).

2009-02-28 09:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed yesterday's -fullstatic patch. Now it should work.

  * make_b32.bat
  * make_vc.bat
    - Disabled automatic .dll builds to expose the
      pure make_gnu.bat interface.
    * Some refininements to vc version.

2009-02-28 01:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added win/owatcom.
    + Added contrib control options.

  * bin/postinst.bat
    % Optimized, cleaned.

  * mpkg_win.nsi
    - Turned off checkbox in "view readme" option.

2009-02-27 23:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + mpkg_win.nsi
    + Added NSIS Windows installer script.
      Needs to be inserted into build creation process,
      which is completely missing yet from SVN. Anyhow
      it's tested and working well. At this moment it should
      be run from a freshly created dir created with
      'make_gnu.bat install'.
      You can find the result here:
      http://www.syenar.hu/harbour/harbour-1.1.0dev-win32-msvc.exe

  * utils/hbrun/hbrun.prg
    + Added -v option which simply runs '? hb_version()' after
      startup.

  * make_gnu.bat
    + Added init of HB_DOC_INSTALL.

  * doc/license.txt
    - Removed SVN header to be in full sync with /COPYING.

  * INSTALL
    * Minor cleanups.

2009-02-27 22:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added '-Wl,-static' option for gcc/*nix when -fullstatic
      hbmk option is used. I hope this is fine. On my Ubuntu,
      this says: '/usr/bin/ld: cannot find -lgcc_s'.
    - Removed debug trace line left in.

  * contrib/Makefile
    ! Fixed commenting hbwhat.

2009-02-27 21:12 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
   * INSTALL
     * Minor.

   * make_gnu.bat
     ! Typo.

2009-02-27 20:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added more information to Windows section.
      This will need a cleanup already.
    + Added links, header.

  * make_gnu.bat
    + Added automatic default of HB_INSTALL_PREFIX on NT
      and above systems. This means this setting is now
      option. If not set, it will install under the
      source tree.

2009-02-27 20:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu.bat
    + Added autodetection of mingw32-make.exe. If found in
      PATH, it will be used instead of make.exe.
      This way the build process is much less resistant of
      environment configuration. If this works out, I'll
      lax the rules in INSTALL.

  * utils/hbmk2/hbmk2.prg
    * Minor internal cleanup to previous.

2009-02-27 19:59 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added text to specifically tell to rename mingw32-make.exe
      to make.exe if the former is found in a distro.
      BTW most probably mingw32-make.exe would also make it, but
      our make_gnu.bat file wants make.exe, and there is no
      easy way to check (but can be done).

  * utils/hbmk2/hbmk2.prg
    ! Fixed silly typo preventing object files to get their
      proper extension in -hbcc mode.
    * Minor internal change to avoid changing extensions twice
      on the same string, since this may cause loss.

2009-02-27 19:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * make_gnu.bat
  * make_gnu.sh
    + Added listing of supported C compilers.
    + Added list of available built-time options.
      (may be incomplete).
    ! Added -n options to hbmk2 calls.
    - Removed similar content from script files.

  * make_gnu.bat
    - Removed --install-with-dll option.
      Use set HB_BUILD_DLL=yes instead.

  * utils/hbmk2/hbmk2.prg
    ! Fixed swapped -hbcc and -hbcmp meaning.
    + Don't deal with compiler autodetection if called with
      -hbcmp option. In this mode a C compiler isn't needed
      at all.

2009-02-27 17:54 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu.bat
    ! Fixed to work when DLLs weren't requested.

2009-02-27 16:52 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + harbour/contrib/xhb/xhbcls.ch
    + added header file which xHarbour like OVERRIDE / EXTEND CLASS
      definitions.
      Warning: using this functionality may break logical inheritance
               scheme or even some internal class definitions in both
               Harbour and xHarbour compilers. In Harbour it's unsupported
               feature added here only for strict XHB compatibility.

2009-02-27 16:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * bin/postinst.bat
    * Formatting.

2009-02-27 15:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added more information.
      (everyone trying to build Harbour from source
      should read this first.)

  * bin/postinst.bat
    + Added option to copy import libs belonging to
      external tools for msvc and bcc32 to HB_LIB_INSTALL.
      This is to keep this debated, but convenient feature
      for the GNU-make world, until we find some better way
      to deal with it. Now it's self contained, detached from
      all important Harbour parts. And most importantly:
      You don't have to use it, if you don't want to.
      Now, if you want, set HB_DIR_IMPLIB to "yes" and
      setup your HB_DIR_* dirs to the roots of the external
      tool dirs, like this (adjust to your environment):
      ---
      set HB_DIR_IMPLIB=yes
      set HB_DIR_ADS=C:\devl\ADS910\ACESDK
      set HB_DIR_ALLEGRO=C:\devl\allegro-4.2.2
      set HB_DIR_APOLLO=C:\devl\Apollo-6.1.0.4
      set HB_DIR_BLAT=C:\devl\blat-2.6.2
      set HB_DIR_CURL=C:\devl\curl-7.19.0
      set HB_DIR_FIREBIRD=C:\devl\Firebird-2.1.1
      set HB_DIR_FREEIMAGE=C:\devl\FreeImage-3.11.0
      set HB_DIR_GD=C:\devl\gd-2.0.34
      set HB_DIR_LIBHARU=C:\devl\libharu-2.1.0
      set HB_DIR_MYSQL=C:\devl\mysql-5.0.67
      set HB_DIR_OPENSSL=C:\devl\openssl-0.9.8j
      set HB_DIR_PGSQL=C:\devl\pgsql-8.3.3
      ---
      (This may be tweaked in the future, so I don't
      guarantee any compatibility for this stuff)

2009-02-27 12:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.bat
  * make_vc.bat
  * make_gcc.sh
    * Redirected old "non-GNU" build starters to the mainstream
      Harbour GNU Make system, with some measures to keep
      compatibility. It's not 100% compatible, but the most
      important settings and aspects should be similar.
      It's recommended for everyone to switch using the GNU
      make system natively, as the non-GNU one will be removed
      in the future, the old way is now legacy and not supported.

  * INSTALL
  * make_gnu.bat
    + Added some more information.

2009-02-27 12:38 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/postinst.sh
    ! fixed hb-mkslib link. Please test this version in MSys.

2009-02-27 12:17 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu.bat
    + Made them accept HB_BUILD_DLL=yes.
    ! Some typos.

2009-02-27 11:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
  * make_gnu.bat
  * config/win/global.cf
    * Renamed HB_DLL to HB_BUILD_DLL, which makes this GNU make
      setting compatible with old non-GNU make.

2009-02-27 10:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
  * make_gnu.bat
    + Added --install-with-dll option. This will build
      and install Harbour with .dlls. Some examples:
      --- for msvc:
      call "%ProgramFiles%\Microsoft Visual Studio 9.0\VC\vcvarsall.bat"
      set PATH=C:\devl\make-3.81;%PATH%
      set HB_INSTALL_PREFIX=C:\devl\hbvc-1.1
      call make_gnu.bat --install-with-dll > out.txt 2>&1
      ---
      --- for bcc32:
      set PATH=C:\devl\bcc55\bin;%PATH%
      set PATH=C:\devl\make-3.81;%PATH%
      set HB_COMPILER=bcc32
      set HB_INSTALL_PREFIX=C:\devl\hbb32-1.1
      call make_gnu.bat --install-with-dll > out.txt 2>&1
      ---

  * make_gnu.bat
  * make_gnu_os2.cmd
    + Will now automatically create the install destination dirs.

    ; TODO: Could someone please add this feature to make_gnu.sh? [DONE]

  * bin/postinst.bat
  * bin/hb-mkdyn.bat
    * Moved building dll flavoured executables to postinst,
      so they will be rebuilt even if HB_DLL!=yes but .dlls
      are available.

  * contrib/Makefile
    + Added support for option: HB_CONTRIBLIBS=no.
      This will disable building any Harbour contribs.
      (no need to resort to hacks here anymore)

  * utils/hbmk2/hbmk2.prg
    * Minor on help screen.

2009-02-27 08:41 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Now all dirs of input files referred to through .hbm
      make files will be adjusted with the .hbm path as passed
      on the command line. This allows to use .hbm files without
      switching to their host dirs:
      'hbmk2 examples/hello/hello.hbm'
      (internal logic also allows to display error messages
      pointing to the exact location where the error
      was detected)
    + Added simple macro substitution engine. Not used yet.
    % Minor optimizations.

  * bin/hb-mkdyn.bat
  * source/vm/Makefile
  * utils/hbmk2/hbmk2.prg
  + config/win/msvcia64.cf
    + Added support for IA64 architecure with MSVC.
      (actual compilation untested as it needs MSVC Team System)

  * bin/hb-mkdyn.bat
    % Now using .hbm files.

2009-02-26 22:51 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
    ! Removed TREEVIEWITEM structure definition as it is fixed by Przemek.

2009-02-26 16:10 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Some refinements is setting Window's style through
      SetWindowLong(Ptr)().

  * harbour/contrib/gtwvg/wvgwin.c
    % Removed some test code.

2009-02-25 18:57 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
    ! Updated to honor Box Caharcter Changes as in GTWVT by Przemek.
    ! Updated HB_GTI_CLOSABLE and HB_GTI_RESIZABLE behavior as in GTWVT
      by Viktor.

2009-02-26 20:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    + Added hbrun-dll.exe generation for msvc64.

2009-02-26 19:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    * Minor cleanup.

2009-02-26 19:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    * Cleaned tool outputs.
    + Added hbmaindllh lib to included liblist.
      (dunno what this serves, but we had it in non-GNU make)
      Do we need this at all?
    + Added support for msvc64 dll name.
    * Some tweak to owatcom, but it's just guessing, it still
      doesn't work.
    + Added generating hbrun-dll executable.

  * source/vm/hvm.c
  * source/vm/mainstd.c
    * Random tweak for owatcom/win dll support without success.
      Best result so far is:
      "Unrecoverable error 9012: Can't locate the starting procedure: 'MAIN'"

  * source/vm/Makefile
    + Added mainddllp generation for msvc, msvc64, bcc32, owatcom.

  * source/vm/maindllp.c
    + Added msvc64 and msvcia64 .dll names.

  * source/vm/extrap.c
    * Minor tweak to use alternate (documented) CPU detection macro.

  * utils/hbmk2/hbmk2.prg
    + Added msvc64 .dll name.
    * Removed automatic addition of hbcommon lib for shared
      mode for win compilers.

  * utils/hbtest/hbtest.hbm
  * utils/hbrun/hbrun.hbm
    + Added make files.

2009-02-26 12:54 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    ! Attempt to fix SetMode() always returning FALSE when
      the window isn't open yet. Please test, I didn't.

2009-02-26 12:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    ! Fixed HB_GTI_CLOSABLE when set before window initialization.

2009-02-26 12:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/rules.cf
  * config/win/global.cf
  * config/lib.cf
  * config/bin.cf
    * Make files changed to:
      - add Harbour option -n1 for all lib .prgs.
      - add Harbour option -n for all binary .prgs.
      - use HB_GCMODE to override -gc mode for binaries.
      - add C -DHB_DYNLIB option when HB_DLL envvar is set to 'yes'.
    ; This means that now 'set HB_DLL=yes' setting works as planned,
      and will compile Harbour to allow the creation of .dlls
      and will also create those (msvc, bcc32, owatcom).
      (MinGW has been covered before these changes already.)
    ; TOFIX: .dlls still need tweaking to work properly.
             owatcom doesn't create usable binaries when
             using HB_DLL=yes.

  * config/win/owatcom.cf
    % Removed DOS hack.

  * bin/hb-mkdyn.bat
    ! Fixes to recent changes.

2009-02-26 12:02 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtwvt/gtwvt.h
  * harbour/source/rtl/gtwvt/gtwvt.c
    + added support to set codepage for box drawing characters using
      HB_GTI_BOXCP as numeric value just like in HB_GTI_CODEPAGE for
      non UNICODE builds. In Windows CP encoding has even higher priority
      then font name so such functionality is necessary for users who
      have to keep normal and box font synced
    % do not allocate separate font handle for BOX drawing characters
      when they have the same encoding as normal characters
    ! keep box and normal font handles synced and free then on exit
    ! respect HB_GTI_RESIZABLE settings when new window is created

2009-02-26 10:24 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    + Moving .lib and .exp (if they are generated) files
      to LIB dir.

  * source/vm/maindllp.c
    + Added owatcom flavour of .dll name.

  * contrib/hbwin/win_misc.c
    + Added WAPI_GETLASTERROR(), WAPI_SETLASTERROR(), WAPI_SETERRORMODE().

  * utils/hbmk2/hbmk2.prg
    + Added TODO to create temp .c files in temp location.
      Looks this can create a few problems (-hbcc, .ppo output
      location when -p is used by user).
    + '/o' flavour of -o option is now ignored on non-*nix
      systems to make sure users cannot mess up the hbmk process
      flow.
    * -o option modified to reset any previous explicit -o settings.
    * Some minor internal renames, comments.
    + Added new hbmk.cfg / .hbp option: 'shareddef='. This can
      change the default state of shared/static setting, so it
      can be used by installers or user to override default
      behaviour. NOTE: HB_SHARED envvar can also be used.
    * Changed hbmk.cfg lookup preferences to this:
      1. $HOME/.harbour
      2. /etc/harbour
      3. <hbmkdir>/../etc/harbour
      4. <hbmkdir>/../etc
      5. <hbmkdir>
      (NOTE: I've deleted /etc as etc/harbour seems superior
             and we already store a .def file there.
             I've also deleted /usr/local/etc)

2009-02-25 18:57 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! More types of consoles. Mainly modal windows implementation.

2009-02-25 15:35 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbwin/wapi_winuser.c
    ! Commented out WAPI_GETSCROLLBARINFO().

2009-02-25 23:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.cmd
  * bin/postinst.bat
  * bin/postinst.sh
    - Removed creation of hb*.bat files.

  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
  * contrib/make_vc_all.bat
  * contrib/Makefile
    * Disabled hbwhat.

  * contrib/gtwvg/wvggui.c
    ! Fixed a few warnings.

2009-02-25 21:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/memvars.c
    + added support for reading FoxPro .mem files - Clipper compatibility
    ! fixed bug introduced in my recent modifications in .mem files writing
    ! fixed very old bug which disabled writing to .mem files strings
      longer then 32Kb

2009-02-25 20:17 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/gtwvg/wvgwin.c
    ! added dirty hack for borland C compiler and #define NONAMELESSUNION
      in oledlg.h

  * harbour/config/linux/owatcom.cf
    ! added missing support for HB_USER_LDFLAGS

2009-02-25 09:25 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgpaint.prg
    ! Removed THREAD STATIC implimentation hack introduced
      when behavior of THREAD STATIC was different.

2009-02-25 16:27 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/hbbmcdx.h
    ! updated to current rdd subsystem.

2009-02-25 15:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/msvcce.cf
    ! Typo corrected in prev modif after testing feedback.
      Thanks Jose.

2009-02-25 15:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    ! Typo in prev.

  * config/darwin/install.cf
  * config/win/install.cf
    + Added same as Linux workaround to not let install phase
      fail because copy on install error.

2009-02-25 14:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.sh
    ! Fixed hb_mkslib link generation.
  * contrib/gtwvg/wvgwin.c
    ! Fixed owatcom error. (removed Windows structure redefinition)
  * utils/hbmk2/hbmk2.prg
    * Some screen messages slightly refined.
  * doc/whatsnew.txt
    * Minor.
  * ChangeLog
    * Fixed dates.

2009-02-25 13:54 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/bmdbfcdx.c
    ! updated to current rdd subsystem.

2009-02-25 13:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * INSTALL
    + Added MinGW + msys specific entry.

  * bin/postinst.sh
    + Added generation of hbcc.bat, hbcmp.bat, hblnk.bat
      to be in complete feature sync with the non-msys method.
      NOTE: non-msys method isn't recommended.

  * make_gnu_os2.cmd
    + Added automatic HB_*_INSTALL setup based on HB_INSTALL_PREFIX
      to be in sync with the rest of Harbour.

  * make_gnu.bat
    ! Fixed forward slashed to backslashes.
    * Changed default compiler from mingw to msvc.

2009-02-25 11:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Refined autodetection of msvc to not be confused by
      watcom binary dir in the path.
    ! Refined autodetection of owatcom by also checking for
      WATCOM envvar. Thanks Petr Chornyj for the hint.
    % Removed hack to not prioritize MSVC compiler detection,
      so it's now handled just like the others.

2009-02-25 11:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + INSTALL
    + Installation docs kept simple.
    ; TODO: Add it to install packages. Test and extend as needed.

2009-02-25 10:42 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    + Added dos/windows (djgpp/mingw) autodetection.
    ! Cleaned help screen.
      (missed from previous entry)
    * Other minor cleanups and fixes on help screen.

2009-02-25 10:41 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.cmd
  * bin/postinst.bat
  * bin/hb-func.sh
    + Added arch= and comp= variables to hbmk.cfg.
      I plan to use these for autoconfiguration.

  * make_gnu_os2.cmd
  * make_gnu.bat
    - Removed built in output redirection to make them in sync
      with the bash flavour. Users can easily redirect it themselves.

  * utils/hbmk2/hbmk2.prg
    + Formally added icc.

  * config/win/msvcce.cf
    ! Untested fixes for msvcce in GNU make.

2009-02-25 03:37 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + harbour/config/linux/icc.cf
  * harbour/config/linux/gcc.cf
  * harbour/bin/hb-func.sh
  * harbour/bin/postinst.sh
  * harbour/source/common/hbver.c
    + added support for Intel(R) C/C++ compiler

  * harbour/bin/postinst.sh
    % use hb-mkdyn symlink instead of regenerating it as hb-mkslib
      It will work also in DOS/Windows (MSys/DJGPP emulates ln -s ...)

  * harbour/source/vm/thread.c
    * removed all references to HB_THREAD_EQUAL()/HB_THREAD_SELF() in
      non MT builds

  * harbour/source/rtl/console.c
    ! fixed default color setting in hb_dispOutAtBox()

  * harbour/contrib/gtwvg/wvggui.h
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wincallb.c
  * harbour/contrib/gtwvg/wvgsink.c
    ! fixes for C++ compilation:
      - this is reserved word in C++ - do not use it as variable name
      - class is reserved word in C++ - do not use it as variable name
      - use macros to hide differences between C and C++ WinAPI
      - casting

2009-02-24 23:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed warning.

2009-02-24 22:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * On *nix platform hbmk.cfg is now first checked for
      in /usr/local/etc, then in /etc and after that in
      hbmk2's dir. Please advise if there are other such
      global config dirs to check on different platforms.

2009-02-24 22:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-win-spec
  * harbour-wce-spec
  * harbour.spec
  * bin/hb-func.sh
  * utils/hbmk2/hbmk2.prg
    * hbmkcfg.hbp file renamed to the clearer: hbmk.cfg
      Same rules apply, the format is .hbp, which is also
      made clear on the hbmk2 help screen.

      hbmk2 and hbmk.cfg now effecticely replaces harbour.cfg,
      which can now be considered obsolete, along with the
      /go option. If someone knows some real-life tasks
      which can be done with /go+harbour.cfg, but cannot
      with hbmk2, please speak up.

2009-02-24 22:12 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-win-spec
  * harbour-wce-spec
  * harbour.spec
    + Added hb-mkslib compatiblity file to distros.

2009-02-24 21:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapi.h
  * source/pp/hbpp.c
  * source/vm/cmdarg.c
  * source/main/harbour.c
    + Added hb_verHB_ARCH(), hb_verHB_COMP() to
      retrieve build time HB_ARCHITECTURE and HB_COMPILER
      settings.

  * include/hbver.ch
  * source/rtl/version.c
    + Added new hb_version() information:
      hb_version( HB_VERSION_BUILD_ARCH )
      hb_version( HB_VERSION_BUILD_COMP )

  * utils/hbmk2/hbmk2.prg
    + Using above hb_version() values to find out the exact
      build time architecture/compiler instead of guessing.

2009-02-24 18:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/fm.c
    ! Fixed compilation error in dlmalloc with pocc64.

  * config/win/pocc64.cf
  * config/win/msvc64.cf
    * Cleanup.

  * config/win/gcc.cf
    ! Added gdi32 to system lib list.

  * config/win/mingw.cf
  * config/win/mingwce.cf
    * Minor sync with each other.
    % Two duplicated lines removed from mingwce. I hope these
      weren't intentional.
      ---
      AR = $(CCPREFIX)ar
      ARFLAGS = $(HB_USER_AFLAGS)
      ---

2009-02-24 17:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/msvcce.cf
    ! Fixed another cl.exe occurence to be compatible with
      older MSVC versions.

2009-02-24 17:07 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.sh
    + Added 'hb-mkslib' creation for compatibility.
      NOTE: This name is deprecated and will be removed in next
            major release (1.2). Update your environment to
            use the name: 'hb_mkdyn'.

2009-02-24 16:54 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed last minute typo.

2009-02-24 15:07 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
  * utils/hbmk2/Makefile
  * common.mak
    + Added -DHBMK_INTEGRATED_COMPILER compile time option
      to enable integrated Harbour compiler. Experimental,
      please test. This results is bigger executable (obviously)
      but may be more efficient on some platforms.
    % Using .exe extension for external commands on non-*nix.
    * Using slightly different format to echo commands on
      screen, they are now printed in a new line and they are
      not put between quotes.

2009-02-24 15:07 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added autodetection for pocc64.

2009-02-24 13:53 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/pocc64.cf
    % Optimized to use pocc.cf and modify that slightly for x64.

2009-02-24 13:49 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbsetup.h
    * minor modifications in macros
    * disabled some GCC function attributes when ICC is used

  * harbour/source/pp/ppcore.c
    * casting

  * harbour/source/vm/fm.c
    * destroy dlmalloc mspace in hb_xexit() when USE_DL_PREFIX is used
      otherwise call malloc_trim(0) to at least reduce allocated memory

2009-02-24 13:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/msvc.cf
  * config/win/msvc64.cf
    ! Fixes to previous.

2009-02-24 13:27 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
  * make_gnu.bat
  * make_gnu.sh
  * utils/hbmk2/hbmk2.prg
  * config/win/msvc.cf
  + config/win/msvc64.cf
    + Added separate HB_COMPILER for msvc x64 mode.
      This allows to keep both the 32 and 64-bit builds
      built in parallel.
      NOTE: This is only supported with GNU Make.

  * utils/hbmk2/hbmk2.prg
    + Added autodetection of msvc64.
    + Added pocc64 and msvc64 support in self-detection
      code.

  * bin/hbmk.bat
    + Added -n to stay compatible with former hbmk.bat.

2009-02-24 10:20 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    * Updates.
    ! Correction made to entry:
      2009-02-24 01:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)

  * utils/hbmk2/hbmk2.prg
    * Attempt to add .dll support for win/owatcom.
    ; TOFIX: This happens:
             Warning! W1023: no starting address found, using 00401000

2009-02-24 02:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdyn.bat
    + Added Open Watcom .dll building.
    ; Quickest and most clean case so far.

2009-02-24 01:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Tweaked to only include path in shared lib name on *nixes,
      if Harbour is installed on a system location.
    ! Forgot to add bin dir to lib path in shared mode in gcc/*nix.
      (correction: this wasn't needed, and wasn't finally committed)
    ! Fixed macro substitution order for {DB}.
    ! Tweaks for library name forming on gcc family.
      The applied rule is to prepend -l, delete lib prefix and extension,
      when the libname doesn't have a path in it, if it has, the libname
      will be passed as is (without -l, with lib prefix and extension).

2009-02-23 23:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbgd/gdwrp.c
    ! Added required Windows initialization for GD headers.
      This become an issue because I've recently removed
      windows system headers (which weren't needed for
      local code) from this file.

2009-02-23 22:29 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added -map support for owatcom on all platforms.

2009-02-23 22:17 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed bug in path normalization which stripped leading
      (root) path separator. Guy, could you please retest now?

  - bin/hb-mkdll.bat
  + bin/hb-mkdyn.bat
  * bin/postinst.bat
  * harbour-win-spec
  * harbour-wce-spec
  * harbour.spec
  * bin/postinst.sh
  * bin/hb-func.sh
  - bin/hb-mkslib.sh
  + bin/hb-mkdyn.sh
    * Synced the name of these tools with similar function,
      name also converted to 8.3.
    ; NOTE: lib/dll creation functionality (which is the
            difference now between .sh and .bat flavour) may
            once in the future be implemented in hbmk2. See
            existing TODO there.

2009-02-23 19:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    % Normalizing autodetected paths when system locations
      are used on *nix and always for win/dos/os2.
    ! Fix to MSVC resource handling.

2009-02-23 19:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/estack.c
    ; added TODO note for TSD handles recovery system to document dynamic
      (not static) TSD access as public API. Otherwise it's a risk to give
      such interface for 3-rd party code developers due to potential
      resource leak.

  * harbour/contrib/hbct/ctwin.c
    + added support for thread local current window pointer in CT Windows.
      Warning: each new thread uses window 0 as default.

  * harbour/contrib/hbct/files.c
    + added MT support FILESEEK(), FILEATTR(), FILESIZE(), FILEDATE().
      Warning: now each thread operates on it's own directory handle.
      The directory handle is open until is not scanned to the end by
      subsequent calls to FILESEEK() without parameters or by explicit
      call with NIL or empty string "" as file name, f.e.: FILESEEK( NIL ).
      Such method of closing directory handle is compatible with original
      CT3 behavior.

2009-02-23 19:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for resources on Windows platform.
      mingw, owatcom, msvc, bcc32 are supported. mingw and
      owatcom support single resources only.

  * config/rules.cf
    + Added owatcom .err files to the clean list. Maybe there
      is more appropriate place to put this. Please correct it.

2009-02-23 09:04 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
    + #define NONAMELESSUNION
      It may fix OW' few warnings. Please test.

2009-02-23 16:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdll.bat
    - Removed no longer relevant NOTE. BCC tlib can actually
      handle dots in pathname if put between quotes, which
      is how it is.

  * contrib/gtwvg/gtwvg.h
  * contrib/gtwvg/wvggui.h
    ! Applied former owatcom fix to GTWVG, too.
    ! Applied more casting fixes shown by owatcom 1.8.

    ; Remaining errors and warnings posted on the list.

2009-02-23 15:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    ! Protected command from pre-NT systems.

  * harbour-win-spec
  * harbour-wce-spec
  * harbour.spec
    + hbmkcfg.hbp added to distros (I hope to all of them).

  * ChangeLog
    * Updated statuses of a few pending items.

2009-02-23 14:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed bug which made gtwvt the default GT for mingw.
    ! Fixed to create final exe in current dir if no output
      filename was specified and the first input file
      contained a path.
    * Changed to use version-less harbour shared lib names
      on *nixes.
    ! Fixed to pass full path with harbour.so to gcc.
      (even when Harbour isn't run from a system location)
    ! Fixed compilation/linking/cleanup if an input file
      wasn't in current dir.
    * Temp stub file is now created in system default temp dir,
      instead of the current one.
    + Harbour shared lib path is normalized when Harbour
      is found on system locations. (so '*/bin/../lib/' becomes
      '*/lib')
    * Better I hope handling of .so/.dylib/.sl/.dll files passed
      on the command line.

  * bin/hb-mkdll.bat
    ! Fixed typo in Borland MT .dll name.
    ! Fixed to not include maindll.obj, maindllp.obj in
      Borland .dlls.
    * Minor formatting and cleanup on internal names.
    + Added checking for source lib existence, showing
      message if not found.
    + Better user feedback.

  * bin/postinst.bat
    + Added running hb_mkdll.bat at the end of the build
      process. For now users have to use 'set HB_DLL=yes'
      to enable this features. It's experimental yet,
      see previous comments.

  * source/vm/Makefile
    + Now generating hbmainstd and hbmainwin for remaining
      (non-mingw and non-mingwce) compilers. MSVC and BCC
      need this for -shared linkage, I'm not sure about the
      rest, anyhow we can disable it for other compilers
      if it isn't needed in future.

  * bin/hb-func.sh
    % Refined hbmkcfg.hbp setup to better detect conditions.

  * contrib/hbcurl/hbcurl.c
    ! Pacified this only one new gcc 4.3.3 warning.

  * config/win/gcc.cf
  * config/win/mingw.cf
    + Added -mtune=pentiumpro gcc optimization.

2009-02-22 19:32 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvg3stat.prg
  * harbour/contrib/gtwvg/wvgcheck.prg
  * harbour/contrib/gtwvg/wvgcombo.prg
  * harbour/contrib/gtwvg/wvgdarea.prg
  * harbour/contrib/gtwvg/wvglistb.prg
  * harbour/contrib/gtwvg/wvgmle.prg
  * harbour/contrib/gtwvg/wvgpushb.prg
  * harbour/contrib/gtwvg/wvgradio.prg
  * harbour/contrib/gtwvg/wvgscrlb.prg
  * harbour/contrib/gtwvg/wvgsle.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgtreev.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Code cleanup.
    ! Implemented generic callback functionality taking
      use of SetProp()/GetProp() functions of WINAPI. It
      effectively eliminates the use of AsCallBack()
      function which has been discussed as non-scalable
      in multi-processor architect.

    ; TODO: To use hb_gcAlloc() mechanism to hold the
            codeblock. Please review wvgwnd():SetWindowProcCallback()
            and wvgwin:WVG_SetWindowProcBlock( ::hWnd, bBlock ).
            I did try but could not resolve it properly.

2009-02-22 22:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
    ! Added workaround for WinCE mode.

  * config/win/msvcce.cf
    ! Fixed cl name when building with older MSVC version.

2009-02-22 21:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkdll.bat
    + Added Borland C/C++ .dll building.
      It has the same requirements as MSVC.
      NOTE: Due to tlib bug, it won't work if the HB_LIB_INSTALL
            path contains '.' chars. I can add a workaround,
            but at the cost of speed.

2009-02-22 21:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * utils/hbmk2/hbmk2.prg
    + Previous workaround changed to generic solution, keeping
      all Harbour lib specific external lib knowledge inside
      hbmk2.
      Guy, if you can please retest.

  * bin/hb-mkdll.bat
    * Minor in comment.

2009-02-22 19:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.sh
    % Deleted part generating hbfm/hbfmmt libs. Now this is
      done my GNU make.

2009-02-22 18:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
    ! Fixed stupid typos after testing on Linux.

  * contrib/examples/terminal/terminal.hbp
  * contrib/examples/terminal/trm_appn.hbm
    * Minor change.

2009-02-22 18:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbbtree/tests/test.hbm
  * contrib/examples/guestbk/guestbk.hbm
  * contrib/examples/pe/pe.hbm
  * contrib/examples/terminal/trm_appn.hbm
  * contrib/examples/hscript/hscript.hbm
  * utils/hbdoc/hbdoc.hbm
  + utils/hbmk2/hbmk2.hbm
    + Added -n switch to .hbm files.

  * contrib/examples/uhttpd/hbmk.bat
  + contrib/examples/uhttpd/uhttpd.hbm
    + Moved most make params to new .hbm file.

2009-02-22 17:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/lib.cf
  * config/bin.cf
    + Added -n to Harbour flags to bin.cf.
    + Added -n1 to Harbour flags to lib.cf.
    ; TOFIX: The former works, the latter doesn't.
             Could someone please help why is this
             happening? [DONE]

  * utils/hbmk2/hbmk2.prg
    - Removed -n from default Harbour switches.
    ; TODO: Add prgflags=-n to all .hbp files. [NOT NEEDED ANYMORE]
    ; TODO: Add -n to all .hbm files. [DONE]
    ; TODO: Add .hbp file to dirs where there are .prgs
            needing -n flag. [NOT NEEDED ANYMORE]

  + bin/hb-mkdll.bat
    + Added .dll creation for GNU-make. Not yet enabled,
      only MSVC supported, and by the nature of the
      wonderful world of Microsoft, whole Harbour needs
      to be compiled with HB_USER_CFLAGS=-DHB_DYNLIB to
      make this work. -DHB_DYNLIB has some drawbacks
      though: export table will be generated for all
      executables made from these .libs, .exp/.lib will
      also be generated for all executables.
    ; TODO: Solve to compile Harbour lib .prgs using
            -n1 switch. (needed for .dll, and this
            one has only befenefits for other scenarios) [DONE]
    ; TODO: Add hb-mkdll.bat to postinst.bat. [DONE]
    ; TODO: Add BCC support, if possible. [DONE]
    ; TODO: Rename hb-mkslib.sh to 8.3 name and sync
            name with the .bat version (not necessarily
            mkdll, but something short.) [DONE]

  * bin/hb-func.sh
    ! Added system libs for optional components included
      in the harbour dynlib. I plan to make some more
      changes here, but this should fix missing system
      libs with shared option enabled in hbmk2.

  * contrib/examples/dbu/dbu.hbm
  * contrib/examples/rl/rl.hbm
    + Added -n.

  * utils/hbdoc/Makefile
  * utils/hbmk2/Makefile
  * utils/hbtest/Makefile
  * utils/hbi18n/Makefile
  * utils/hbrun/Makefile
    - Removed explicit -gc0 -n override.
      Should now be set automatically for all binaries.

2009-02-22 14:59 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtxwc/gtxwc.c
    + added support for HB_GTI_CLOSABLE and HB_GTI_RESIZABLE.

2009-02-22 13:06 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtxwc/gtxwc.c
    ! fixed typo which caused GPF when palette was set before console window
      initialization

  * harbour/source/rtl/gttrm/gttrm.c
    * reset console color palette to default on application exist

2009-02-22 00:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgtoolb.prg
    ! Enabled disabling debug calls (requiring xhb) in non-debug mode.

  * contrib/gtwvg/tests/gtwvg.hbp
    - Removed xhb lib.
    + Added mt=yes line.

  * source/vm/extrap.c
    ! Extended line buffer used for module listing. 64 bytes
      just isn't enough in 64-bit mode.

2009-02-22 00:17 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fix to -mwindow/-mconsole switch handling for MinGW.

2009-02-21 22:11 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/examples/dbu/dbu.hbm
  - contrib/examples/dbu/hbmk.bat
  * contrib/examples/dbu/readme.txt
  + contrib/examples/rl/rl.hbm
  - contrib/examples/rl/hbmk.bat
  * contrib/examples/rl/readme.txt
    + Replace Win/DOS specific batch files with hbmk make
      file, so now all platforms are equally supported.

  - contrib/examples/dbu/hb_dbu.dif
  + contrib/examples/dbu/dbu.dif
    * Renamed.

2009-02-21 13:00 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgutils.c
  * harbour/contrib/gtwvg/wvgwin.c
    ! Pacified more warnings on 64bits.

2009-02-21 19:31 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * harbour.spec
  * mpkg_tgz.sh
    % Removed -O3 user gcc switch. It's the default in all
      gcc family .cf files.

2009-02-21 18:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed forming Harbour installed paths when alternate
      *nix dir layout is detected.
      Thanks to Guy also. Please retest.

2009-02-21 18:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed recent typo in shared names for *nix systems.
      Thanks Guy.

2009-02-21 09:28 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wincallb.c
    ! Pacified warnings on 64 bits.

2009-02-21 09:01 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
    ! Pacified warnings on 64 bits.

2009-02-21 07:28 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgsink.c
    ! Pacified warnings on 64 bits.

2009-02-21 07:28 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvggui.c
    ! Pacified warnings on 64 bits.

2009-02-21 07:15 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgdarea.prg
    ! WIN_FillRect() => WVG_FillRect()
      Namespace lashed with hbwin/win_prn1.c.

2009-02-21 15:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + source/vm/fm
  + source/vm/fm/Makefile
  + source/vm/fmmt
  + source/vm/fmmt/Makefile
  * source/vm/Makefile
    + Added hbfm, hbfmmt lib generation which works for
      all compilers, not just gcc family.
    ; Please review.
    ; TOFIX: For some reason the locally added C flags
             appear twice. Couldn't find out why.

2009-02-21 14:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * utils/hbmk2/hbmk2.prg
    ! Some three bad typos in recent commit.
    ! Fixed the way build-default GT is supplied via hbmkcfg file.
      (via gtdef= line)
    ! Fixed to fill gtdef= line only if GT was overridden at
      build time. Previously it was filled with gtstd, which
      is wrong.
    ! Temporarily disabled automatic entry point detection,
      as it needs more complicated management because there
      needs to be a second C compiler pass. We should try
      to use some other means to implement this feature IMO.

2009-02-21 13:55 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fix to prev.

2009-02-21 13:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added internal function to check for linked GTs, so that
      platform/compiler code can act accordingly.
    + Added required system libs and paths for gtsln, gtcrs
      and gtxwc. So now it's 100% hbmk script compatible.
      This effectively added support for gtsln and gtcrs
      (for *nix only). ncur194 support is missing though,
      plus maybe some build-time modifier switches aren't
      honored (the WITHOUT* ones, but I'm not positive that
      all of them have to be handled on hbmk2 level).
      Probably some clever autodetection can be used on
      hbmk2 level for such cases.
    ! Fixed to not be case-sensitive when dealing with GT names.
    + Added NOTE about 3rd party/contrib stuff handling.
    * Minor formatting.

    ; NOTE: What remains is cross compilation support, which
            is a new topic. -n support tweak, if needed.
            And testing, adding missing compilers, fixing
            existing ones if needed, syncing with build-time
            switches, clean Win32 system libs.

  * contrib/gtwvg/tests/gtwvg.hbp
    + Readded gui=yes to better separate compontents.
  * ChangeLog
    * Entry marked done.

2009-02-21 11:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/tests/gtwvg.hbp
    * Moved gtwvg from libs= to gt=. gui=yes no longer needed.
    * Added xhb, Windows libs.

2009-02-21 10:57 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    - Removed HBMK_NO_GTCGI macro.
    * Cleanups and fixes to GT list handling after recent
      changes.
    * Minor rearrangement on help screen.

2009-02-21 10:02 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Debug line removed.

2009-02-21 09:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgtoolb.prg
    ! Fixed unused variable.

2009-02-21 09:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added automatic selection of GUI/non-GNU modes for
      core GTs. This can be overridden by user by
      putting -gui (and related switches) _after_ -gt switch.
      In normal cases this isn't necessary.
    + Invalid GT names are ignored, instead of creating
      compile error in the stub.
    + GTs and FM are now requested from C stub just like they
      are in hbmk script. This makes it possible to override
      GT even for apps that already uses an official method
      to choose a GT. hbmk2 uses function call also to set GT.
    - Removed .prg stub.
    ! Fixed recent potential RTE when using darwin.

2009-02-21 00:15 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgutils.c
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvtwin.ch
  * harbour/contrib/hbwin/hbwapi.h
  * harbour/contrib/hbwin/wapi_commctrl.c
  * harbour/contrib/hbwin/wapi_winbase.c
  * harbour/contrib/hbwin/wapi_winuser.c
    ! Mostly warning fixes for 64bits.

      ; Viktor, review me and plese send list of warnings
        left after this.

2009-02-21 08:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/hvm.c
    + Added hb_vmSetLinkedMain() function to replace direct
      access to exported variable hb_vm_pszLinkedMain.
      (it's not a public call and caller should always pass
      a string literal).
    * hb_vm_pszLinkedMain -> s_vm_pszLinkedMain and made static.

  * utils/hbmk2/hbmk2.prg
    ! Not adding 'dllimport' for externs in C stub when
      MSVC is used, to avoid compiler warning mentioned in
      previous entry.

  * utils/hbmk2/hbmk2.prg
  * bin/hb-func.sh
    * Updated for above change.

  ; TODO: Convert GT defaulting to function call too. [DONE]

2009-02-21 08:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbfimage/fi_wrp.c
    ! Added hack to trick around FreeImage.h header not to
      #include <inttypes.h> on Borland compilers. Maybe newer
      than 5.8.2 versions have it, so this can be made BCC version
      dependend.

2009-02-21 08:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
    + Added similar to HB_DONT_DEFINE_BOOL hack: HB_DONT_DEFINE_LONG.
      (needed until we clear up our types.)

  * contrib/hbfimage/fi_winfu.c
  * contrib/hbfimage/fi_wrp.c
  * contrib/hbfimage/Makefile
  * doc/whatsnew.txt
    % Deleted #includes/macro checks not necessary.
    ! Disabled body of fi_winfu.c when not compiled under
      Windows. This fixes one Linux compilation error.
    % Replaced HB_OS_WIN_USED with HB_DONT_DEFINE_BOOL and
      HB_DONT_DEFINE_LONG, moved foreign headers before
      Harbour headers, added non-Harbour Windows detection
      in fi_wrp.c (I'm not sure that is necessary), so that
      it now compiles on both Windows and non-Windows (Linux
      tested) systems.
    + Renabled on Linux in Makefile.
    ; Please review/test these changes.

2009-02-20 17:23 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgsink.c
    ! Fixes as per Przemek's observations.
      ;TOREVIEW :    return( ( ULONG ) ( ( MyRealIEventHandler * ) this )->count < 0 ?
                                      ( ( MyRealIEventHandler * ) this )->count : 0 );
       Actually I was having some problem with some old active-x
       and was trying to fix that, that is why, now I do not remeber...

2009-02-21 01:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbgd/gdwrp.c
    % Deleted #includes not necessary.

2009-02-21 01:11 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/hbusage.c
    ! Fixed to not show -n option as '(default)' on help screen.
      -n isn't the default in Harbour, nor in Clipper.
      Please review me.

  * utils/hbmk2/hbmk2.prg
    + Added -main=<id> option to override starting function/procedure
      name. Using the method from hbmk script, but made portable
      to all compilers. Can we add somewhat more official method
      to set this up? Preferably .prg level, but even a function
      call seems better, as with current method, MSVC complains
      with this warning:
      "hbsc_2nwvzg.obj : warning LNK4217: locally defined symbol \
         _hb_vm_pszLinkedMain imported in function __hb_hbmk_setdef_"
         [FIXED]
    + Added code to only accept valid Harbour identifier as
      -main= value.
    + Added first module detection.
    + Enabled code to automatically find entry function in first
      module and make it the app entry point. This is very serious
      hack dealing with lots of internals.

  * source/compiler/cmdcheck.c
    * Typo in comment.

2009-02-20 22:41 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbgd/gdwrp.c
    ! Fixed double implementation of GDIMAGEELLIPSE().
      The so far inactive .c version got enabled by recently
      making lib version detection automatic, which made it
      collide with the existing .prg implementation.
      Left the .prg one active because it works regardless
      of the lib gd version. Francesco, please verify me.
    - Deleted disabled, probably older copy of GDIMAGEELLIPSE()
      from .c source.

  * utils/hbmk2/hbmk2.prg
    * Help screen update.

2009-02-20 19:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
    ! Fixed gtalleg lib name.
    % Removed explicit harbour -gc0 option. This is now the default.

  * utils/hbmk2/hbmk2.prg
    + Added fmstat/nofmstat support.
    ! Minor fix to allow more freedom in formatting inside .hbp files.
    ! Fixed to delete prg stub file when using -hbcc option.
    + Added Copyright section for Przemek for the ideas I've
      borrowed from hbmk script and contributed code.
    + Detect platform default GT and only create stub if the
      user selected GT is different.
    + Now using versions shared libs on *nixes.
    + Mode detection now regards the ending or the beginning
      of the original name, so prefixed or postfixed names will
      also be recognized: xhbcmp, hbcmpx, myhbcmp.
    ! Fixed to multiple -gt options override each other so the
      last one will be effective.
    ! Fixed error message text when stub cannot be created.
      Furthermore in this case hbmk will now quit.
    + Also using '-Wl,--start-group' for bsd (from hbmk script).
    + Added '-bind_at_load', '-multiply_defined suppress' gcc
      options for darwin shared mode (from hbmk script).
    * Changed stub name to hbstub (from hbmkgt).
    * pthread lib handling streamlined based on hbmk script,
      but this probably needs further cleaning as the script
      isn't clear to me here.
    + Added fmstat/nofmstat switch. It most probably needs some
      tweaking, as the conditions seem rather sophisticated here.
      TODO: For non-*nix/non-gcc platforms (msvc/bcc32/owatcom
            most importantly).
    + Added system libs for darwin if gtcrs or gtsln are selected.
      (nslang isn't a default lib here, so it won't work on plain
      installations, slang however will).
    + Missed from previous commit: Fix so that -nohbp doesn't
      prevent processing the global config .hbp file.
    ! Fixed typo in prev commit.

  * utils/hbmk2/examples/contrib.hbp
    - Removed hbtip as it's not fully portable (dos).
  + utils/hbmk2/examples/contribf.hbp
    + Added complete database of contrib, with
      availability information.

  * contrib/xhb/Makefile
  * contrib/hbmsql/Makefile
  * contrib/hbmzip/Makefile
  * contrib/hbziparc/Makefile
  * contrib/hbnf/Makefile
  * contrib/hbmisc/Makefile
  * contrib/hbvpdf/Makefile
    * Formatting.

2009-02-20 18:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtxwc/gtxwc.c
  * harbour/source/rtl/gttrm/gttrm.c
    * reverted the RGB numeric color definition to be compatible
      with Windows GTs which seems to use RGB values directly.
      Users who use to define RGB colors in hex notation (0xRRGGBB)
      should now remember that it's BGR definition (0xBBGGRR).
      Why MS have to make everything in reverted way?

2009-02-20 15:47 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
    ! Two typos.
    - Disabled slang/ncurses lib stuff.

  * utils/hbmk2/hbmk2.prg
    ! Fixed to put a space after -o gcc option for darwin.
    ; This makes hbmk2 work under darwin (for basic cases).

2009-02-20 15:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * Makefile
  * bin/postinst.bat
  + bin/postinst.cmd
    + Added postinst for OS/2.

  * utils/hbmk2/hbmk2.prg
    * Minor in comment.

2009-02-20 15:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    * Removed -q0 default Harbour option.
    * Turned off informational messages. (turn it on with -info)
    * Help screen made shorter.
    + Added -help option to show the full help.
    * Showing no logo for normal operation.

2009-02-20 14:57 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
    + Added gpm lib to config file when mouse is enabled at build time.

  * utils/hbmk2/hbmk2.prg
    ! Fixed not to use '$' sign in generated temp filename.
    ! Fixed recent typo causing RTE in *nix.
    ; After these changes linux/gcc works out of the box, but
      it still needs tweaking (X11, other libs).

2009-02-20 13:43 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbver.c
    ! Fixed hb_verPlatform() to avoid confusion for other
      parts of Harbour (and maybe even app code) parsing the
      returned string and expecting some format. NOTE added
      about this to source to avoid similar errors in future.
      The Wine text got moved between the Windows name and
      version number, and have been put into paranthesis:
      Like: 'Windows XP SP3 (Wine) 5.1'. Please test.

2009-02-20 13:08 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
    + Added generation of hbmkcfg.hbp.
      gt override, cflags, ldflags and slang/curses libs are
      currently added.
    ; TODO: Add this file to distro packages. [DONE]

  * utils/hbmk2/hbmk2.prg
    ! Fixed handling of -DHB_EXT_ZLIB.
    ! Fixed handling of -DHB_PCRE_REGEX.
    + Added support for -DHB_POSIX_REGEX.
    ! Removed -mconsole from *nix gccs too.
    + Added new Linux targets mingw and mingwce for future
      cross compiling support.
    + Added remaining system libs for linux, sunos and hpux.
    + Added a more complete set of win system libs for mingw.
      TODO: Some more generic solution needs to be developed
            because currently the win systems libs added by our
            tools are pretty much random across the different
            supported compilers.
    + Added system lib list for mingwce.
    + Path separator translation for mingwce.

2009-02-20 13:18 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/classes.c
    * cleanup comment

  * harbour/source/rtl/gttrm/gttrm.c
    + added support for HB_GTI_PALETTE - it's supported only by Linux console
      and PuTTY/PTerm

  * harbour/source/rtl/gtxwc/gtxwc.c
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/contrib/gtwvg/gtwvg.c
    ! fixed indexes in
         hb_gtInfo( HB_GTI_PALLETE, <nIndex> [, <nNewRGBcolor> ] )
      They should be the same as in our screen buffer: 0-based not one
      based.

2009-02-20 11:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.sh
    ! Fix to prev HB_USR_LIBTOOL should be HB_USER_LIBTOOL to be
      consistent.

  * bin/hb-func.sh
    * HB_USR_LIBS -> HB_USER_LIBS to be in sync with rest of Harbour.

2009-02-20 10:58 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.sh
    ! Fixed s&r error (LIBTOOHB_USR_LDFLAGS).
    * Renamed LIBTOOL_USR to HB_USR_LIBTOOL.

2009-02-20 10:32 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    ! Fixed build compiler detection when GNU C++ was used on Linux.

  * contrib/hbwin/win_dll.c
    % Removed unncessary (potential build-breaker) #define _WIN32_WINNT.

  * contrib/hbwhat/whtdate.c
  * contrib/hbwhat/whtini.c
  * contrib/hbwhat/wincorec.c
  * contrib/hbwhat/whticon.c
  * contrib/hbwhat/whtcret.c
  * contrib/hbwhat/whtsock.c
  * contrib/hbwhat/whthead.c
  * contrib/hbwhat/whtseria.c
  * contrib/hbwhat/whtilst.c
  * contrib/hbwhat/whtreg.c
  * contrib/hbwhat/whtmem.c
  * contrib/hbwhat/whtclpb.c
  * contrib/hbwhat/whtmous.c
  * contrib/hbwhat/whtrgn.c
  * contrib/hbwhat/whtmeta.c
  * contrib/hbwhat/whttbar.c
  * contrib/hbwhat/whtrect.c
  * contrib/hbwhat/whtbrsh.c
  * contrib/hbwhat/whtgdi.c
  * contrib/hbwhat/whtscrlb.c
  * contrib/hbwhat/whtdlg.c
  * contrib/hbwhat/whtview.c
  * contrib/hbwhat/whtsys.c
  * contrib/hbwhat/whtlv.c
  * contrib/hbwhat/whtmisc.c
  * contrib/hbwhat/whtcomm.c
  * contrib/hbwhat/whtmmcap.c
  * contrib/hbwhat/whtprn.c
  * contrib/hbwhat/whtinet.c
  * contrib/hbwhat/whttab.c
  * contrib/hbwhat/whtfont.c
  * contrib/hbwhat/whtshell.c
  * contrib/hbwhat/whtcdlg.c
  * contrib/hbwhat/whtbmp.c
  * contrib/hbwhat/whtdir.c
  * contrib/hbwhat/whtpen.c
  * contrib/hbwhat/whtkbrd.c
  * contrib/hbwhat/whttext.c
  * contrib/hbwhat/whtmsg.c
  * contrib/hbwhat/whtdc.c
  * contrib/hbwhat/whtdraw.c
  * contrib/hbwhat/whtmenu.c
    ! Added #undef _WIN32_* where needed. This should fix compilation
      problems if these macros were already #defined by user.
      It's better however to honor the host setting.
      This fixed a pending TOFIX.

2009-02-20 09:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added support for build level (or system level if that's
      needed in the future) configuration file for hbmk. Currently
      it will automatically pick the file named hbmkcfg.hbp from
      the dir where hbmk is located. This file can be used to store
      build settings so that they can later be used by hbmk,
      automatically. IOW this is the communication medium
      between the build process and hbmk. We can store here
      the selected GT, extra libraries, PRG flags, C flags, linker
      flags, while keeping hbmk executable free from such burnt-in
      information. For this to work, the build process needs
      to generate hbmkcfg.hbp with appropriate content, and this
      file needs to be added to standard distribution packages.
      The format is normal .hbp, described on the hbmk help screen.

2009-02-20 09:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added CCPATH + CCPREFIX support for *nix/gcc|gpp.
    + Reworked *nix alternative dir layout detection to be generic.
    + Generating '-Wl,-mwindows', '-Wl,-mconsole' options for gcc, mingw
      (no -mconsole for mingw). Please review.
    ! Added missing gdi32 system lib for mingw when GTWVT is used.
    ! Added -shared support for mingw.
    + Added Przemek's code to detect entry function on gcc|gpp|mingw.
      Code not used yet.
    + Added HBMK_NO_GTCGI macro to disable automatic GTCGI
      selection for hbmk executable.

2009-02-20 04:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbgtinfo.ch
    + added HB_GTI_FONTSEL

  * harbour/source/rtl/gtxwc/gtxwc.c
    + added support for HB_GTI_FONTSEL
    + added support for HB_GTI_PALETTE

  + harbour/tests/gtxfnt.prg
    + added small demonstration/test code for HB_GTI_FONTSEL
      and XWindow GTs

  * harbour/source/rtl/hbproces.c
    * replaced execv() with execvp() in *nix builds

2009-02-19 16:50 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/source/rtl/gtwvt/gtwvt.c
    * Fixed not to generate RTE if class is already been registered.
      Useful in cases where multiple windows are implemented.

2009-02-20 00:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk2/hbmk2.prg
    + Added autodetection of compiler based on build data on linux.
    + Added '-comp:bld' option to force autodetection based on build
      data for all other platforms. This way the compiler will be
      set to the same one as was used to build hbmk2 executable.
    + Added support to specify object output name using the -o
      option in conjunction with the -hbcmp parameter. Single
      and multiple input (c. and .prg->.c) files are also supported,
      but that's compiler dependent, currently gcc/pocc/msvc/bcc32
      supports single file and also msvc/bcc32 support multiple files.
    * os2/icc libprefix reset and TODO added.
    + Added some cross-platform related markups (comments).
    ! Fixed not stripping 'lib' from libnames for linux/gpp.

2009-02-19 12:42 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
    + More functions.

  * harbour/contrib/gtwvg/wvgdatar.prg
  * harbour/contrib/gtwvg/wvgscrlb.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! WvgScrollBar() class now works in toto as per
      Xbase++ documentation.

    ; TODO: Implementation of WvgScrollBar() in demowvg.prg.

2009-02-19 20:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/Makefile
    ! Fixed broken GNU Make after recent directory rename.

  * utils/hbmk/hbmk2.prg
    * -q switch changed to -quiet to not collide with harbour option
      of the same name.
    + Following C flags will automatically be inheried to
      *nix/gcc|gpp compilers regardless of -bldf flag:
      -mlp64, -mlp32, -m64, -m32, -fPIC, -fpic
    + Following C flags will be automatically processed and
      relevent system libs added:
      -DHB_PCRE_REGEX - pcre
      -DHB_EXT_ZLIB   - z
      -DHAVE_GPM_H    - gpm
    ! Stripping 'lib' prefix from lib names for gcc-family compilers.
    ! Stripping extension from lib names for gcc-family compilers.
    ; Please review.

  * contrib/examples/uhttpd/hbmk.bat
    * .lib extensions removed from HB_USER_LIBS.

2009-02-19 20:13 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    * pacified warning

2009-02-19 12:59 UTC-0600 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * common.mak
    * changed HBMK_DIR from "utils\hbmk" to "utils\hbmk2"

  - utils/hbmk
  + utils/hbmk2
    * renamed dir name to fix wrong dir change on gnu scripts: mpkg_tgz.sh
      and the harbour.spec
    ! Fixed dir name error that avoided to build rpms and tgz files.

2009-02-19 16:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + Added object archive support for (currently) gcc compilers.
      .a file are gathered like .o files, and they can be added
      to the internal command line templates using the {OA} macro.
      I've added these after {O} macros in gcc cmdlines.
      (Przemek's request #9. Please review.)
    * Minor internal change to system location detection.

  * harbour-win-spec
  * harbour-wce-spec
  * harbour.spec
  * mpkg_tgz.sh
    % Removed -r make flags. No longer needed.

2009-02-19 15:37 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed yest another stupid typo in new OS2 conditional variable
      code

2009-02-19 15:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + Added new flags to replace -bldflags[-]:
      -bldf[-] and -bldf=[p][c][l]. We can pass any combinations
      to the latter. '-bldf=' is the same as '-bldf-'.
    + Added hbcplr to liblists (both static and shared).
    + Added infrastructure to allow for any kind of logic
      to detect compilers (not just PATH search for .exe).
      We should however very carefully use such methods
      to keep detection precize, predictable. For now I'd like
      to hear about misdetections using current system.

2009-02-19 14:18 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed very stupid and also vary bad typo in my last OS2 modification.

2009-02-19 13:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + Added new TODOs.
    + Now using GTCGI as the GT.
    + Added -info option to enable informational output.
      (currently this is the default for testing period)
    + Added -arch=<arch> command line option. Same as HB_ARCHITECTURE.
      Added -comp=<comp> command line option. Same as HB_COMPILER.
      envvars are kept for compatibility.
    + Added -hblnk option to give place for hblnk script behaviour
      emulation.
    * Changed -cc, -cmp options to -hbcc, -hbcmp respecitvely.
    + Changed -hbcc, -hbcmp, -hblnk switches to turn off information
      output and turn on quiet mode by default.
    + Added autodetection of architecture when unique to
      architecture compiler is choosen manually. IOW, when
      -comp=msvc|mingw|pocc|dmc|xcc is passed the architecture will
      be set to win automatically. When -comp=djgpp is used,
      dos will be selected.
    ! Fixed ordering of compiler autodetection because f.e. owatcom
      bin dir holds a 'cl.exe', which made hbmk2 falsely detect msvc.
    + Added trick which I'm not sure I like, and may cause problems
      and seemingly unpredictable behaviour, but could also help
      in some environments where multiple compilers are setup in
      parallel (this isn't a recommended scenario for various other
      reasons, so maybe we shouldn't support it further). So from
      now on the compiler autodetection will first look for the
      compiler used to build hbmk2.exe, and check for the rest
      afterwards. This feature is turned off for msvc builds of
      hbmk2.exe because it breaks owatcom autodetection.
    + Added possibility to pass a plain dir by using -odir[\|/]
      switch. The final name will be determined by first input
      file name, if this one also has a dir, -o option will be
      ignored. Added logic to handle separator differences, this
      wasn't tested to a great deal.
    + Added -Wl,--start-group support for linux/gcc|gpp, win/mingw,
      dos/djgpp.
    ! Fixed owatcom support to setup library paths.
    ! Fixed linux/owatcom to use link script.
    * Some adjustments to win/owatcom C compiler settings. I guess
      the ones in .cf should also need a cleanup.
    * Few minor indentation problems fixed.
    ! C compiler and linker scripts now got an extension in
      the generated temp filename to make some of them happy
      (owatcom in this case). .cpl is used for compiler scripts,
      .lnk for linker ones.
    + Compiler autodetection now also looks in hbmk2 executable
      dir before looking into the PATH.
    ! Link script content was wrong due to typo.
    ! Fixed problem with library paths being wrong (doubly
      decorated) in the link command. This may also fix some
      problems with double extensions and final .c file cleanup.
    ! Fixed to add hbdebug lib when building in shared mode.
    ! Fixed typo in automatically adding './' on *nix systems.
    ; Please test, I definitely couldn't retest all scenarios
      after all these changes.

  * bin/postinst.bat
    * Adapted change in mode modifier switches, also
      added new -hblnk one.
  * utils/hbmk/examples/winapi.hbp
    + Added mapi32.
  + utils/hbmk/examples/contrib.hbp
    + Added .hbp file for popular and portable only contribs.
  * config/win/owatcom.cf
    - Removed unnecessary system libs.
  * contrib/hbvpdf/hbvpdft.prg
    * hbwhat32 -> hbwhat in comment.
  * contrib/hbwin/wapi_commctrl.c
  * contrib/hbwin/wapi_winuser.c
    ! Fixed harbour-project page link in header.
  * contrib/hbwin/hbwapi.h
    * Formatting (indenting the whole file content inside
      self-guard isn't necessary.)

2009-02-19 12:49 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed the typo in order of sending signals in _hb_thread_cond_signal()
      _hb_thread_cond_broadcast() for OS2. By mistake it was LIFO instead of
      FIFO.

2009-02-18 17:05 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgscrlb.prg
    * Disabled structure support for time being as
      build process is unable to locate cstruct.c, etc. headers.
      Viktor?

2009-02-19 01:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/gtalleg/tests/gtallegs.hbp
  - contrib/gtalleg/tests/gtalleg-shared.hbp
  + contrib/gtalleg/tests/gtallegd.hbp
  - contrib/gtalleg/tests/gtalleg-static.hbp
    * Converted to short filenames.

  * utils/hbmk/hbmk2.prg
    ! Typos in prev. commit.

2009-02-18 16:25 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/Makefile
  * harbour/contrib/gtwvg/common.mak
    + Added wvgscrlb.prg.

  + harbour/contrib/gtwvg/wvgscrlb.prg
    + Implemented WvgScrollBar() class ( work-in-progress ).

  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdarea.prg
  * harbour/contrib/gtwvg/wvgdatar.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvggui.h
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgwnd.prg
  * harbour/contrib/gtwvg/wvtwin.ch
    * Numerous changes and fixes and behavioral shifts.
    ! Started to implement CUI and GUI components in GTWVG.
    ! Started to use C STRUCTURES.

  * harbour/contrib/hbwin/Makefile
  * harbour/contrib/hbwin/common.mak
    + Added wapi_winuser.c

  * harbour/contrib/hbwin/hbwapi.h
    + added more WAPI macros to accomodate new types.

  + harbour/contrib/hbwin/wapi_winuser.c
    + Introduced wrapper function to manipulate scrollbars.

    ; NOTE: GTWVG now needs xhb.lib alongwith hbwin.lib.

2009-02-19 00:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + Added rest of default *nix system paths.
    % Minor optimization regarding the above.
    ! Fix regarding the above (include/lib were swapped).

  * make_gnu.sh
    * Formatting.

2009-02-18 23:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbole/ole2.c
  * contrib/hbwin/win_ole.c
  * contrib/hbwin/win_misc.c
  * contrib/hbwin/win_prn1.c
    ! Fixed Open Watcom 1.8 related warnings/errors.

2009-02-18 22:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/global.cf
    + Added link to GNU make docs.
    + Added .SUFFIXES: to delete all built-in rules. This does
      the same as the -r switch which we were using so far,
      so this one is no more necessary. Now GNU make can be
      started by simply running 'make' without parameters.

  * make_gcc.sh
  * make_gnu_os2.cmd
  * make_gnu.bat
    % Removed make -r switches.
    ; TODO: Do the same in the rest of the scripts. [DONE]

2009-02-18 22:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
  * utils/hbmk/hbmk2.prg
    * TODOs moved to source file.
    + Added hbp comment syntax to help screen.

  * config/win/install.cf
    ! Reverted previous fix (with xcopy) and replaced with
      official method to suppress return value.

2009-02-18 20:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
    ! added support for conditional variables working like in PTHREADS
      in OS2 builds - it fixes the problem with possible dead lock or
      starvation effect which can also cause dead lock in some cases.
      OS2 users please test current code.

2009-02-18 18:59 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    % Optimizations in FindInPath().
    ! Fixed handling dirs in PATH with embedded path separator
      in them.
    ! Possible fix for owatcom compilers by forcing link
      script instead of passing options on the command line.

  * utils/hbmk/examples/winapi.hbp
    ! Updated for BCC.

2009-02-18 16:45 UTC+0100 Maurilio Longo (maurilio.longo@libero.it)
   * ChangeLog
     * little correction to previous entry.

2009-02-18 16:35 UTC+0100 Maurilio Longo (maurilio.longo@libero.it)
   * source/vm/cmdarg.c
     * little hack from Przemyslaw to make it work under OS/2 where
       executable name hasn't got extension if extension was not given when
       executable was started.
   * utils/hbmk/hbmk2.prg
     * Changed to work under OS/2 with GCC; other OS/2 compilers not tested.

2009-02-18 16:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    * '-l-' is now passed to Harbour instead of being considered
      a lib spec.
    * Arch/comp is now case-insensitive in filters too.
    * Removed GTSTD usage.
      It caused a stall at startup for BCC, and Ctrl+C had
      to be pressed to proceed. I didn't investigate further,
      maybe it's a local problem.

2009-02-18 16:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/win/bcc32.cf
    * Synced flags with non-GNU make. This adds MT support.

  * config/win/install.cf
    ! Install command modified to not give errors and block
      the whole build process if the target file already exists.
      The workaround consisted of changing 'copy' to 'xcopy /d /y'.

  * include/inkey.ch
    + Added comments on K_MM*DOWN codes.
      These also should be protected, and moved to
      local the local headers belonging to GTs
      supporting this feature (GTWVG notably).

  * source/rtl/gtwvt/gtwvt.c
    + Protected non-Clipper compatible extension regarding
      K_MM*DOWN with __HB_GTWVT_GEN_K_MMDOWN_EVENTS #define.
      Also see notes about app level code modification
      needed if you want to continue using default Harbour build:
      2009-02-18 12:20 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)

2009-02-18 14:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtalleg/tests/gtalleg-static.hbp
    + Added some Windows libs. The libs seem compiler
      and/or SDK dependent, so pls update this, current state
      is probably enough to get an idea of it.

  + utils/hbmk/examples/winapi.hbp
    + Created hbp file for Windows libs.

  * utils/hbmk/hbmk2.prg
  * utils/hbmk/examples/xbgtk.hbp
  * utils/hbmk/examples/xhgtk.hbp
    * Formatting.

2009-02-18 14:20 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + Added handling of quoted options (with double quotes) for
      items containing spaces. hb_AToken( , , .T. ) is used, so
      these rules apply. Outer double quote pair will be stripped
      from the quoted items.
      We will probably need extra code to add the quote back
      when forming the command lines. Anyway this feature mainly
      targets to support pkg-config options, which have their
      own special quotes anyway.
    ! Minor change to not use hb_cmdline() for -q option detection,
      and also to ignore -q in main option processing loop.
    ! Fixed explicit .hbp processing.

  * contrib/gtalleg/tests/gtalleg-shared.hbp
  * contrib/gtalleg/tests/gtalleg-static.hbp
  * utils/hbmk/examples/xbgtk.hbp
  * utils/hbmk/examples/hwgui.hbp
  * utils/hbmk/examples/xhgtk.hbp
    * Updated pkg-config related lines.

2009-02-18 14:18 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/listbox.prg
    * changed FindText() and FindData() LISTBOX method to work without
      _SET_EXACT modification

2009-02-18 13:06 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + source/rtl/mousehb.c
    + Added missing file from previous commit.

2009-02-18 12:45 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/itemapi.c
    ! fixed wrong exact condition hb_itemStrICmp()
    % small optimization in hb_itemStr[I]Cmp() functions

2009-02-18 12:20 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * common.mak
  * source/rtl/Makefile
  * source/rtl/mouse53.c
    + Added HB_MMIDDLEDOWN() functions, plus MMIDDLEDOWN() alias.
      These are always available regardless of the CLIP53
      compatibility setting.

    ; TOFIX: K_MM*DOWN events _override_ C5.3 compatible
             K_MOUSEMOVE events (in GTWVT only), which created
             an unfortunate incompatibility with our target
             C5.x compiler when using some specific GT. Ideas
             are welcome how to fix this. We should probably
             either send out both codes and let the inkey queue
             do the filtering as requested by app (we need a
             new filter then), or remove these event code and
             generate proper K_MOUSEMOVE events instead. Apps
             using this these incompatible keycodes are encouraged
             to replace expressions:
             '( key == K_MM*DOWN )' with the compatible:
             '( key == K_MOUSEMOVE .AND. M*DOWN() )' to prepare
             for the fix. [DONE]

2009-02-18 12:17 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/hvm.c
    % replaced index to evaluated PCODE by direct PCODE pointer
      modification

2009-02-18 10:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/postinst.bat
    + Added generation of hbcc[.bat|.cmd], hbcmp[.bat|.cmd]
      and hblnk[.bat|.cmd].
    ; NOTE: Available only when using GNU-make to build Harbour.

  * utils/hbmk/hbmk2.prg
    % Minor optimizations.
    + HB_USER_LIBS now gets automatic path separator adjustment.

  * config/win/msvc.cf
    ! Added missing system libs.
    ! Tweaked C options to be like in non-GNU make.

  * make_gcc.sh
  * make_gnu.sh
    - Removed compatibility with HB_ARCHITECTURE = w32.

2009-02-18 10:25 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/cmdarg.c
  * harbour/source/vm/hvm.c
    * added hb_cmdargUpdate() function which makes final argc/argv updating
      (code moved from hb_cmdargInit())
    ! use hb_cmdargUpdate() - it fixes GPF in MT mode when some fs* functions
      were called before allocating HVM stack
    ; TOFIX: change some hb_setGet*() functions to work without HVM stack.

  * harbour/source/rtl/hbtoken.c
    * formatting

2009-02-18 02:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    ! Fixed not recognising hbp lines if the filter was at BOL.
    ! Two minor fixes.

  * utils/hbmk/examples/xbgtk.hbp
    + Added cflags, it was already supported, just forgot about it.

  * contrib/hbblat/tests/hbblat.hbp
  * contrib/hbblat/tests/blatcmd.prg
    % Using WIN_GETCOMMANDLINEPARAM().

  * contrib/hbwin/win_misc.c
  * contrib/hbwin/tests/testreg.prg
    + Added WIN_GETCOMMANDLINEPARAM().
      Similar to WAPI_GETCOMMANDLINE() but returns
      only the parameter part. Handles UNICODE,
      _SET_OSCODEPAGE and appnames with spaces.

  * contrib/hbwin/tests/hbwin.hbp
    ! Fixed to include shell32 lib.

  * contrib/hbwin/Makefile
  * contrib/hbwin/common.mak
  + contrib/hbwin/wapi_winbase.c
  * contrib/hbwin/tests/testreg.prg
    + Added WAPI_GETCOMMANDLINE().
      With UNICODE and _SET_OSCODEPAGE support.

  * ChangeLog
    * TOFIX (hb_cmdline()) marked as POSTPONED with explanation.

2009-02-18 00:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/listbox.prg
    ! Restored _SET_EXACT dependent code parts to have the
      same logic as before my modifications a few years ago.
      Przemek, is it right now? I honestly didn't understand
      the issue here.

2009-02-17 23:31 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/gtalleg/tests
  + contrib/gtalleg/tests/gtalleg-shared.hbp
  + contrib/gtalleg/tests/gtalleg-static.hbp
  * utils/hbmk/examples/whoo.hbp
  * utils/hbmk/examples/c4w.hbp
  * utils/hbmk/examples/minigui.hbp
  * utils/hbmk/examples/hwgui.hbp
  * utils/hbmk/examples/fwh.hbp
  + utils/hbmk/examples/xbgtk.hbp
  + utils/hbmk/examples/xhgtk.hbp
    + Added new hbp files and settings to cover support by current
      hbmk script features.
    + Added new gtalleg hbp files for Windows, both static
      and shared. Added logic from hbmk script for Linux.
    ; NOTE: This is a work in progress, I'll have to investigate
            -I support needed for xbgtk, hbmk can't handle that yet.
            Also pkgconfig notation isn't parsed well yet, there needs
            to be added syntax to allow spaces inside items.
            Expect some possible incompatible changes in this area.

2009-02-17 21:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + Made HB_ARCHITECTURE and HB_COMPILER case-insensitive.
      Notice however that other parts of Harbour (notably the
      GNU-make system) will only accept them in lowercase, so
      that's the recommended way to setup these values.
    * One error message made more informative.

2009-02-17 20:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + HB_COMPILER now automatically set to gcc for Linux.
      You can override it if you need gpp or owatcom.
    + xcc, icc autodetection for win.
    + Added support for HB_MT=mt|MT for compatibility.
    + Added support for -mwindows/-mconsole for compatibility.
    + 0/1 is accepted instead of yes/no for compatibility.

2009-02-17 11:43 UTC+0800 Luis Krause (lkrausem at shaw dot ca)
  * utils/hbmk/hbmk2.prg
    ! Fixed typo on line 1038 (missing . in .OR.)

2009-02-17 20:06 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    ! Fixed -run on *nix systems.

2009-02-17 19:29 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    ! Fixed Linux system location detection to work
      regardless of the name of the executable.

2009-02-17 18:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + More informative messages for HB_COMPILER problems.

2009-02-17 17:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk2.prg
    + Added support for -fullstatic.
    + Added '-lm' to linux/gcc. Still needs to tweaking, like gpm.

  * bin/hbmk.bat
    + Added missing '@'.

2009-02-17 16:42 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-win-spec
  * harbour-wce-spec
  * mpkg_tgz.sh
  * harbour.spec
    + Replaced hbmake with hbmk2.

2009-02-17 16:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * common.mak
  + bin/hbmk.bat
  * utils/hbmk/Makefile
  - utils/hbmk/hbmk.prg
  + utils/hbmk/hbmk2.prg
   + Renamed hbmk to hbmk2 to avoid collision with hbmk script,
     and to allow parallel testing.
   + Readded hbmk.bat to redirect to hbmk2.exe.
     This will be removed in the future. Win9x/OS/2 isn't
     supported with this batch file.

2009-02-17 16:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    * Minor changes.

2009-02-17 15:45 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added autodetection of -cc, -cmp options based on argv[0].

2009-02-17 15:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added support for multiple -L (lib path) options.
    + Added support for libpaths= option in .hbp files.
    ! Fix/cleanup to help screen.
    ! Fixed handling of libs specified in an explicitly passed
      .hbp file due to typo.

2009-02-17 14:54 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added support for -cc switch. This will stop hbmk after creating
      the Harbour .c outputs to emulate hbcc tool behaviour.
      'hbcc' -> 'hbmk -cc $*'
    + Added support for -cmp switch. This will stop hbmk after creating
      the object outputs from the C compiler.
      'hbcmp' -> 'hbmk -cmp $*'
    + From now on objects file passed on the command line will also
      be considered as final executable name if passed before the other
      files.
    * Tweaked internals to cope with some new combinations, like
      passing object only for a compiler having separate C compiler
      and link phases. Launching C compiler even if there are only
      object files.

2009-02-17 13:12 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/hbmysql/utils/hbmk.bat
  + contrib/hbmysql/utils/hbmysql.hbp
  - contrib/hbblat/tests/hbmk.bat
  + contrib/hbblat/tests/hbblat.hbp
    * Switched from WIN/DOS specific to .hbp.

  - contrib/hbgd/tests/hbmk_gnu.sh
  * contrib/hbgd/tests/hbgd.hbp
    * Switched from *NIX specific to .hbp.

2009-02-17 11:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbblat/tests/blatcmd.prg
    ! Reverted fix of mine until we properly fix hb_cmdline().
    ; TOFIX: Fix hb_cmdline() to work more consistently on Windows.
             [POSTPONED. It creates incompatibility with behaviour
             on other platforms.]

2009-02-17 11:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/hbmysql/tests/hbmk.bat
  + contrib/hbmysql/tests/hbmysql.hbp
  - contrib/xhb/tests/hbmk.bat
  + contrib/xhb/tests/xhb.hbp
  - contrib/hbodbc/tests/hbmk.bat
  + contrib/hbodbc/tests/hbodbc.hbp
  - contrib/hbtpathy/tests/hbmk.bat
  + contrib/hbtpathy/tests/hbtpathy.hbp
  - contrib/hbmsql/tests/hbmk.bat
  + contrib/hbmsql/tests/hbmsql.hbp
  - contrib/hbmzip/tests/hbmk.bat
  + contrib/hbmzip/tests/hbmzip.hbp
  - contrib/hbole/tests/hbmk.bat
  + contrib/hbole/tests/hbole.hbp
  - contrib/hbsqlit3/tests/hbmk.bat
  + contrib/hbsqlit3/tests/hbsqlit3.hbp
  - contrib/hbfbird/tests/hbmk.bat
  + contrib/hbfbird/tests/hbfbird.hbp
  - contrib/hbziparc/tests/hbmk.bat
  + contrib/hbziparc/tests/hbziparc.hbp
  - contrib/hbnf/tests/hbmk.bat
  + contrib/hbnf/tests/hbnf.hbp
  - contrib/rddsql/tests/hbmk.bat
  + contrib/rddsql/tests/rddsql.hbp
  - contrib/hbhpdf/tests/hbmk.bat
  + contrib/hbhpdf/tests/hbhpdf.hbp
  - contrib/rddado/tests/hbmk.bat
  + contrib/rddado/tests/rddado.hbp
  - contrib/hbpgsql/tests/hbmk.bat
  + contrib/hbpgsql/tests/hbpgsql.hbp
  - contrib/rddads/tests/hbmk.bat
  + contrib/rddads/tests/rddads.hbp
  - contrib/hbfimage/tests/hbmk.bat
  + contrib/hbfimage/tests/hbfimage.hbp
  - contrib/hbgd/tests/hbmk.bat
  + contrib/hbgd/tests/hbgd.hbp
  - contrib/hbmisc/tests/hbmk.bat
  + contrib/hbmisc/tests/hbmisc.hbp
  - contrib/hbtip/tests/hbmk.bat
  + contrib/hbtip/tests/hbtip.hbp
  - contrib/hbgf/tests/hbmk.bat
  + contrib/hbgf/tests/hbgf.hbp
  - contrib/hbwin/tests/hbmk.bat
  + contrib/hbwin/tests/hbwin.hbp
  - contrib/hbvpdf/tests/hbmk.bat
  + contrib/hbvpdf/tests/hbvpdf.hbp
  - contrib/hbssl/tests/hbmk.bat
  + contrib/hbssl/tests/hbssl.hbp
  - contrib/hbwhat/tests/hbmk.bat
  + contrib/hbwhat/tests/hbwhat.hbp
    * Switched from WIN/DOS specific to platform
      independent .hbp files. These will be automatically
      picked by hbmk (prg). Some libnames will need tweaking
      for non-Windows platforms.
    ! Fixed a few liblists along the way.

  * contrib/hbgd/gdwrp.c
    ! Fixed to properly check GD lib version for conditional
      compiling. Formerly used GD_VERS isn't defined by the
      library headers.

  - contrib/hbmisc/tests/Makefile
    - Unnecessary file removed.

  * contrib/hbmisc/doc/gendoc.bat
  - contrib/hbmisc/doc/libmisc.lnk
  - contrib/hbmisc/doc/libmisc.rsp
  + contrib/hbmisc/doc/hbmisc.lnk
  + contrib/hbmisc/doc/hbmisc.rsp
    * libmisc -> hbmisc

  * util/hbmk/hbmk.prg
    + Added TODO.

  * ChangeLog
    * TODO marked DONE.

2009-02-17 09:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gcc.sh
  * contrib/make_gcc_all.sh
    ! Fixed typo in if condition.

2009-02-17 03:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/fstemp.c
    ! Fixed temp filename generation in {(linux|bsd)&!owatcom}
      builds when extension was requested.

2009-02-17 01:50 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbfimage/Makefile
    ! Disabled hbfimage on Linux until we solve the type
      collision problem. Some more platforms may need to
      be added.

2009-02-17 01:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/linux/install.cf
    ! Added hack to ignore copy errors.
      This probably isn't the ultimate solution, but since a few
      weeks Harbour cannot be installed in the same dirs where
      sources are located, since it fails with
      cp: `file' and `/harbour/include/file' are the same file
      which causes that no binaries will be installed either.

2009-02-17 01:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/make_b32.bat
  * contrib/gtwvg/make_vc.bat
  * contrib/gtwvg/Makefile
    * Trying new method to point to hbwin, so that
      we're not relying on hbwin headers being installed.
    ; Please test.

  * contrib/Makefile
    + Added hbblat.

  * contrib/make_vc_all.bat
  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
  * contrib/hbblat/Makefile
  * contrib/hbblat/common.mak
  * contrib/hbblat/make_b32.bat
  * contrib/hbblat/make_vc.bat
  * contrib/hbblat/blatwrp.c
  * contrib/hbblat/tests/hbmk.bat
  * contrib/hbblat/tests/blatcmd.prg
    + Added support for HB_INC_BLAT (needed for releases).
    * Some EOLs added.
    * Minor correction to .ch name in make files.
    % Replaced command line retrieval with hb_cmdline() call.
    * Cleaned some headers/#defines.
    * GNU make file got protection to only compile for win,
      and to install headers.

  * make_gnu.bat
  * contrib/hbct/Makefile
  * contrib/hbwin/Makefile
    * Minor formatting.

2009-02-16 23:55 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  + harbour/contrib/hbblat
  + harbour/contrib/hbblat/blatcls.prg
  + harbour/contrib/hbblat/blatwrp.c
  + harbour/contrib/hbblat/common.mak
  + harbour/contrib/hbblat/hbblat.ch
  + harbour/contrib/hbblat/make_b32.bat
  + harbour/contrib/hbblat/make_vc.bat
  + harbour/contrib/hbblat/Makefile
  + harbour/contrib/hbblat/syntax.txt
  + harbour/contrib/hbblat/tests
  + harbour/contrib/hbblat/tests/blatcmd.prg
  + harbour/contrib/hbblat/tests/blattest.prg
  + harbour/contrib/hbblat/tests/f_listtext.txt
  + harbour/contrib/hbblat/tests/f_ps.txt
  + harbour/contrib/hbblat/tests/f_sample.txt
  + harbour/contrib/hbblat/tests/f_sample1.txt
  + harbour/contrib/hbblat/tests/f_subjectline.txt
  + harbour/contrib/hbblat/tests/hbmk.bat
    + Added BLAT wrapper class

  * harbour/contrib/make_b32_all.bat
  * harbour/contrib/make_vc_all.bat
    * added above contrib

  * harbour/source/vm/hvm.c
    * added missing ;

2009-02-16 21:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - tests/hbmk_gnu.bat
    - Removed.

  * contrib/examples/uhttpd/hbmk.bat
  * contrib/examples/dbu/hbmk.bat
  * contrib/examples/rl/hbmk.bat
    * Made them compatible with Win9x/NT systems again.

  * source/lang/msg_tpl.c
    + Added NOTE about date format.

  * source/lang/msgbe866.c
  * source/lang/msgbewin.c
  * source/lang/msgbg866.c
  * source/lang/msgbgiso.c
  * source/lang/msgbgmik.c
  * source/lang/msgbgwin.c
  * source/lang/msgit.c
  * source/lang/msgnl.c
  * source/lang/msgsl437.c
  * source/lang/msgsl852.c
  * source/lang/msgsliso.c
  * source/lang/msgslwin.c
    ! Fixed date formats to only contain YYYY MM and DD.
      Plus the format itself corrected in a few places.

  * utils/hbmk/hbmk.prg
    + Added TODO
    % Added ANNOUNCE HB_GTSYS / REQUEST HB_GT_STD_DEFAULT.
      Since this tools doesn't need anything fullscreen, and
      this way it's faster smaller, yet portable.

  * ChangeLog
    * Few old TODO/TOFIX statuses updated.

2009-02-16 18:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/hbct/tests/hbmk.bat
  - contrib/hbcurl/tests/hbmk.bat
  + contrib/hbcurl/tests/hbcurl.hbp
  - contrib/hbclipsm/tests/hbmk.bat
  + contrib/hbclipsm/tests/hbclipsm.hbp
  - contrib/hbcrypt/tests/hbmk.bat
  + contrib/hbcrypt/tests/hbcrypt.hbp
  - contrib/examples/pp/hbmk.bat
  + contrib/examples/pp/pp.hbm
  - contrib/examples/guestbk/hbmk.bat
  + contrib/examples/guestbk/guestbk.hbm
  - contrib/examples/pe/hbmk.bat
  + contrib/examples/pe/pe.hbm
  - contrib/examples/hbsqlit2/tests/hbmk.bat
  + contrib/examples/hbsqlit2/tests/hbsqlit2.hbp
  - contrib/examples/hscript/hbmk.bat
  + contrib/examples/hscript/hscript.hbm
  - utils/hbdoc/hbmk.bat
  + utils/hbdoc/hbdoc.hbm
    * Converted some DOS/WIN batch files to platform
      independent .hbm/.hbp files.
    ; Please test them.

  * ChangeLog
    + Marked DBCREATETEMP() as DONE.

2009-02-16 18:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added HB_DBCREATETEMP()

  * harbour/source/rdd/dbcmd.c
    * Renamed to HB_DBCREATETEMP().

2009-02-16 17:44 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/dbinfo.ch
    + added DBI_ISTEMPORARY

  * harbour/include/hbapirdd.h
  * harbour/source/rdd/wafunc.c
    + added hb_rddCreateTableTemp() C function to create temporary
      table which are automatically deleted on close. All indexes and
      memo files for such tables are also in temporary files and
      automatically deleted on close. Please remember that Harbour uses
      OS functions to create temporary files so it's installation dependent
      how much disk space is available for them. Some RDDs may also do
      not create temporary files but keep everything in memory if they
      decide it's more efficient.

  * harbour/source/rdd/dbcmd.c
    + added .prg function to create temporary files:
         hb_dbCreateTemp( <cAlias>, <aStruct>, <cRDD>, ;
                          <cCodePage>, <nConnection> ) -> <lSuccess>
      Not all RDDs have to support it. It's verified by support for
      DBI_ISTEMPORARY dbInfo() action.

  * harbour/include/hbrdddbf.h
  * harbour/include/hbrddnsx.h
  * harbour/include/hbrddcdx.h
  * harbour/include/hbrddntx.h
  * harbour/source/rdd/dbf1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    + added support for temporary tables in native RDDs.

   Most of above modifications were done by Viktor Szakats.

2009-02-16 15:03 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed typo in PTHREAD (*nixes) version of hb_threadMutexTimedLock()
      (.prg HB_MUTEXLOCK() with timeout parameter)
    ! unlock HVM in *nix version of hb_threadWait()
    ; added TODO note

2009-02-16 14:02 UTC+0200 Chen Kedem <niki@synel.co.il>
  * doc/dirstruc.txt
    * Updated to reflect current state.

  * source/compiler/hbusage.c
  * source/lang/msghe862.c
  * source/lang/msghewin.c
  * source/rtl/tone.c
  * source/rtl/gtos2/gtos2.c
    * Update my email on source files
      (didn't bother to change those under doc).

2009-02-16 12:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapicdp.h
  * common.mak
  * source/codepage/Makefile
  + source/codepage/ucmacce.c
  + source/codepage/ucmacice.c
  + source/codepage/uc424.c
  + source/codepage/ucmacrom.c
  + source/codepage/ucmacgrk.c
  + source/codepage/uc037.c
  + source/codepage/uc875.c
  + source/codepage/uc1026.c
  + source/codepage/ucascii.c
  + source/codepage/ucatari.c
  + source/codepage/ucmaccyr.c
  + source/codepage/uc1006.c
  + source/codepage/ucnext.c
  + source/codepage/ucmactrk.c
  + source/codepage/uc856.c
  + source/codepage/uc500.c
    + Added missing codepages. Except for multi-byte ones,
      which I believe are not supported by the current
      Harbour infrastructure.

  * utils/hbmk/hbmk.prg
    ! Minor.

2009-02-16 11:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added support to pass .hbp files on the command line.

  * contrib/hbwin/wapi_commctrl.c
  * contrib/hbwin/hbwapi.h
    ! Remaining comments changed to ANSI.

2009-02-16 00:10 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/common.mak
  * harbour/contrib/gtwvg/Makefile
    + Added wvgdarea.prg

  * harbour/contrib/gtwvg/wvgwin.c
    + Added more functions.

  + harbour/contrib/gtwvg/wvgdarea.prg
    + Added WvgDrawingArea(), a helper class to WvgDialog().
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
  * harbour/contrib/gtwvg/wvtwin.ch
    ! Numerous class structure enhancements. More Xbase++ compatibility
      XbpDialog:drawingArea concept implemented in greater details.
      WvgToolbarButtons() now take use of WAPI_ImageList_*() functions.

  * harbour/contrib/hbwin/hbwapi.h
    ! Defines updated to respect pointers also.
  + harbour/contrib/hbwin/wapi_commctrl.c
    + Implemented WAPI ImageList_*() family of functions.

  * harbour/contrib/hbwin/Makefile
  * harbour/contrib/hbwin/common.mak
    + Added wapi_commctrl.c

  * harbour/contrib/gtwvg/tests/demowvg.prg
  * harbour/contrib/gtwvg/tests/demoxbp.prg
    ! Updated TO respect new changes in class structures.
      Xbase++ related components are more compatible now.

    ; TODO: Tooltips on Toolbar Buttons. WHILE implemeting
      XbpDialog:drawingArea concept I have lost track of this
      feature as buttons are now created via image lists and
      Toolbar window is created with CreateWindowEx() instead of
      CreateToolbarWindow().

2009-02-16 09:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbapollo/tests/hbapollo.hbp
    + Added filters.
    ; TOFIX: hbapollo test doesn't link with MSVC.

  - contrib/hbapollo/tests/hbmk.bat
  - contrib/gtwvg/tests/hbmk.bat
  - contrib/hbbtree/tests/hbmk.bat
  - contrib/examples/terminal/hbmk.bat
  - contrib/examples/terminal/hbmk_trm_appn.bat
    - Removed batch versions of make files.
      Go to the directory the source are located and
      use the .hbm files where there is one, or just pass
      the .prg name to hbmk.exe.

  * utils/hbmk/hbmk.prg
    ! Fixed handling lib/source files with double extensions.
    ! Fixed to not add empty items to lists in some occasions.
    + Added -q to suppress informational output + header.

2009-02-16 02:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
    - Deleted hbmk*.bat references.

2009-02-16 02:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - bin/hbmk.bat
  - bin/hbmk_gcc.bat
  - bin/hbmk_os2.cmd
  - bin/hbmk_ow.bat
  - bin/hbmk_b32.bat
  - bin/hbmk_vc.bat
    - Removed make files obsoleted by new hbmk tool.
      Old calling convention, features, switches, envvars
      continue to work.
      WARNING: If you've called hbmk as hbmk.bat,
               you'll need to change that to simply hbmk.

  * contrib/hbodbc/odbc.c
    * Minor formatting.

  * utils/hbmk/hbmk.prg
    ! Fixed owatcom link commands. (it was also wrong
      in hbmk.bat)
    + Added -debug support for owatcom. (untested)
    + Added rsxnt/rsx32 support in an unobtrusive way.

2009-02-16 00:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
  * utils/Makefile
  - utils/hbmake
    - Removed hbmake from repository.

2009-02-16 00:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/hbusage.c
    + Added Vailton Renato to credit list.

  * utils/hbmk/hbmk.prg
    + Cleanups and additions to help screen.
    ! Fixed dm/dmc compiler ID.

  - config/win/dm.cf
  + config/win/dmc.cf
  * contrib/gtalleg/Makefile
  * contrib/hbwhat/Makefile
    * Digital Mars C compiler ID changed from dm to dmc.
      (they also have a D compiler f.e.)

2009-02-15 22:28 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/gtwvg/tests/gtwvg.hbp
  + contrib/hbapollo/tests/hbapollo.hbp
  + contrib/hbbtree/tests/hbbtree.hbp
  + contrib/hbbtree/tests/test.hbm
    + Added hbmk files.

  * contrib/hbbtree/tests/hbmk.bat
  * contrib/hbbtree/tests/test.prg
    * Cleaned hbct dependency.

  * contrib/hbbtree/Makefile
  * contrib/hbbtree/common.mak
  - contrib/hbbtree/hb_btree.api
  + contrib/hbbtree/hb_btree.h
  * contrib/hbbtree/hb_btree.c
  * contrib/hbbtree/tests/ctest.c
    * Renamed hb_btree.api -> hb_btree.h

  * contrib/examples/terminal/terminal.hbp
    + Added {win} filter.

2009-02-15 20:54 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added support for '#' comment lines in .hbm files.
    + Added support to automatically convert slashes/backslashes
      in passed libnames and prg options.
    * Cleanup on computing Harbour location. I didn't test all
      situations here. This should fix previous versions not
      honoring explicit HB_*_INSTALL envvars.
    + Added support for POCC (untested).

   + contrib/hbct/tests/hbct.hbp
   + contrib/examples/terminal/terminal.hbp
   + contrib/examples/terminal/trm_appn.hbm
     + Added new hbmk files to show what it takes to replace
       the current system, but this time fully supporting
       all Harbour platforms.
       To use these just run hbmk, either from the path, or
       by directly pointing to it:
       ..\..\..\bin\hbmk.exe <test.prg>
       ..\..\..\bin\hbmk.exe trm_appn.hbm
       .exe can be dropped as soon as we delete out hbmk.bat file.

2009-02-15 18:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added POCC and DMC autodetection.
    + Added screen message when no C compiler could be
      autodetected.
    ! owatcom was missing from OS/2 supported compiler
      internal list.

2009-02-15 17:45 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added support for -map switch to create a map file.
    + Added support for -run switch to run the created executable.
    + Script files can be passed without '@' prefix if using the
      extension '.hbm'. So 'hbmk myscript.hbm' will now also work.
    + Now possible to negate most switches using a '-' postfix:
      'hbmk -strip-'
    + Added '-notrace'/'-trace-' switches to disable tracing.
    + Some steps towards Windows resource support.
    + Added support for 'cflags=' and 'ldflags=' in .hbp files.
    + Added mini architecture/compiler filter which can be used
      in every line of an .hbp file, and also for every library
      passed on the command line:
      hbmk hello.prg -lonlyforlinux{linux}
      The filter expression can use paranthesis, '&' for AND,
      '|' for OR and '!' for not. F.e.: {linux&!owatcom}
    % Minor optimizations.

  + utils/hbmk/examples
  + utils/hbmk/examples/whoo.hbp
  + utils/hbmk/examples/c4w.hbp
  + utils/hbmk/examples/minigui.hbp
  + utils/hbmk/examples/hwgui.hbp
  + utils/hbmk/examples/fwh.hbp
    + Added few example for .hbp files to support 3rd party
      packages. These may be removed, as it's better if these
      are supplied by the packages themselves.
      NOTE: I took these from hbmake, and they are probably
            obsolete.

2009-02-15 08:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added -bldflags option which tells hbmk to also
      apply user build flags (HB_USER_*FLAGS) used when
      building Harbour.
    * Minor internal cleanups.
    ! Typo in help screen.

2009-02-15 02:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    ! Fix to previous commit.
    * Help screen made more compact.

2009-02-15 02:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added support for parameters passed in files:
      'hbmk @myprogram.hbm'.
      Multiple scripts can be passed, and they can be
      combined with normal command line options.
      This makes it possible to supply quasi make files
      for programs.
    + Added support for hbmake parameter (.hbp) files. hbmk
      will scan current dir for .hbp files and process them.
      .hbp files can specify user libs, .prg options, can
      control MT, GUI, NULRDD, SHARED, DEBUG, STRIP and can
      select GT. This makes it ideal to offer automatic setup
      for lib dependent programs, f.e. an .hbp can be places
      in contrib test dirs to allow for a configuration free
      make process without the need of any helper batch/script
      files. 3rd party makers can also supply .hbp file for
      the same effect, f.e. xhgtk, hwgui support may be added
      this way, without hard-wiring knowledge into hbmk itself.
      -nohbp disables processing of these files.
    + Added support for HB_GT envvar.
    + -o support for win/msvc.
    ! Fix to GT handling and -shared to for msvc and bcc32.
    ! Fixed some envvar names.

  * utils/hbi18n/hbi18n.prg
    * Minor typo.

2009-02-14 13:32 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/contrib/hbwin/wapi_commctrl.c
    + Added WAPI_Image*() functions.

  * harbour/contrib/hbwin/hbwapi.h
    + Added more _par and _ret defines.

    ; The idea is to encapsulate Harbour API for WINAPI
      parameters and return values. Now wapi_commctrl.c
      looks very clean and easy to understand code.
      Also I have contained all those functions which are
      either not required on normal programming level
      OR I could not convert, with #if 0 / #endif blocks.
      But the header definitions are pulled from MSDN and
      have been kept alongwith. This ensures that whenever
      someone will try to implement them, all info will be
      handy.

    ; Please approve the above implementation so that I
      include these files in the build batches.

2009-02-14 19:50 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added -strip/nostrip switch and implemented for GCC/GPP.
    + Added -trace switch to see executed commands.
    + Added negative switches: -std, -st, -nodebug
    + Added detection whether Harbour is installed in default system
      locations on *NIX systems. If it is, turn on shared libraries
      by default for all *NIX systems.
    + Added support for GT selection with -gt??? switch.
      (using .prg method, not .c as in hbmk bash script)
    + Added support for linux/gpp.
    ; NOTE: Some things still missing:
      - details of *NIX stuff, systems libs, switches,
        etc, etc.
      - -fullstatic not yet supported. [DONE]
      - handling 3rd party libs. These should be supported
        by supplying proper parameter, and we can provide
        example scripts for these libs. Hard-wiring them
        into core Harbour is quite dangerous. [DONE]
      - Built-in support for our contribs. For clear
        separation of components contribs shouldn't be
        referred to in this core component. [DONE]
      - Filtering foreign system libs passed on the command
        line for platforms not needing them. The goal is to
        be able to use as simple and _portable_ hbmk command
        lines as possible. [DONE]
      - "MAIN" function override. I'd rather leave this out,
        and clear up the situation with entry procs.
      - fmstat/nofmstat. It would be good to find a
        more easily manageable way to influence that.
        Current one is make system dependent and a bit hackish.
        [MOVED TO hbmk2.prg]
      - gtsln and gtcrs support. [MOVED TO hbmk2.prg]
      - Watcom, OS/2, *NIX not tested.
      - Support for POCC, DM.
    ; TODO:
      - Switch to portable command lines in hbmk.bat files. [DONE]
        (Win9x will be supported again). [DONE]
      - Remove bin/hbmk*.bat, bin/hbmk*.cmd, util/hbmake/*. [DONE]
      - Cleanup on variable names in hbmk.prg. [MOVED TO hbmk2.prg]

  * tests/testid.prg
    * Minor cleanup.

2009-02-14 17:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    ! Fixes after testing with MSVC and MINGW both static and dynamic mode.

2009-02-14 14:23 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    - Added support for -o option for win/bcc32.

  - tests/hbmk_vc.bat
  - tests/hbmk_b32.bat
  + contrib/hbmysql/utils/hbmk.bat
  - contrib/hbmysql/utils/hbmk_b32.bat
  - contrib/hbmysql/utils/hbmk_vc.bat
  + contrib/hbmysql/tests/hbmk.bat
  - contrib/hbmysql/tests/hbmk_b32.bat
  - contrib/hbmysql/tests/hbmk_vc.bat
  + contrib/hbct/tests/hbmk.bat
  - contrib/hbct/tests/hbmk_b32.bat
  - contrib/hbct/tests/hbmk_vc.bat
  + contrib/hbodbc/tests/hbmk.bat
  - contrib/hbodbc/tests/hbmk_b32.bat
  - contrib/hbodbc/tests/hbmk_vc.bat
  + contrib/xhb/tests/hbmk.bat
  - contrib/xhb/tests/hbmk_b32.bat
  - contrib/xhb/tests/hbmk_vc.bat
  + contrib/hbtpathy/tests/hbmk.bat
  - contrib/hbtpathy/tests/hbmk_b32.bat
  - contrib/hbtpathy/tests/hbmk_vc.bat
  + contrib/hbmsql/tests/hbmk.bat
  - contrib/hbmsql/tests/hbmk_b32.bat
  - contrib/hbmsql/tests/hbmk_vc.bat
  + contrib/hbsqlit3/tests/hbmk.bat
  - contrib/hbsqlit3/tests/hbmk_b32.bat
  - contrib/hbsqlit3/tests/hbmk_vc.bat
  + contrib/hbole/tests/hbmk.bat
  - contrib/hbole/tests/hbmk_b32.bat
  - contrib/hbole/tests/hbmk_vc.bat
  + contrib/hbmzip/tests/hbmk.bat
  - contrib/hbmzip/tests/hbmk_b32.bat
  - contrib/hbmzip/tests/hbmk_vc.bat
  + contrib/hbapollo/tests/hbmk.bat
  - contrib/hbapollo/tests/hbmk_b32.bat
  - contrib/hbapollo/tests/hbmk_vc.bat
  + contrib/hbfbird/tests/hbmk.bat
  - contrib/hbfbird/tests/hbmk_b32.bat
  - contrib/hbfbird/tests/hbmk_vc.bat
  + contrib/hbziparc/tests/hbmk.bat
  - contrib/hbziparc/tests/hbmk_b32.bat
  - contrib/hbziparc/tests/hbmk_vc.bat
  + contrib/hbnf/tests/hbmk.bat
  - contrib/hbnf/tests/hbmk_b32.bat
  - contrib/hbnf/tests/hbmk_vc.bat
  + contrib/hbcurl/tests/hbmk.bat
  - contrib/hbcurl/tests/hbmk_b32.bat
  - contrib/hbcurl/tests/hbmk_vc.bat
  + contrib/rddsql/tests/hbmk.bat
  - contrib/rddsql/tests/hbmk_b32.bat
  - contrib/rddsql/tests/hbmk_vc.bat
  + contrib/hbhpdf/tests/hbmk.bat
  - contrib/hbhpdf/tests/hbmk_b32.bat
  - contrib/hbhpdf/tests/hbmk_vc.bat
  + contrib/rddado/tests/hbmk.bat
  - contrib/rddado/tests/hbmk_b32.bat
  - contrib/rddado/tests/hbmk_vc.bat
  + contrib/gtwvg/tests/hbmk.bat
  - contrib/gtwvg/tests/hbmk_b32.bat
  - contrib/gtwvg/tests/hbmk_vc.bat
  + contrib/hbpgsql/tests/hbmk.bat
  - contrib/hbpgsql/tests/hbmk_b32.bat
  - contrib/hbpgsql/tests/hbmk_vc.bat
  + contrib/rddads/tests/hbmk.bat
  - contrib/rddads/tests/hbmk_b32.bat
  - contrib/rddads/tests/hbmk_vc.bat
  + contrib/hbclipsm/tests/hbmk.bat
  - contrib/hbclipsm/tests/hbmk_b32.bat
  - contrib/hbclipsm/tests/hbmk_vc.bat
  + contrib/hbfimage/tests/hbmk.bat
  - contrib/hbfimage/tests/hbmk_b32.bat
  - contrib/hbfimage/tests/hbmk_vc.bat
  + contrib/hbgd/tests/hbmk.bat
  - contrib/hbgd/tests/hbmk_b32.bat
  - contrib/hbgd/tests/hbmk_vc.bat
  + contrib/hbmisc/tests/hbmk.bat
  - contrib/hbmisc/tests/hbmk_b32.bat
  - contrib/hbmisc/tests/hbmk_vc.bat
  + contrib/hbgf/tests/hbmk.bat
  - contrib/hbgf/tests/hbmk_b32.bat
  - contrib/hbgf/tests/hbmk_vc.bat
  + contrib/hbtip/tests/hbmk.bat
  - contrib/hbtip/tests/hbmk_b32.bat
  - contrib/hbtip/tests/hbmk_vc.bat
  + contrib/hbwin/tests/hbmk.bat
  - contrib/hbwin/tests/hbmk_b32.bat
  - contrib/hbwin/tests/hbmk_vc.bat
  + contrib/hbvpdf/tests/hbmk.bat
  - contrib/hbvpdf/tests/hbmk_b32.bat
  - contrib/hbvpdf/tests/hbmk_vc.bat
  + contrib/hbbtree/tests/hbmk.bat
  - contrib/hbbtree/tests/hbmk_djg.bat
  - contrib/hbbtree/tests/hbmk_b32.bat
  - contrib/hbbtree/tests/hbmk_vc.bat
  + contrib/hbcrypt/tests/hbmk.bat
  - contrib/hbcrypt/tests/hbmk_b32.bat
  - contrib/hbcrypt/tests/hbmk_vc.bat
  + contrib/hbssl/tests/hbmk.bat
  - contrib/hbssl/tests/hbmk_b32.bat
  - contrib/hbssl/tests/hbmk_vc.bat
  + contrib/hbwhat/tests/hbmk.bat
  - contrib/hbwhat/tests/hbmk_b32.bat
  - contrib/hbwhat/tests/hbmk_vc.bat
  - source/rdd/usrrdd/example/hbmk_b32.bat
  - source/rdd/usrrdd/example/hbmk_vc.bat
    % Updated for new hbmk.bat and hbmk.exe.

2009-02-14 13:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmk/hbmk.prg
    + Added linux/owatcom, os2/icc support. (completely untested)

2009-02-14 13:17 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
  * common.mak
  * utils/Makefile
    + Added hbmk to make systems.

  * utils/hbmk/hbmk.prg
    + Update. Second pass, it's now ready for testing. I've
      only tried with BCC yet.
      Please test and if possible update internal setup
      for various platforms/compilers.

2009-02-14 10:49 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/memvars.c
    % small optimization in __MVSAVE()

2009-02-13 22:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + utils/hbmk
  + utils/hbmk/hbmk.prg
  + utils/hbmk/Makefile
    + Added hbmk .prg implementation. First pass, work in progress,
      unfinished. It aims to fully replace hbmk.bat, hbmk_os2.cmd
      and possibly/eventually hbmk bash script, with similar
      functionality. Beyond that it's meant to support all
      compiler/platform combination we happen to have under /config.

2009-02-13 21:57 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/bin/hbmk.bat
    * added more temp envvar cleanup

2009-02-13 20:10 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.bat
  * tests/rddtest/make_c52.bat
  * tests/run_prg.bat
  * tests/hbmk_gnu.bat
  * tests/hbmk_vc.bat
  * tests/hbmk_b32.bat
  * tests/run_prg_all.bat
  * bin/hbmk.bat
  * bin/hbmk_os2.cmd
  * bin/postinst.bat
  * make_vc.bat
  * make_gnu_os2.cmd
  * make_gnu.bat
  * contrib/make_b32_all.bat
  * contrib/mtpl_b32.bat
  * contrib/make_vc_all.bat
  * contrib/mtpl_vc.bat
  * contrib/examples/pp/hbmk.bat
  * contrib/examples/guestbk/hbmk.bat
  * contrib/examples/pe/hbmk.bat
  * contrib/examples/hbsqlit2/tests/hbmk.bat
  * contrib/examples/uhttpd/hbmk.bat
  * contrib/examples/dbu/hbmk.bat
  * contrib/examples/terminal/hbmk.bat
  * contrib/examples/terminal/hbmk_trm_appn.bat
  * contrib/examples/hscript/hbmk.bat
  * contrib/examples/rl/hbmk.bat
  * utils/hbdoc/hbmk.bat
  * utils/hbextern/make_c5x.bat
  * utils/hbmake/hbmk.bat
  * utils/hbtest/make_c5x.bat
  * utils/hbtest/make_xpp.bat
    * Minor formatting.
    * Cleanups to refer to simply 'hbmk'.

  ; TODO: Add support for other than bcc/msvc compiler for
          HB_USER_LIBS. Change HB_USER_LIBS settings to
          contain the raw lib list without extensions.
          This is where batch capabilities end, so this
          might need a .prg rewrite. [CANCELLED]

2009-02-13 19:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    % Compiler detection made faster.

  + contrib/examples/pp/hbmk.bat
  - contrib/examples/pp/hbmk_b32.bat
  - contrib/examples/pp/hbmk_vc.bat
  + contrib/examples/guestbk/hbmk.bat
  - contrib/examples/guestbk/hbmk_b32.bat
  - contrib/examples/guestbk/hbmk_vc.bat
  + contrib/examples/pe/hbmk.bat
  - contrib/examples/pe/hbmk_b32.bat
  - contrib/examples/pe/hbmk_vc.bat
  + contrib/examples/hbsqlit2/tests/hbmk.bat
  - contrib/examples/hbsqlit2/tests/hbmk_b32.bat
  - contrib/examples/hbsqlit2/tests/hbmk_vc.bat
  + contrib/examples/uhttpd/hbmk.bat
  - contrib/examples/uhttpd/hbmk_b32.bat
  - contrib/examples/uhttpd/hbmk_vc.bat
  + contrib/examples/terminal/hbmk.bat
  - contrib/examples/terminal/hbmk_b32.bat
  - contrib/examples/terminal/hbmk_vc.bat
  + contrib/examples/terminal/hbmk_trm_appn.bat
  - contrib/examples/terminal/hbmk_b32_trm_appn.bat
  - contrib/examples/terminal/hbmk_vc_trm_appn.bat
  + contrib/examples/rl/hbmk.bat
  - contrib/examples/rl/hbmk_b32.bat
  - contrib/examples/rl/hbmk_vc.bat
  + utils/hbdoc/hbmk.bat
  - utils/hbdoc/hbmk_b32.bat
  - utils/hbdoc/hbmk_vc.bat
  + utils/hbmake/hbmk.bat
  - utils/hbmake/hbmk_b32.bat
  - utils/hbmake/hbmk_vc.bat
    % Changed to generic make files.

2009-02-13 18:43 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/examples/dbu/hbmk.bat
  - contrib/examples/dbu/hbmk_b32.bat
  - contrib/examples/dbu/hbmk_vc.bat
  + contrib/examples/hscript/hbmk.bat
  - contrib/examples/hscript/hbmk_b32.bat
  - contrib/examples/hscript/hbmk_vc.bat
    % Converted compiler specific make files to generic ones.

2009-02-13 18:36 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added automatic architecture detection on Windows NT and above.
    + Added automatic compiler detection on Windows NT and above.
      (mingw, msvc, bcc32 and owatcom are detected - in that order)
      The given compiler should be properly setup, with compiler
      executable in PATH or current dir.

    ; NOTE: This makes it possible to get rid of all hbmk_b32.bat and
            hbmk_vc.bat files and at the same time automatically
            add support for OpenWatcom and MinGW for all our tests,
            examples, etc. I'll replace all special hbmk_b32.bat
            and hbmk_vc.bat files with generic local hbmk.bat files,
            which can be used with any supported compilers.

2009-02-13 17:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Allow mixing -mt, -gui, -shared, -debug switches
      with the input files.
      So 'hbmk_vc testapp -gui' will now work.

2009-02-13 17:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added support for pure .c projects. (like pp)

  * contrib/examples/pp/hbmk_b32.bat
  * contrib/examples/pp/hbmk_vc.bat
  * contrib/examples/guestbk/hbmk_b32.bat
  * contrib/examples/guestbk/hbmk_vc.bat
  * contrib/examples/pe/hbmk_b32.bat
  * contrib/examples/pe/hbmk_vc.bat
  * contrib/examples/hbsqlit2/tests/hbmk_b32.bat
  * contrib/examples/hbsqlit2/tests/hbmk_vc.bat
  * contrib/examples/uhttpd/hbmk_b32.bat
  * contrib/examples/uhttpd/hbmk_vc.bat
  * contrib/examples/dbu/hbmk_b32.bat
  * contrib/examples/dbu/hbmk_vc.bat
  * contrib/examples/terminal/hbmk_b32.bat
  * contrib/examples/terminal/hbmk_b32_trm_appn.bat
  * contrib/examples/terminal/hbmk_vc.bat
  * contrib/examples/terminal/hbmk_vc_trm_appn.bat
  * contrib/examples/hscript/hbmk_b32.bat
  * contrib/examples/hscript/hbmk_vc.bat
  * contrib/examples/rl/hbmk_b32.bat
  * contrib/examples/rl/hbmk_vc.bat
  * utils/hbdoc/hbmk_b32.bat
  * utils/hbdoc/hbmk_vc.bat
  * utils/hbmake/hbmk_b32.bat
  * utils/hbmake/hbmk_vc.bat
    % Much simplified batch files. Actually the content of vc
      and b32 are fully identical, so you can easily create new
      flavours for GCC and OpenWatcom by simply making a copy by
      the name hbmk_gcc.bat or hbmk_ow.bat. Et voila.
    ; NOTE: As indicated, these won't work with Win9x anymore.

  * contrib/examples/pp/hbppcore.c
    + Added <ctype.h> to make it compile with recent Harbour.

2009-02-13 16:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added detection for .PRG written in uppercase.
      (needed for DBU original sources.)
    ! Fixed to set 'echo off'

  * contrib/examples/guestbk/hbmk_b32.bat
  * contrib/examples/guestbk/hbmk_vc.bat
  * contrib/examples/dbu/hbmk_b32.bat
  * contrib/examples/dbu/hbmk_vc.bat
  * utils/hbdoc/hbmk_b32.bat
  * utils/hbdoc/hbmk_vc.bat
  * utils/hbmake/hbmk_b32.bat
  * utils/hbmake/hbmk_vc.bat
    % Switched to use hbmk instead of using local logic.

  * ChangeLog
    + Added one item to previous entry.

2009-02-13 16:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added autodetection of Harbour dirs. So this batch will
      now work when called from any directories, and even if
      '/bin' dir is added to the PATH. IOW, it's not anymore
      necessary to supply these envvars in normal cases:
      HB_INSTALL_PREFIX, HB_BIN_INSTALL, HB_LIB_INSTALL,
      HB_INC_INSTALL. If someone moves this batch file away
      from its original place, these envvars can still be used
      to point to the Harbour tree, but support for this may
      be removed in the future to keep things simple.
    + Added support for multiple .prg files on the command line.
      The first will be the main program.
    + Added support to supply .c files on the command line.
      [these features need Windows NT or upper]
    - Removed compatibility support for HB_MT=mt. Use HB_MT=yes.
    ; TODO: Test OpenWatcom. I had to remove -fo and FILE
            directives from script, if this was required we
            need to find a solution to support multiple
            input files. [DONE]

  * bin/hbmk_b32.bat
  * bin/hbmk_vc.bat
    + Now these files can be called from any directories and even
      when '/bin' dir is added to the PATH.
    + Added support for unlimited number of command line parameters.
      [these features need Windows NT or upper]
    * Changed to not interfere with 'echo off' setting of the
      caller.

  ; NOTE: After this change it's possible to get rid of all
          non-customized version of hbmk_b32.bat/hbmk_vc.bat
          files in the source tree. I plan to remove these in
          the near future. The rest can be simplified in most
          places. This will only cause some inconvenience
          for developers still using Win95/98/ME.

  + bin/hbmk_gcc.bat
  + bin/hbmk_ow.bat
    + Added make batch files to MingW/GCC and OpenWatcom.

  * contrib/hbwin/win_tprn.prg
    ! Fixed recent typo.

  * include/hbstdgen.ch
    - Removed #undef __FILE__. I understand this isn't needed anymore.

2009-02-13 13:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbver.c
    + Added Windows 7 and Windows Server 2008 R2 detection.

  * source/rtl/dateshb.c
    * Minor formatting.

2009-02-13 12:09 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/examples/terminal/hbmk_b32.bat
  + contrib/examples/terminal/hbmk_b32_trm_appn.bat
  + contrib/examples/terminal/hbmk_vc.bat
  + contrib/examples/terminal/hbmk_vc_trm_appn.bat
    + Added build batches, one generic for client and server,
      and one special for trm_appn.
    ; NOTE: Turn off Unicode when building these apps.

2009-02-13 11:15 UTC+0100 Maurilio Longo (maurilio.longo@libero.it)
  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
    ! fixed a bug on OS/2 MT implementation adding a new function,
      _hb_cond_timed_wait() because when a semaphore gets posted it has
      to be reset, otherwise it does not stop new threads entering it in a wait.

2009-02-13 11:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbpp.h
  * harbour/source/pp/hbpp.c
  * harbour/source/pp/ppcore.c
  * harbour/source/compiler/hbmain.c
    + added support for dynamically calculated #define results
    ! removed old code which was adding __FILE__ #define constant
      It was not working correctly like in other compilers ignoring
      #include
    + added __FILE__ and __LINE__ #define directives using dynamically
      calculated results - now it works as expected respecting #include
      directives and the implementation is local to PP without any hacks
      in core compiler code.

  * harbour/contrib/hbct/files.c
    * added support for optional milliseconds part in HB_FSETDATETIME()/
      HB_FGETDATETIME().

  * harbour/source/rtl/philes.c
    ! minor fix in return value

2009-02-13 10:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
  * contrib/gtwvg/gtwvg.h
  * contrib/gtwvg/wvggui.h
  * contrib/examples/terminal/trm_client.prg
    + Added HB_EXTERN_BEGIN/END.

  * include/hbdefs.h
    + Added some comments from the original mail from Przemek.

2009-02-13 00:29 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgcore.c
    ! Fixed hb_wvt_Get|SetStringAttrib()s to respect return errcode.

  + harbour/contrib/examples/terminal
  + harbour/contrib/examples/terminal/terminal.prg
  + harbour/contrib/examples/terminal/terminal.ch
  + harbour/contrib/examples/terminal/trm_server.prg
  + harbour/contrib/examples/terminal/trm_client.prg
  + harbour/contrib/examples/terminal/trm_appn.prg
  + harbour/contrib/examples/terminal/reame.txt
    + Added components for Harbour Terminal Protocol

    Welcome in the world of Harbour Terminal Protocol
    =================================================

    Harbour Terminal Protocol is build on three components:

    1) Terminal Server
    2) Terminal Client
    3) The Harbour Application

    Terminal Server
    ===============
       Source    => trm_server.prg
       Link      => GTWVG
       Run       => trm_server.exe 2011
       Parameter => <TCP/IP Port number - [D] 8085 ]
       Mode      => MT ( Multi Threaded )

       Terminal Server will reside on the same machine or network ( as of now )
       where Harbour Application resides. Harbour Application must be able
       to be run by ShellExecute() WINAPI function issued by the Terminal Server.


    Terminal Client
    ===============
       Source    => trm_client.prg
       Link      => GTWVG
       Run       => trm_client.exe  <IP - 127.0.0.1 | vouch.dynalias.com>
                                    <Port where Terminal Server is Listening - 2011>
                                    <Harbour Application - c:\harbour\contrib\examples\terminal\trm_appn.exe>
                                    [Parameters - Norammly Supplied to Appln - Separated by SPACE ]
                                    [InitDirectory - Harbour Application's Startup Folder ]
       Mode      => ST ( Single Threaded )

       Terminal Client can be distributed anywhere there is ACCESS TO designated TCP/IP port,
       be it a network clinet or any computer having internet avalable.
       Parameters supplied TO Harbour Client can be on command line or as an .ini file.
       .Ini file may contain these entries:

          ServerIP      =  127.0.0.1 | vouch.dynalias.com
          ServerPort    =  2011
          Application   =  c:\harbour\contrib\examples\terminal\trm_appn.exe
          Parameters    =  any number of parameters separated by a space
          InitDirectory =  Complete Folder path from where Harbour Appln will be invoked.

       IF parameters are supplied as .ini file, then .ini filename ( without path ) will be the
       only parameter - note - only one parameter passed on the command line.


    Harbour Application
    ===================
       Source(s)  => trm_appn.prg | Your program sources +
                     terminal.prg +
                     terminal.ch
       Link       => GTWVG
       Run        => No
       Mode       => ST ( Single Thread )

       Main() FUNCTION in Harbour Application will have TO be modified TO accept
       one additional parameter <cServerInfo> at the END of the usual parameters
       your application is accepting as ususal. And make sure that you send the same
       number of parameter either on the command line or through .ini file.
       <cServerInfo> parameter is supplied by Harbour Terminal Server.

       At just start of the Harbour Application, immediately after variable definitions
       in main() add these lines:

       FUNCTION Main( [p1] [, p2] [, p3], cServerInfo )
          LOCAL x, y

          // Required it initialize the GTWVG window
          SetColor( 'N/W,W/B,W+/N' )
          CLS
          ? ' '

          #ifdef __REMOTE__
             // cServerInfo will be supplied by the Remote Server
             //
             RmtSvrSetInfo( cServerInfo )

             IF ( nServerPort := RmtSvrSetInfo( 1 ) ) <> NIL .and. nServerPort > 0
                IF !RmtSvrInitialize( NTRIM( nServerPort ), 60/*nTimeoutClient*/, 0.5 /*nTimeRefresh*/ )
                   Quit
                ENDIF
             ENDIF
          #endif

          ...
          ...

          RETURN


       Must remember to issue - ANNOUNCE HB_NOSTARTUPWINDOW - somewhere in your sources
       Please note that we do not want to show up the Harbour console on the server so
       HB_NOSTARTUPWINDOW symbol must be defined.

       And this is the only requirement for your appln to be NET ready.


    Technical Overview
    ==================
       Client connects to Server.
       Server looks for a free port - 45000+.
       Server invokes Harbour Application with client supplied parameters + <cSerrverInfo==45000+>.
       Harbour Application itself behaves as server on start listening on designated port.
       Server informs back to Client about this port where Harbour Application is listening.
       Client connects to Harbour Application on designated port.
       If connection is successful, Server closes the connection from Client and Application.
       Client and Application then have the direct communication.
       Client transmits the keystrokes and Application reacts TO those events as IF supplied via keyboard.
       Application transmits the screen buffer back TO client IF there have been any changes.
       Application also transmits special commands, call them 'Remote Procedure Calls'.
       Client responds TO received buffer according TO instruction it contains.
       Client retrieves buffer per command basis.
       Events are not serialized.


    The Bottom Line
    ===============
       The protocol above works as expected but is not as sophisticated as it should be.
       GTNET as Przemek has been talking about will be the perfect solution though this
       can be the basis FOR future enhancements. A lot can be improved, i.e., remote
       printing, etc., which I hope you Gurus can implement in no times.

       It is my humble contribution TO the Harbour world.


    Regards
    Pritpal Bedi <pritpal@vouchcac.com>
    a student of software analysis & design

2009-02-13 09:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddads/rddads.h
    ! Added missing extern directive.

  * contrib/hbwin/common.mak
  * contrib/hbwin/Makefile
    + Added hbwapi.h to installed headers.

2009-02-12 11:43 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  - harbour/include/hbwapi.h
  + harbour/contrib/hbwin/hbwapi.h

2009-02-12 11:23 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/include/hbwapi.h

    As this header will be required fot many libraries in contrib
    I have placed it in core folder. It will pave me the way to
    isolated WINAPI wrappers as discussed earlier. Before I begin to
    shift functions in harbour/contrib/hbwin please feel free to
    include in this header whatever you feel will be required
    for such transition.

2009-02-12 12:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/lang/msgrukoi.c
  * source/lang/msgruwin.c
  * source/lang/msguakoi.c
  * source/lang/msguawin.c
  * source/lang/msgru866.c
  * source/lang/msgua866.c
    ! Fixed date format to be DD.MM.YYYY.

2009-02-12 10:57 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbsetup.h
  * include/hbapi.h
  * source/common/hbprintf.c
  * source/common/hbstr.c
    + Temporarily enabled local hb_snprintf() implementation.
    ; Please test. If it's okay, we can enable it permanently.

  * contrib/rddsql/sddmy/make_b32.bat
  * contrib/rddsql/sddmy/make_vc.bat
  * contrib/rddsql/sddpg/make_b32.bat
  * contrib/rddsql/sddpg/make_vc.bat
  * contrib/rddsql/sddfb/make_b32.bat
  * contrib/rddsql/sddfb/make_vc.bat
    ! Fixed typos for VC flavours.
    % Removed unnecessary INCLUDE path.

  * source/vm/maindllp.c
    ! Updated dll name for Borland and MSVC.

  * source/lang/msguawin.c
  * source/lang/msgua866.c
  * source/lang/msguakoi.c
    ! Fixed corrupted equal char in code.
    ! Fixed date format.
    ! Fixed CP IDs and descriptions in UA866 and UAKOI.
    ! Restored 'CA-Cl*pper' in comment.
    ; Please verify me.

2009-02-12 11:43 UTC+0200 Petr Chornyj (myorg63 at mail.ru)
  * /source/lang/msguawin.c
  * /source/lang/msgua866.c
  * /source/lang/msguakoi.c
    * Minor changes.

2009-02-12 10:49 UTC+0200 Petr Chornyj (myorg63 at mail.ru)
  * /source/lang/msguawin.c
  * /source/lang/msgua866.c
  * /source/lang/msguakoi.c
    * Corrected bad Ukrainian localization

2009-12-11 18:09 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
    - #include "hbwapi.h"

2009-12-11 17:00 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgmenub.prg
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Numerous enhancements and fixes, difficult to remember as
      most are spread over a long time and where I had no means
      to update them. But all are synchronized with changes
      effected till date by others.

2009-02-12 01:17 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/extend.c
    * formatting

  * harbour/contrib/gtwvg/wvgwin.c
    * pacified few warnings

2009-02-11 22:36 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/rddsql/sddfb/make_vc.bat
    * fixed typo
      ; NOTE: Viktor pls check me, this is my first build with MSVC.

2009-02-11 20:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/binnumx.c
    * Added rewritten versions of these functions:
      a proper license: BIN2U(), W2BIN(), U2BIN()
    ; Work of Przemek.

  * source/rtl/binnum.c
    ! Readded old copyright holder as co-holder.

2009-02-11 20:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * COPYING
  * doc/license.txt
  * source/rtl/binnum.c
    * Added rewritten versions of these functions, now with
      a proper license: BIN2W(), BIN2I(), BIN2L(), I2BIN(), L2BIN()
    ; Thanks to Przemek.

2009-02-11 19:47 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/std.ch
  * include/hbclass.ch
  * include/common.ch
    * HB_SYMBOL_UNUSED() moved to std.ch.

2009-02-11 19:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/files.c
  * source/common/hbfsapi.c
  * source/rtl/gtgui/gtgui.c
  * source/rtl/gttone.c
    * W32 -> Windows. In comments.

2009-02-11 19:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/en/diskspac.txt
  * doc/en/terminal.txt
  * doc/en/setmode.txt
  * doc/es/diskspac.txt
  * doc/es/dirstruc.txt
  * doc/inet.txt
  * contrib/hbmysql/readme.txt
  * contrib/hbct/disk.c
  * contrib/hbtpathy/telepath.prg
  * contrib/hbole/tests/testole.prg
  * contrib/gtwvg/gtwvg.c
  * contrib/gtwvg/wvgclass.prg
  * contrib/gtwvg/gtwvg.h
  * contrib/gtwvg/wvggui.c
  * contrib/gtwvg/wvggui.h
  * contrib/gtwvg/wvgwin.c
  * contrib/gtwvg/wvgutils.c
  * contrib/gtwvg/wvgcore.c
  * contrib/hbgf/hbgfos2/winctrl.prg
  * contrib/hbgf/hbgfos2/tform.prg
  * source/common/hbver.c
  * source/rtl/run.c
  * source/rtl/gtwin/gtwin.c
  * source/rtl/oemansi.c
  * source/rtl/gtwvt/gtwvt.h
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/hbrandom.c
  * source/rtl/filesys.c
    * Win32 -> Windows. In comments / docs.

2009-02-11 19:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * COPYING
  * source/rtl/philes.c
    ! Fixed license to have the Harbour exception, in agreement
      with the group and main copyright holders.
    * Minor cleanup to HB_FGETDATETIME().

2009-02-11 19:30 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/include/hbextern.ch
  * harbour/source/rtl/philes.c
    + added HB_FGETDATETIME(). A "brother" of function HB_FGETDATETIME().
    ; TODO: BTW, hb_fs*() functions can get a better precision
      (milliseconds). It would be nice to support it also at .prg level.
      [DONE]

2009-02-11 18:30 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/source/vm/proc.c
    * hb_procname() support for symbol evaluation

2009-02-11 16:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgutils.c
    ! Applied fixes done to WIN_APPENDMENU() to the exact
      same function named WVT_APPENDMENU().
    % Converted WVT_APPENDMENU() to a simple stub redirecting
      the call to WIN_APPENDMENU().

2009-02-11 15:33 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgwin.c
    ! Fixed to use hb_snprintf() instead of unsafe sprintf().
    ! Fixed WIN_APPENDMENU() to not directly modify Harbour string buffer
      (when compiled in non-Unicode mode).
    ! Fixed WIN_APPENDMENU() to modify string _before_ converting it to Unicode.
      (when compiled in Unicode mode).
    ; This clears the GPF previously reported by me.

2009-02-11 15:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/set.c
    ! fixed casting in hb_fsFileExists()

  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgsink.c
    ! fixed WinCE (Unicode) compilation

2009-02-11 14:51 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgsink.c
    * pacified MinGW warnings. This one:
      ../../wvgsink.c:368: warning: comparison of unsigned expression < 0
                                    is always false
      Should be checked by author. Pritpal can you look at it?
      'count' is declared as WORD so it cannot be negative.

2009-02-11 13:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
    * add missing information about optimized hb_fsExtName() in previous
      commit

2009-02-11 10:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    ! Fixed wrong name/e-mail in previous changelog header of mine.

2009-02-11 09:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    * BYTE -> CHAR (Windows) - UNDONE.

  * include/hbdefs.h
    + Added (commented) new types. Work in progress, incomplete.

  * contrib/hbssl/ssl.c
    - Temporary disabled SSL_GET_READ_AHEAD() as a workaround for
      BCC linking problem with SSL_get_read_ahead() OpenSSL
      library function (symbol is unresolved due to missing
      leading underscore in implib generated ssleay32.lib file).

  * source/vm/set.c
    % hb_fsFile() -> hb_fsFileExists()

  * source/rtl/hbffind.c
    * HB_WIN_32_MATCH -> HB_WIN_MATCH

  * doc/whatsnew.txt
  * include/hbsetup.h
  * source/vm/fm.c
    * #define HB_FM_WIN32_ALLOC renamed to HB_FM_WIN_ALLOC.
    ; INCOMPATIBLE: For those who are using this switch, please
                    update your make files.

  * source/rtl/tpopup.prg
    ! Fixed to draw separator lines with BOX GT attributes,
      so that they appear properly.

2009-02-11 02:38 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/cmdarg.c
    + added const char * hb_cmdargARGVN( int argc )

  * harbour/source/vm/cmdarg.c
    * try to convert executable file name argument in argv[0] to
      absolute path if it's relative one. Respect PATH envvar it necessary.

  * harbour/source/common/hbdate.c
    * formatting

  * harbour/source/rtl/philes.c
  * harbour/source/rtl/errorint.c
  * harbour/source/rtl/filesys.c
    ! use hb_cmdargARGVN(n) instead of hb_cmdargARGV()[n] to avoid
      possible GPF if some function will be called before argument
      initialization
    * removed additional logic which tries to convert relative paths
      in file name from hb_fsBaseDirBuff() and HB_PROGNAME() functions
    % use hb_fsFileExists() instead of hb_fsFile() in hb_fsExtName()
      hb_fsExtName() is used by hb_fsExtOpen() and hb_fileExtOpen()
      which are used by RDD code.

2009-02-10 10:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/filesys.c
    ! Fixes for *NIX compilation to latest change.
      Please test. [ some more ]

2009-02-10 10:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/filesys.c
    ! Fixes for *NIX compilation to latest change.
      Please test.

2009-02-10 03:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbssl/Makefile
    + Added new detection dir.

  * source/rtl/gtwvt/gtwvt.c
    + Added support for HB_GTI_BOXCP.
      (available for UNICODE builds only).

  * source/rtl/filesys.c
    + Added (untested) support for *NIX system to
      hb_fsBaseDirBuff() / HB_DIRBASE().

2009-02-10 04:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/classes.c
    * covered some old functions marked as deprecated long time ago
      by HB_LEGACY_LEVEL2 macro

  * harbour/source/rtl/hbgtcore.c
  * harbour/contrib/hbct/ctwin.c
  * harbour/contrib/hbct/keyset.c
  * harbour/contrib/hbct/misc3.c
  * harbour/contrib/hbnf/numlock.c
  * harbour/contrib/hbnf/shift.c
  * harbour/contrib/hbnf/alt.c
  * harbour/contrib/hbnf/ctrl.c
  * harbour/contrib/hbnf/caplock.c
    * use memset( &gtInfo, 0, sizeof( gtInfo ) ); to initialize
      HB_GT_INFO structure - it also fixes possible problems with
      uninitialized pNewVal2 member in few cases.

2009-02-10 02:53 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
  * contrib/rddsql/sddmy/common.mak
  * contrib/rddsql/sddmy/make_b32.bat
  * contrib/rddsql/sddmy/make_vc.bat
  * contrib/rddsql/sddpg/common.mak
  * contrib/rddsql/sddpg/make_b32.bat
  * contrib/rddsql/sddpg/make_vc.bat
  * contrib/rddsql/sddfb/common.mak
  * contrib/rddsql/sddfb/make_b32.bat
  * contrib/rddsql/sddfb/make_vc.bat
    ! Fixed HB_ROOT setting. This fixes a former TOFIX
      in ChangeLog.
      'set HB_ROOT = ..\..\..' was right, but spaces
      aren't accepted around '=', so it wasn't executed.

2009-02-10 02:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapigt.h
  * source/rtl/hbgtcore.c
  * source/rtl/gtfunc.c
    - Removed unnecessary extension to HB_GT_INFO.

2009-02-10 02:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
  * include/hbextern.ch
  * source/vm/runner.c
  * source/rdd/dbcmd.c
    * __HRB*() functions marked as HB_LEGACY_LEVEL2 compatibility,
      please update your code to use HB_HRB*().
    * __RDDGETTEMPALIAS() marked as HB_LEGACY_LEVEL2 compatibility,
      please update your code to use HB_RDDGETTEMPALIAS().
    ; I've permanently remove these symbols from hbextern.ch, so
      regardless of the legacy setting, hbrun won't have them
      anymore. This is merely technical, as it would need some
      hacks in the make system to push through HB_LEGACY_OFF
      to pptable.c generation. If someone wants to deal with
      this, even better.

  * include/hbstdgen.ch
    * Added #undef __FILE__.

  * include/hbsetup.ch
    * Minor.

2009-02-10 01:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
  * include/clipdefs.h
  * include/filesys.api
  * include/gt.api
  * include/hbapi.h
  * include/hbapierr.h
  * include/hbapifs.h
  * include/hbapigt.h
  * include/hbapiitm.h
  * include/hbapirdd.h
  * include/hbdefs.h
  * include/hbgfxdef.ch
  * include/hbgtinfo.ch
  * include/hbsetup.ch
  * include/hbsetup.h
  * include/item.api
  * include/rdd.api
  * source/rtl/errorapi.c
  * source/rtl/filesys.c
  * source/vm/cmdarg.c
  * common.mak
  - source/vm/debugold.c
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
    - Permanently disabled HB_LEGACY_LEVEL support.
    + Added HB_LEGACY_LEVEL2 support to protect some
      recently made incompatible changes. Old methods
      are supported until Harbour 1.2. Please update
      your code until then. To test your code for
      compatibility with recent changes, you can turn
      off legacy support manually by #defining HB_LEGACY_OFF.
      (HB_USER_CFLAGS=-DHB_LEGACY_OFF)
      This is recommended on local systems for all
      Harbour developers.

2009-02-10 01:38 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * Updated uHTTPD (Work in progress)
      + Added support for Sessions
      * Fixed ini file support
  * harbour/contrib/examples/uhttpd/cgifunc.prg
    * Fixed some functions
  + harbour/contrib/examples/uhttpd/session.prg
    + Session class
  * harbour/contrib/examples/uhttpd/modules/info.prg
    + Added display of SESSION vars
    + Added a simple example of SESSIONS
  * harbour/contrib/examples/uhttpd/hbmk_b32.bat
  * harbour/contrib/examples/uhttpd/hbmk_b32.bat
    + Added new files
  + harbour/contrib/examples/uhttpd/sessions
    + Added folder used in samples

2009-02-10 00:50 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    * Updated [DONE] statuses.

2009-02-10 00:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapigt.h
  * source/rtl/gtfunc.c
    + Extended HB_GT_INFO structure with nPCount member.

  * include/hbgtinfo.ch
  * include/hbgtcore.h
  * source/rtl/hbgtcore.c
    + Added HB_GTI_CARGO. This can be used to store whatever
      user defined value on a per GT basis.
      HB_GTINFO( HB_GTI_CARGO[, <xValue ] ) -> <xPrevValue>

  * source/rtl/hbgtcore.c
    ! hb_gt_def_Alert() fixed to also initialize pNewVal2 with NULL.
      (didn't cause any real-world harm).

  * contrib/hbwin/win_tprn.prg
    % Minor optimizations.

2009-02-09 15:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/hsx/hsx.c
    * keep HSX indexes in global table synced by mutex instead of
      using thread storage data (TSD) on HVM stack. It allows to
      move HSX indexes between threads, f.e. when workarea is moved
      by HB_DEATCH()/HB_REQUEST()

2009-02-09 12:43 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/fstemp.c
    ! Added cast for MSVC warning. (this code part was
      formerly only active for non-Windows builds)

  * include/hbapifs.h
  * source/rtl/fstemp.c
  * source/rtl/filebuf.c
    * UCHAR -> BYTE in new FS functions, for consistency.

2009-02-08 22:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapifs.h
  * source/rtl/spfiles.c
    + Added hb_spFileExists(). Same as hb_spFile(), but uses
      the more efficient (especially on networks) hb_fsFileExists()
      call to check for file exitance.
      [ not very elegant solution, as I've just copied the
      whole function, and changed the file existance call, maybe
      a worker function + passing the check function pointer
      could help, but the hb_fsFile() and hb_fsFileExists() workings
      differ slightly. ]

  * source/rdd/dbfntx/dbfntx1.c
  * source/rdd/dbfnsx/dbfnsx1.c
  * source/rdd/dbfcdx/dbfcdx1.c
  * source/rdd/dbf1.c
    % Using hb_spFileExists() instead of hb_spFile().
      This API also works for dirs where user doesn't have file listing
      rights, which may create a slight incompatibility by finding
      files which weren't found by former method (and by Clipper).
      C:\WINDOWS\TEMP\*.* were such when logged in as non-admin user,
      but this dir is only used as a default TEMP dir for DOS programs.
      Please speak up if you find this issue (or something else) to
      be problem.

  * source/rtl/file.c
    * File naming standardized.

  * doc/whatsnew.txt
    * Minor updates.

2009-02-08 20:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
    + Started 1.1.0 whatsnew section. Incomplete.
      Please, review, extend, reorder, proofread, etc.

2009-02-08 18:06 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    * BYTE -> CHAR (Windows)

  * contrib/hbct/ctwin.c
  * contrib/hbct/ctwin.h
    + Added hb_ctwGetPosWindows() to find out which window
      is visible on a given physical screen coordinate.

  * make_b32.mak
  * make_gcc.mak
  * make_vc.mak
    * Formatting.

  * include/hbdefs.h
    + Added type HB_COLOR to replace current BYTE.
    * Minor formatting.

  * contrib/rddsql/sddfb/make_b32.bat
  * contrib/rddsql/sddfb/make_vc.bat
  * contrib/rddsql/sddmy/make_b32.bat
  * contrib/rddsql/sddmy/make_vc.bat
  * contrib/rddsql/sddpg/make_b32.bat
  * contrib/rddsql/sddpg/make_vc.bat
    * Minor cleanup.

  * source/vm/hvm.c
  * source/vm/memvars.c
    * Added varnames to prototypes.

2009-02-07 02:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/fstemp.c
    * casting for C++ mode

2009-02-07 01:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapifs.h
  * include/hbextern.ch
  * source/rtl/fstemp.c
  * source/rtl/filebuf.c
    + Added hb_fsCreateTempEx(). Similar to hb_fsCreateTemp(),
      but allows to control the extension. Note, that the
      ordering of parameters ha slightly changed compared to
      hb_fsCreateTemp().
    + Added hb_fileCreateTempEx(). See above.
    + Added Harbour level HB_FTEMPCREATEEX(). See above.
      HB_FTEMPCREATEEX( @<cName>, <cDir>, <cPrefix>, <cExt> ) -> <nHandle>
    ; Please review & test.

2009-02-07 00:27 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/dbgentry.c
    % Using HB_ISFIRSTIDCHAR() and HB_ISNEXTIDCHAR() macros.

2009-02-07 00:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/Makefile
  - include/hbfixdj.h
  * include/hbsetup.h
    - Removed file no longer needed. Harbour no longer uses
      is*()/toupper()/tolower() calls, or <ctype.h>.

  * source/rtl/gtpca/gtpca.c
    % Removed #include <ctype.h>.

2009-02-07 00:22 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdefs.h
  * harbour/include/hbapi.h
    * moved HB_ISSPACE(), HB_ISFIRSTIDCHAR() and HB_ISNEXTIDCHAR() from
      hbapi.h to hbdefs.h
    + HB_ISXDIGIT() macro

  * harbour/include/hbpp.h
    * updated other HB_PP_IS*() macros definitions to internally use HB_IS*()
      ones

  * harbour/source/rtl/fstemp.c
    ! fixed unterminated ASCIIZ string

   TODO: new macros HB_CHARVAL( c ), HB_CHARXVAL( c ),
                    HB_VALDIGIT( i ), HB_VALXDIGIT( i )

2009-02-06 23:47 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * harbour-wce-spec
  * harbour-win-spec
  * harbour.spec
  * make_b32.bat
  * make_b32.mak
  * make_gcc.mak
  * make_gcc.sh
  * make_gnu.bat
  * make_gnu.sh
  * make_gnu_os2.cmd
  * make_gnu_xmingw.sh
  * make_gnu_xmingwce.sh
  * make_vc.bat
  * make_vc.mak
  * mpkg_tgz.sh
  * bin/hb-func.sh
  * bin/hb-mkslib.sh
  * bin/hbmk.bat
  * bin/hbmk_os2.cmd
  * bin/postinst.sh
  * config/bin.cf
  * config/bsd/gcc.cf
  * config/darwin/gcc.cf
  * config/dos/bcc16.cf
  * config/dos/djgpp.cf
  * config/dos/owatcom.cf
  * config/dos/rsx32.cf
  * config/hpux/gcc.cf
  * config/lib.cf
  * config/linux/gcc.cf
  * config/linux/owatcom.cf
  * config/os2/gcc.cf
  * config/os2/icc.cf
  * config/rules.cf
  * config/sunos/gcc.cf
  * config/win/bcc32.cf
  * config/win/dm.cf
  * config/win/gcc.cf
  * config/win/icc.cf
  * config/win/mingw.cf
  * config/win/mingwce.cf
  * config/win/msvc.cf
  * config/win/msvcce.cf
  * config/win/owatcom.cf
  * config/win/pocc.cf
  * config/win/pocc64.cf
  * config/win/poccce.cf
  * config/win/rsxnt.cf
  * config/win/xcc.cf
  * contrib/gtalleg/Makefile
  * contrib/hbapollo/Makefile
  * contrib/hbcurl/Makefile
  * contrib/hbfbird/Makefile
  * contrib/hbfimage/Makefile
  * contrib/hbgd/Makefile
  * contrib/hbgd/tests/hbmk_b32.bat
  * contrib/hbgd/tests/hbmk_vc.bat
  * contrib/hbgf/hbgfgtk/Makefile
  * contrib/hbhpdf/Makefile
  * contrib/hbmysql/Makefile
  * contrib/hbodbc/Makefile
  * contrib/hbpgsql/Makefile
  * contrib/hbssl/Makefile
  * contrib/hbtip/ChangeLog
  * contrib/hbwhat/Makefile
  * contrib/hbwhat/tests/hbmk_b32.bat
  * contrib/hbwhat/tests/hbmk_vc.bat
  * contrib/mtpl_b32.bat
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_gcc.sh
  * contrib/mtpl_vc.bat
  * contrib/mtpl_vc.mak
  * contrib/rddads/Makefile
  * contrib/rddsql/sddfb/Makefile
  * contrib/rddsql/sddmy/Makefile
  * contrib/rddsql/sddpg/Makefile
  * doc/es/tracing.txt
  * doc/gmake.txt
  * doc/tracing.txt
  * include/hbapi.h
  * source/main/harbour.c
  * source/pp/hbpp.c
  * source/rdd/dbffpt/Makefile
  * source/vm/cmdarg.c
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
  * tests/multifnc/Makefile
  * tests/testid.prg
  * utils/hbdoc/Makefile
  * utils/hbi18n/Makefile
  * utils/hbmake/hbmake.prg
  * utils/hbmake/Makefile
  * utils/hbrun/Makefile
  * utils/hbtest/Makefile
    * Renamed remaining build configration envvars:
      - PRG_USR -> HB_USER_PRGFLAGS
      - C_USR   -> HB_USER_CFLAGS
      - L_USR   -> HB_USER_LDFLAGS
      - A_USR   -> HB_USER_AFLAGS
      - MK_USR  -> HB_USER_MAKEFLAGS
      (finally settled with HB_USER* instead of HB_USR*,
      this also means that HB_USER_LIBS was kept unchanged.)
    ; Please update your environment.
      You may use these commands to make it easy:
      gsar -o -sPRG_USR -rHB_USER_PRGFLAGS  *
      gsar -o -sC_USR   -rHB_USER_CFLAGS    *
      gsar -o -sL_USR   -rHB_USER_LDFLAGS   *
      gsar -o -sA_USR   -rHB_USER_AFLAGS    *
      gsar -o -sMK_USR  -rHB_USER_MAKEFLAGS *

2009-02-06 23:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbpp.h
    * Minor rearrangement of previous state.
      Still referencing HB_ISDIGIT() and HB_TOUPPER(), one time
      each.

  * contrib/xhb/hbxml.c
    * isspace() -> HB_ISSPACE(). HB_ISSPACE() should be
      revised in the future if Unicode is used, but until
      then this is fine here.

  * ChangeLog
    * Marked one TODO as [CANCELLED].

2009-02-06 22:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
  * contrib/make_vc_all.bat
    * Corrected to always build rddsql (not just when MYSQL
      is configured).

  * contrib/rddsql/make_b32.bat
  * contrib/rddsql/make_vc.bat
  * contrib/rddsql/make_gcc.sh
    + Added logic to build sdds.
      (logic copied from contrib/make_*_all.* files)

  * contrib/rddsql/sddfb/make_b32.bat
  * contrib/rddsql/sddfb/make_vc.bat
  * contrib/rddsql/sddfb/Makefile
    * FBIRD -> FIREBIRD to be in sync with hbfbird setup.

  * contrib/rddsql/sddfb/fbirddd.c
    + Added hack (from hbfbird) to make it work with latest
      FB and BCC versions.

2009-02-06 21:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
    - Removed HB_ISSPACE(). It was already defined.

  * include/hbset.h
  * contrib/hbct/ctwin.c
  * contrib/hbct/ctwin.h
  * source/vm/set.c
    * BYTE -> UCHAR

2009-02-06 20:02 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/codepage/cptr857.c
  * source/codepage/cphu852s.c
  * source/codepage/cphuwins.c
  * source/codepage/cphuisos.c
  * source/codepage/cpes850c.c
    ! Fixed accents Far Manager (one of its new plugins probably)
      messed up.

2009-02-06 19:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
    + Added HB_ISALNUM() macro.
    + Added HB_ISSPACE() macro. Please review.

  * source/contrib/hbver.c
    * isspace() -> HB_ISSPACE().

  * contrib/rddads/ads1.c
    ! toupper() -> HB_TOUPPER()

  * contrib/xhb/hbxml.c
    + Readded #include <ctype.h> because this one still uses isspace().

  * include/hbcomp.h
  * include/hbmacro.h
  * contrib/hbct/token1.c
  * contrib/hbodbc/odbc.c
  * contrib/xhb/freadlin.c
  * contrib/rddsql/sqlmix.c
  * contrib/gtwvg/gtwvg.h
  * contrib/gtwvg/wvggui.h
  * contrib/rddads/adsx.c
  * contrib/rddads/ads1.c
  * contrib/hbclipsm/time.c
  * contrib/hbclipsm/status.c
  * contrib/hbmisc/dates2.c
  * contrib/hbwin/win_ole.c
  * contrib/examples/pp/pp.c
  * source/debug/dbgentry.c
  * source/common/hbver.c
  * source/rtl/chrasc.c
  * source/rtl/philes.c
  * source/rtl/dirdrive.c
  * source/rtl/dateshb.c
  * source/rtl/philesx.c
  * source/rtl/disksphb.c
  * source/rtl/soundex.c
  * source/rtl/gtapi.c
  * source/rtl/filesys.c
  * source/codepage/cppt850.c
  * source/codepage/cpuawin.c
  * source/codepage/cpde850.c
  * source/codepage/cpsv850.c
  * source/codepage/cpeswinc.c
  * source/codepage/cptr857.c
  * source/codepage/cpru866.c
  * source/codepage/cproiso.c
  * source/codepage/cprowin.c
  * source/codepage/cpeswinm.c
  * source/codepage/cpes850.c
  * source/codepage/cpcs852.c
  * source/codepage/cpitisb.c
  * source/codepage/cphu852.c
  * source/codepage/cpsk852.c
  * source/codepage/cpplmaz.c
  * source/codepage/cpesisoc.c
  * source/codepage/cppliso.c
  * source/codepage/cpbgmik.c
  * source/codepage/cpplwin.c
  * source/codepage/cpbg866.c
  * source/codepage/cpltwin.c
  * source/codepage/cphu852s.c
  * source/codepage/cpptiso.c
  * source/codepage/cpel737.c
  * source/codepage/cpsrwin.c
  * source/codepage/cpsviso.c
  * source/codepage/cpdeiso.c
  * source/codepage/cpfr850.c
  * source/codepage/cpsvwin.c
  * source/codepage/cpdewin.c
  * source/codepage/cphr437.c
  * source/codepage/cpes850c.c
  * source/codepage/cphr852.c
  * source/codepage/cpua866.c
  * source/codepage/cpit850.c
  * source/codepage/cpit437.c
  * source/codepage/cpsl437.c
  * source/codepage/cpsl852.c
  * source/codepage/cphuwins.c
  * source/codepage/cpcsiso.c
  * source/codepage/cpesiso.c
  * source/codepage/cpcswin.c
  * source/codepage/cpeswin.c
  * source/codepage/cphuiso.c
  * source/codepage/cpskiso.c
  * source/codepage/cprukoi.c
  * source/codepage/cphuwin.c
  * source/codepage/cpskwin.c
  * source/codepage/cp_tpl.c
  * source/codepage/cpruiso.c
  * source/codepage/cpruwin.c
  * source/codepage/cphuisos.c
  * source/codepage/cpelwin.c
  * source/codepage/cpro852.c
  * source/codepage/cpfriso.c
  * source/codepage/cpfrwin.c
  * source/codepage/cpitiso.c
  * source/codepage/cphrwin.c
  * source/codepage/cpsliso.c
  * source/codepage/cpitwin.c
  * source/codepage/cpslwin.c
  * source/codepage/cpcskam.c
  * source/codepage/cpsvclip.c
  * source/codepage/cpbgiso.c
  * source/codepage/cptrwin.c
  * source/codepage/cpskkam.c
  * source/codepage/cpbgwin.c
  * source/codepage/cpuakoi.c
  * source/codepage/cppl852.c
  * utils/hbdoc/hbdfrdln.c
  * utils/hbmake/hbmfrdln.c
    % Removed #include <ctype.h>. Most of these didn't need it anyway.

2009-02-06 18:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
    + Added HB_ISALNUM() macro.

  * include/hbpp.h
  * include/hbapicdp.h
  * contrib/hbct/pos1.c
  * contrib/hbct/ascpos.c
  * contrib/xhb/hbxml.c
  * contrib/hbtip/utils.c
  * contrib/examples/pp/hbppcore.c
  * source/vm/itemapi.c
  * source/vm/memvars.c
  * source/vm/set.c
  * source/vm/classes.c
  * source/debug/dbgentry.c
  * source/common/hbstr.c
  * source/common/expropt2.c
  * source/rtl/strcase.c
  * source/rtl/cdpapi.c
  * source/rtl/is.c
  * source/rtl/transfrm.c
  * source/rtl/dates.c
  * source/rtl/natmsg.c
  * source/rtl/soundex.c
  * source/rtl/hbffind.c
  * source/rdd/workarea.c
  * source/compiler/hbmain.c
  * source/compiler/harbour.yyc
  * source/compiler/harbour.y
    * Replaced:
      isdigit() -> HB_ISDIGIT()
      isalpha() -> HB_ISALPHA()
      isalnum() -> HB_ISALNUM()
      isupper() -> HB_ISUPPER()
      islower() -> HB_ISLOWER()
      tolower() -> HB_TOLOWER()
      toupper() -> HB_TOUPPER()

  * source/rtl/natmsg.c
    ! Fixed to use CP sensitive case conversion in
      __NATISNEGATIVE() and __NATISAFFIRM().

  * source/rtl/is.c
    ! Fixed typo in recently added hb_charIsUpper()/hb_charIsLower()
      functions.

  ; TODO: Remove DJGPP to*() hack. (or should we keep it to
          support foreign code, like hbpcre and hbzlib?) [DONE]
  ; TODO: Replace HB_PP_UPPER(), HB_PP_ISDIGIT() with equivalent
          new macros. [CANCELLED]
  ; TODO: Remove remaining #include <ctype.h> lines. [DONE]

  ; TOFIX: Some of the above macros should better be replaced
           by CP sensitive versions. F.e. the one in hbtip.

2009-02-06 17:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
    + Added macros:
      HB_TOUPPER(), HB_TOLOWER(), HB_ISUPPER(), HB_ISLOWER(),
      HB_ISALPHA(), HB_ISDIGIT().

  * source/rtl/strcase.c
  * source/compiler/cmdcheck.c
    * Replaced tolower()/toupper()/isdigit() with macros or other
      constructs.

  * source/rtl/tmenusys.prg
    % Changed to use Inkey() second parameter instead of
      tweaking Set( _SET_EVENTMASK ).

  * contrib/rddads/ads1.c
    * Minor formatting.

2009-02-06 13:46 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/harbour-win-spec
    ! fixed CRLF=>LF

  * harbour/harbour-win-spec
  * harbour/harbour-wce-spec
  * harbour/harbour.spec
    * set svn attributes

2009-02-06 12:29 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    * pacified warning

  * harbour/source/rtl/philesx.c
    ! fixed typo

2009-02-06 11:52 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbproces.c
    * removed always false condition for #if expression

2009-02-06 11:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/estack.c
    ! added missing HB_STACK_TLS_PRELOAD

2009-02-06 11:26 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/philes.c
  * harbour/source/rtl/dirdrive.c
  * harbour/source/rtl/philesx.c
  * harbour/source/rtl/filesys.c
    ! fixed CURDRIVE() and DISKNAME() to not return "A" in OS-es which
      does not use drive letters
    ! eliminated toupper()
    % minor cleanup and speed improvement

  * harbour/config/bin.cf
  * harbour/config/test.cf
    * removed quoting for TOP=$(GRANDP) nested GNU make call parameters

2009-02-06 10:55 UTC+0100 Maurilio Longo (maurilio.longo@libero.it)
  * config/os2/dir.cf
    * use $(COMSPEC) instead of calling cmd.exe directly
  * config/os2/gcc.cf
    * rewrote create_library rule to work with make -jn without
      breaking shell environment/command line size.
  * source/rtl/hbproces.c
    * included sys/waith.h in OS/2 build. I think that initial
      #defines can be simplified a bit.
  * config/os2/install.cf
    * rewrote install_rule to work with make -jn without
      breaking shell environment/command line size.
  * config/lib.cf
    * removed unnecessary double quotes around TOP definition

2009-02-06 00:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    ! fixed typo in one internal function name

  * harbour/include/hbapi.h
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/dynsym.c
  * harbour/source/vm/memvars.c
    % changed code used for memvars clear in MT mode - it greatly
      reduce the cost of HVM thread exit
    % changed code for memvars copping/sharing when thread is started
      it greatly reduce the time of thread creation when existing memvars
      are shared or copied
   Both modifications reduced the cost of simple
      hb_threadJoin( hb_threadCreate( {|| NIL } ) )
   few times depending on number of symbols and memvars.

  * harbour/source/rtl/gttrm/gttrm.c
  * harbour/source/rtl/gtsln/gtsln.c
  * harbour/source/rtl/gtsln/gtsln.h
  * harbour/source/rtl/gtpca/gtpca.c
    % added better initial cursor position detection and eliminated sscanf()

  * harbour/source/Makefile
    ! fixed concurrent dependencies in cross builds

2009-02-05 10:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddado/adordd.prg
    ! Fixed HB_SYMOL_USED() -> HB_SYMBOL_UNUSED()
    * Formatting.

  * mpkg_rpm.sh
  * harbour.spec
    * -with hbhpdf -> -with libharu
      This should also fix hbhpdf to libharu in generated
      rpm name. Please test.

  * contrib/hbwin/win_prn2.c
  * contrib/hbwin/win_prn1.c
    * Minor cleanups, formatting.

2009-02-04 02:20 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/rddsql/sddfb/make_b32.bat
    * removed 'echo on' I've left for debugging purpose some time ago

2009-02-04 23:55 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-win-spec
    ! Fixed some accents messed up in latest changes.

2009-02-04 23:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/cmdcheck.c
  * source/compiler/hbmain.c
  * source/compiler/hbusage.c
    * Minor rename.

2009-02-04 23:23 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbwince.h
  * include/hb_io.h
  * include/hbwmain.c
  * include/hbthread.h
  * include/hbsetup.h
  * include/hbmath.h
  * include/hbassert.h
  * contrib/gtwvg/gtwvg.c
  * contrib/gtwvg/gtwvg.h
  * contrib/gtwvg/wvggui.c
  * contrib/gtwvg/wvggui.h
  * contrib/gtwvg/wvgutils.c
  * contrib/hbwin/win_prn2.c
  * contrib/hbwin/win_dll.c
  * contrib/hbwin/win_prn1.c
  * contrib/examples/pp/pp.c
  * contrib/examples/pp/hbppcore.c
  * source/pp/hbpp.c
  * source/vm/fm.c
  * source/vm/extrap.c
  * source/main/harbour.c
  * source/common/hbver.c
  * source/common/hbwince.c
  * source/rtl/diskspac.c
  * source/rtl/hbgtcore.c
  * source/rtl/gtclip.c
  * source/rtl/gtstd/gtstd.c
  * source/rtl/disksphb.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/seconds.c
  * source/rtl/filebuf.c
  * source/rtl/hbproces.c
  * source/rtl/gtwvt/gtwvt.h
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/fssize.c
  * source/rtl/hbinet.c
  * source/rtl/gtsys.c
  * source/rtl/filesys.c
    * HB_WINCE -> HB_OS_WIN_CE.
      Now all OS branching #defines are in the HB_OS_* namespace.
      Please use the new name from now on.

2009-02-04 23:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tget.prg
  * source/rtl/tgetx.prg
  * source/rtl/tbcolumn.prg
  * source/rtl/tbrowse.prg
    * Reset internal name of GET(), TBROWSE(), TBCOLUMN(),
      because even if Clipper doesn't have such public
      symbols, Class(y) has them, and we want to maintain
      compatibility.

  * include/hbextern.ch
    + Added GET, TBROWSE, TBCOLUMN.

2009-02-04 23:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/hbsqlit2/tests/hbmk_b32.bat
  * contrib/examples/hbsqlit2/tests/hbmk_vc.bat
  * contrib/gtwvg/tests/hbmk_b32.bat
  * contrib/gtwvg/tests/hbmk_vc.bat
  * contrib/hbapollo/tests/hbmk_b32.bat
  * contrib/hbapollo/tests/hbmk_vc.bat
  * contrib/hbclipsm/tests/hbmk_b32.bat
  * contrib/hbclipsm/tests/hbmk_vc.bat
  * contrib/hbcrypt/tests/hbmk_b32.bat
  * contrib/hbcrypt/tests/hbmk_vc.bat
  * contrib/hbct/tests/hbmk_b32.bat
  * contrib/hbct/tests/hbmk_vc.bat
  * contrib/hbcurl/tests/hbmk_b32.bat
  * contrib/hbcurl/tests/hbmk_vc.bat
  * contrib/hbfbird/tests/hbmk_b32.bat
  * contrib/hbfbird/tests/hbmk_vc.bat
  * contrib/hbfimage/tests/hbmk_b32.bat
  * contrib/hbfimage/tests/hbmk_vc.bat
  * contrib/hbgd/tests/hbmk_b32.bat
  * contrib/hbgd/tests/hbmk_vc.bat
  * contrib/hbgf/tests/hbmk_b32.bat
  * contrib/hbgf/tests/hbmk_vc.bat
  * contrib/hbhpdf/tests/hbmk_b32.bat
  * contrib/hbhpdf/tests/hbmk_vc.bat
  * contrib/hbmisc/tests/hbmk_b32.bat
  * contrib/hbmisc/tests/hbmk_vc.bat
  * contrib/hbmsql/tests/hbmk_b32.bat
  * contrib/hbmsql/tests/hbmk_vc.bat
  * contrib/hbmysql/tests/hbmk_b32.bat
  * contrib/hbmysql/tests/hbmk_vc.bat
  * contrib/hbmysql/utils/hbmk_b32.bat
  * contrib/hbmysql/utils/hbmk_vc.bat
  * contrib/hbmzip/tests/hbmk_b32.bat
  * contrib/hbmzip/tests/hbmk_vc.bat
  * contrib/hbnf/tests/hbmk_b32.bat
  * contrib/hbnf/tests/hbmk_vc.bat
  * contrib/hbodbc/tests/hbmk_b32.bat
  * contrib/hbodbc/tests/hbmk_vc.bat
  * contrib/hbole/tests/hbmk_b32.bat
  * contrib/hbole/tests/hbmk_vc.bat
  * contrib/hbpgsql/tests/hbmk_b32.bat
  * contrib/hbpgsql/tests/hbmk_vc.bat
  * contrib/hbsqlit3/tests/hbmk_b32.bat
  * contrib/hbsqlit3/tests/hbmk_vc.bat
  * contrib/hbssl/tests/hbmk_b32.bat
  * contrib/hbssl/tests/hbmk_vc.bat
  * contrib/hbtip/tests/hbmk_b32.bat
  * contrib/hbtip/tests/hbmk_vc.bat
  * contrib/hbtpathy/tests/hbmk_b32.bat
  * contrib/hbtpathy/tests/hbmk_vc.bat
  * contrib/hbvpdf/tests/hbmk_b32.bat
  * contrib/hbvpdf/tests/hbmk_vc.bat
  * contrib/hbwhat/tests/hbmk_b32.bat
  * contrib/hbwhat/tests/hbmk_vc.bat
  * contrib/hbwin/tests/hbmk_b32.bat
  * contrib/hbwin/tests/hbmk_vc.bat
  * contrib/hbziparc/tests/hbmk_b32.bat
  * contrib/hbziparc/tests/hbmk_vc.bat
  * contrib/rddado/tests/hbmk_b32.bat
  * contrib/rddado/tests/hbmk_vc.bat
  * contrib/rddads/tests/hbmk_b32.bat
  * contrib/rddads/tests/hbmk_vc.bat
  * contrib/rddsql/tests/hbmk_b32.bat
  * contrib/rddsql/tests/hbmk_vc.bat
  * contrib/xhb/tests/hbmk_b32.bat
  * contrib/xhb/tests/hbmk_vc.bat
  * source/rdd/usrrdd/example/hbmk_b32.bat
  * source/rdd/usrrdd/example/hbmk_vc.bat
  * tests/hbmk_b32.bat
  * tests/hbmk_vc.bat
    * HB_ARCHITECTURE w32 -> win transition. Pass 2.
    ; NOTE: HB_ARCHITECURE=w32 still works, but it's
            strongly recommended to switch to 'win'.

2009-02-04 23:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * bin/hb-mkslib.sh
  * bin/hbmk.bat
  * bin/hbmk_b32.bat
  * bin/hbmk_vc.bat
  * bin/pack_src.sh
  * bin/postinst.bat
  * contrib/examples/uhttpd/modules/bldhrb.bat
  * contrib/gtwvg/Makefile
  * contrib/hbct/ctflist.txt
  * contrib/hbgf/hbgfwin/Makefile
  * contrib/hbgf/Makefile
  * contrib/hbodbc/Makefile
  * contrib/hbole/Makefile
  * contrib/hbtpathy/Makefile
  * contrib/hbwhat/Makefile
  * contrib/hbwin/Makefile
  * contrib/make_gcc_all.sh
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_gcc.sh
  * contrib/mtpl_vc.mak
  * doc/dirstruc.txt
  * doc/es/dirstruc.txt
  * doc/funclist.txt
  * doc/gmake.txt
  * harbour-wce-spec
  * harbour-win-spec
  * make_b32.mak
  * make_gcc.mak
  * make_gcc.sh
  * make_gnu.bat
  * make_gnu.sh
  * make_gnu_xmingw.sh
  * make_gnu_xmingwce.sh
  * make_vc.mak
  * Makefile
  * mpkg_tgz.sh
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
  - config/w32
  + config/win
    * HB_ARCHITECTURE w32 -> win transition. Pass 1.

2009-02-04 22:11 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
  * make_gcc.sh
  * make_gnu.sh
    + All of these now accept 'win' instead of 'w32'.

  * make_gcc.sh
  * make_gnu.sh
  * make_gnu_xmingwce.sh
  * make_gnu_xmingw.sh
    ! Indentation fixed.

2009-02-04 21:59 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbgtcore.h
  * contrib/gtwvg/gtwvg.c
  * contrib/gtwvg/wvggui.c
  * source/rtl/gtclip.c
  * source/rtl/gttone.c
  * source/rtl/gtkbstat.c
  * source/rtl/gtgui/gtgui.c
  * source/rtl/gtwin/gtwin.c
  * source/rtl/gtwvt/gtwvt.c
    * hb_gt_w32_*() internal functions renamed to hb_gt_winapi_*().

2009-02-04 21:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddado/tests/hbmk_b32.bat
  * contrib/rddado/tests/hbmk_vc.bat
    ! hbw32.lib -> hbwin.lib

  * source/vm/set.c
    ! Fixed HB_OS_W32 (non-existing) macro to HB_OS_WIN.
      It caused that device names were not uppercased in Windows
      builds, which wasn't fatal.

2009-02-04 19:20 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/tbcolumn.prg
  * source/rtl/tbrowse.prg
  * source/rtl/tget.prg
  * source/rtl/tgetx.prg
    ! Using new method to solve the GET()/TBROWSE()/TBCOLUMN()
      symbol problem (these aren't public symbols in Clipper).
      The method used is the one already implemented for other
      C53 CUI classes.
      This allows inheritance, doesn't mess up the class name,
      and won't declare above public symbols.
    * Moved Xbase++ compatible GET()/TBROWSE()/TBCOLUMN()
      functionality into separate classes, all inheriting from
      original Harbour classes. This means that Xbase++
      compatible methods are only accessible when using the
      derived classes. The separation will allow us to
      move XPP (and other HB_COMPAT_*) compatible functionality
      into separate libraries in the future, allowing more
      freedom to resolve clashing features, symbol names, etc..
    * Xbase++ compatible classes are named: xpp_Get(),
      xpp_TBrowse(), xpp_TBColumn(). This is a slight
      incompatibility compared to Xbase++ and also to
      previous Harbour. Technically it seems possible
      to give them the names GET()/TBROWSE()/TBCOLUMN(), if
      the class is defined in a different file, but let's first
      discuss it.

  * source/rtl/tgetint.prg
    * Using GetNew() instead of Get():New().

    ; Finally I didn't use '( ... )' to pass parameters in GetNew(),
      as it's a tiny bit less efficient with -gc3.

  * include/hbusrrdd.ch
  * include/hbapi.h
    + Comment.

2009-02-04 14:42 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * common.mak
  * source/rtl/Makefile
  + source/rtl/tgetx.prg
  * source/rtl/tget.prg
  * source/rtl/tgetint.prg
    + CA-Cl*pper compatible GET class renamed to HBGet and
      is now always available regardless of feature settings.
    * Xbase++ compatible GET class named Get(), moved to separate
      file and now inherits from HBGet, plus implements
      additional functionality also in the separate file.
    * GetNew() moved to tget.prg from tgetint.prg.
    * Code changed to use HBGet():New() instead of Get():New().
    ; TOFIX: After above changes, Xbase++ compatiblity
             methods are no longer available for regular
             GETs, only if they are explicitly created
             using Get():New(). If this is a problem for someone
             we can start thinking of a solution. [OK]
    ; TODO: Do the same with TBrowse() and TColumn(). [DONE]

2009-02-04 09:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_tprn.prg
    * Formatting.

  * contrib/hbwin/win_prn1.c
  * contrib/hbwin/win_prn2.c
    * Cleanups, formatting.
    + Added WIN_ABORTDOC()
      (Windows API compatible equivalent of WIN_ENDDOC( .T. ))

  * contrib/hbwin/win_misc.c
    ! Fixed returning handle from WIN_RUNDETACHED().

  * contrib/hbwin/tests/testprn.prg
    ! Fix to prev commit.

2009-02-04 02:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_prn1.c
    ! Typo in prev commit.

2009-02-04 02:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_prn1.c
    + Added support to pass HDCs as numeric parameters
      to all Harbour level functions.
      This allows them to behave as generic Windows API wrappers,
      and makes WIN_MULDIV(), WIN_RECTANGLE(), WIN_SETBKMODE()
      fully compatible with parallel GTWVG implementations, so
      duplicated can now be removed from there.

2009-02-04 01:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/arrays.c
    ! protection against possible GPF in hb_rAscan() if user block
      reduces the array size

  * harbour/source/debug/tbrwtext.prg
    ! fixed source color text to be more Clipper compatible.
      Borrowed from xHarbour by Phil Krylov

  * harbour/source/debug/debugger.prg
    ! added missing :forceStable() to refresh the screen after break point
      setting

2009-02-04 01:09 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/extend.api
  * include/hbgtcore.h
  * include/hbwince.h
  * include/hbthread.h
  * include/hbdefs.h
  * include/hbsetup.h
  * include/hbapi.h
  * include/clipdefs.h
  * include/hbatomic.h
  * contrib/hbmysql/mysql.c
  * contrib/hbct/ctnet.c
  * contrib/hbct/files.c
  * contrib/hbct/dattime3.c
  * contrib/hbct/disk.c
  * contrib/hbodbc/odbc.c
  * contrib/xhb/hboutdbg.c
  * contrib/xhb/hbsyslog.c
  * contrib/xhb/filestat.c
  * contrib/hbmsql/msql.c
  * contrib/hbole/ole2.c
  * contrib/hbmzip/hbmzip.c
  * contrib/hbapollo/apollo.c
  * contrib/hbfbird/firebird.c
  * contrib/hbnf/descendn.c
  * contrib/hbnf/getenvrn.c
  * contrib/rddsql/sqlmix.c
  * contrib/gtwvg/gtwvg.c
  * contrib/gtwvg/wvggui.c
  * contrib/gtwvg/wvgwin.c
  * contrib/gtwvg/wvgutils.c
  * contrib/gtwvg/wvgcore.c
  * contrib/rddads/adsx.c
  * contrib/rddads/rddads.h
  * contrib/rddads/adsmgmnt.c
  * contrib/rddads/adsfunc.c
  * contrib/rddads/ads1.c
  * contrib/hbfimage/fi_winfu.c
  * contrib/hbfimage/fi_wrp.c
  * contrib/hbgd/gd.ch
  * contrib/hbgd/gdwrp.c
  * contrib/hbgf/hbgfwin/winapi.c
  * contrib/hbtip/utils.c
  * contrib/hbtip/ChangeLog
  * contrib/hbwin/win_prn2.c
  * contrib/hbwin/win_osc.c
  * contrib/hbwin/win_misc.c
  * contrib/hbwin/win_prt.c
  * contrib/hbwin/win_dll.c
  * contrib/hbwin/win_ole.c
  * contrib/hbwin/win_prn1.c
  * contrib/hbwin/win_regc.c
  * contrib/hbssl/sslsess.c
  * contrib/hbssl/sslrand.c
  * contrib/hbwhat/whtdate.c
  * contrib/hbwhat/whtini.c
  * contrib/hbwhat/whtcret.c
  * contrib/hbwhat/whthead.c
  * contrib/hbwhat/whtilst.c
  * contrib/hbwhat/whtreg.c
  * contrib/hbwhat/whtclpb.c
  * contrib/hbwhat/whtmous.c
  * contrib/hbwhat/whtrgn.c
  * contrib/hbwhat/whtmeta.c
  * contrib/hbwhat/whttbar.c
  * contrib/hbwhat/whtrect.c
  * contrib/hbwhat/whtbrsh.c
  * contrib/hbwhat/whtgdi.c
  * contrib/hbwhat/whtdlg.c
  * contrib/hbwhat/whtview.c
  * contrib/hbwhat/whtsys.c
  * contrib/hbwhat/whtmain.c
  * contrib/hbwhat/whtwnd.c
  * contrib/hbwhat/whtmmcap.c
  * contrib/hbwhat/whtfont.c
  * contrib/hbwhat/whtdir.c
  * contrib/hbwhat/whtbmp.c
  * contrib/hbwhat/whtkbrd.c
  * contrib/hbwhat/whtpen.c
  * contrib/hbwhat/whttext.c
  * contrib/hbwhat/whtdc.c
  * contrib/hbwhat/whtdraw.c
  * contrib/examples/uhttpd/socket.c
  * contrib/examples/uhttpd/uhttpdc.c
  * source/vm/mainwin.c
  * source/vm/maindll.c
  * source/vm/maindllh.c
  * source/vm/hvm.c
  * source/vm/cmdarg.c
  * source/vm/maindllp.c
  * source/vm/fm.c
  * source/vm/extrap.c
  * source/vm/thread.c
  * source/vm/dynlibhb.c
  * source/vm/set.c
  * source/common/hbgete.c
  * source/common/hbver.c
  * source/common/hbfsapi.c
  * source/common/hbwince.c
  * source/common/hbdate.c
  * source/rtl/diskspac.c
  * source/rtl/console.c
  * source/rtl/gtwin/gtwin.c
  * source/rtl/fserror.c
  * source/rtl/hbgtcore.c
  * source/rtl/gtclip.c
  * source/rtl/fstemp.c
  * source/rtl/idle.c
  * source/rtl/oemansi.c
  * source/rtl/disksphb.c
  * source/rtl/net.c
  * source/rtl/gtgui/gtgui.c
  * source/rtl/seconds.c
  * source/rtl/gttone.c
  * source/rtl/hbproces.c
  * source/rtl/gtkeycod.c
  * source/rtl/version.c
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/hbrandom.c
  * source/rtl/hbinet.c
  * source/rtl/hbffind.c
  * source/rtl/gtsys.c
  * source/rtl/filesys.c
  * source/rtl/gtkbstat.c
  * source/rtl/isprint.c
  * source/compiler/cmdcheck.c
  * utils/hbmake/hbmlang.c
    * #defines renamed to be bitwidth-independent.
      - HB_OS_WIN_32_USED -> HB_OS_WIN_USED
      - HB_OS_WIN_32      -> HB_OS_WIN
    ; Please modify your code accordingly.

  * include/hbdefs.h
  * include/hbsetup.h
    + Added compatibility to still understand HB_OS_WIN_32_USED,
      and to #define HB_OS_WIN_32 in addition to HB_OS_WIN.
      This means that old code will still work, but these
      compatibility features will be removed in the future,
      so it's recommended to change the code as above.

2009-02-04 00:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/dirstruc.txt
  - contrib/hbtpathy/tpwin32.c
  + contrib/hbtpathy/tpwin.c
  * contrib/hbtpathy/common.mak
  * contrib/hbtpathy/Makefile
    * Cleaned some 'win32'/'w32' to 'win'.

2009-02-04 00:29 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_reg.prg
  * contrib/hbwin/win_osc.c
  * contrib/hbwin/win_os.prg
  * contrib/hbwin/win_tprn.prg
  * contrib/hbwin/win_tprt.prg
  * contrib/hbwin/win_dll.c
  * contrib/hbwin/win_prn1.c
  * contrib/hbwin/win_regc.c
  * contrib/hbwin/tests/testreg.prg
  * contrib/hbwin/tests/testole.prg
    * Renaming hbwin lib functions to a common and bitwidth-neutral
      namespace, which is WIN_*():
      - W32_REGPATHSPLIT()            -> WIN_REGPATHSPLIT()
      - W32_REGREAD()                 -> WIN_REGREAD()
      - W32_REGWRITE()                -> WIN_REGWRITE()
      - WIN32_REGCREATEKEYEX()        -> WIN_REGCREATEKEYEX()
      - WIN32_REGOPENKEYEX()          -> WIN_REGOPENKEYEX()
      - WIN32_REGQUERYVALUEEX()       -> WIN_REGQUERYVALUEEX()
      - WIN32_REGSETVALUEEX()         -> WIN_REGSETVALUEEX()
      - WIN32_REGCLOSEKEY()           -> WIN_REGCLOSEKEY()

  * contrib/hbwin/win_tprn.prg
  * contrib/hbwin/win_prn1.c
  * contrib/hbwin/tests/testprn.prg
    * Renaming hbwin lib functions/classes to a common and bitwidth-neutral
      namespace, which is WIN_*():
      - WIN32PRN class -> WIN_PRN class.
      - WIN32BMP class -> WIN_BMP class.
      - WIN32_ARC()                   -> WIN_ARC()
      - WIN32_BITMAPSOK()             -> WIN_BITMAPSOK()
      - WIN32_CREATEDC()              -> WIN_CREATEDC()
      - WIN32_CREATEFONT()            -> WIN_CREATEFONT()
      - WIN32_DELETEDC()              -> WIN_DELETEDC()
      - WIN32_DRAWBITMAP()            -> WIN_DRAWBITMAP()
      - WIN32_ELLIPSE()               -> WIN_ELLIPSE()
      - WIN32_ENDDOC()                -> WIN_ENDDOC()
      - WIN32_ENDPAGE()               -> WIN_ENDPAGE()
      - WIN32_ENUMFONTS()             -> WIN_ENUMFONTS()
      - WIN32_FILLRECT()              -> WIN_FILLRECT()
      - WIN32_GETCHARSIZE()           -> WIN_GETCHARSIZE()
      - WIN32_GETDEVICECAPS()         -> WIN_GETDEVICECAPS()
      - WIN32_GETEXEFILENAME()        -> WIN_GETEXEFILENAME()
      - WIN32_GETPRINTERFONTNAME()    -> WIN_GETPRINTERFONTNAME()
      - WIN32_GETTEXTSIZE()           -> WIN_GETTEXTSIZE()
      - WIN32_LINETO()                -> WIN_LINETO()
      - WIN32_LOADBITMAPFILE()        -> WIN_LOADBITMAPFILE()
      - WIN32_MULDIV()                -> WIN_MULDIV()
      - WIN32_OS_ISWIN9X()            -> WIN_OS_ISWIN9X()
      - WIN32_RECTANGLE()             -> WIN_RECTANGLE()
      - WIN32_SETBKMODE()             -> WIN_SETBKMODE()
      - WIN32_SETCOLOR()              -> WIN_SETCOLOR()
      - WIN32_SETDOCUMENTPROPERTIES() -> WIN_SETDOCUMENTPROPERTIES()
      - WIN32_SETMAPMODE()            -> WIN_SETMAPMODE()
      - WIN32_SETPEN()                -> WIN_SETPEN()
      - WIN32_STARTDOC()              -> WIN_STARTDOC()
      - WIN32_STARTPAGE()             -> WIN_STARTPAGE()
      - WIN32_TEXTOUT()               -> WIN_TEXTOUT()

  ; INCOMPATIBLE. Please update your source code.

2009-02-03 18:51 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    * casting to pacify warning. The code is correct.

2009-02-03 18:24 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/en/hb_api.txt
  * doc/en/hb_apird.txt
  * include/hbrdddbf.h
  * include/hbrddcdx.h
  * include/hbapi.h
  * include/hbrddfpt.h
  * include/hbrddntx.h
  * contrib/hbct/dbftools.c
  * contrib/rddado/adordd.prg
  * contrib/hbpgsql/pgrdd.prg
  * contrib/rddads/adsx.c
  * contrib/rddads/adsfunc.c
  * contrib/examples/rdddbt/hbrdddbt.h
  * contrib/examples/rdddbt/dbfdbt1.c
  * source/vm/hvm.c
  * source/vm/memvars.c
  * source/debug/dbgentry.c
    * SUCCESS -> HB_SUCCESS
    * FAILURE -> HB_FAILURE
    * ERRCODE -> HB_ERRCODE
    ; Migration finished.

2009-02-03 17:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    ! Fixed for OpenWatcom 1.8. (SM_REMOTESESSION wasn't defined)

2009-02-03 16:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbrddcdx.h
  * contrib/rddsql/sddmy/mysqldd.c
  * contrib/rddsql/sddpg/pgsqldd.c
  * contrib/rddsql/sddfb/fbirddd.c
  * contrib/rddsql/hbrddsql.h
  * contrib/rddsql/sqlbase.c
  * contrib/rddsql/sqlmix.c
  * contrib/rddado/adordd.prg
  * contrib/rddads/rddads.h
  * contrib/rddads/adsfunc.c
  * contrib/rddads/ads1.c
  * contrib/hbbmcdx/bmdbfcdx.c
  * contrib/hbbmcdx/hbbmcdx.h
    * SUCCESS -> HB_SUCCESS
    * FAILURE -> HB_FAILURE
    * ERRCODE -> HB_ERRCODE

2009-02-03 15:27 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapirdd.h
  * source/rdd/dbcmd.c
  * source/rdd/dbcmd53.c
  * source/rdd/dbcmdx.c
  * source/rdd/dbdetach.c
  * source/rdd/dbf1.c
  * source/rdd/dbsql.c
  * source/rdd/delim1.c
  * source/rdd/hbdbsort.c
  * source/rdd/sdf1.c
  * source/rdd/wacore.c
  * source/rdd/wafunc.c
  * source/rdd/workarea.c
  * source/rdd/dbfcdx/dbfcdx1.c
  * source/rdd/dbffpt/dbffpt1.c
  * source/rdd/dbfnsx/dbfnsx1.c
  * source/rdd/dbfntx/dbfntx1.c
  * source/rdd/hbsix/sxcrypt.c
  * source/rdd/hbsix/sxord.c
  * source/rdd/hbsix/sxtable.c
  * source/rdd/hsx/hsx.c
  * source/rdd/nulsys/nulsys.c
  * source/rdd/usrrdd/rdds/arrayrdd.prg
  * source/rdd/usrrdd/rdds/fcomma.prg
  * source/rdd/usrrdd/rdds/hscdx.prg
  * source/rdd/usrrdd/rdds/logrdd.prg
  * source/rdd/usrrdd/rdds/rlcdx.prg
  * source/rdd/usrrdd/usrrdd.c
    * SUCCESS -> HB_SUCCESS
    * FAILURE -> HB_FAILURE
    * ERRCODE -> HB_ERRCODE

2009-02-03 15:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapigt.h
  * contrib/hbct/screen1.c
  * source/rtl/console.c
  * source/rtl/hbrunfun.c
  * source/rtl/gx.c
  * source/rtl/gtapi.c
    * SUCCESS -> HB_SUCCESS
    * FAILURE -> HB_FAILURE
    * ERRCODE -> HB_ERRCODE

2009-02-03 14:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbusrrdd.ch
  * include/hbapi.h
    + Added HB_SUCCESS, HB_FAILURE on .prg level, too.
    * SUCCESS, FAILURE, ERRCODE as compatibility.
    * Minor cleanup.

  ; TODO: Switch to HB_* versions inside Harbour tree. [DONE]

2009-02-03 14:19 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/doc/Makefile
  * harbour/doc/es/Makefile
    * updated file list

  * harbour/debian/rules
    ! changed to use documentation files installed by harbour install phase
      Please test.

2009-02-03 12:58 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_gcc.sh
    + added some Solaris libraries necessary to link Harbour applications
      using sockets

  * harbour/make_gnu.sh
    * look also for pure curses header files for GTCRS compilation.
      GTCRS can be compiled with CURSES not only NCURSES.
    * enable -fPIC in SunOS and HPUX builds

  * harbour/mpkg_tgz.sh
    * enable -fPIC in SunOS builds

  * harbour/make_gcc.mak
    * do not use -Wl,--start-group/-Wl,--end-group in SunOS, HPUX and Darwin
      builds

  * harbour/config/hpux/gcc.cf
    * small cleanup in comment

2009-02-03 11:45 UTC+0100 Lorenzo Fiorini (lorenzo.fiorini/at/gmail.com)
  * contib/xhb/hblognet.prg
    * fixed thread function names

2009-02-03 03:02 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/mpkg_deb.sh
  * harbour/make_gnu_xmingwce.sh
  * harbour/tests/transtst.prg
  * harbour/tests/wcecon.prg
  * harbour/tests/foreach2.prg
  * harbour/tests/rto_get.prg
  * harbour/tests/memtst.prg
  * harbour/tests/gtwin.prg
  * harbour/tests/mt/mttest08.prg
  * harbour/tests/mt/mttest09.prg
  * harbour/tests/mt/mttest01.prg
  * harbour/tests/mt/mttest10.prg
  * harbour/tests/mt/mttest02.prg
  * harbour/tests/mt/mttest11.prg
  * harbour/tests/mt/mttest03.prg
  * harbour/tests/mt/mttest12.prg
  * harbour/tests/mt/mttest04.prg
  * harbour/tests/mt/mttest05.prg
  * harbour/tests/mt/mttest06.prg
  * harbour/tests/mt/mttest07.prg
  * harbour/tests/speedtst.prg
  * harbour/tests/hsxtest.prg
  * harbour/tests/rto_tb.prg
  * harbour/tests/multifnc/t0.prg
  * harbour/tests/multifnc/t1.prg
  * harbour/tests/multifnc/t2.prg
  * harbour/tests/multifnc/Makefile
  * harbour/tests/gtchars.prg
  * harbour/tests/aliaslck.prg
  * harbour/tests/gtcolors.prg
  * harbour/tests/gtkeys.prg
  * harbour/make_gcc.sh
  * harbour/mpkg_rpm_win.sh
  * harbour/doc/howtosvn.txt
  * harbour/doc/howtobld.txt
  * harbour/make_gnu_os2.cmd
  * harbour/include/hbrddnsx.h
  * harbour/include/hbsxdef.ch
  * harbour/include/hbwince.h
  * harbour/include/hbwmain.c
  * harbour/include/hbthread.h
  * harbour/include/hbsix.ch
  * harbour/include/hbvmint.h
  * harbour/include/hbassert.h
  * harbour/include/hbthread.ch
  * harbour/include/hbatomic.h
  * harbour/mpkg_rpm_wce.sh
  * harbour/source/hbextern/hbextern.prg
  * harbour/source/hbextern/Makefile
  * harbour/source/lang/msgptiso.c
  * harbour/source/vm/dlmalloc.c
  * harbour/source/vm/vmmt/Makefile
  * harbour/source/vm/thread.c
  * harbour/source/vm/mainwin/Makefile
  * harbour/source/vm/vm.c
  * harbour/source/debug/dbgtinp.prg
  * harbour/source/common/hbprintf.c
  * harbour/source/common/hbwince.c
  * harbour/source/common/hbfopen.c
  * harbour/source/rtl/tscalars.c
  * harbour/source/rtl/hbi18n2.prg
  * harbour/source/rtl/gui.prg
  * harbour/source/rtl/getsys53.prg
  * harbour/source/rtl/hbfile.c
  * harbour/source/rtl/tscalard.c
  * harbour/source/rtl/tscalarh.c
  * harbour/source/rtl/tbrowsys.prg
  * harbour/source/rtl/tscalarl.c
  * harbour/source/rtl/gtchrmap.c
  * harbour/source/rtl/tscalarp.c
  * harbour/source/rtl/oemansix.c
  * harbour/source/rtl/hbrunfun.c
  * harbour/source/rtl/strc.c
  * harbour/source/rtl/gttrm/Makefile
  * harbour/source/rtl/gttrm/gttrm.c
  * harbour/source/rtl/dirscan.prg
  * harbour/source/rtl/tthreadx.prg
  * harbour/source/rtl/tscalara.c
  * harbour/source/rtl/hbhex.c
  * harbour/source/rtl/inkeyapi.c
  * harbour/source/rtl/filebuf.c
  * harbour/source/rtl/tscalaru.c
  * harbour/source/rtl/tmenusys.prg
  * harbour/source/rtl/secondfs.c
  * harbour/source/rtl/hbproces.c
  * harbour/source/rtl/menusys.prg
  * harbour/source/rtl/gtkeycod.c
  * harbour/source/rtl/typefilx.prg
  * harbour/source/rtl/natmsgu.c
  * harbour/source/rtl/thfuncx.prg
  * harbour/source/rtl/tscalarb.c
  * harbour/source/rtl/hbini.prg
  * harbour/source/rtl/tscalar.prg
  * harbour/source/rtl/mouse53.c
  * harbour/source/rtl/hbprocfn.c
  * harbour/source/rtl/tscalarn.c
  * harbour/source/rtl/strtoexp.c
  * harbour/source/rtl/einstvar.prg
  * harbour/source/rtl/hbstrsh.c
  * harbour/source/rtl/gtkbstat.c
  * harbour/source/rtl/hbbit.c
  * harbour/source/rtl/tscalarc.c
  * harbour/source/codepage/cpsv850.c
  * harbour/source/codepage/cpeswinm.c
  * harbour/source/codepage/cpsk852.c
  * harbour/source/codepage/ucmik.c
  * harbour/source/codepage/cpbgmik.c
  * harbour/source/codepage/cpsvwin.c
  * harbour/source/codepage/cpskiso.c
  * harbour/source/codepage/cpskwin.c
  * harbour/source/codepage/cpsvclip.c
  * harbour/source/codepage/cpskkam.c
  * harbour/source/rdd/dbjoinx.prg
  * harbour/source/rdd/dblistx.prg
  * harbour/source/rdd/rddinfo.c
  * harbour/source/rdd/dbtotalx.prg
  * harbour/source/rdd/dbstruxx.prg
  * harbour/source/rdd/dbsortx.prg
  * harbour/source/rdd/dbdetach.c
  * harbour/source/rdd/dbcmdx.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
  * harbour/source/rdd/dbfnsx/Makefile
  * harbour/source/rdd/dbdrop.c
  * harbour/source/rdd/dbupdatx.prg
  * harbour/source/rdd/dbcmd53.c
  * harbour/source/rdd/usrrdd/example/exlog.prg
  * harbour/source/rdd/usrrdd/example/exarr.prg
  * harbour/source/rdd/usrrdd/rdds/logrdd.prg
  * harbour/source/rdd/dbfuncsx.prg
  * harbour/source/rdd/dbexists.c
  * harbour/source/rdd/hbsix/sxsem.c
  * harbour/source/rdd/hbsix/sxord.c
  * harbour/source/rdd/hbsix/sxredir.c
  * harbour/source/rdd/hbsix/sxini.prg
  * harbour/source/rdd/hbsix/sxfname.c
  * harbour/source/rdd/hbsix/sxtable.c
  * harbour/source/rdd/hbsix/sxcompat.prg
  * harbour/source/rdd/hbsix/sxtrig.prg
  * harbour/source/rdd/hbsix/sxutil.c
  * harbour/source/rdd/fieldhb.c
  * harbour/source/compiler/compi18n.c
  * harbour/contrib/hbmysql/common.mak
  * harbour/contrib/hbmysql/make_gcc.sh
  * harbour/contrib/hbmysql/make_vc.bat
  * harbour/contrib/make_b32_all.bat
  * harbour/contrib/hbct/screen2.c
  * harbour/contrib/hbct/charsprd.c
  * harbour/contrib/hbct/dbftools.c
  * harbour/contrib/hbct/make_gcc.sh
  * harbour/contrib/hbct/ctrand.prg
  * harbour/contrib/hbct/getsecrt.prg
  * harbour/contrib/hbct/ctdisk.ch
  * harbour/contrib/hbct/keysec.prg
  * harbour/contrib/hbct/maxline.c
  * harbour/contrib/hbct/getinput.prg
  * harbour/contrib/hbct/video.c
  * harbour/contrib/hbct/screen3.prg
  * harbour/contrib/hbct/dattime3.c
  * harbour/contrib/hbct/lton.c
  * harbour/contrib/hbct/cursor.c
  * harbour/contrib/hbct/keytime.prg
  * harbour/contrib/hbct/misc2.c
  * harbour/contrib/hbct/color.c
  * harbour/contrib/hbct/cttime.prg
  * harbour/contrib/hbct/ctvideo.ch
  * harbour/contrib/hbct/showtime.prg
  * harbour/contrib/hbct/numcount.c
  * harbour/contrib/hbct/pack.c
  * harbour/contrib/hbct/setlast.c
  * harbour/contrib/hbct/setrc.c
  * harbour/contrib/hbct/like.c
  * harbour/contrib/hbct/disk.c
  * harbour/contrib/hbct/ctstrfil.c
  * harbour/contrib/hbct/ctstrfil.h
  * harbour/contrib/hbct/getinfo.prg
  * harbour/contrib/hbct/numline.c
  * harbour/contrib/hbct/scrmark.prg
  * harbour/contrib/hbct/dattime2.c
  * harbour/contrib/hbct/keysave.prg
  * harbour/contrib/hbct/common.mak
  * harbour/contrib/hbct/misc3.c
  * harbour/contrib/hbct/expand.c
  * harbour/contrib/hbct/fcopy.prg
  * harbour/contrib/hbct/ctpad.c
  * harbour/contrib/hbct/datetime.c
  * harbour/contrib/hbct/blank.prg
  * harbour/contrib/xhb/hboutdbg.c
  * harbour/contrib/xhb/dbgfx.prg
  * harbour/contrib/xhb/hbcompat.h
  * harbour/contrib/xhb/hblog.ch
  * harbour/contrib/xhb/hbcompat.ch
  * harbour/contrib/xhb/xhbenum.c
  * harbour/contrib/xhb/hblognet.prg
  * harbour/contrib/xhb/hbxml.c
  * harbour/contrib/xhb/xhbmsgs.c
  * harbour/contrib/xhb/xhbqself.c
  * harbour/contrib/xhb/dirrec.prg
  * harbour/contrib/xhb/hbxml.h
  * harbour/contrib/xhb/make_gcc.sh
  * harbour/contrib/xhb/xhbarr.c
  * harbour/contrib/xhb/xhb.h
  * harbour/contrib/xhb/hbctypes.ch
  * harbour/contrib/xhb/xhb.ch
  * harbour/contrib/xhb/hbsyslog.c
  * harbour/contrib/xhb/txml.prg
  * harbour/contrib/xhb/wintypes.ch
  * harbour/contrib/xhb/sprintf.prg
  * harbour/contrib/xhb/Makefile
  * harbour/contrib/xhb/dbgfxc.c
  * harbour/contrib/xhb/cstruct.ch
  * harbour/contrib/xhb/hblog.prg
  * harbour/contrib/xhb/hbstruct.prg
  * harbour/contrib/xhb/xhbcomp.prg
  * harbour/contrib/xhb/hbstruct.ch
  * harbour/contrib/xhb/xhbextrn.ch
  * harbour/contrib/xhb/hbfast.h
  * harbour/contrib/xhb/xhbwith.c
  * harbour/contrib/xhb/hbcomprs.c
  * harbour/contrib/xhb/common.mak
  * harbour/contrib/xhb/hbxml.ch
  * harbour/contrib/xhb/hblogdef.ch
  * harbour/contrib/xhb/cstructc.c
  * harbour/contrib/xhb/xhbfunc.c
  * harbour/contrib/xhb/cstruct.prg
  * harbour/contrib/hbodbc/common.mak
  * harbour/contrib/hbodbc/make_gcc.sh
  * harbour/contrib/hbodbc/make_vc.bat
  * harbour/contrib/hbgt/common.mak
  * harbour/contrib/hbgt/make_gcc.sh
  * harbour/contrib/hbmsql/common.mak
  * harbour/contrib/hbmsql/tests/hbmk_b32.bat
  * harbour/contrib/hbmsql/tests/hbmk_vc.bat
  * harbour/contrib/hbmsql/make_gcc.sh
  * harbour/contrib/hbmsql/make_b32.bat
  * harbour/contrib/hbmsql/make_vc.bat
  * harbour/contrib/mtpl_b32.bat
  * harbour/contrib/mtpl_b32.mak
  * harbour/contrib/hbmzip/crypt.h
  * harbour/contrib/hbmzip/make_gcc.sh
  * harbour/contrib/hbole/common.mak
  * harbour/contrib/hbole/oleauto.prg
  * harbour/contrib/hbole/ole2.c
  * harbour/contrib/hbole/tests/testole.prg
  * harbour/contrib/hbole/tests/hbmk_b32.bat
  * harbour/contrib/hbole/make_gcc.sh
  * harbour/contrib/hbole/make_b32.bat
  * harbour/contrib/hbole/make_vc.bat
  * harbour/contrib/hbole/Makefile
  * harbour/contrib/make_gcc_all.sh
  * harbour/contrib/hbfbird/common.mak
  * harbour/contrib/hbfbird/tests/simple.prg
  * harbour/contrib/hbfbird/tests/test.prg
  * harbour/contrib/hbfbird/tests/stress.prg
  * harbour/contrib/hbfbird/tests/testapi.c
  * harbour/contrib/hbfbird/tests/hbmk_b32.bat
  * harbour/contrib/hbfbird/tests/Makefile
  * harbour/contrib/hbfbird/make_gcc.sh
  * harbour/contrib/hbfbird/firebird.c
  * harbour/contrib/hbfbird/make_b32.bat
  * harbour/contrib/hbfbird/tfirebrd.prg
  * harbour/contrib/hbfbird/make_vc.bat
  * harbour/contrib/hbfbird/readme.txt
  * harbour/contrib/hbfbird/Makefile
  * harbour/contrib/hbapollo/common.mak
  * harbour/contrib/hbapollo/make_gcc.sh
  * harbour/contrib/hbapollo/make_vc.bat
  * harbour/contrib/make_vc_all.bat
  * harbour/contrib/hbziparc/common.mak
  * harbour/contrib/hbziparc/make_gcc.sh
  * harbour/contrib/hbnf/ftshadow.c
  * harbour/contrib/hbnf/make_gcc.sh
  * harbour/contrib/hbnf/iamidle.c
  * harbour/contrib/hbnf/fttext.c
  * harbour/contrib/hbnf/setkeys.c
  * harbour/contrib/hbnf/common.mak
  * harbour/contrib/hbnf/ftisprn.c
  * harbour/contrib/hbnf/putkey.c
  * harbour/contrib/hbnf/setlastk.c
  * harbour/contrib/rddsql/sddfb/Makefile
  * harbour/contrib/hbhpdf/tests/harupdf.prg
  * harbour/contrib/hbhpdf/tests/files/cp936.txt
  * harbour/contrib/hbhpdf/tests/files/elic_jp.txt
  * harbour/contrib/hbhpdf/tests/files/sjis.txt
  * harbour/contrib/hbhpdf/tests/files/euc.txt
  * harbour/contrib/hbhpdf/tests/files/cp932.txt
  * harbour/contrib/hbhpdf/harupdf.ch
  * harbour/contrib/hbhpdf/harupdf.c
  * harbour/contrib/rddado/common.mak
  * harbour/contrib/rddado/make_gcc.sh
  * harbour/contrib/rddado/make_vc.bat
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/wvglistb.prg
  * harbour/contrib/gtwvg/make_b32.bat
  * harbour/contrib/gtwvg/wvgmle.prg
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgpushb.prg
  * harbour/contrib/gtwvg/wvggui.h
  * harbour/contrib/gtwvg/wvgsle.prg
  * harbour/contrib/gtwvg/wvgtreev.prg
  * harbour/contrib/gtwvg/make_gcc.sh
  * harbour/contrib/gtwvg/tests/demoxbp.prg
  * harbour/contrib/gtwvg/tests/demowvg.prg
  * harbour/contrib/gtwvg/wvgdatar.prg
  * harbour/contrib/gtwvg/wvgradio.prg
  * harbour/contrib/gtwvg/make_vc.bat
  * harbour/contrib/gtwvg/wincallb.c
  * harbour/contrib/gtwvg/Makefile
  * harbour/contrib/gtwvg/wvgsysw.prg
  * harbour/contrib/gtwvg/wvgmenub.prg
  * harbour/contrib/gtwvg/wvgbitmp.prg
  * harbour/contrib/gtwvg/wvtwin.ch
  * harbour/contrib/gtwvg/wvgcheck.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/common.mak
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvghtmlv.prg
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wincback.prg
  * harbour/contrib/gtwvg/wvg3stat.prg
  * harbour/contrib/gtwvg/wvgcombo.prg
  * harbour/contrib/mtpl_gcc.mak
  * harbour/contrib/hbpgsql/common.mak
  * harbour/contrib/hbpgsql/tests/hbmk_b32.bat
  * harbour/contrib/hbpgsql/make_gcc.sh
  * harbour/contrib/hbpgsql/make_vc.bat
  * harbour/contrib/rddads/unixutils.h
  * harbour/contrib/rddads/common.mak
  * harbour/contrib/rddads/make_gcc.sh
  * harbour/contrib/mtpl_gcc.sh
  * harbour/contrib/hbclipsm/common.mak
  * harbour/contrib/hbclipsm/make_gcc.sh
  * harbour/contrib/hbclipsm/make_vc.bat
  * harbour/contrib/hbfimage/common.mak
  * harbour/contrib/hbfimage/tests/fitest.prg
  * harbour/contrib/hbfimage/tests/hbmk_b32.bat
  * harbour/contrib/hbfimage/make_gcc.sh
  * harbour/contrib/hbfimage/fi_winfu.c
  * harbour/contrib/hbfimage/fi_wrp.c
  * harbour/contrib/hbfimage/make_b32.bat
  * harbour/contrib/hbfimage/make_vc.bat
  * harbour/contrib/hbfimage/readme.txt
  * harbour/contrib/hbfimage/Makefile
  * harbour/contrib/hbfimage/freeimage.ch
  * harbour/contrib/hbgd/common.mak
  * harbour/contrib/hbgd/make_gcc.sh
  * harbour/contrib/hbgd/make_vc.bat
  * harbour/contrib/hbmisc/common.mak
  * harbour/contrib/hbmisc/make_gcc.sh
  * harbour/contrib/hbtip/encurl.prg
  * harbour/contrib/hbtip/thtml.prg
  * harbour/contrib/hbtip/thtml.ch
  * harbour/contrib/hbtip/utils.c
  * harbour/contrib/hbtip/popcln.prg
  * harbour/contrib/hbtip/sendmail.prg
  * harbour/contrib/hbtip/tip.ch
  * harbour/contrib/hbtip/cgi.prg
  * harbour/contrib/hbtip/url.prg
  * harbour/contrib/hbtip/encqp.prg
  * harbour/contrib/hbtip/base64x.c
  * harbour/contrib/hbtip/common.mak
  * harbour/contrib/hbtip/make_gcc.sh
  * harbour/contrib/hbtip/httpcln.prg
  * harbour/contrib/hbtip/encmthd.c
  * harbour/contrib/hbtip/client.prg
  * harbour/contrib/hbtip/encoder.prg
  * harbour/contrib/hbtip/smtpcln.prg
  * harbour/contrib/hbtip/encb64.prg
  * harbour/contrib/hbtip/mail.prg
  * harbour/contrib/hbtip/credent.prg
  * harbour/contrib/hbtip/ftpcln.prg
  * harbour/contrib/hbtip/Makefile
  * harbour/contrib/hbgf/hbgfwin/common.mak
  * harbour/contrib/hbbmcdx/common.mak
  * harbour/contrib/hbbmcdx/make_gcc.sh
  * harbour/contrib/hbbmcdx/make_vc.bat
  * harbour/contrib/hbwin/win_prn2.c
  * harbour/contrib/hbwin/win_tprn.prg
  * harbour/contrib/hbwin/common.mak
  * harbour/contrib/hbwin/tests/testole.prg
  * harbour/contrib/hbwin/tests/testprn.prg
  * harbour/contrib/hbwin/make_gcc.sh
  * harbour/contrib/hbwin/Makefile
  * harbour/contrib/hbwin/win_prn1.c
  * harbour/contrib/mtpl_vc.bat
  * harbour/contrib/mtpl_vc.mak
  * harbour/contrib/hbbtree/common.mak
  * harbour/contrib/hbbtree/make_gcc.sh
  * harbour/contrib/hbbtree/make_vc.bat
  * harbour/contrib/hbwhat/debug.ch
  * harbour/contrib/hbwhat/whtdate.c
  * harbour/contrib/hbwhat/whtini.c
  * harbour/contrib/hbwhat/make_b32.bat
  * harbour/contrib/hbwhat/whticon.c
  * harbour/contrib/hbwhat/whtcret.c
  * harbour/contrib/hbwhat/make_gcc.sh
  * harbour/contrib/hbwhat/whtsock.c
  * harbour/contrib/hbwhat/whthead.c
  * harbour/contrib/hbwhat/whtseria.c
  * harbour/contrib/hbwhat/sqltypes.ch
  * harbour/contrib/hbwhat/Makefile
  * harbour/contrib/hbwhat/whtilst.c
  * harbour/contrib/hbwhat/whtreg.c
  * harbour/contrib/hbwhat/whtmem.c
  * harbour/contrib/hbwhat/whtclpb.c
  * harbour/contrib/hbwhat/winini.prg
  * harbour/contrib/hbwhat/whtmous.c
  * harbour/contrib/hbwhat/whatutil.prg
  * harbour/contrib/hbwhat/whtrgn.c
  * harbour/contrib/hbwhat/whtmeta.c
  * harbour/contrib/hbwhat/whtmapi.c
  * harbour/contrib/hbwhat/winrbar.prg
  * harbour/contrib/hbwhat/whttbar.c
  * harbour/contrib/hbwhat/winerror.prg
  * harbour/contrib/hbwhat/whtrect.c
  * harbour/contrib/hbwhat/whtbrsh.c
  * harbour/contrib/hbwhat/import.ch
  * harbour/contrib/hbwhat/whtgdi.c
  * harbour/contrib/hbwhat/winstruc.ch
  * harbour/contrib/hbwhat/whtscrlb.c
  * harbour/contrib/hbwhat/whtdlg.c
  * harbour/contrib/hbwhat/whtview.c
  * harbour/contrib/hbwhat/whtsys.c
  * harbour/contrib/hbwhat/whtlv.c
  * harbour/contrib/hbwhat/whtmain.c
  * harbour/contrib/hbwhat/whtwnd.c
  * harbour/contrib/hbwhat/wintabs.prg
  * harbour/contrib/hbwhat/whtmisc.c
  * harbour/contrib/hbwhat/whtcomm.c
  * harbour/contrib/hbwhat/wincomm.prg
  * harbour/contrib/hbwhat/whtmmcap.c
  * harbour/contrib/hbwhat/tests/whatdemo.prg
  * harbour/contrib/hbwhat/whtprn.c
  * harbour/contrib/hbwhat/whtinet.c
  * harbour/contrib/hbwhat/hbwhat.ch
  * harbour/contrib/hbwhat/whttab.c
  * harbour/contrib/hbwhat/make_vc.bat
  * harbour/contrib/hbwhat/whtfont.c
  * harbour/contrib/hbwhat/whtshell.c
  * harbour/contrib/hbwhat/commdlg.ch
  * harbour/contrib/hbwhat/whtcdlg.c
  * harbour/contrib/hbwhat/wincdlg.prg
  * harbour/contrib/hbwhat/whtbmp.c
  * harbour/contrib/hbwhat/whtdir.c
  * harbour/contrib/hbwhat/winuser.ch
  * harbour/contrib/hbwhat/whtpen.c
  * harbour/contrib/hbwhat/whtkbrd.c
  * harbour/contrib/hbwhat/whttext.c
  * harbour/contrib/hbwhat/whtdc.c
  * harbour/contrib/hbwhat/whtmsg.c
  * harbour/contrib/hbwhat/windebug.prg
  * harbour/contrib/hbwhat/wincore.prg
  * harbour/contrib/hbwhat/wintbar.prg
  * harbour/contrib/hbwhat/common.mak
  * harbour/contrib/hbwhat/whtdraw.c
  * harbour/contrib/hbwhat/whttree.c
  * harbour/contrib/hbwhat/wininet.ch
  * harbour/contrib/hbwhat/whtmenu.c
  * harbour/contrib/hbwhat/commctrl.ch
  * harbour/contrib/hbwhat/wingdi.ch
  * harbour/contrib/examples/pe/pe.prg
  * harbour/contrib/examples/pe/hbmk_b32.bat
  * harbour/contrib/examples/uhttpd/cookie.prg
  * harbour/contrib/examples/uhttpd/cgifunc.prg
  * harbour/contrib/examples/uhttpd/modules/cookie.prg
  * harbour/contrib/examples/dbu/readme.txt
  * harbour/contrib/examples/dbu/hbmk_b32.bat
  * harbour/contrib/examples/dbu/Makefile
  * harbour/utils/hbmake/hbmfrdln.c
  * harbour/utils/hbtest/rt_mt.prg
  * harbour/utils/hbi18n/hbi18n.prg
  * harbour/utils/hbi18n/Makefile
  * harbour/make_gcc.mak
  * harbour/config/none.cf
  * harbour/config/w32/mingwce.cf
  * harbour/config/w32/owatcom.cf
  * harbour/config/w32/pocc.cf
    * svn ps svn:keywords "Author Date Id Revision"

2009-02-03 02:07 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/strdiff.c
  * contrib/hbct/token2.c
  * contrib/hbct/atadjust.c
  * contrib/hbct/ctmath.c
  * contrib/hbct/charsort.c
  * contrib/hbct/charmix.c
  * contrib/hbct/wordrepl.c
  * contrib/hbct/charrepl.c
  * contrib/hbct/strswap.c
  * contrib/hbct/trig.c
  * contrib/hbct/charswap.c
  * contrib/hbct/charop.c
  * contrib/hbct/num1.c
  * contrib/hbct/ctstr.c
  * contrib/hbct/token1.c
  * contrib/hbct/charmirr.c
  * contrib/hbct/ctc.c
  * contrib/hbct/relation.c
  * contrib/hbct/atnum.c
  * contrib/hbct/posdiff.c
  * contrib/hbct/finan.c
  * contrib/hbct/range.c
  * contrib/hbct/addascii.c
  * contrib/hbct/ctmath2.c
  * contrib/hbct/tab.c
  * contrib/hbct/asciisum.c
  * contrib/hbct/pos2.c
  * contrib/hbct/numat.c
  * contrib/hbct/atrepl.c
  * contrib/hbct/wordtoch.c
    % Using HB_ERR_FUNCNAME.

  * contrib/hbct/charop.c
    ! Fixed CHARADD(), CHARSUB(), CHARAND(), CHAROR(), CHARXOR()
      showing wrong function name in error message when first
      passed parameter is invalid.

2009-02-03 01:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/charop.c
    ! Fixed CHARADD(), CHARSUB(), CHARAND(), CHAROR(), CHARXOR()
      to not crash when second parameter is an empty string.

2009-02-03 01:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/cstruct.prg
    ! One STATIC converted to THREAD STATIC.
    + TOFIX added for the rest of them.
    * Some formatting.

2009-02-03 01:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbprintf.c
    ! Comment corrected to be ANSI.

2009-02-03 00:55 UTC+0100 Maurilio Longo (maurilio.longo@libero.it)
  * include/hbdefs.h
  * include/hbthread.h
    * added HB_OS_SUNOS to be able to build under OpenSolaris 2008.11
      using pthreads.
  * source/common/hbprintf.c
    * include ieeefp.h under OpenSolaris 2008.11

2009-02-02 23:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/keysec.prg
  * contrib/hbct/keytime.prg
  * contrib/hbct/showtime.prg
  * contrib/hbct/ctdummy.prg
    * STATICs converted to THREAD STATICs.

  * contrib/xhb/hblognet.prg
  * contrib/xhb/hblog.prg
    + Permanently enabled conditional HB_THREAD_SUPPORT.

  ; TOFIX: - hbwhat/wincore.prg
           - xhb/cstruct.prg
           Needs reviewing and either mutex protection
           for STATICs or conversion to THREAD STATIC.

  ; TOFIX: C code uses much more statics, some of these make
           code clearly broken for MT.

  ; TODO: Shouldn't we add core support for C-level thread
          specific cargo (user defined data) area available for
          3rd party libs/apps? [FEATURE ALREADY IMPLEMENTED]

  ; TODO: Same could be added to GT structure to hold
          GT instance specific user defined data. [DONE]

2009-02-02 22:40 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/fcopy.prg
  * contrib/hbtpathy/telepath.prg
  * contrib/hbziparc/hbziparc.prg
  * contrib/rddado/adordd.prg
  * contrib/gtwvg/wvgpaint.prg
  * contrib/gtwvg/tests/demowvg.prg
  * contrib/hbpgsql/pgrdd.prg
  * contrib/hbwin/win_tole.prg
  * contrib/hbvpdf/hbvpdf.prg
  * contrib/hbwhat/wincore.prg
    * Renamed THREAD STATIC vars to t_* (from s_*).

2009-02-02 17:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/cmpopt.txt
    ! Fixed missing SVN keyword.

  * source/rtl/perfuncs.prg
  * source/rtl/menuto.prg
  * source/rtl/getlist.prg
  * source/rtl/readvar.prg
  * source/rtl/thfuncx.prg
  * source/rtl/text.prg
    * Renamed THREAD STATIC vars to t_* (from s_*).

2009-02-02 17:34 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/doc/cmpopt.txt
    * svn ps svn:keywords "Author Date Id Revision"
    * minor cleanup

2009-02-02 11:02 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/fm.c
    ! fixed typo in default FM module setting/

  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/debug/dbgentry.c
    * renamed hb_dbgObjSendMessage() to hb_dbg_objSendMessage() to keep
      naming convention used for other C debugger functions

  * harbour/source/vm/debug.c
    * added information about existing debugger functions and where they
      are used.

  * harbour/include/hbvm.h
  * harbour/include/hbapidbg.h
  * harbour/include/hbvmpub.h
  * harbour/include/hbstack.h
  * harbour/include/hbapi.h
  * harbour/source/vm/codebloc.c
  * harbour/source/vm/estack.c
  * harbour/source/vm/hvm.c
  * harbour/source/debug/dbgentry.c
    * changed the method of static variable handling. Now we do not
      have centralized array of all statics used by application (s_aStatics)
      but each module uses it's own array to keep statics. The old
      s_aStatics has been removed. It means that loading new PCODE module
      from .hrb file or shared/dynamic library does not cause any static
      table reallocation so it does not creates potential GPF trap for MT
      code which may operate on static vars.
      This modification changed a little bit the debugger interface.
      I also updated some unused by us debug functions like __DBGVMVARSLIST()
      or __DBGVMVARSLEN() anyhow any 3-rd party debuggers should be
      updated for new API and modified hb_dbgEntry() syntax.

2009-02-01 10:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + doc/inet.txt
    + Added from xhb.

2009-01-31 20:43 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/tests/demoxbp.prg
    + Added SVN header.

2009-01-31 12:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbrun/hbrun.prg
    + If a .dbf file is passed on the command line, hbrun will
      open it.

  * contrib/examples/uhttpd/hbmk_vc.bat
    * Updated.

  * contrib/examples/uhttpd/hbmk_b32.bat
    % Minor opt.

2009-01-30 20:19 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_gcc.mak
    ! added additional rules to fix time conditions in parallel compilation

  * harbour/config/dos/dir.cf
  * harbour/config/w32/dir.cf
    * changed simple assignments to recursive ones

  * harbour/config/dir.cf
    + added support for dependencies between build directories for
      parallel execution. If compilation of dirX needs results of
      dirY and dirZ compilation then it hsould be declared as:
         dirX{dirY,dirZ}
    % process directories defined in DIRS simultaneously when -j<N>
      GNU make switch is used - it gives additional speed improvement
      on multi CPU machines

  * harbour/Makefile
  * harbour/source/Makefile
    * set directory dependencies for parallel compilation

   The parallel compilation can be enabled by using -j<n> GNU make
   switch on multiprocess platforms, f.e.:
      ./gnu_make.sh -j3
   It should give some speed improvement even on single CPU machines.
   These are results of clean Harbour compilation on my 3 phantom CPU
   computer:

      1. leaner compilation without -j<n>                6m29.895s
      2. parallel compilation with -j5 but without
         parallel directory processing                   3m20.163s
      3. parallel compilation with -j5 and with new
         parallel directory processing                   2m6.168s

2009-01-30 08:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    ! Typos in former ChangeLog entries.
      (testing commit notification)

2009-01-30 08:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    ! Typos in former ChangeLog entries.

2009-01-30 03:24 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * Updated uHTTPD (Work in progress)
      + Added HRB caching (set #define HRB_ACTIVATE_CACHE .T. to enable)
      + Added support for Cookies
      * Formatted
      ! Renamed all public functions with uhttpd_ prefix (TOCHECK)
      + Added support for array content in POST variables
      * Optimized some code
  + harbour/contrib/examples/uhttpd/cgifunc.prg
    + Some helper function moved here from uhttpd prg and added
      some functions of mine
  + harbour/contrib/examples/uhttpd/cookie.prg
    + Cookie class
  + harbour/contrib/examples/uhttpd/modules/cookie.prg
    + cookie sample module
  + harbour/contrib/examples/uhttpd/home/postsample.html
    + POST example
  * harbour/contrib/examples/uhttpd/uhttpd.ini
    + Added new script alias for cookie sample

  * harbour/contrib/examples/uhttpd/hbmk_b32.bat
  * harbour/contrib/examples/uhttpd/home/index.html
  * harbour/contrib/examples/uhttpd/home/testxmldb.html
  * harbour/contrib/examples/uhttpd/modules/bldhrb.bat
  * harbour/contrib/examples/uhttpd/modules/info.prg
  * harbour/contrib/examples/uhttpd/modules/showcounter.prg
  * harbour/contrib/examples/uhttpd/modules/tableservletdb.prg
    * Updated for new function prefix and some formatting

2009-01-29 22:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/rules.cf
  * harbour/config/dos/bcc16.cf
    ! fixed wrong automatic macros $? was used instead of $<

  * harbour/config/dir.cf
    * optional new DIR_RULE setting for easier testing

  * harbour/config/c.cf
    + added support for setting dependencies for files which needs
      grammar header files generated by bison (YACC_DEPEND)

  * harbour/source/macro/Makefile
    * marked macrolex.c as YACC_DEPEND dependent

  * harbour/source/compiler/Makefile
    * marked complex.c as YACC_DEPEND dependent

2009-01-29 19:48 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/postinst.sh
    ! added missing export in envvar setting.

  * harbour/config/linux/install.cf
    * added error message when install directory is not set.

  * harbour/config/lib.cf
  * harbour/config/bin.cf
  * harbour/config/dir.cf
    + added explicit support for make recursive calls.
      Question: why we use $(MK) instead of $(MAKE) so it necessary
      to mark recursive make calls manually?

  * harbour/config/dir.cf
    * rewritten DIR_RUL to use only GNU make commands instead of
      OS scripts. Now config/<arch>/dir.cf files are not longer used.
      Please make build tests on different platforms. If all will
      be correct then we remove these files.

  * harbour/source/common/Makefile
  * harbour/source/vm/Makefile
  * harbour/source/vm/vmmt/Makefile
    * moved biggest files to begin of file list for better parallel
      compilation utilization.

  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    * accept invalid string key expression if codeblock key expression
      is given.

2009-01-29 14:25 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    ! Fixed to #undef _WIN32_WINNT before setting it.
    ; TOFIX: hbwhat has this problem in almost all of its source
             files. [DONE]

  * contrib/examples/uhttpd/modules/bldhrb.bat
  * contrib/examples/uhttpd/modules/showcounter.prg
  * contrib/examples/uhttpd/hbmk_b32.bat
  * contrib/examples/uhttpd/hbmk_vc.bat
    * Minor.

2009-01-29 02:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    * minor modification for easier future updating

  * harbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed possible GPF caused by corrupted indexes

  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed possible GPF caused by missing RT error
    ! added RT errors for invalid KEY or FOR expressions

2009-01-28 22:28 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/itemapi.c
    % eliminated hb_snpritf() from HB_IT_POINTER conversion in
      hb_itemString()

  * harbour/source/common/hbprintf.c
    ! fixed return value - it should be one less. Thanks to Xavi.
    + added support for I64, I32 and I16 length specifiers - it's
      MS-Windows only extension but it should help in replacing
      native C *printf() calls with Harbour version.

2009-01-28 19:03 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    * disabled _finitel() in MSVC builds, added casting to double instead

2009-01-28 17:41 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    ! do not use _fpclass() in BCC builds - it breaks FL arithmetic
    * use _finitel() instead of _finite() in MSVC builds

2009-01-28 14:25 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    ! include float.h in MSVC builds
    * changed code a little bit to pacify MSVC warning

2009-01-28 13:29 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    * redefine [u]intmax_t as [U]LONGLONG in MSVC builds.

2009-01-28 04:27 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    * added yet another TODO marker for easier code updating to new
      C compilers

2009-01-27 17:23 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/dos/owatcom.cf
    * increased max library page size (-p=32 => -p=64)

2009-01-27 17:03 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/dos/dir.cf
  * harbour/config/dos/install.cf
    ! fixed for GNU make ports which prefer COMSPEC before SHELL

2009-01-27 16:33 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdefs.h
    * include stdint.h in DJGPP >= 2.4

  * harbour/source/common/hbprintf.c
    ! fixed DJGPP <= 2.3 compilation

  * harbour/source/common/hbstr.c
    * force buffer ending in DJGPP <= 2.3 when vsprintf() is used

  * harbour/source/rtl/hbproces.c
    ! fixed typo in HB_SYMBOL_UNUSED() variable name

  * harbour/config/dos/global.cf
    ! fixed for GNU make ports which prefer COMSPEC before SHELL

2009-01-27 15:31 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
    ! fixed two bugs in conversions

2009-01-27 10:14 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * Fixed APP_NAME that causes wrong ini file name and than error
      loading aliases from uhttpd.ini

2009-01-27 09:38 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbssl/sslctx.c
  * contrib/hbssl/ssl.c
    - Removed some functions operating on binary data.

  * ChangeLog
    * TOFIX marked DONE.

2009-01-27 04:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdefs.h
    * added some C compilers which supports stdint.h

  * harbour/source/common/hbprintf.c
    * eliminated non portable GCC only C syntax.
    * updated to compile with other C compilers.
      Now only GNUC with C99 support and BORLAND C gives all
      +inf/-inf/NaN values for [long] double conversions.
      Other compilers uses NaN also for infinite numbers or nothing.
      Please add full support for them. See TODO notes I left.
      For compilers which supports C99 floating point macros should
      be enough to enable the same macros used for GNUC && _ISOC99_SOURCE.

  * harbour/contrib/hbcrypt/sha2.h
  * harbour/contrib/hbcrypt/sha2.c
    ! fixed BCC5.5 compilation

   TOFIX: harbour/contrib/hbssl/ssl.c[631], sslctx.c[268], sslctx.c[281]
          error: invalid conversion from void* to const char*
          I do not know if SSL_get_ex_data()/SSL_CTX_get_app_data()
          returns valid ASCIIZ string so I cannot decide if simple casting
          is safe and to pacify above errors.
          Viktor, can you look at it?
          [DONE]

2009-01-27 02:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/version.c
    ! Fixed hb_version( HB_VERSION_BUILD_DATE ).

2009-01-27 00:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/uhttpd/uhttpd.prg
    ! Fixed RTE when in socket.c mode.

  * contrib/examples/uhttpd/socket.c
    ! Fixed leak. Thanks to Mindaugas.

  ; TOFIX: Ajax test (404 Not Found),
           Counter (image not found),
           cgi-bin (broken link),
           XML database (empty boxes in Chrome, empty boxes
           and error messagebox with IE8)
           doesn't work here.
           Shall I configure something?
           [SOLVED]

2009-01-27 00:21 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/uhttpd/uhttpd.prg
    + Added callstack in RTE message (ugly but useful).
    ! Fixed RTE when displaying server status.
      (might have broken non-inet-mode)

  * contrib/examples/uhttpd/hbmk_b32.bat
  * contrib/examples/uhttpd/hbmk_vc.bat
    + Trying to shutdown server before build.

2009-01-26 15:07 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
    ! Synchronized with GTWVT per Viktor's changes for box characters.
    ! Commented out previous change per Przemek's "Layered Attributes".
      Somehow, this change had increased the flickering of the window as
      it invalidates the whole window when it regain focus, not desirable
      behavior in GTWVG with GUI elelments.

2009-01-26 23:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/uhttpd/hbmk_b32.bat
    ! Missed update from previous commit.

2009-01-26 23:32 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/examples/uhttpd/hbmk_vc.bat
    + Added MSVC make file.

  * contrib/examples/uhttpd/socket.c
    ! Made it compile with MSVC.
    ! Added SVN header.

  * contrib/examples/uhttpd/uhttpd.prg
  + contrib/examples/uhttpd/uhttpdc.c
    + C level stuff moved to separate file.

  ; NOTE: I'm getting an "Argument error: +" when browsing
          to http://localhost:8082 (using Chrome if that matters).

2009-01-26 22:57 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rdd/usrrdd/example/exhsx.prg
    ! Removed HSXRDD references. It seems to work without them.

  * contrib/hbssl/ssl.c
    * Comment changes.

2009-01-26 22:45 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rdd/usrrdd/rdds/arrayrdd.prg
    * fixed AR_CREATE() to be compatible with dbCreate() extension
      parameters
  * harbour/source/rdd/usrrdd/example/exarr.prg
    * updated

2009-01-26 13:02 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbziparc/hbziparc.prg
    ! Fixed <acFiles> behavior if the parameter is not passed.

2009-01-26 21:25 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbprintf.c
  * harbour/source/codepage/cpeswinm.c
  * harbour/source/rdd/usrrdd/example/exlog.prg
  * harbour/source/rdd/usrrdd/rdds/logrdd.prg
  * harbour/contrib/xhb/dbgfx.prg
  * harbour/contrib/xhb/xhb.h
  * harbour/contrib/xhb/sprintf.prg
  * harbour/contrib/xhb/dbgfxc.c
  * harbour/contrib/xhb/hbstruct.prg
  * harbour/contrib/xhb/hbstruct.ch
  * harbour/contrib/hbmsql/tests/hbmk_b32.bat
  * harbour/contrib/hbmsql/tests/hbmk_vc.bat
    ! fixed hardcoded CRLF and svn:eol-style attribute

2009-01-26 21:18 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbprintf.c
    ! Some fixes to make it compile under BCC.
      Still doesn't compile however.
      I'll rather disable this code for now, unless someone jumps
      in an fixes these problems.
    ; TOFIX: For MSVC, too: [DONE]
      source\common\hbprintf.c(213) : error C2061: syntax error : identifier 'intmax_t'
      source\common\hbprintf.c(214) : error C2061: syntax error : identifier 'as_x_uintmax_t'
      source\common\hbprintf.c(214) : error C2059: syntax error : ';'
      source\common\hbprintf.c(222) : error C2059: syntax error : '}'
      source\common\hbprintf.c(226) : error C2061: syntax error : identifier 'x_type'
      source\common\hbprintf.c(227) : error C2059: syntax error : '}'
      source\common\hbprintf.c(379) : error C2146: syntax error : missing ')' before identifier 'value'
      source\common\hbprintf.c(379) : error C2081: 'uintmax_t' : name in formal parameter list illegal
      source\common\hbprintf.c(379) : error C2061: syntax error : identifier 'value'
      source\common\hbprintf.c(379) : error C2059: syntax error : ';'
      source\common\hbprintf.c(379) : error C2059: syntax error : ','
      source\common\hbprintf.c(379) : error C2059: syntax error : ')'
      source\common\hbprintf.c(434) : error C2146: syntax error : missing ')' before identifier 'value'
      source\common\hbprintf.c(434) : error C2081: 'uintmax_t' : name in formal parameter list illegal
      source\common\hbprintf.c(434) : error C2061: syntax error : identifier 'value'
      source\common\hbprintf.c(434) : error C2059: syntax error : ';'
      source\common\hbprintf.c(434) : error C2059: syntax error : ','
      source\common\hbprintf.c(435) : error C2059: syntax error : ')'
      source\common\hbprintf.c(615) : error C2146: syntax error : missing ')' before identifier 'value'
      source\common\hbprintf.c(615) : error C2081: 'uintmax_t' : name in formal parameter list illegal
      source\common\hbprintf.c(615) : error C2061: syntax error : identifier 'value'
      source\common\hbprintf.c(615) : error C2059: syntax error : ';'
      source\common\hbprintf.c(615) : error C2059: syntax error : ','
      source\common\hbprintf.c(616) : error C2059: syntax error : ')'
      source\common\hbprintf.c(700) : error C2059: syntax error : '{'
      source\common\hbprintf.c(700) : error C2065: 'n' : undeclared identifier
      source\common\hbprintf.c(700) : error C2059: syntax error : ')'
      source\common\hbprintf.c(702) : error C2143: syntax error : missing '{' before '-='
      source\common\hbprintf.c(702) : error C2059: syntax error : '-='
      source\common\hbprintf.c(703) : error C2059: syntax error : 'if'
      source\common\hbprintf.c(710) : error C2059: syntax error : 'while'
      source\common\hbprintf.c(717) : error C2059: syntax error : 'while'
      source\common\hbprintf.c(725) : error C2059: syntax error : 'return'
      source\common\hbprintf.c(726) : error C2059: syntax error : '}'

2009-01-26 20:24 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/ChangeLog
    * added missed entry I haven't uploaded and fixed my wrong phrase.

2009-01-26 17:10 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
   * common.mak
   * include/hbextern.ch
   * source/rtl/Makefile
   + source/rtl/strxor.c
     + Added HB_STRXOR() (work of Mindaugas Kavaliauskas)

   * common.mak
   * source/common/Makefile
   + source/common/hbprintf.c
     + Added hb_snprintf_c() (temp name, untested) (work of Przemyslaw Czerpak)
       [ I've added a normal Harbour license, as per your permission
       on the list. Pls give me feedback if this is wrong. ]

   * source/rdd/usrrdd/example/exlog.prg
     ! Fixed missing #includes.

   * source/rdd/usrrdd/example/hbmk_b32.bat
   + source/rdd/usrrdd/example/hbmk_vc.bat
     + Added MSVC make file.
     ! Added EOL to the last line to hbmk_b32.bat.
     ! xhb.lib dependency removed. It was not needed anyway.
     ; TOFIX: When compiling exhsx.prg, this happens:
              exhsx.obj : error LNK2001: unresolved external symbol _HB_FUN_HSXRDD
              [DONE]

   * contrib/hbssl/sslsess.c
   * contrib/hbssl/sslctx.c
   * contrib/hbssl/sslciph.c
     * Minor changes.

2009-01-26 16:53 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/darwin/gcc.cf
    ! changed CCACHE to HB_CCACHE
  * harbour/include/hbatomic.h
    ! removed unnecessary volatile casting in Darwin atomic function
      parameters
  * harbour/source/compiler/harbour.y
    ! cleaned one untyped expression assign
  (by Phil Krylov borrowed from xHarbour)

  * harbour/bin/hb-func.sh
    * updated contrib library last

2009-01-26 16:47 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rdd/usrrdd/rdds/arrayrdd.prg
    * fixed harbour version without using hbcompat.ch
      ; TODO: update it using dbCreate() extension params
  + harbour/source/rdd/usrrdd/example/exarr.prg
    + ARRAYRDD example
  + harbour/source/rdd/usrrdd/example/hbmk_b32.bat
    + BCC make file

2009-01-26 13:11 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rdd/usrrdd/rdds/logrdd.prg
    * changed REQUEST to DYNAMIC HB_LOGRDDINHERIT
    * fixed typo: HB_UNUSED_VAR() is HB_SYMBOL_UNUSED()
  * harbour/source/rdd/usrrdd/example/exlog.prg
    * fixed typo: HB_UNUSED_VAR() is HB_SYMBOL_UNUSED()

2009-01-26 11:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbssl/sslctx.c
   * contrib/hbssl/ssl.c
     + Added more SSL API.

   * TODO
     * Updated.

2009-01-26 10:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbssl/tests/test.prg
   * contrib/hbssl/ssl.c
     + More SSL API added.

2009-01-26 10:19 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbssl/common.mak
   * contrib/hbssl/Makefile
   * contrib/hbssl/hbssl.h
   + contrib/hbssl/sslsess.c
   + contrib/hbssl/sslciph.c
   * contrib/hbssl/ssl.c
   * contrib/hbssl/sslctx.c
   * contrib/hbssl/tests/test.prg
     + More SSL API added.

2009-01-26 01:07 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    + Added CGIExec() function
      Now uHTTPD supports external cgi executables.
      A big thank you to Giancarlo Niccolai that wrote Process*() functions
      and to Przemek that has ported them to harbour.
    ; NOTE: security has to be checked.
      A minimal executable test can be downloaded from:
      http://www.fsgiudice.com/testcgi.zip
      Expand into harbour/contrib/examples/uhttpd/home/cgi-bin, then run
      it using http://localhost:8082/cgi-bin/testcgi.exe

2009-01-26 00:52 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/Makefile
   * contrib/make_b32_all.bat
   * contrib/make_gcc_all.sh
   * contrib/make_vc_all.bat
   + contrib/hbssl
   + contrib/hbssl/Makefile
   + contrib/hbssl/common.mak
   + contrib/hbssl/make_b32.bat
   + contrib/hbssl/make_vc.bat
   + contrib/hbssl/make_gcc.sh
   + contrib/hbssl/hbssl.h
   + contrib/hbssl/hbssl.ch
   + contrib/hbssl/ssl.c
   + contrib/hbssl/sslctx.c
   + contrib/hbssl/sslrand.c
   + contrib/hbssl/tests
   + contrib/hbssl/tests/hbmk_b32.bat
   + contrib/hbssl/tests/hbmk_vc.bat
   + contrib/hbssl/tests/test.prg
     + Added Harbour bindings to OpenSSL.
       Work in progress, but it's theoretically already functional.
       To build, set your HB_DIR_OPENSSL or HB_INC_OPENSSL envvar.
     ; TOFIX: Makefile openssl autodetection should be adjusted. [DONE]

   * contrib/examples/uhttpd
     ! Fixed SVN attributes. (except for /home dir)

2009-01-25 22:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/philes.c
    ! FWRITE(): Fixed accessing past the string buffer (thus
      causing potential GPF and a huge security hole) when
      the passed length is greater than the length of the string.
      Very old bug. In fact CA-Cl*pper suffers from the same
      problem, and behaviour for such case is not documented.
      Harbour will ignore the length parameter (thus writing
      the whole passed string), if the length is invalid.

2009-01-25 12:30 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    + Added hb_Inet*() version
  * harbour/contrib/examples/uhttpd/hbmk_b32.bat
    + Added support for hb_Inet*() version
    ; NOTE:
      To use hb_Inet*() version build using
      hbmk_b32.bat --with-inet

2009-01-23 10:24 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkslib.sh
  * make_gnu.sh
    ! Removed unnecessary explicit darwin detection.

  * ChangeLog
    ! Removed tabs.

2009-01-22 18:20 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/source/compiler/hbmain.c
  * harbour/source/pp/hbpp.c
  * harbour/source/pp/ppcore.c
    + added __FILE__ define for .prg code
    ; Please, look if this is implemented the right and optimal way.
      I'm a little confused about PP initialization order, and how
      __DATE__, etc, survive after hb_pp_reset in compiler.

2009-01-22 10:15 UTC+0100 Lorenzo Fiorini (lorenzo.fiorini/at/gmail.com)
  * bin/hb-func.sh
    * fix darwin detection
  * make_gnu.sh
    * fix darwin detection
    * added ncurses detection logic like slang one
  * contrib/hbtip/ftpcln.prg
    * fixed wrong changes from nil to .f.
    * someone in the past has done a mass change of the return values
    * without checking the results

2009-01-22 09:30 UTC+0100 Lorenzo Fiorini (lorenzo.fiorini/at/gmail.com)
  * bin/hb-mkslib.sh
    * fix name of dylibs
  * source/compiler/hbgenerr.c
    * cleaned some ":" in the error messages

2009-01-22 01:08 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/uhttpd.prg
     + Added support for ini file (default: uhttpd.ini)
     + modified to add support to Lib GD on batch request
     * changed THREAD STATIC names with t_ prefix
     * changed all global STATIC names with s_ prefix
     - removed C level function EXE_FULLNAME (hb_argv( 0 ) does same)
  * harbour/contrib/examples/uhttpd/hbmk_b32.bat
    + now support LIBGD on request
  * harbour/contrib/examples/uhttpd/readme.txt
    * updated infos
  + harbour/contrib/examples/uhttpd/uhttpd.ini
    + Added default ini file
      if not found are used internal defaults or command line flags
  * harbour/contrib/examples/uhttpd/home/counter.html
    * Fixed typo
    ; NOTE:
      Hope that will follow multiplatform version.

2009-01-21 21:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbhpdf/harupdf.ch
  * contrib/hbhpdf/harupdf.c
    + Added HPDF_VERSION_TEXT() function which returns the
      libharu version hbhpdf was compiled against.
    - Removed #define HPDF_VERSION_TEXT with hard-wired libharu
      version.

2009-01-21 17:52 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/source/rtl/Makefile
  - harbour/source/rtl/hbi18n.c
  + harbour/source/rtl/hbi18n1.c
    * renamed hbi18n.c to hbi18n1.c to avoid conflicts with hbi18n
      program - non GNU make files needs unique file names
    ! fixed bug in internal function __I18N_HASHTABLE()

  * harbour/common.mak
  * harbour/source/rtl/Makefile
  + harbour/source/rtl/hbi18n2.prg
    + added new I18N functions to manage .pot files and generate .hbl ones.
      public functions:
      HB_I18N_loadPot( <cFile>, [<pI18N>] [, @<cErrorMsg>] ) -> <pI18N> | NIL
         Reads .pot file and returns Harbour translation set or NIL when
         error appears. In such case <cErrorMsg> is contains error message
         string. If second parameter [<pI18N>] is given then translation
         items read from .pot file are added to this set. Otherwise new
         Harbour translation set is created.
      HB_I18N_savePot( <cFile>, <pI18N> [, @<cErrorMsg>] ) -> <lSuccess>
         Generates .pot file from Harbour translation set. Please note
         that Harbour translation set does not contain additional
         information which exists in original .pot files like source
         code numbers or alternative plural forms.
      internal functions for Harbour developers which will work on I18N
      tools:
      __I18N_potArrayLoad( <cFile> [, @<cErrorMsg>] ) -> <aTrans> | NIL
         Reads .pot file and returns array with translation items or
         NIL when error appears. In such case <cErrorMsg> is contains
         error message string.
         <aTrans> is an array with translation items containing additional
         informations from .pot file which are not necessary in final
         translation sets used at runtime. It's designed for I18N tools
         written in Harbour to manage .pot files and/or create .hbl ones.
      __I18N_potArraySave( <cFile>, <aTrans> [, @<cErrorMsg>] ) -> <lSuccess>
         Generates .pot file from array with translations items.
      __I18N_potArrayJoin( <aTrans>, <aTrans2> ) -> <aTrans>
         Join two arrays with translation items. Items from <aTrans2>
         are added to <aTrans>. If given translation item already exists
         in <aTrans> (the same msgctxt and msgid) then source code references
         are merged and translations from <aTrans2> are added only if
         <aTrans> does not have it.
      __I18N_potArrayToHash( <aTrans>, [<lEmpty>] [, <hI18N>] ) -> <hI18N>
         Converts array with translation items to hash table in the format
         used internally by Harbour translation sets. It's the same format
         as used __I18N_hashTable() function. The conversion removes data
         which is not necessary for runtime translations like source code
         references or alternative source plural forms.
         If second parameter <hI18N> is given then translation items form
         <aTrans> are added to it. Otherwise new hash table with is created.
         If <lEmpty> is .T. then also items with empty translation are added
         but source strings are used instead of missing destination ones.

  * harbour/include/hbextern.ch
    + added new I18N functions

  * harbour/harbour-win-spec
  * harbour/harbour-wce-spec
  * harbour/harbour.spec
  * harbour/mpkg_tgz.sh
  * harbour/make_b32.mak
  * harbour/make_vc.mak
  * harbour/make_gcc.mak
  * harbour/common.mak
  * harbour/utils/Makefile
  + harbour/utils/hbi18n
  + harbour/utils/hbi18n/hbi18n.prg
  + harbour/utils/hbi18n/Makefile
    + added very simple application to manage .pot/.hbl files
      Syntax: hbi18n -m | -g [-o<outfile>] [-e] [-q] <files1[.pot] ...>
         -m             merge given .pot files
         -g             generate .hbl file from given .pot files
         -o<outfile>    output file name
                        default is first .pot file name with
                        .po_ (merge) or .hbl extension
         -e             do not strip empty translation rules from .hbl files
         -q             quiet mode

      TODO: extend it and add support for interactive mode which will
            allow to edit translations.

2009-01-21 17:38 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/Changelog
    * missed upload

2009-01-21 17:02 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/examples/uhttpd/hbmk_b32.bat
    * Updated with link where download bgd.dll

2009-01-21 16:42 UTC+0100 Lorenzo Fiorini (lorenzo.fiorini/at/gmail.com)
  * contrib/hbpgsql/tests/simple.prg
  * contrib/hbpgsql/tests/async.prg
  * contrib/hbpgsql/tests/cache.prg
  * contrib/hbpgsql/tests/stress.prg
  * contrib/hbpgsql/tests/dbf2pg.prg
    * general cleanup for Harbour
    * fix of function and method names, removed hard wired uid and pwd
  * contrib/hbtip/utils.c
    * added new mime types like flash files, rtf, csv

2009-01-21 10:43 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added new .prg functions.

2009-01-21 10:41 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbcrypt/sha1.h
  * harbour/contrib/hbcrypt/sha1.c
    ! disabled LITTLE_ENDIAN macro definition to avoid conflicts with
      macros using the same name defined in some system header files
      HB_LITTLE_ENDIAN used instead

2009-01-21 10:02 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
    * cleaned some typos

  * harbour/common.mak
  * harbour/source/rtl/Makefile
  + harbour/source/rtl/strtoexp.c
  * harbour/source/rtl/valtostr.c
    * moved my HB_STRTOEXP() function to separate file

  * harbour/common.mak
  * harbour/source/rtl/Makefile
  + harbour/source/rtl/strc.c
    + added two new functions to operate on C like strings:
      HB_STRDECODESCAPE( <cEscSeqStr> ) -> <cStr>
         Decode string with \ escape sequences.
      HB_STRCDECODE( <cStr> [, @<lCont> ] ) -> <cResult> | NIL
         Decode string using C compiler rules.
         If second parameter <lCont> is passed by reference then it allows
         to decode multiline strings. In such case <lCont> is set to .T.
         if string ends with unclosed "" quoting and next call to this
         function with lCont parameter continue string decoding.
         Function returns decoded string or NIL on syntax error.
      They will be helper functions for decoding .pot files.

  * harbour/source/rtl/hbi18n.c
  * harbour/source/rtl/hbstrsh.c
    % small optimizations

2009-01-20 23:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcrypt/sha1.c
    ! Fixed some BCC warnings.

2009-01-20 23:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcrypt/sha1.c
    ! Added #include <string.h> for mem*().

2009-01-20 22:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcrypt/tests/testsha2.prg
    ! Fixed typo in some last minute (and untested) modifications.

2009-01-20 20:47 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
  * contrib/make_vc_all.bat
  * contrib/Makefile
  + contrib/hbcrypt
  + contrib/hbcrypt/Makefile
  + contrib/hbcrypt/make_b32.bat
  + contrib/hbcrypt/make_vc.bat
  + contrib/hbcrypt/make_gcc.sh
  + contrib/hbcrypt/common.mak
  + contrib/hbcrypt/hbsha2.c
  + contrib/hbcrypt/hbsha2hm.c
  + contrib/hbcrypt/sha1.h
  + contrib/hbcrypt/sha1.c
  + contrib/hbcrypt/sha2.h
  + contrib/hbcrypt/sha2.c
  + contrib/hbcrypt/sha1hmac.h
  + contrib/hbcrypt/sha1hmac.c
  + contrib/hbcrypt/sha2hmac.h
  + contrib/hbcrypt/sha2hmac.c
  + contrib/hbcrypt/tests
  + contrib/hbcrypt/tests/testsha2.prg
  + contrib/hbcrypt/tests/hbmk_b32.bat
  + contrib/hbcrypt/tests/hbmk_vc.bat
    + Added hbcrypt library. Included .prg level functions:
      - HB_SHA224( <cMessage> ) -> <cDigest>
      - HB_SHA256( <cMessage> ) -> <cDigest>
      - HB_SHA384( <cMessage> ) -> <cDigest>
      - HB_SHA512( <cMessage> ) -> <cDigest>
      - HB_HMAC_SHA224( <cMessage>, <cKey> ) -> <cMAC>
      - HB_HMAC_SHA256( <cMessage>, <cKey> ) -> <cMAC>
      - HB_HMAC_SHA384( <cMessage>, <cKey> ) -> <cMAC>
      - HB_HMAC_SHA512( <cMessage>, <cKey> ) -> <cMAC>
    ; TODO: Add C level wrappers in Harbour namespace.
    ; TODO: Add .prg level wrappers for SHA1 functions + tests.
    ; TODO: Convert HB_MD5() to work on binary data, rather than
            doing hexadecimal conversion accessible using
            standard Harbour functions anyway.
    ; TODO: Add other crypt functions (AES, ...).
    ; NOTE: I plan to move these functions to core, after they've
            matured here.

2009-01-20 17:29 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbhpdf/harupdf.c
    ! HPDF_SETINFODATEATTR() fixed taking date/time from the wrong
      parameter.
    ! HPDF_SETINFODATEATTR() fixed to fully initialize the date structure
      passed to libharu.

    ; NOTE: I've changed my editor config to automatically clean line
            ending spaces. This may cause larger diffs even for
            small modifications until all these spaces are cleaned
            from the sources. FYI.

2009-01-20 00:20 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  + harbour/contrib/examples/uhttpd/modules/info.prg
    + New sample showing server variables
  * harbour/contrib/examples/uhttpd/home/index.html
  * harbour/contrib/examples/uhttpd/readme.txt
  * harbour/contrib/examples/uhttpd/uhttpd.prg
    * updated for new sample

2009-01-19 23:43 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/Changelog
    * fixed path of previous upload

2009-01-19 23:39 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  + harbour/contrib/examples/uhttpd
  + harbour/contrib/examples/uhttpd/socket.c
  + harbour/contrib/examples/uhttpd/uhttpd.prg
  + harbour/contrib/examples/uhttpd/hbmk_b32.bat
  + harbour/contrib/examples/uhttpd/readme.txt
  + harbour/contrib/examples/uhttpd/home
  + harbour/contrib/examples/uhttpd/home/cgi-bin
  + harbour/contrib/examples/uhttpd/home/counter.html
  + harbour/contrib/examples/uhttpd/home/css
  + harbour/contrib/examples/uhttpd/home/css/base.css
  + harbour/contrib/examples/uhttpd/home/favicon.ico
  + harbour/contrib/examples/uhttpd/home/images
  + harbour/contrib/examples/uhttpd/home/images/ajax-loader.gif
  + harbour/contrib/examples/uhttpd/home/index.html
  + harbour/contrib/examples/uhttpd/home/js
  + harbour/contrib/examples/uhttpd/home/js/ajax.js
  + harbour/contrib/examples/uhttpd/home/testajax.html
  + harbour/contrib/examples/uhttpd/home/testxmldb.html
  + harbour/contrib/examples/uhttpd/home/xsl
  + harbour/contrib/examples/uhttpd/home/xsl/based.xsl
  + harbour/contrib/examples/uhttpd/home/xsl/basep.xsl
  + harbour/contrib/examples/uhttpd/logs
  + harbour/contrib/examples/uhttpd/modules
  + harbour/contrib/examples/uhttpd/modules/bldhrb.bat
  + harbour/contrib/examples/uhttpd/modules/showcounter.prg
  + harbour/contrib/examples/uhttpd/modules/tableservletdb.prg
  + harbour/contrib/examples/uhttpd/modules/testajax.prg
    + Uploaded first version of uHTTPD server.
    ; NOTE:
      This is first version of uHTTPD (micro HTTPD server) based
      on a sample shared from Mindaugas (thanks!).
      Actually is only for windows and BCC32.
      To build use hbmk_b32.bat
      Please read readme.txt before start to use.

2009-01-19 22:17 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    * clone arrays and hash tables instead of coping when thread static
      variable is initialized

  + harbour/tests/mt/mttest12.prg
    + added demonstration/test code which illustrates thread static
      variables initialization

2009-01-19 21:38 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbct/ctwin.c
  * harbour/contrib/hbct/ctwin.h
    + added support for nested window shadows

2009-01-19 19:34 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbct/ctwin.c
  * harbour/contrib/hbct/ctwin.h
  * harbour/contrib/hbct/ctwfunc.c
    + added support for window shadows which clears highlight attributes
      instead of using fixed shadow color attribute

2009-01-19 13:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbmzip/hbmzip.c
    ! added missing nInternalAttr and nExternalAttr parameters decoding in
      function HB_ZIPFILECREATE() - problem located and fixed by Andres Reyes
      in xHarbour

2009-01-19 12:57 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbproces.c
    ! include signal.h in all *nixes builds - it was my typo and not only
      Darwin needs it.

2009-01-18 22:12 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbgtcore.c
    ! fixed UNSELECTED color updating in SetColor(). It should be changed
      only and always when ENHANCED color is changed

  * harbour/contrib/hbmzip/hbmzip.c
    ! fixed GPF in hb_zipDeleteFile() when file has comment

2009-01-17 19:21 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * source/rtl/hbproces.c
    ! Added header for Darwin to cover kill() call.

2009-01-17 03:39 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbgtcore.h
  * harbour/source/rtl/hbgtcore.c
    + added two new methods:
      TOUCHLINE() - marks line as modified
      REDRAWDIFF() - it contains REFRESH() from which is now called so
      it's possible to overload this method by upper level RDDs without
      touching REFRESH() method which can be overloaded by intermediate
      RDDs

  * harbour/contrib/hbct/ctwin.c
    % do not use EXPOSEAREA() and TOUCHCELL() methods but TOUCHLINE()
      only and overloaded REDRAWDIFF() - it should gives noticeable
      speed improvement in some where cost of screen update is very
      big and GT does not calculate minimal update area.

  * harbour/source/rdd/dbfnsx/dbfnsx1.c
    % minor speed improvement in key decoding

2009-01-16 22:05 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rdd/usrrdd/rdds/logrdd.prg
    - removed sample at end of file
    * typos
  * harbour/source/rdd/usrrdd/example/exlog.prg
    * Altered to reflect new codeblock parameters and added
      local MyToString() function to see how handle commands.

2009-01-16 21:48 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rdd/usrrdd/rdds/logrdd.prg
    + Added new function hb_LogRddValueToText()
    * Changed parameters send at CodeBlocks that user can define
      using hb_LogRddMsgLogBlock() and hb_LogRddUserLogBlock().
      See notes.

    ; NOTE: Made LOGRDD more under user control:
       - hb_LogRddValueToText( <xValue>] ) -> <cValue>
           cValue is formatted as "[<cValType>]>>><cString><<<"
           f.e.: date 31/12/2009 is formatted as "[D]>>>0d20091231<<<"
                 in harbour
           this function already exists as local function as ValToText()
       - Now bMsgLogBlock, defined using hb_LogRddMsgLogBlock(), receives
           follow parameters:
           cTag, cRDDName, cCmd, nWA, xPar1, xPar2, xPar3
           and has to returns a valid formatted string or NIL.
           In last case nothing is written to log file.
           xPar1, xPar2 and xPar3 change depends from called commands.
           For details see at ToString() local function.
       - bUserLogBlock, defined using hb_LogRddUserLogBlock(), receives same
           parameters of bMsgLogBlock.
           It have to return nothing, so it is under user control where to
           log and the format of the log string.

2009-01-16 16:01 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/misc/guess.prg
    * Formatting. (just to test SVN commit hook).

2009-01-16 01:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/video.c
  * contrib/hbct/pack.c
  * contrib/hbct/disk.c
    * Minor formatting.

  * contrib/hbct/common.mak
  * contrib/hbct/Makefile
    ! C headers are now installed.
      (committed in a previous session)

  * config/global.cf
  * make_b32.bat
  * make_gcc.mak
    + Added file ending EOLs.
      (committed in a previous session)

2009-01-15 15:20 UTC-0600 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * source/rdd/usrrdd/rdds/Makefile
    ! Fixed small typos on making library specs

2009-01-16 01:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbrddnsx.h
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
    ! fixed typo in descend flag checking
    % optimized current key decoding

  * harbour/source/rdd/dbfntx/dbfntx1.c
    * formatting

2009-01-16 00:13 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/source/rdd/usrrdd/rdds/logrdd.prg
    * Added new functions
    ; NOTE:
         hb_LogRddMsgLogBlock( [<bMsgLogBlock>] ) -> <bOldMsgLogBlock>
           bMsgLogBlock codeblock permits to user to alter message to log
           into standard log file.
           Codeblock receives follow parameters:
           cTag, cRDDName, cCmd, nWA, cMsg
         hb_LogRddUserLogBlock( [<bUserLogBlock>] ) -> <bOldUserLogBlock>
           bUserLogBlock codeblock redirect all log to user that can log
           everywhere. Parameters send to bUserLogBlock are same of
           bMsgLogBlock.

  * harbour/source/rdd/usrrdd/example/exlog.prg
    * Changed with new functions

  * harbour/make_b32.bat
    * removed comment on first line

2009-01-15 23:08 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/common.mak
  * harbour/config/global.cf
  * harbour/harbour-wce-spec
  * harbour/harbour-win-spec
  * harbour/harbour.spec
  * harbour/make_b32.bat
  * harbour/make_b32.mak
  * harbour/make_gcc.mak
  * harbour/make_vc.mak
    * Added hbuddall library to standard make files
      ; NOTE: hbuddall contains all USR RDDS files in
              harbour/source/rdd/usrrdd/rdds/*
              Viktor pls check me.

  * harbour/source/rdd/usrrdd/rdds/arrayrdd.prg
  * harbour/source/rdd/usrrdd/rdds/fcomma.prg
  * harbour/source/rdd/usrrdd/rdds/hscdx.prg
  * harbour/source/rdd/usrrdd/rdds/logrdd.prg
    * fixed assigned but unused variable

2009-01-15 21:27 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbct/ctwin.c
    * added small hack for scrolling console output when client area
      is set

2009-01-15 20:52 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    * register default RT symbols after setting exception handler

  * harbour/source/vm/fm.c
    % keep process heap address in static variable when HeapAlloc()
      is used.

  * harbour/source/vm/extrap.c
    * casting to pacify warnings

2009-01-15 13:48 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/set.c
    * do not check for HVM stack existence in ST HVM to avoid compiler
      warning

  * harbour/contrib/hbct/ctextern.ch
    ! removed HB_GT_CTW and HB_GT_CTW_DEFAULT added by mistake
      It caused GPF at HVM startup because CTW was register as
      default GT driver

  * harbour/contrib/hbbmcdx/bmdbfcdx.c
    ! added missing hbstack.h
    ! fixed accessing RDD node structure

  * harbour/contrib/hbct/ctwin.h
  * harbour/contrib/hbct/ctwin.c
  * harbour/contrib/hbct/ctwfunc.c
    + extended internal CTW API functions to hide/show window, create
      new window without displaying it, selecting window without moving
      it to top level, changing existing window shadow attribute.
    + added support user window levels controlled by user
      (BOTTOM, DEFAULT, TOP)
    + added support for selecting client area (possible to update square)
      in each CT Window
    It's a work in progress and the above modifications will be updated yet.

2009-01-15 04:40 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.yyh
    * fixed warnings using bison patch provided by Przemek

2009-01-15 00:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/pp/hbpp.c
  * utils/hbdoc/hbdoc.prg
  * utils/hbmake/hbmake.prg
  * utils/hbtest/hbtest.prg
  * utils/hbrun/hbrun.prg
    * More copyrights bumped to 2009.

2009-01-15 03:20 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/include/hbcomp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbexprb.c
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.yyh
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/hbmain.c
    * removed global variables HB_COMP_PARAM->cVarType, ->szFromClass

2009-01-14 21:39 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  + harbour/source/rdd/usrrdd/example/exlog.prg
  + harbour/source/rdd/usrrdd/rdds/logrdd.prg
  * harbour/source/rdd/usrrdd/rdds/Makefile
    + Added new LOGRDD rdd file and related example
    ; NOTE: A simple RDD which introduce logging to file. It inheriths from
            any existent RDD but if you write / replace / delete something
            on tables it writes changes in a log file.
            It needs to inherit a standard RDD to which it adds logging
            capabilities.
            Related functions:
            hb_LogRddInherit() -> <cRDDName>
              REQUESTED - It must returns the standard RDD name to be inherited.
                          This function HAVE to be defined from user in application.
            hb_LogRddLogFileName( [<cFileName>] ) -> <cOldFileName>
              OPTIONAL  - Set/Get logging file name (default "changes.log").
            hb_LogRddTag( [<cTag>] ) -> <cOldTag>
              OPTIONAL  - Set/Get Tag string added in each log line.
                          (default COMPUTERNAME\UserName)
            hb_LogRddActive( [<lActive>] ) -> <lOldActive>
              OPTIONAL  - Set/Get logging active status (default .F.).

2009-01-14 17:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmzip/hbmzip.c
    + Added .prg level functions:
      HB_ZIPSTOREFILEHANDLE():
         To add a new file to a .zip via an already open handle (typically a temp file).
         Obviously, file date/time/attrib will not be set.
      HB_UNZIPEXTRACTCURRENTFILETOHANDLE():
         To extract a file to an already open file handle.
    ; NOTE: I'm not sure if these new functions are useful
            enough to be added to official SVN. Except for Windows,
            there doesn't seem to be a trend that OSes would
            support native temp files, so that we can use this
            to avoid race conditions. Opinions are welcome.

2009-01-14 16:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/net.c
  * contrib/hbct/files.c
    * Minor formatting.

  * source/rtl/gtxwc/gtxwc.c
    ! Fix to recent fix. An '!' was missing, Przemek pls check me.

  * source/rtl/philes.c
    + HB_PROGNAME() now returns absolute path in *NIX systems, too.
      (please test and refine)

  * source/lang/msgca.c
    ! Fixes from xhb.

  * contrib/hbziparc/hbziparc.prg
    * Minor correction ( = -> := )

  * source/rtl/gtwin/gtwin.c
    + Added HB_GTI_CODEPAGE support.
      As per MS docs, this works only when non-raster font is used
      in the console window. Notice that the accepted CP values are
      different from the GTWVT ones (GTWIN being the more "logical"
      one, since it's a newer API). Currently, Harbour doesn't try
      to hide these interface details.
    ; TODO: UNICODE and BOX char support for GTWIN mode.

  * source/rtl/tbrowse.prg
    * Using HB_DISPOUTATBOX() to draw column/header/footer separators.
    ; NOTE: This may cause problems if someone wants to use native
            CP (accented or other special CP specific) chars to draw
            these screen elements. Maybe an option should be added,
            or some sort of markings in the separator strings to
            control that.
            Pls REVIEW.

  * include/hbextern.ch
  * source/rtl/console.c
    + Added HB_DISPOUTATBOX() which is similar to HB_DISPOUTAT(),
      but marks the text drawn as HB_GT_ATTR_BOX, so these chars
      can be properly displayed as drawing chars, regardless of
      the selected codepage. Another difference is that this
      function only supports strings to be printed. Other types
      don't print anything.
    ; NOTE: Maybe this function could use a better name, pls
            review and decide.

  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/gtwvt/gtwvt.h
    ! Fixed not accepting zero as a HB_GTI_CODEPAGE value.
    ! Fixed HB_GTI_CODEPAGE to change the codepage.
    + Added box char support in Unicode mode.
      For chars marked as HB_GT_ATTR_BOX, chars will be
      mapped to Unicode according to CP437.
    + Added box char support in non-Unicode mode.
      For chars marked as HB_GT_ATTR_BOX, OEM_CHARSET will
      always be used.
    ; NOTE: This way it's possible to use ISO/WIN codepages with
            GTWVT, while still being able to use various drawing
            chars (lines, blocks, arrows).
    ; NOTE: The available set of drawing chars depends on the
            OS OEM_CHARSET mapping _for non-Unicode Harbour_.
            For Unicode Harbour, full CP437 codepage is
            always available.
    ; NOTE: This solution doesn't go as far as (GTWXC) to
            graphically draw / emulate these chars.
    ; TODO: Add HB_GTI_BOXCP support to change hard-wired "EN" CP. [DONE]

  * include/hbapigt.h
  * include/hbgtcore.h
    ! Moved HB_GT_ATTR_* macros to public headers, because they
      are needed for public API functions.

  * contrib/hbwin/win_reg.prg
    + w32_regRead(): Added second parameter to specify the default
      value returned in case the reg entry doesn't exist.
      If not specified, NIL will be returned, just like before.
    + GetRegistry(): Added 4th parameter with same purpose as above.

  * source/rtl/hbregex.c
    * Minor opt.

  * contrib/hbwin/win_misc.c
    * Added command line option parameter to WIN_RUNDETACHED().

  * include/hbapi.h
    + HB_ERRCODE (to replace ERRCODE)
    + HB_SUCCESS (to replace SUCCESS)
    + HB_FAILURE (to replace FAILURE)

  + contrib/hbwin/win_misc.c
  * contrib/hbwin/common.mak
  * contrib/hbwin/Makefile
    + WIN_SHELLEXECUTE()
      WIN_RUNDETACHED()
      WIN_LOADRESOURCE()
      Added some new Windows API wrappers.
    ; TODO: Add hb_osEncode() to them.

  * source/rtl/diskspac.c
  * source/rtl/disksphb.c
    ! Fixed DISKSPACE() and HB_DISKSPACE() for Darwin.
      Previously they had returned erroneous values.
    ; TOFIX: Probably HB_DISKSPACE() should be implemented for Watcom and CEGCC,
             just like DISKSPACE() is.

  * source/rtl/filesys.c
    ! hb_fsGetAttr() to set the returned attribute to zero
      in case of error.

  * include/hbextern.ch
  * source/rtl/philes.c
    + HB_FGETATTR( <cFileName>, @<nAttr> ) -> <lSuccess>
    + HB_FSETATTR( <cFileName>, <nAttr> ) -> <lSuccess>
    + HB_FSETDATETIME( <cFileName>, [<dDate>], [<cTime HH:MM:SS>] ) -> <lSuccess>

  * source/rtl/direct.c
    ! Fixed DIRECTORY() when called with "V" (label) parameter.
      Tested under Windows. Please test/correct for other platforms.
      On Windows, the dirspec should not contain a filemask in order
      to work.

  * contrib/hbtip/base64x.c
    % HB_BASE64(): Optimized, cleaned.
    ! HB_BASE64(): Removed second parameter allowing to pass the length of
      the string. This could cause GPF if passed incorrectly. Now length
      is simply determined using hb_parclen().
    ; TOFIX: Input string size limit checking.

  * include/hbdefs.h
    + HB_SIZEOFARRAY() macro, which does: ( sizeof( var ) / sizeof( *var ) )
      To be really precise, f.e. all hb_strncpy() calls should use
      'hb_strncpy( d, s, HB_SIZEOFARRAY( d ) );' instead of:
      'hb_strncpy( d, s, sizeof( d ) );' (given that 'd' is allocated at compile time).
      So that the code adapts to changing character sizes (like UTF-16/32).
      It's useful in some other places, too.

  * contrib/hbct/dattime2.c
    * 0 -> FALSE for BOOL types.

  * include/hbextern.ch
  * source/rtl/strmatch.c
    + HB_WILDMATCHI(). Case-instenstive, exact match. First
      two parameters and return value are the same as for
      HB_WILDMATCH().

  * include/hbextern.ch
  * source/rtl/cdpapi.c
    + HB_CDPSELECT() which does the same as HB_SETCODEPAGE(), but
      aligns well with function naming rules and namespace.
      HB_SETCODEPAGE() still works, but usage is not recommended.
    + Added HB_CDPUNIID( <cHarbourCP> ) -> <cCPName>
      This will return the std CP ID of a Harbour CP, or empty
      if the Harbour CP isn't linked.

  * include/hbapi.h
  * source/rtl/is.c
    ! Fixed compile error when HB_CDP_SUPPORT_OFF is defined.
    + Added following functions:
      hb_charIsDigit()
      hb_charIsAlpha()
      hb_charIsLower()
      hb_charIsUpper()

  * include/hbapi.h
    - hb_strUpperCopy() removed. Implementation was missing.

  * source/rtl/strcase.c
    * Minor formatting.

  * source/rtl/hbrunfun.c
  * source/rtl/run.c
    ! Fixed missing header hbapiitm.h (after previous local change).

  * include/hbapi.h
  * include/hbset.h
  * include/hbapifs.h
  * include/set.ch
  * source/rtl/hbffind.c
  * source/rtl/gete.c
  * source/rtl/filesys.c
  * source/rtl/hbrunfun.c
  * source/rtl/run.c
  * source/rtl/philes.c
  * source/vm/set.c
  * source/vm/cmdarg.c
    + Added file system CP translation.
      Set( _SET_FNAMECP[, <cCPID> ] ) -> <cOldCPID>
      All operations passing filenames to/from the
      OS will convert them to/from the host CP from/to
      the FS CP specified using _SET_FNAMECP.
    * hb_fsNameConv() extended to deal with CP
      conversion, if requested by the app.
    + hb_fsNameConvFrom() (exported) added to deal
      with CP conversions for filenames received from OS.
    + hb_fsNameConvTo() (exported) added to deal
      with CP conversions for filenames/string sent to the OS.
    + Added hb_setGetFNAMECP() (exported) function.
    + Added hb_setGetFileCPTransTo(), hb_setGetFileCPTransFrom()
      (non-exported) functions.
    + hb_fsCurDirBuff() and hb_fsFindNextLow() extended
      to use hb_fsNameConvFrom().
    + Added hb_fsBaseDirBuff() to return the base
      directory on the C level (based on argv[0]).
    + Added HB_PROGNAME() to return the executable
      program name (based on argv[0]).
    + Added HB_DIRBASE() to return the executable
      base directory (based on argv[0]).
    * Renames done regarding OS/FS CP conversion:
      hb_fsNameConvFrom()        -> hb_osDecode()
      hb_fsNameConvTo()          -> hb_osEncode()
      hb_setGetFileCPTransTo()   -> -
      hb_setGetFileCPTransFrom() -> -
      hb_setGetFNAMECP()         -> hb_setGetOSCODEPAGE()
      _SET_FNAMECP               -> _SET_OSCODEPAGE
    * hb_osDecode()/hb_osEncode() extended to have a second
      parameter BOOL * fFree.
       Changed all calls to handle the case when fFree is set
      to TRUE by hb_osDecode()/hb_osEncode().
    + HB_GETENV(): Added 3rd logical parameter to control wether
      to convert the returned value from OS CP to Harbour CP.
      The default is TRUE to be in sync with GETE[NV]() and the
      rest of core.
    * hb_fsNameConv() is now doing OS CP conversion using std APIs,
      rather than duplicating such logic. I've traded some speed
      for modularity.
    * hb_osDecode/hb_osEncode() function declarations moved to hbapi.h
    * hb_osDecode/hb_osEncode() function definitions moved to set.c
    ; NOTE: None of these were extensively tested, and I tend
            to make mistakes when dealing with pointers.
            It compiles cleanly with BCC, and some basic tests
            worked, but bFree = TRUE codepaths are not yet
            working so this needs more review.

  * source/rtl/teditor.prg
  * source/rtl/tpersist.prg
  * utils/hbmake/hbmake.prg
    * MemoRead() -> hb_MemoRead()

  * contrib/hbct/files.c
    ; TOFIX: Many functions here are possibly not thread safe. [DONE]
    ; TOFIX: Calling hb_fsFindClose() at app exit (and thus keeping
             the FF handles open for the whole app lifetime) doesn't
             play well with server side apps (as the app may run for
             months or even longer), and even worse, they
             will lock the passed directory so that they cannot be
             removed (maybe even renamed), until the app exits.
             At least on Windows.

  * source/rtl/dirdrive.c
    ! Fixed to use F_ERROR instead of -1.

  * include/hbextern.ch
    ! Added missing HB_GCSTEP().

  * source/vm/extrap.c
    + Added CPU dump code for Windows x64.
    + Enabled module listing for Windows 64-bit platforms.
    % Minor cleanup in Windows x86 CPU dump code.
    + Added TODO for Windows IA64 CPU dump.
    + Added TODO for Windows x64 stack walk, with pointers.
    + Added TOFIX regarding displaying module names in Windows x64 mode.

  * source/rtl/fstemp.c
    ! Minor formatting.

  * source/rtl/gete.c
  * source/rtl/run.c
  * source/rtl/hbrunfun.c
  * source/vm/cmdarg.c
    + Added CP conversion to:
      GETE[NV](), HB_GETENV(), __RUN(), HB_RUN(),
      HB_ARGSTRING(), HB_CMDLINE().

  ; TODO: hb_dbCreateTemp( <cAlias>, <aStruct>, <cRDD>, <nConnection> ) -> <lSuccess>
          Generates and opens a new dbf with a temporary filename
          in exclusive mode, deletes it automatically when closed.
          All indexes created for this table, should ideally have
          the temporary flag on, so those get deleted too, when closed.
          [DONE]

  ; TOFIX: hb_regex*() functions will not honor Harbour CP setting,
           when case insensitivity is selected.

  ; TOFIX: hbct / SetFDaTi() to move any local logic into Harbour core
           functions and use a simple Harbour API call only.
           I'm not sure what is the reason with keeping the logic
           duplicated here; if this isn't by intent, this function
           could be much simplified. [DONE]

  ; TOFIX: Avoid using C level toupper()/tolower()/islower()/isupper() [DONE]

  ; TOFIX: hb_regexMatch()'s 3rd parameter has a double meaning.
           It controls case-sensitivity (in sync with the documentation),
           but it also controls if hb_regexMatch() behaves like
           hb_regexLike() (.T.), or hb_regexHas() (.F.). This means
           that hb_regexMatch(,, .T.) == hb_regexLike(,, .T.) (case-sensitive) and
                hb_regexMatch(,, .F.) == hb_regexHas(,, .F.) (case-insensitive)
           Maybe this was the intent of the original developers, but
           to me it looks a rather strange behaviour which was added by
           accidentally forgetting about the 3rd parameter already being
           utilized. This either needs to be fixed, or properly documented. [DONE]

  ; NOTE: Noteworthy links:
          http://docs.python.org/3.0/whatsnew/3.0.html
            - Unicode/text section
            - Removed <> (use != instead)
          http://sphinx.pocoo.org/
            - Documentation format
          http://fredeaker.blogspot.com/2007/01/character-encoding-detection.html
            - Character encoding detection

2009-01-14 15:10 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/source/compiler/hbopt.c
    * disabled code optimisation (selfifying local, removing local),
      if code is compiled using -b (debug) switch

2009-01-14 01:38 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtxwc/gtxwc.c
    ! added protection against inaccessible character cell value
      what could cause accessing uninitialized memory and GPF

  * harbour/include/hbrdddbf.h
    ! fixed HB_DIRTYREAD() macro not updated when RDDI_* settings were
      converted from global to thread local

  * harbour/source/rdd/dbf1.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
    % replaced <RDD>NODE_DATA() and <RDD>AREA_DATA() macros defined
      in each RDD by common for all DBF bases RDDs DBFNODE_DATA() and
      DBFAREA_DATA() macros defined in hbrdddbf.h to reduce possible
      mistakes in code updating in the future

2009-01-13 22:44 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    ! restored GCC optimization flags in hb* scripts disabled unintentionally
      by some other modifications

  * harbour/include/hbapifs.h
  * harbour/source/rtl/hbproces.c
    * renamed hb_fsOpenProcess() and hb_fsCloseProcess() to
      hb_fsProcessOpen(), hb_fsProcessClose()

  * harbour/include/hbextern.ch
  * harbour/source/rtl/hbprocfn.c
    * renamed hb_openProcess() and hb_closeProcess() to
      hb_processOpen(), hb_processClose()

  * harbour/contrib/xhb/hbcompat.ch
    * added xHarbour compatible translations
      hb_openProcess() <-> hb_processOpen()
      hb_closeProcess() <-> hb_processClose()

2009-01-13 20:00 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/rddads/adsx.c
    * improved code to solve RDD initialisation order problem
  * harbour/contrib/rddsql/sqlbase.c
    ! fixed minor typo
  * harbour/source/pp/hbpp.c
  * harbour/source/compiler/hbusage.c
    * updated copyright year to 2009

2009-01-13 07:17 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Synchronized with GTWVT as per change below ( Przemek ):
    + Added 'layered' window support. It's enabled on W2K
      and above (and only when not in Terminal Services
      environment, because it makes it perform worse). This
      way the screen is also properly displayed regardless
      of what the Harbour application does. It also fixes
      numerous paint artifacts, when GTWVT window was in
      the background and another window is moved in front
      of it.

2009-01-13 14:07 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/source/rtl/Makefile
  * harbour/include/hbapifs.h
  * harbour/include/hbextern.ch
  + harbour/source/rtl/hbproces.c
  + harbour/source/rtl/hbprocfn.c
    + added C functions hb_fsOpenProcess(), hb_fsProcessValue(),
      hb_fsCloseProcess()
    + added .prg functions HB_OPENPROCESS(), HB_PROCESSVALUE(),
      HB_CLOSEPROCESS()
    Based on xHarbour code by Giancarlo Niccolai.
    Warning: it's possible that they will be changed in the future.
    Please test current implementation. Now few notes about it.
    Each handle returned by HB_OPENPROCESS() have to be closed
    by HB_PROCESSVALUE(). Even if process is killed by HB_CLOSEPROCESS()
    its handle is still open and HB_PROCESSVALUE() has to be executed.
    Type of handle depends on OS. In *nixes it's process PID. In MS-Windows
    it's HANDLE. HB_PROCESSVALUE() attach process exit result in *nixes
    cleaning zombie processes and in Windows closing the HANDLE. If you
    do not call this function then you will have resource leak.
    HB_CLOSEPROCESS() only sends quite request to the process but does
    not execute any cleanup code.
    All communication handles returned in parameters by reference by
    HB_OPENPROCESS() function have to be closed using FCLOSE() function.
    If hStdOut and hStdErr are references to the same variables then
    executing process stdout and stderr is redirected to the only one
    pipe. When handles for stdout, stderr and stdin are not given then
    executed process inherits them from parent process unless <lDetach>
    parameter is not given. In such case they are redirected to null
    device (/dev/null or NUL).
    The OS2 version is not tested. Please make tests.
    There is no support for DOS which is single process OS.
    In WinCE builds std{out,err,in} redirecting and process detaching does
    not work too.
    The parameters parsing should be updated. Now MS-Windows version uses
    native OS command line parsing and quoting by "" can be used for
    parameters with blank characters. I do not know any escape character
    which can be used to pass (") as parameter to MS-Windows application.
    In all other OS-es standard bourne shell rules are used. Parameters can
    be quoted by "" or '' and escape character is \. Quoting by '' disables
    special meaning of escape character. In OS2 where \ is path separator
    escaping and '' quoting is disabled so it works like in MS-Windows
    but I do not know if parameters divided by calling process are fully
    respected by low level API calls in this system.

2009-01-12 23:35 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/cdpapi.c
  * harbour/source/rtl/langapi.c
    * increase maximum number of lang and codepage modules from 64 to 128
      (we already have more then 64)

  * harbour/include/hbgtinfo.ch
    + added HB_GTI_BOXCP - it allows to chose CP for given characters put
      by DISPBOX() and similar box drawing functions.

  * harbour/source/rtl/gttrm/gttrm.c
    + added support for HB_GTI_BOXCP. Now it's possible to change the CP
      used for box drawing characters. Before this modification is was
      hardcoded to "EN"
    * use codepage set by HB_SET{DISP|TERM}CP() also for box characters
      if last parameter <lBox> is true
    This functionality (using different CP for box drawing characters)
    is available only if terminal works in Unicode mode (UTF8).

2009-01-12 15:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/fm.c
  * harbour/include/hbwmain.c
    * use HeapAlloc( GetProcessHeap(), ... ) instead of LocalAlloc()
      when HB_FM_WIN32_ALLOC macro is set - Toninho's tests show that
      it's a little bit more efficient - thanks.
      Thanks also to Miguel Angel Marchuet which 1-st used HeapAlloc()
      in xHarbour.

2009-01-09 17:59 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbct/ftoc.c
  * harbour/contrib/hbct/misc1.c
    * changed XTOC(), FTOC() and CTOF() to always store/retirve numbers as
      double value in little endian order to reduce platform differences
      ; TOFIX intorduce new macro which can be used instead sizeof( double )
        for platforms where double size is different then 8 and macro
        HB_FORCE_IEEE754_DOUBLE is set

  * harbour/contrib/hbct/dattime2.c
    * changed date functions to use default date like in CT3

2009-01-09 13:35 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/classes.c
    * updated __objHasMsgAssigned()
      + accept also symbols (@methodname()) not only strings as message name
        (2-nd parameter) just like in __objHasMsg() or __objSendMsg()
      + added suport for scalar classes in __objHasMsgAssigned()
      + generate RT error when wrong parameters are passed
    * updated comments with .prg functions syntax

2009-01-09 12:55 UTC+0100 Maurilio Longo (maurilio.longo@libero.it)
  * harbour/config/os2/global.cf
    * simplified and fixed an error in deleting files
  * harbour/source/rtl/hbffind.c
    ! fixed hb_fsFindNextLow() in OS/2 which was using stat to find file size, but
      as it seems, st_size contains garbage. Removed call to stat() and used
      buffer returned by DosFindFirst().

2009-01-09 01:24 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbntos.c
  * harbour/source/rtl/hbrandom.c
    * removed dummy spaces

  * harbour/source/rtl/filesys.c
    * updated HB_TRACE messages

  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
    * return pure index name without path and extension for DBOI_BAGNAME just
      like DBFCDX does. It's not Clipper compatible but looks that people
      expects ordBagName() behavior implemented in COMIX CDX driver (CL53).
      Full index name can be accessed by DBOI_FULLPATH.
      If you think it's wrong and we should keep CL52 DBFNTX behavior then
      I can revert it but I will want to also change DBFCDX to keep
      ordBagName() compatible core RDDs.
      Please let me know your preferences.

  * harbour/contrib/hbtpathy/telepath.prg
    ! replaced ThreadSleep() with hb_idleSleep()

2009-01-08 20:55 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * harbour/contrib/xhb/cstruct.prg
    * fixed assigned but unused variable

2009-01-08 13:12 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/source/compiler/hbopt.c
    * improved 'variable assigned but unused' detection logic
  * harbour/source/rtl/treport.prg
    * fixed assigned but unused variable

2009-01-07 13:56 UTC-0600 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * source/vm/classes.c
    + addded __objHasMsgAssigned( object, "msgName" )
      ; this is similar to xHarbour __clsMsgAssigned() and checks
      ; if a VIRTUAL message has been overrided in a sub-class.
      ; TODO: Please check this implementation, I'm sure it can be optimized.

2009-01-05 18:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbsql.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/contrib/rddads/ads1.c
    ! reuse the same error object when CANRETRY flag is set for valid
      TRIES member update

2009-01-05 13:33 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbgtcore.h
  * harbour/source/rtl/hbgtcore.c
    * changed BYTE bClearColor to USHORT uiClearColor

2008-12-19 12:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  ; The following modifications were made by Viktor Szakats,
    (2008-11-22 16:15 UTC+0100 - 2008-12-19 12:56 UTC+0100)
    Many thanks. It's the first part without CP conversions in OS calls which
    I will want to check yet. Please tests MS-Windows only modifications.
    [Committed by Przemyslaw Czerpak]

  * harbour/make_vc.mak
  * harbour/contrib/mtpl_vc.mak
    + Added support for A_USR.

  * harbour/include/set.ch
  * harbour/include/hbextern.ch
  * harbour/source/vm/cmdarg.c
  * harbour/source/vm/set.c
  * harbour/source/rtl/tgetlist.prg
  * harbour/source/rtl/gete.c
  * harbour/contrib/hbhpdf/harupdf.c
    * formatting

  * harbour/source/rtl/hbffind.c
    * Changed few places to use sizeof() instead of
      explicit size macro.

  * harbour/source/vm/extrap.c
    + Added module listing. (also supports Win64)

  * harbour/source/common/hbver.c
    + Added Intel C compiler detection. (from xhb)
    + Added Wine detection (unofficial but stable looking
      detection method. There intentionally doesn't exist
      an official method to do this detection, yet there
      are cases when this is necessary. It's also essential
      for error reports.)
      See also:
      http://www.mail-archive.com/wine-devel@winehq.org/msg48659.html

  * harbour/source/common/hbfopen.c
    ! Reverted recent change to use fopen_s(). fopen_s()
      will always open in exclusive mode, so it could create
      incompatibilities.

  * harbour/source/codepage/cpbgmik.c
    ! Fixed BGMIK collation encoding. Someone familiar with
      BG CPs please confirm this, but previously it was
      almost certainly broken, as the collation was identical
      to BG866.

  * harbour/source/rtl/diskspac.c
  * harbour/source/rtl/disksphb.c
    ! GetModuleHandleA() -> GetModuleHandle()
    ; NOTE: GetModuleHandleA() WinCE emulation in
            source/common/wince.c might be unnecessary
            after this change.

  * harbour/source/rtl/memoedit.prg
  * harbour/source/rtl/teditor.prg
    ! Cleaned insert handling. It now won't anymore mess up
      the cursor on instantiation (in New() method). Internal
      :lInsert state replaced by Set( _SET_INSERT ). Cursor
      is only touched in the editing loop.

  * harbour/source/rtl/version.c
    ! HB_VERSION( HB_VERSION_BUILD_DATE ): Fixed month
      being off by one.

  * harbour/contrib/hbmzip/hbmzip.c
    ! Fixed typo which caused timestamps stored in .zip files
      to be wrong.

  * harbour/contrib/hbhpdf/tests/harupdf.prg
    ! Minor typo in code.

  * harbour/contrib/rddads/rddads.h
    + Added detection for ACE 9.10.

  * harbour/contrib/hbtip/sendmail.prg
    ! Stricter parameter checking in hb_SendMail().

  * harbour/contrib/examples/dbu/hb_dbu.dif
    + Added SET DATE ANSI and SET CENTURY ON

  * harbour/source/rtl/gtxwc/gtxwc.c
    + Generating HB_K_RESIZE keystrokes on screen resize.
      This way it's working similarly to gtwvt.
    ! Typos in comments.

  * harbour/source/rtl/gtwin/gtwin.c
    ! Fixed HB_GTI_KBDSHIFTS not working in console mode.
      Replaced GetKeyboardState() call with GetKeyState() calls.

  * harbour/source/rtl/gtwvt/gtwvt.c
    + Added 'layered' window support. It's enabled on W2K
      and above (and only when not in Terminal Services
      environment, because it makes it perform worse). This
      way the screen is also properly displayed regardless
      of what the Harbour application does. It also fixes
      numerous paint artifacts, when GTWVT window was in
      the background and another window is moved in front
      of it.
    ! Fixed only generate HB_K_RESIZE keystrokes when
      resize mode is HB_GTI_RESIZEMODE_ROWS.

2008-12-31 14:12 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexprb.c
    + added optimizations for var := var <op> <exp> => var <op>= <exp>
      when <op> is +, -, *, / %, ^ operator
    % cleanup up checking if message can be used as LValue

2008-12-30 18:10 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/include/hbapi.h
  * harbour/source/vm/arrays.c
    + added array preallocation

  * harbour/contrib/rddsql/sqlbase.c
  * harbour/contrib/rddsql/sqlmix.c
    * fixed a few compile time warnings

2008-12-30 12:02 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcomp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbexprb.c
  * harbour/source/common/expropt2.c
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/hbcomp.c
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyc
    ! fixed <cConst1> == <cConst2> => <lConst> optimizations if
      <cConst1> or <cConst2> contains valid &macro. Such expressions
      cannot be optimized if -kM compiler switch is not used, f.e.:
         M->V := "ABC"
         ? "[&V]" == "[ABC]"
    ! fixed <cConst1> $ <cConst2> => <lConst> optimizations if
      <cConst1> or <cConst2> contains valid &macro. Such expressions
      cannot be optimized if -kM compiler switch is not used, f.e.:
         M->V := "ABC"
         ? "[&V]" $ " [ABC] "
    % do not disable <cConst1> + <cConst2> => <cConst> and
      <cConst1> - <cConst2> => <cConst> optimization when <cConst1> or
      <cConst2> contains valid &macro but -kM compiler switch is used.

  * harbour/include/hbexprb.c
    * cover ! ! <exp> => <exp> optimization by -ko compile time switch

  * harbour/doc/cmpopt.txt
    * updated compiler optimization description

2008-12-29 20:23 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbct/disk.c
    ! fixed dirname() - thanks to Saulius

2008-12-29 19:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcomp.h
  * harbour/include/hbmacro.ch
  * harbour/source/compiler/ppcomp.c
  * harbour/source/compiler/hbusage.c
  * harbour/source/compiler/cmdcheck.c
    + added -ko (allow operator optimizations) compiler switch
      It's disabled by default.

  * harbour/include/hbexprb.c
    * removed HB_ADD_SUB_ONE_OPT macro and enable optimizations covered
      by it when -ko switch is used.

  * harbour/source/common/expropt2.c
    * disabled <exp> + 0 => <exp>, <exp> + "" => <exp>, - - <exp> => <exp>
      optimizations for default compiler settings. They can be enabled by
      -ko compiler switch
    + added optimizations for numeric values and + operator which uses
      standard mathematical + behavior for real numbers:
         a + b + c == a + ( b + c )
         a + b == b + a
      It's disabled by default and can be enabled by -ko compiler switch.
      There are also other similar optimizations which can be added in
      this way.

  * harbour/include/hbapi.h
  * harbour/source/vm/itemapi.c
  * harbour/source/vm/fm.c
    ! fixed redundant call to hb_xrealloc() in string resize operation.
      Thanks to Mindaugas for locating it.

2008-12-29 19:33 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * harbour/contrib/rddsql/sddfb/fbirddd.c
    ! fixed a few type castings

2008-12-27 18:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfnsx/dbfnsx1.c
    * added some missing const in char * declarations

  * harbour/contrib/hbtip/sendmail.prg
    * cleaned unused assigned detected by new Mindaugas logic

2008-12-27 17:46 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    + added support for rddsql and sdd* libraries in hb* scripts

  * harbour/harbour-win-spec
  * harbour/harbour-wce-spec
    ! added rddnsx library

  * harbour/mpkg_rpm.sh
  * harbour/harbour.spec
    + added harbour-fbird RPM and support for sqlrdd and sdd* libraries

  * harbour/contrib/rddsql/sddpg/Makefile
    + added other paths checking for postgresql header files

  * harbour/contrib/rddsql/sddfb/Makefile
    ! fixed file name

  * harbour/contrib/rddsql/sddpg/pgsqldd.c
  * harbour/contrib/rddsql/sddfb/fbirddd.c
    * cleanup init symbol declaration
    ! casting for C++ compilation
    * added missing const in some char * declarations

  * harbour/contrib/rddsql/sddfb/fbirddd.c
    * changed some parameters passed to firebird functions.
      Mindaugas please verify me because these modifications changes
      the code behavior. I do not know FireBird API and I modified it to
      only pass C++ compilation checking error messages. At least these
      lines should be checked: 233, 236, 244, 245, 260, 261, 440, 445
      If possible please also check casting I added in in other lines
      because it may hide some mistakes.

2008-12-27 18:08 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * source/compiler/hbopt.c
    + added logic to generate 'assigned but unused' warning in case
      op= is used. Ex.:
         nI += nJ
         nI := 5
    ; This type of redundancy is not found in core code

2008-12-27 15:31 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/include/hbapi.h
  * harbour/include/hbapiitm.h
  * harbour/source/vm/hashes.c
    * small modifications in order of some structure members for better
      alignment

  * harbour/source/vm/hvm.c
    * pacified BCC warnings

  * harbour/contrib/rddsql/Makefile
  * harbour/contrib/rddsql/sddpg/Makefile
  + harbour/contrib/rddsql/sddfb/Makefile
    * updated GNU make files for new SQL RDDs - many thanks to
      Mindaugas

2008-12-26 00:35 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  + contrib/rddsql/sddfb
  + contrib/rddsql/sddfb/fbirddd.c
  + contrib/rddsql/sddfb/common.mak
  + contrib/rddsql/sddfb/make_b32.bat
  + contrib/rddsql/sddfb/make_vc.bat
    + added SQL database driver for Firebird

  * contrib/rddsql/sddmy/mysqldd.c
  * contrib/rddsql/sddpg/pgsqldd.c
    * minor adjustment of error subsystem name

  * contrib/rddsql/sddmy/make_vc.bat
  * contrib/rddsql/sddpg/make_b32.bat
  * contrib/rddsql/sddpg/make_vc.bat
    * removed unused enviroment variable assignment

  * contrib/rddsql/sddpg/common.mak
    * svn properties adjustment

2008-12-25 23:08 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * contrib/gtwvg/wvgclass.prg
  * contrib/hbgd/gdchart.prg
    ! fixed assigned but not used variable
    ; Also I would like to wish you all a happy Christmas holidays

2008-12-25 11:32 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * ChangeLog
    * fixed ChangeLog entry of last commit. Sorry, wrong result
      file was pasted

2008-12-25 11:14 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * include/hbextern.ch
  * source/rtl/seconds.c
    + implemented hb_milliseconds(). This function returns time value
      from some moment in the past (not midnigth!). It does not start
      to cound from zero in midnight, thus, can be safetly used to
      measure time intervals.
  + tests/ticktime.c
    + Added nice test for hb_milliseconds().
      Results on WinXP:
        Ticks per second: 63.595
        Min/avg/max interval (ms): 15.000 / 15.724 / 47.000
        Loops per tick:      13035.09
      Results on openSUSE on VirtualBox on WinXP:
        Ticks per second: 991.799
        Min/avg/max interval (ms): 1.000 / 1.008 / 22.000
        Loops per tick:        765.71

2008-12-25 08:20 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * contrib/rddsql/sqlpg/make_b32.bat
  * contrib/rddsql/sqlpg/make_vc.bat
    ! fixed import library building

2008-12-25 08:05 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * contrib/rddsql/sqlbase.c
  * contrib/rddsql/sqlmix.c
  * contrib/rddsql/tests/test1.prg
  * contrib/rddsql/common.mak
  - contrib/rddsql/hbsqldd.h
  + contrib/rddsql/hbrddsql.h
  * contrib/rddsql/make_b32.bat
  * contrib/rddsql/make_vc.bat
  * contrib/rddsql/make_gcc.sh
  + contrib/rddsql/sddmy
  - contrib/rddsql/mysqldd.c
  + contrib/rddsql/sddmy/mysqldd.c
  + contrib/rddsql/sddmy/Makefile
  + contrib/rddsql/sddmy/make_gcc.sh
  + contrib/rddsql/sddmy/common.mak
  + contrib/rddsql/sddmy/make_b32.bat
  + contrib/rddsql/sddmy/make_vc.bat
    * changed structure and names of rddsql libraries. Since it can
      support many SQL databases, each backend moved to a separate
      library. Otherwise (all backend in the same library) nobody will
      be able to compile library without installing packages of ALL
      supported SQL databases. Now:
         rddsql - RDD for interfacing to SQL database drivers
         sddmy  - MySQL database driver
         sddpg  - Postgre SQL database driver
         ...
    ; TOFIX: I was unable to manage build files. [DONE]
      contrib/sqlrdd/sddmy/make_b32.bat sets HB_ROOT variable:
        set HB_ROOT = ..\..\..
      but this variable is lost and contrib/make_b32.mak reassign it:
        !ifndef HB_ROOT
        HB_ROOT = ..\..
        !endif
      This breaks building of library. To fix this problem, I've added
      a two hacks:
        - added additional include path into CFLAGS (see make_b32.bat)
        - added "..\" to LIB_PATH (see common.mak)
      The same problem is for both make_b32 and make_vc, and for both
      sddmy and sddpg libraries.
    ; TODO: check (and adjust if neccessary) build files for unix

  + contrib/rddsql/sddpg
  + contrib/rddsql/sddpg/pgsqldd.c
  + contrib/rddsql/sddpg/Makefile
  + contrib/rddsql/sddpg/make_gcc.sh
  + contrib/rddsql/sddpg/common.mak
  + contrib/rddsql/sddpg/make_b32.bat
  + contrib/rddsql/sddpg/make_vc.bat
    + added SQL database driver for Postgre SQL
    ; does anyone have more RDD for Christmas gift? :)

2008-12-24 12:23 UTC-0600 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * include/Makefile
    + added hbrddnsx.h header

2008-12-24 11:52 UTC-0600 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * harbour.spec
    + added rddnsx to rpm builds. Thanks Przemek.
    ; Also I would like to wish you all a happy xmas holidays
    ; and a new year full of health, love and Harbour business :)

2008-12-24 14:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hbmk.bat
  * harbour/bin/hbmk_os2.cmd
  * harbour/bin/hb-func.sh
    + added rddnsx to linked library list

2008-12-24 13:32 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfnsx/Makefile
    ! fixed typo in library name. Should be rddnsx instead of dbfnsx.
      Thanks to Lorenzo.

2008-12-24 09:45 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + harbour/include/hbrddnsx.h
  + harbour/source/rdd/dbfnsx
  + harbour/source/rdd/dbfnsx/dbfnsx1.c
  + harbour/source/rdd/dbfnsx/Makefile
  * harbour/config/global.cf
  * harbour/make_b32.mak
  * harbour/make_vc.mak
  * harbour/make_gcc.mak
  * harbour/common.mak
    + added new DBFNSX RDD. Those of you who knows SIX3 should also
      know NSX index format. It's very interesting format and in some
      cases much better then CDX. I hope you will find it interesting.
      In hbrddnsx.h you can find detail information about Harbour NSX
      implementation.
      It's a small gift from me for Christmas ;-)

      I would like to wish all of you Marry Christmas and Happy new Year.

      best regards,
      Przemek

2008-12-24 04:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/rddado/adordd.prg
    * removed cSupperRDD never assigned local variable detected by new
      compiler logic added by Mindaugas.

2008-12-24 03:23 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * include/hberrors.h
  * source/compiler/hbgenerr.c
  * source/compiler/hbopt.c
    + implemented warning: Variable '%s' is never assigned in function %s(%d).
      This variable can be replaced by value NIL

  * source/rtl/treport.prg
    % removed never assigned variable

2008-12-24 00:04 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/expropt1.c
  * harbour/source/common/expropt2.c
    ! fixed wrongly modified expression during optimization for
      ( <numConst> / 0.0 )
    * cleaned bDec/bWidth updating in compile time optimizations

  * harbour/tests/speedtst.prg
    ! fixed possible race condition in initialization
    + added set workarea private for xHarbour builds - thanks to Phil

  * harbour/doc/cmpopt.txt
    * small cleanup

  * harbour/include/hbvmpub.h
  * harbour/source/vm/hvm.c
    % some optimizations mostly for MT mode or compilers which do
      not support function autoinline optimization

2008-12-23 15:45 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbsetup.h
    * temporary disabled noreturn function attributes - we have some
      code which puts references to some functions after hb_errInternal()
      call to force link bindings which is fully optimized if hb_errInternal
      is declared with noreturn attribute so we cannot use it as long as we
      will not clean them.

  * harbour/tests/speedtst.prg
    * build default xHarbour binaries without support.
      xHarbour needs separated version for MT and ST mode
      because standard MT functions are not available in
      ST libraries.

2008-12-23 03:11 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  * harbour/contrib/rddado/adordd.ch
  * harbour/contrib/hbwin/hbwin.h
    * converted TABs to SPACEs

  * harbour/include/hbapicdp.h
    * formatting

  * harbour/config/rules.cf
  * harbour/config/w32/mingwce.cf
  * harbour/config/w32/poccce.cf
  * harbour/config/w32/msvcce.cf
    ! fixed repeated HB_FLAGS

2008-12-22 16:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
    ! cleaned some typos in my recent ChangeLog entries

  * harbour/include/hbvm.h
  * harbour/include/hbvmpub.h
  * harbour/include/hbsetup.h
  * harbour/include/hbapi.h
  * harbour/include/hbapierr.h
    * added some function attributes which can improve code optimization
      or introduce some additional warnings.
      Now it works only in GCC builds.

  * harbour/source/vm/hvm.c
    ! fixed missing double decimal places initialization in some number
      negating
    ! fixed setting number of decimal places in plus and minus operations
      if integer overflow forces conversion to double item
    * some minor optimizations

  * harbour/source/rtl/rat.c
    * formatting

2008-12-20 09:36 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.h
    ! Seperated PHB_GTWVT structure for GUI elements as PHB_GUIDATA + PHB_GTWVT.

  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgcore.c
  * harbour/contrib/gtwvg/wvgutils.c
    ! Modified to respect PHB_GUIDATA structure.

  * harbour/contrib/gtwvg/wvgpaint.prg
    ! Modified THREAD STATIC paint_ behavior to respect true thread oriented
      until THREAD STATIC is modified to respect its true meaning.

  * harbour/contrib/gtwvg/wincback.prg
  * harbour/contrib/gtwvg/wvgmenub.prg
  * harbour/contrib/gtwvg/wvgclass.prg
  * harbour/contrib/gtwvg/wvgsle.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgsysw.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Fixed to respect new compiler warnings.
      Thanks Mindaugus for this great addition.
      Hope code will be faster than before.

2008-12-20 18:35 UTC+0100 Francesco Saverio Giudice (info/at/fsgiudice.com)
  * contrib/hbfbird/tfirebrd.prg
  * contrib/hbgd/gdbar.prg
  * contrib/hbgd/gdbarcod.prg
  * contrib/hbgd/gdchart.prg
    ! fixed assigned but not used variable

2008-12-19 20:26 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/set.c
    ! fixed long existing bug in _SET_PRINTFILE, _SET_DEFAULT, _SET_EXTRAFILE
      It was possible to use closed handle for the above file inside error
      handler executed during their reopening.

2008-12-19 19:46 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/filesys.c
    * do not respect _SET_PATH when hb_{file|fs}ExtOpen() is called
      with create file attributes - Clipper compatibility.

  * harbour/source/vm/set.c
    * recognize files starting with "/dev/" as devices in *nixes
    * check if given file name is a name of existing device (character,
      block, fifo, socket) in *nix builds
    * ignore _SET_DEFAULT and default extension in _SET_PRINTFILE,
      _SET_ALTFILE and _SET_EXTRAFILE when given file name is device name.
      In DOS/Windows/OS2 builds devices are recognized by name:
      "PRN", "CON", "LPT[1-3]", "COM[1-9]"

2008-12-19 18:25 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/hbopt.c
    * pacified GCC warning

2008-12-19 14:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/hbpp.c
    * accept empty $Id keywords in ChangeLog file. It allows to compile
      Harbour from source taken directly from SVN as tarball without
      keyword expanding, f.e. from:
         http://harbour-project.svn.sourceforge.net/viewvc/
              harbour-project/trunk/harbour.tar.gz?view=tar
      In such case revision number is unknown and set arbitrary to -1
    * change -q parameter to accept 0, 1 and 2 levels to disable standard
      messages and also warning/error ones

2008-12-19 06:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/utils/hbtest/rt_hvm.prg
  * harbour/utils/hbtest/rt_hvma.prg
    * updated error messages for compilation with -z (no shortcut
      optimization)

2008-12-19 04:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbmysql/tmysql.prg
  * harbour/contrib/hbpgsql/pgrdd.prg
  * harbour/contrib/hbpgsql/tpostgre.prg
    ! fixed unused variables and meaningless assignment detected by new
      compiler extension - many thanks to Mindaugas for it.

  * harbour/include/hbsetup.h
    + added macros for some function attributes which can be used in
      the future for optimizations

  * harbour/source/rtl/filesys.c
    * formatting

  * harbour/source/rtl/hbtoken.c
    * changed the behavior of " " token delimiter - now it works as
      any other tokens. The old behavior can be still reach using empty
      string "" as token delimiter. "" is now default token.

  * harbour/utils/hbtest/hbtest.prg
    * change error object to text conversion in hbtest so now it detects also
      differences which were ignored by previous version, f.e. OPERATION
      wrongly used instead of FILENAME or wrongly set TRIES flag.

  * harbour/utils/hbtest/hbtest.prg
  * harbour/utils/hbtest/rt_trans.prg
  * harbour/utils/hbtest/rt_math.prg
  * harbour/utils/hbtest/rt_hvm.prg
  * harbour/utils/hbtest/rt_misc.prg
  * harbour/utils/hbtest/rt_hvma.prg
  * harbour/utils/hbtest/rt_class.prg
  * harbour/utils/hbtest/rt_str.prg
  * harbour/utils/hbtest/rt_stra.prg
  * harbour/utils/hbtest/rt_date.prg
  * harbour/utils/hbtest/rt_array.prg
    * updated for extended error messages, tested with Harbour, Cl52/53

  * harbour/include/hbapierr.h
  * harbour/source/rtl/errorapi.c
    + added hb_errRT_FileError() used in file errors
    ! fixed TRIES counter updating when RETRY flag is set - it should
      be done before calling error block not after - detected by new
      hbtest error messages
    ; TOFIX: in practice all errors with RETRY flag generated by
             other hb_errRT_*() functions have to be fixed because
             new error object is created each time and informations
             from previous one are lost, f.e. TRIES counter or CARGO
             value set by user. They should be reimplemented in similar
             way to hb_errRT_FileError()

  * harbour/source/vm/memvars.c
  * harbour/source/rtl/copyfile.c
  * harbour/source/vm/set.c
    ! fixed wrong error messages detected by new hbtest in _SET_PRINTFILE,
      _SET_ALTFILE and _SET_EXTRAFILE
    ; TOCHECK - Does CA-Cl*pper respect _SET_DEFAULT in above SETs?

2008-12-19 03:55 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * source/compiler/hbopt.c
    ! fixed compiler memory leaks

  * contrib/hbnf/xbox.prg
  * contrib/hbtpathy/telepath.prg
    ! fixed assigned but not used variable

2008-12-19 01:15 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * contrib/rddsql/mysqldd.c
  * contrib/rddsql/sqlbase.c
    ! moved pArea->uiFieldCount checking to sqlbase

2008-12-18 21:27 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * contrib/hbnf/mouse1.prg
  * contrib/hbnf/pegs.prg
  * contrib/hbnf/popadder.prg
  * contrib/hbnf/tbwhile.prg
  * contrib/hbtip/cgi.prg
  * contrib/hbtip/ftpcln.prg
  * contrib/hbtip/httpcln.prg
  * contrib/hbtip/popcln.prg
  * contrib/hbtip/sendmail.prg
  * contrib/hbtip/sessid.prg
  * contrib/hbtip/smtpcln.prg
  * contrib/hbtpathy/telepath.prg
  * contrib/hbvpdf/hbvpdf.prg
  * contrib/hbvpdf/hbvpdt.prg
  * contrib/hbwhat/wincore.prg
  * contrib/hbwin/win_tprn.prg
    ! fixed assigned but not used variable
    ; NOTE: the only unfixed code is contrib/gtwvg, utils/hbdoc,
            utils/hbmake/hbmake.prg

2008-12-18 19:53 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * source/compiler/hbopt.c
    ! one more try to fix passing information about redundant variable
      assignment by preprocessor rules, i.e., _nowarn_* hack removed,
      using HB_SYMBOL_UNUSED() technique

  * include/hbclass.ch
  * include/std.ch
    ! fixed redundant nScope and GetList assignment

  * contrib/rddado/adordd.prg
  * contrib/xhb/cstruct.prg
  * contrib/xhb/hblog.prg
  * contrib/xhb/sprintf.prg
    ! fixed assigned but not used variable

2008-12-18 17:30 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * source/compiler/hbopt.c
    ! suppressed optimisation if PARAMETER sentence is used
      ; TODO: PARAMETER sentence support

  * contrib/hbmisc/fileread.prg
  * contrib/hbmisc/nconvert.prg
  * contrib/hbnf/aredit.prg
  * contrib/hbnf/clrsel.prg
  * contrib/hbnf/dfile.prg
  * contrib/hbnf/dispmsg.prg
  * contrib/hbnf/dosver.prg
  * contrib/hbnf/menu1.prg
  * contrib/hbnf/menutonf.prg
  * contrib/hbodbc/browodbc.prg
  * contrib/hbodbc/todbc.prg
  * contrib/hbwhat/whatutil.prg
  * contrib/hbwhat/wincore.prg
  * contrib/hbwhat/windebug.prg
  * contrib/hbwhat/winerror.prg
  * contrib/hbwhat/wintabs.prg
  * contrib/hbwhat/wintbar.prg
  * contrib/hbziparc/hbziparc.prg
    ! fixed assigned but not used variable

2008-12-18 15:30 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * include/hbcomp.h
  * source/compiler/hbmain.c
  * source/compiler/hbopt.c
    ! fixed warnings of last commit

  * contrib/hbpgsql/tpostgre.prg
    ! fixed assigned but not used variable

2008-12-18 05:02 UTC+0200 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * include/hbclass.ch
  * include/hbcomp.h
  * include/hberrors.h
  * source/compiler/hbgenerr.c
  * source/compiler/hbmain.c
  * source/compiler/hbopt.c
    + PCode optimizations:
        1) Self := QSELF(), Self:method -> QSELF():method
        2) Declared, but unused variables are removed from code
      These optimizations are enabled if jump optimizations are enabled.

    + added recursive pcode tree tracer. It is capable to generate new
      warning: Variable %s is assigned, but not used.
      Warning is not generated in these cases:
        1) unoptimal Self := QSELF() pcode [generated by preprocessor rules]
        2) if variable name starts with '_nowarn_'. This allows to
           suppress warning in case unoptimal pcode is generated by
           preprocessor rules
        3) assigned value is NIL. This let us force garbage collection
           using oVar := NIL
      Warning has warning level 3.
      ; NOTE: if you are using -w3 -es2 in makefiles, you'll need to fix your
              redundant code to compile the project

  * source/rtl/achoice.prg
  * source/rtl/browse.prg
  * source/rtl/tbrowse.prg
  * source/rtl/teditor.prg
  * source/rtl/tget.prg
  * source/rtl/tgetlist.prg
  * source/rtl/tlabel.prg
  * source/rtl/tmenusys.prg
  * source/rtl/tpersist.prg
  * source/rtl/treport.prg
  * source/debug/dbgtmenu.prg
  * source/debug/debugger.prg
  * source/debug/dbgtobj.prg
    * fixed 'assigned but not used' warnings

  * utils/hbdoc/hbdoc.prg
  * utils/hbdoc/genasc.prg
  * utils/hbdoc/genhpc.prg
  * utils/hbdoc/genhtm.prg
  * utils/hbdoc/genchm.prg
  * utils/hbdoc/genng.prg
  * utils/hbdoc/genos2.prg
  * utils/hbdoc/genrtf.prg
  * utils/hbdoc/gentrf.prg
  * utils/hbdoc/ft_funcs.prg
  * utils/hbmake/hbmake.prg
    * #pragma -w2
    ; NOTE: I've been fixing warnings in utils/hbdoc/* for 2 hours,
      but only fixed half of files. There are a lot of garbage code here.
      I do not thing this code is working...
      I used fallback method: restored original files and used -w2
    ; NOTE: hbmake.prg has about 140 unused assignments.
      I've also fallback to -w2, because some of unused code is complex,
      ex., ASCAN() with block parameters. I'm not using hbmake, and I'm
      affraid to break something important.

  * compiler/hbpcode.c
    - removed Ron's copyright on hb_compStrongType(). We do not have this
      functions in the compiler at all. I guess this text is just a result
      of .c header copy-paste from xHarbour's hbstrong.c some time ago.

2008-12-16 10:06 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/classes.c
    * pacified BCC warning

  + harbour/tests/mt/mttest11.prg
    + added new test for asynchronous screen updating in MT mode

2008-12-15 08:07 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvtwin.ch
    + Added more constants.

  * harbour/contrib/gtwvg/wvgwin.c
    + Added functions to manipulate ChooseFont() WINAPI.

  * harbour/contrib/gtwvg/wvgsysw.prg
    + Implemented WvgFontDialog(), WvgFon() Xbase++ compatible classes.

  * harbour/contrib/gtwvg/tests/demoxbp.prg
    + Incorporated WvgFontDialog() and WvgFont() functionality.

    ;IMPORTANT: XBase++ documentation describes that WvgFontDialog()
                cannot be opened in modeless state under Windows.
                Additionally it also states that its event blocks cannot
                be implemented in Windows. It is possible only in OS/2.

                But Harbour implementation of WvgFontDialog() has
                provided this important functionality in Windows also.
                You can :display the font dialog in modeless state as
                well as :activate* codeblocks also get fired.

2008-12-12 12:10 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvtwin.ch
    + Added more constants.
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
  * harbour/contrib/gtwvg/wvgsysw.prg
    ! Fixed some variable usages. Sorry for reckless uplod a couple of hours before.

2008-12-12 10:06 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/makefile
  * harbour/contrib/gtwvg/common.mak
    + wvgsysw.prg

  + harbour/contrib/gtwvg/wvgsysw.prg
    + Started WvtSysWindow(), WvgFontDialog() classes compatible with Xbase++.

  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Implemented more methods and properties upto Xbase++ documentation.

  * harbour/contrib/gtwvg/wvgwin.c
    ! More functions and cleanup of existing ones.

  * harbour/contrib/gtwvg/wvgparts.ch
    + Added More constants.

  * harbour/contrib/gtwvg/tests/demoxbp.prg
    ! Added more feature implemenattion.

    ;THANKS: Przemek for fixing mingw compilation.

2008-12-12 18:06 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/codebloc.c
  * harbour/source/vm/proc.c
  * harbour/source/vm/classes.c
    + added support for messages in PROCFILE()
    * modified PROCFILE() and HB_METHODNAME() output - PROCFILE()
      should be fully Clipper compatible and HB_METHODNAME() works
      in a little bit different way for evaluated codeblocks created
      in methods or associated with method and returns (b)<class>:<msg>
      instead of (b)<method> so the output is more similar to xHarbour.

  * harbour/contrib/gtwvg/gtwvg.h
    ! disabled NONAMELESSUNION - wvgwin.c uses TVINSERTSTRUCT item
      member without union name what breaks MINGW compilation
    * added hardcoded TVIS_EXPANDPARTIAL when it does not exist
      in header files - MINGW 3.4 does not have it.

2008-12-11 19:48 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
    + added hb_atomic_set(), hb_atomic_get(), hb_atomic_inc() and
      hb_atomic_dec() functions which operates on HB_COUNTER or smaller
      type if it's necessary for some platforms which can be access/assign
      increment/decrement in MT safe atom operations.
      hb_atomic_dec() returns true if counter is 0 after decrementation

  * harbour/include/hbatomic.h
    ! fixed compilation in Linux and OpenWatcom

  * harbour/include/hbapiitm.h
  * harbour/source/rtl/itemseri.c
    + make hb_itemSerialize() and hb_itemDeserialize() public functions
    ! fixed serialization items with internal item references

  * harbour/source/vm/hvm.c
    * release memvars after closing RDDs

  * harbour/source/debug/dbgentry.c
    ! fixed buffer overflow reported by Rodrigo

  * harbour/source/vm/macro.c
  * harbour/source/compiler/hbmain.c
    * formatting

  * harbour/include/hbexprb.c
    ! fixed wrongly recognized functions with HB_I18N_ prefix as
      HB_I18N_GETTEXT()

  * harbour/include/hbapi.h
  * harbour/include/hbstack.h
  * harbour/include/hbthread.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/thread.c
  * harbour/source/vm/hvm.c
    + added support for I18N in HVM.
      Each thread can have it's own i18n set.
      When new thread is created then it inherits i18n set from parent
      thread and both uses the same set (please remember about it if you
      will want to make some direct modifications on active i18n set
      internals).
      When thread change active i18n set then it effects only this thread
      and new threads which will be created later. It does not change i18n
      in other existing threads.
    + added functions to set/get pointer to active i18n set in HVM
         void * hb_vmI18N( void )
         void   hb_vmSetI18N( void * )

  * harbour/include/hbapi.h
  * harbour/source/rtl/hbi18n.c
    + added i18n module. Now only for internal Harbour usage without support
      for optional switching to alternative implementations.
      I'll add such functionality later when I will work on native gettext
      support.

      The following public .prg functions has been added:
         HB_I18N_GETTEXT[_STRICT]( <cMsgID> [, <cContext> ] )
               -> <cTranslatedMsgID> | <cMsgID>
         HB_I18N_NGETTEXT[_STRICT]( <nValue>, <cMsgID> | <acMsgID> ;
                                    [, <cContext> ] )
               -> <cTranslatedMsgID> | <cMsgID> | <acMsgID>[ <nIndex> ]
      This is minimal support necessary for .prg code which has to exists
      in each i18n module working with Harbour.

      The following functions had been added as public C API:
         PHB_ITEM hb_i18n_gettext( PHB_ITEM pMsgID, PHB_ITEM pContext )
         PHB_ITEM hb_i18n_ngettext( PHB_ITEM pNum,
                                    PHB_ITEM pMsgID, PHB_ITEM pContext )

      The following functions had been added as private HVM C API:
         void   hb_i18n_init( void )
         void   hb_i18n_exit( void )
         void   hb_i18n_release( void * cargo )
         void * hb_i18n_alloc( void * cargo )
      They have to be supported by alternative i18n modules

      The following functions has been added to manage Harbour i18n
      translations sets:

         HB_I18N_CREATE()
                  -> <pI18N>
            Creates new empty I18N translation set

         HB_I18N_CODEPAGE( [<pI18N>,] [<cNewCP>], [<lBase>], [<lTranslate>] )
                  -> <cOldCP>
            Gets or sets Harbour codepage used by translation set
            <pI18N> - I18N translation set,
                      if it's not given then currently active I18N set is used
            <cNewCP> - new CP ID. Must be linked with application
            <lBase> - when it's .T. then get/set base massages' CP instead of
                      translated massages' CP
            <lTranslate> - if it's .T. then translate base (<lBase>==.T.) or
                           final messages in I18N set from previous CP to
                           given one. Base messages translation is synced
                           with context ID translation.

         HB_I18N_PLURALFORM( [<pI18N>,] [<cNewForm>|<bNewForm>], [<lBase>] )
                  -> <cOldForm>|<bOldForm>
            Gets or sets plural form used for final or base messages
            <pI18N> - I18N translation set,
                      if it's not given then currently active I18N set is used
            <cNewForm> - language ID of plural form, f.e.: "EN", "PL", "LT".
                         Now only three above are supported. Please add rules
                         for other languages to source/rtl/hbi18n.c.
            <bNewForm> - codeblock used to calculate plural form indexes.
                         can be used instead of character representation but
                         it's not storred in serialized I18N set
            <lBase> - when it's .T. then get/set base massages' plural form
                      instead of translated massages' one.

         HB_I18N_DESCRIPTION( [<pI18N>,] [<cNewDescription>] )
                  -> <cOldDescription>
            Gets or sets translation set description. After serialization
            up to 32 bytes is stored in header which can be easy used to
            determinate type of translation file.
            <pI18N> - I18N translation set,
                      if it's not given then currently active I18N set is used
            <cNewDescription> - new description

         HB_I18N_ADDTEXT( <pI18N>, <cMsgID>, <cTrans> | <acTrans> [, <cContext> ] )
                  -> NIL
            Adds new message with translation to i18n translation set
            <pI18N> - I18N translation set
            <cMsgID> - original message
            <cTrans> - translated message
            <acTrans> - array with translated messages used for plural forms
            <cContext> - message context

         HB_I18N_SET( [ <pI18N> | NIL ] )
                  -> <lActive>
            Sets given I18N translation set as default one used by
            HB_I18N_[N]GETTEXT[_STRICT]() functions or remove translation
            set for calling thread when passed parameter is NIL
            <pI18N> - I18N translation set
            Returns logical value which is .T. when i18n set is active

         HB_I18N_SAVETABLE( [<pI18N>] )
                  -> <cTable>
            Returns I18N translation as string item which can be stored
            in file or database
            <pI18N> - I18N translation set, if it's not given then currently
                      active I18N set is used

         HB_I18N_RESTORETABLE( <cTable> )
                  -> <pI18N> | NIL
            Restores I18N translation set from string item.
            <cTable> - I18N translation set in string representation
            On success it returns new <pI18N> set otherwise NIL if <cTable>
            is not valid item created by HB_I18N_SAVETABLE() or it's corrupted.

         HB_I18N_HEADERSIZE()
                  -> <nHeaderSize>
            Returns size of header used by i18n serialized version

         HB_I18N_CHECK( <cTable> | <cHeader> [, @<cDescription> ] )
                  -> <lValid>
            <cTable> - i18n translation set serialized by HB_I18N_SAVETABLE
            <cHeader> - header of i18n translation set
                        ( LEFT( <cTable>, HB_I18N_HEADERSIZE() ) )
            <cDescription> - optional parameter passed by reference where
                             will be sored i18n translation set description
                             extracted from valid header
            Returns logical value indicating if given table or header is
            valid serialized by HB_I18N_SAVETABLE() data. It does not
            decode the table though it validates size and control sums.

      These functions are optional and some future alternative implementations
      may not support all of them and/or may provide some other functions.

    + added unofficial .prg function __I18N_HASHTABLE() which allows to
      access hash table used by i18n translation set or create new translation
      set with given hash table. It's helper functions for developers which
      will work on Harbour i18n tools and should not be used by Harbour users.

      Unlike original gettext Harbour allows to use language with many
      plural forms as base one. In such case programmer should activate
      at application startup default i18n translation set with base plural
      form valid for base application language, f.e. by:
         pI18N := hb_i18n_create()
         hb_i18n_pluralForm( pI18N, <cLangID> | <bForm>, .t. )
         hb_i18n_set( pI18N )
      .prg code example:

         #xtranslate _( <x,...> ) => hb_i18n_gettext_strict( <x> )
         #xtranslate _N( <x,...> ) => hb_i18n_ngettext_strict( <x> )

         proc main()
            local pI18N, i

            pI18N := hb_i18n_create()
            hb_i18n_pluralForm( pI18N, "PL", .t. )
            hb_i18n_set( pI18N )

            for i := 0 to 30
               ? i, _N( i, {"grosz", "grosze", "groszy"} )
               if i > 0 .and. i % 10 == 0
                  wait
               endif
            next
         return

      In .pot files created during compilation by Harbour with -j option
      for above code we have the following entries for message with plural
      forms:
            msgid "grosz"
            msgid_plural "grosze"
            msgid_plural2 "groszy"
            msgstr[0] ""
      The msgid_plural2 (and others if language has more plural forms)
      is Harbour extension which is not gettext compatible.


      The above implementation is base version but should be fully functional.
      Now we will need functions to safe/read i18n files and tools to mange
      .pot files: merge them, edit translations, create final binary i18n
      translation sets. Because we are using gettext compatible .pot files
      then for some of such jobs we can use original gettext tools but we
      need at least function which will create translation set from one or
      more .pot files.
      We should also agree some default localization(s) for files containing
      translated data, their name convention and environment variable(s)
      to set default language. It's not strictly necessary and each user
      can have his own implementation but it would help in adding new
      translations by final users to any Harbour application which will
      respect them. We can use LANG envvar to extract preferred language
      and use the same path as executed application looking for
      <appname>-<lang>.hil files though it may create some problems for
      OSes which support only 8.3 file names so we can also define that
      HB_I18N envvar has higher priority and points to expected translation
      file.

  * harbour/include/hbextern.ch
    - removed old __i18n_*() functions
    + added current i18n functions

2008-12-09 12:46 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/makefile
  * harbour/contrib/gtwvg/common.mak
    + wvghtmlv.prg

  * harbour/contrib/gtwvg/hbgtwvg.ch
    + HB_GTI_ACTIVATESELECTCOPY
    + HB_GTE_CTLCOLOR

  * harbour/contrib/gtwvg/gtwvg.c
    + hb_gtInfo( HB_GTI_ACTIVATESELECTCOPY )
      This has the same effect as to activating the select/copy operation
      from the sys menu of the application. This way you can define
      any key to begin this operation as:

         SetKey( K_RBUTTONUP, {|| hb_gtInfo( HB_GTI_ACTIVATESELECTCOPY ) } )

      and to start copy operation it will be enough to perform right
      click and then dragging the text with left button down.

      :TODO: Implementation in GTWVT.

  + harbour/contrib/gtwvg/wvghtmlv.prg
    + Added WvgHTMLViewer() class compatible with XbpHTMLViewer().
      It is a fully functional implementation as per Xbase++ documentation
      except for method :setHTML( cHTMLtext )

  * harbour/contrib/gtwvg/wvggui.c
    + Added evenh handlling for WV_CTLCOLOR* messages.

  * harbour/contrib/gtwvg/wvgwin.c
    + Added more winapi functions.

  * harbour/contrib/gtwvg/wvg3stat.prg
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgcheck.prg
  * harbour/contrib/gtwvg/wvglistb.prg
  * harbour/contrib/gtwvg/wvgmle.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgpushb.prg
  * harbour/contrib/gtwvg/wvgradio.prg
  * harbour/contrib/gtwvg/wvgsle.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgtreev.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Heavy changes especially in event handlling management.
    + ::setColorFG( nRGB ) and ::setColorBG( nRGB ) implemented for
      WvgSLE(), WvgMLE(), WvgStatic(), WvgCheckBox(), WvgRadioButton(),
      WvgTreeView(), WvgListBox().

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Some finer additions.

  + harbour/contrib/gtwvg/tests/demoxbp.prg
    Added new demo with pure Xbase++ code clubbing all the committed classes
    till date including WvgHTMLViewer().
    ;
    Compile as : hbmk_b32 -mt demoxbp


2008-12-08 16:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-mkslib.sh
    ! fixed last modification

  * harbour/doc/Makefile
  + harbour/doc/cmpopt.txt
    + added small description for Harbour compile time optimization

  * harbour/include/hbexpra.c
    + allow to use hb_mutexCreate() as static variable initializer, f.e.:
         static s_mtxarr := { "MTX1" => hb_mutexCreate(), ;
                              "MTX2" => hb_mutexCreate(), ;
                              "MTX3" => hb_mutexCreate() }
  * harbour/include/hbexprb.c
    % comment

  * harbour/source/common/expropt2.c
    + added some missing optimizations for date constants
    + added optimization for multiple negate expressions

2008-12-07 22:22 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/makefile
  * harbour/contrib/gtwvg/common.mak
    + wvg3stat.prg
    + wvgbitmp.prg
    + wvgmle.prg
    + wvgsle.prg

  * harbour/contrib/gtwvg/wvgparts.ch
    + New constants to handle new classes.

  + harbour/contrib/gtwvg/wvgbitmp.prg
    + Code skelton of WvgBitmap class ( non-functional yet ).
  + harbour/contrib/gtwvg/wvg3stat.prg
    + Wvg3State() class compatible to Xbase++ Xbp3State().
  + harbour/contrib/gtwvg/wvgmle.prg
    + WvgMLE() class compatible with Xbase++ XbpMLE().
  + harbour/contrib/gtwvg/wvgsle.prg
    + WvgSLE() class compatible with Xbase++ XbpSLE().

  * harbour/contrib/gtwvg/wvgwin.c
    + Added new functions for new classes.

  * harbour/contrib/gtwvg/wvgcheck.prg
  * harbour/contrib/gtwvg/wvgdatar.prg
  * harbour/contrib/gtwvg/wvglistb.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgradio.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgtreev.prg
  * harbour/contrib/gtwvg/wvghwnd.prg
    ; Heavy changes in class framework.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added functionality of Wvg3State() and WvgSLE(), WvgMLE() classes.

    ; IMPLEMENTATION : Point to <Xbase++ Dialogs> menu option, click on any
                       Active-X Control, Play with all controls : clicks,
                       double clicks, resize. Watch statusbar panels, click on
                       <Tools> toolbar button, the resulting panel contains
                       latest classes SLE, MLE, CHECKBOX, RADIO, 3STATE.

2008-12-07 17:12 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-mkslib.sh
    ! added support for absolute paths in passed object or static library
      list

  * harbour/config/bsd/gcc.cf
    ! added missing HB_CCACHE in gcc calls

2008-12-06 19:08 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/makefile
  * harbour/contrib/gtwvg/common.mak
    + wvgcheck.prg
    + wvgdatar.prg
    + wvgradio.prg

  + harbour/contrib/gtwvg/wvgcheck.prg
  + harbour/contrib/gtwvg/wvgdatar.prg
  + harbour/contrib/gtwvg/wvgradio.prg
    + Added WvgCheckBox(), WvgRadioButton(), DataRef() Xbase++ compatible classes.

  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvglistb.prg
  * harbour/contrib/gtwvg/wvgpushb.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgtreev.prg
  * harbour/contrib/gtwvg/wvghwnd.prg
    ; Heavy changes in class framework.
    + Many new winapi functions.
    ! Optimized use of hb_ACallBack().
    - WinApi functions replaced by Harbour core functions.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added functionality of WvgCheckBox() and WvgRadioButton() classes.
      Now thses classes implement DataRef() class also. Work-in-progress.

    ;TODO : Few functions in wvgwin.c are not UNICODE compliant yet.
     DONE   All functions are now UNICODE compliant.

    ;Viktor, can you compile GTWVG on 64bits platform ?

    ;REQUEST : Can someone familiar with Xbase++ come forward to
               write a small test program based on implemented classes.
               Please exclude all that functionality which is not yet
               implemented.

2008-12-04 23:56 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/tests/hbmk_b32.bat
    + xhb.lib - just to take use of hb_ToOutDebug(). While under heavy
      changes I need to keep the debugging info intact. Final sources
      will not have this included.

  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvtwin.ch
  * harbour/contrib/gtwvg/winback.prg
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvglistb.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgpushb.prg
  * harbour/contrib/gtwvg/wvgstatb.prg
  * harbour/contrib/gtwvg/wvgstatc.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgtreev.prg
  * harbour/contrib/gtwvg/wvghwnd.prg
    + Implemented ( partially ) WvgTreeView(), WvgListBox() classes.
    ; Heavy changes in class structure, introduction  of new functions,
      refinement of old ones, heavy implementtaion of hb_ACallBack()s.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added functionality of WvtTreeView() and WvtListBox() classes.

    ;TODO : Few functions in wvgwin.c are not UNICODE compliant yet.

2008-12-04 11:09 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/bmdbfcdx.c
  * contrib/hbbmcdx/hbbmcdx.h
    ! fixed partially BM_DbSetFilterArray, and added new features to rdd synced
      with dbfcdx.

2008-12-03 18:35 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbstr.c
    ! added missing call to va_end() in hb_snprintf()

  * harbour/source/vm/classes.c
    + added internal helper function __objSetClass()

  * harbour/source/rtl/valtoexp.prg
    * set class in expressions serialized by hb_valToExp()

  * harbour/source/rtl/valtostr.c
    % optimized hb_strToExp()

  * harbour/contrib/xhb/hbcompat.ch
    ! removed unnecessary conversion for HB_ISPOINTER() in xHarbour part.

2008-12-03 15:05 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
   * contrib/hbziparc/hbziparc.prg
     ! hb_UnzipFile() to accept empty password like ""

2008-12-02 13:48 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbstr.c
  * harbour/config/w32/xcc.cf
    ! fixed XCC compilation

  * harbour/contrib/gtwvg/wvgwin.c
    ! changed _MAX_PATH to MAX_PATH - not all compilers support _MAX_PATH

2008-12-02 11:27 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/xhb/Makefile
  * harbour/contrib/xhb/common.mak
  + harbour/contrib/xhb/xhbarr.c
    + added aSplice(), aRemove() and aMerge() functions - code borrowed
      from xHarbour by Ron Pinkas.
    ! fixed GPF trap in these functions

  * harbour/contrib/xhb/xhbfunc.c
    + added CSTR()

  * harbour/contrib/xhb/hbcompat.ch
    ! changed name of xHarbour include files - they where changed few
      months ago and now they are the same as in Harbour.
      To xHarbour users: please update hbcompat.ch in xHarbour CVS

  * harbour/contrib/xhb/filestat.c
    ! fixed UNICODE compilation

  * harbour/contrib/xhb/hblognet.prg
  * harbour/contrib/xhb/hblog.prg
    * formatting

  * harbour/contrib/hbnf/tempfile.prg
    ! do not use HB_ISBYREF() .prg function - this function does not
      exist in Harbour and does not work correctly in xHarbour

  * harbour/include/hbapiitm.h
  * harbour/source/vm/macro.c
  * harbour/source/vm/codebloc.c
  * harbour/source/vm/hashes.c
  * harbour/source/vm/garbage.c
  * harbour/source/vm/itemapi.c
  * harbour/source/vm/memvars.c
    * cleanup

  * harbour/contrib/gtwvg/Makefile
    ! fixed typo

  * harbour/contrib/gtwvg/hbgtwvg.ch
    * added new line at the end of file and changed non ANSI C // comments
      to /* */ - this file is included by C code too.

  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wincallb.c
    * pacified some warnings and fixed possible access to uninitialized data

  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyc
    ! fixed possible double freeing of memory blocks in #line directives
      TOMERGE[1.0]

  * harbour/common.mak
  * harbour/source/compiler/hbmain.c
  + harbour/source/compiler/compi18n.c
    * moved hb_compI18n*() functions to separate file covered by GPL with
      Harbour exception - Thank to Mindaugas

  * harbour/include/hbcomp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbexpra.c
  * harbour/include/hbexprop.h
  * harbour/include/hbexprb.c
  * harbour/source/common/expropt1.c
  * harbour/source/compiler/Makefile
  * harbour/source/compiler/ppcomp.c
    * added support for plural forms:
         hb_i18n_ngettext[_noop|_strict]( <nExp>, <cText> | <acText> ;
                                          [, <cContext> )
      <acText> is accepted only as array of literal strings even if
      _strict suffix is missing - if it's a problem then we can change it.
      hb_i18n_ngettext_noop() is reduced only when it has valid parameters
      The default plural index expression used for reduction at compile
      time is: iif( <nExp> == 1, 1, 2 )
      If second parameter of hb_i18n_ngettext_noop() is <cText> or <acText>
      length is 1 then it's reduced to <cText> or acText[1] else if second
      parameter is <acText> with more then 1 item then it's reduced to
         <acText>[ iif( <nExp> == 1, 1, 2 ) ]
      and if <nExp> is literal numeric expression is farther reduced to
      given array item. Otherwise is not reduced and warning is generated.
      The plural forms in .pot files are generated as:
         msgid ""
         msgid_plural ""
         msgid_plural2 ""
         [...]
         msgid_pluralN ""
         msgstr[0] ""
      Then real message ID is only msgid (with context if any) and
      msgid_plural* is used only for information. When the same msgid
      is used more then once in different hb_i18n_ngettext*() calls then
      plural messages are merged.
      Please remember that for strict gettext compatibility only two plural
      forms are allowed.
    * extended i18n warnings for simple types validation, f.e.:
         hb_i18n_gettext( .t. )
    * do not generate empty .pot file when source code does not contain any
      hb_i18n_*() functions
    * store in .pot files references to real source file names with paths
      respecting #include directives
    * use hb_compIdentifierNew() to hash i18n messages at compile time
    ! fixed possible bad escape encoding of i18n strings
    + added support to control -j[01] flag using #pragma directive

      Before I'll begin to work on runtime support please test these
      modifications and inform me about problems you can see with the
      above version and missing functionality.

2008-11-30 23:49 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Cleanup - leftover trace calls.

2008-11-30 23:05 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/makefile
  * harbour/contrib/gtwvg/common.mak
    + wvgparts.ch
    + wincallb.c
    + wincback.prg
    + wvglistb.prg
    + wvgpushb.prg
    + wvgstatb.prg
    + wvgstatc.prg
    + wvgtreev.prg

  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgsink.c
  * harbour/contrib/gtwvg/wvgutils.c
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvgparts.ch
  * harbour/contrib/gtwvg/wvtwin.ch
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgmenub.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! More synchronization, more events firings, etc.

  + harbour/contrib/gtwvg/wincback.prg
  + harbour/contrib/gtwvg/wincallb.c
    Now PRG/C level callback procedures/code blocks/methods
    are made available by Andy Wos. A big thank you.

       :nWndProc := HB_AsCallBack( 'MYWNDPROC', Self )

       METHOD MYWndProc( hWnd, nMessage, nwParam, nlParam )
          IF nMessage == WM_LBUTTONDOWN
             Win_MessageBox( , 'Prg level callback procedure!, 'Info' )
             RETURN 0
          ENDIF

          RETURN 1

       Before this mechanism was available with only C callbacks which
       were of limiting nature. It has made our life so easy.

  + harbour/contrib/gtwvg/wvglistb.prg
  + harbour/contrib/gtwvg/wvgcombo.prg
  + harbour/contrib/gtwvg/wvgpushb.prg
  + harbour/contrib/gtwvg/wvgstatb.prg
  + harbour/contrib/gtwvg/wvgstatc.prg
  + harbour/contrib/gtwvg/wvgtreev.prg
    + Added Xbase++ compatible new classes.
       NOTE: Still a work-in-progress, subject to heavy changes.
       Basic functionality is working and class skeletons are in place.
       The partially functional classes added are:
          WvgStatusBar()
          WvgStatic()
          WvgPushButton()

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added functionality of new classes.

    ; TOFIX: harbour/contrib/gtwvg/wvggui.c
             Przemek, can you please look into this stripped down
             version of gtwvg.c. It has memory leak in inkey() and
             hb_gtInfo() functions. To test, just resize the window
             and exit, boooom, a big hb_out.log with above mem leak
             entries. I am sure I just stripped some important loop
             but am unable to locate where.

2008-11-26 18:22 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/itemapi.c
    * changed hb_itemPutNLen() function to create integer item only
      when conversion to HB_LONG does not change value of passed double
      argument. It fixes some problems like restoring non integer double
      values with 0 decimal places by __MVRESTORE()

  * harbour/source/rtl/val.c
    % minor optimization

2008-11-25 09:15 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
    + Hot Tracking of toolbar buttons.

    ;TODO: Buttons from resources.
           System defined buttons.
           Buttons with dropdown menues.
           Buttons with disabled/hot images.

2008-11-25 02:14 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvtwin.ch
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgtoolb.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    + Added WvgToolBar() class demonstrating limited features.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Added WvgToolBar() functionality. Click on ActiveX dialogs and
      see the difference between two two types of buttons. It is just
      limited featured toolbar. Extended version will follow.

    ;THANKS - Bitmap management code is lifted from GTWVW.
              Thanks Budyanto for this well written code.
              I examined many implementations but found this piece
              of code satisfying.
                Just tweaked to make UNICODE compliant.

2008-11-24 16:41 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/ppcore.c
  * harbour/source/rtl/run.c
  * harbour/source/rtl/errorint.c
  * harbour/source/rtl/trace.c
  * harbour/contrib/xhb/hboutdbg.c
    * pacified warnings and updated some possibly danger constructions

  * harbour/source/vm/memvars.c
    % improved the performance of __MVRESTORE()
    ; TOFIX: this code has Clipper incompatible extension which may cause
      that incorrect values will be restored - numeric double values with
      0 as default number of decimal places for str() formatting are
      wrongly converted to integers loosing fractional part of number.

2008-11-24 12:34 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hberrors.h
  * harbour/source/compiler/hbgenerr.c
    + added new compile time error (file write error)

  * harbour/source/pp/ppcore.c
  * harbour/source/rtl/errorint.c
  * harbour/source/compiler/genhrb.c
  * harbour/source/compiler/genc.c
  * harbour/source/rtl/run.c
  * harbour/source/vm/estack.c
    * pacified warnings - Lorenzo please verify it compiling with C header
      files from Ubuntu.

  * harbour/contrib/xhb/filestat.c
    ! fixed UNICODE compilation

  * harbour/contrib/gtwvg/wvgsink.c
    ! added #define NONAMELESSUNION to fix MinGW compilation

2008-11-23 17:28 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/Makefile
  * harbour/contrib/gtwvg/common.mak
    + wvgtoolb.prg

  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgmenub.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  + harbour/contrib/gtwvg/wvgtoolb.prg
    ! Initial commit.
  * harbour/contrib/gtwvg/wvgwnd.prg

    ! Usual cleanup plus new functions/members etc.

2008-11-23 15:00 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/Makefile
  * harbour/contrib/gtwvg/common.mak
    + wvgmenub.prg

2008-11-23 13:27 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    + static void hb_gt_wvt_FireMenuEvent( PHB_GTWVT pWVT, int iMode, int menuIndex )
    + WM_ENTERMENULOOP
    + WM_EXITMENULOOP
    ! WM_COMMAND - Enhanced

  * harbour/contrib/gtwvg/wvggui.c
    + Same as with gtwvg.c

  * harbour/contrib/gtwvg/wvgsink.c
    + Experimental TypeLib info extraction function. Disabled for now.

  * harbour/contrib/gtwvg/wvgwin.c
    + Many new Win_* winapi functions.

  * harbour/contrib/gtwvg/hbgtwvg.ch
    + HB_GTI_MENU

  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
  + harbour/contrib/gtwvg/wvgmenub.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
    + Implemented ( partially but functional ) Xbase++ compatible
      WvgMenuBar() and WvgMenu() classes.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Demonstrated WvgMenuBar() and WvgMenu() implementation
      by picking up the real-time Xbase++ code.

  ; NEXT: WvtToolBar() class per XbpToolBar().

2008-11-22 15:57 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  + harbour/contrib/gtwvg/tests/myharu.pdf

2008-11-22 15:39 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Fixed to honor parent GT if that is alien.

  * harbour/contrib/gtwvg/wvggui.c
    ! Thorough synchronized hb_gtInfo() slots.
      Every info gives results as expected, the only
      poiint to remeber is that those values are based on :fontHeight/Width
      set by the user at startup, though the font is never created.
      So MaxCol() will return the ( Windows client area size / fontWidth ).
      At any given moment this value is measured from actual size of the
      window. Though this information is irrelevant in this context
      but still it works.

  * harbour/contrib/gtwvg/wvgsink.c
    ! Fixed few left-over unreleased memory blocks.
      More synchronized code.

    ; TOFIX: With some active-x's, for example, Shell.Explorer.2,
      object never unreference itself to 0 and hence GlobalAlloc()ated
      memory never gets released. Though I made extensive debugging
      but do not know where I should look into this matter.

  * harbour/contrib/gtwvg/wvgwin.c
    + Added few more Win_* functions.

  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgdlg.prg
    ! More synchronizations, method implementations, etc.
      Still a work in progress.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Changed menu prompts to depict correct usage.
    + Added more prompts and deleted unwanted ones.

2008-11-19 21:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
    ! hbw32 -> hbwin

2008-11-19 19:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapi.h
  * source/vm/extend.c
    + Added hb_stordl() which is similar to hb_stords() but
      accepts a Julian date in long numeric format similarly
      to hb_retdl().

  * contrib/xhb/Makefile
  * contrib/xhb/common.mak
  + contrib/xhb/filestat.c
    + Added FILESTATS() function.
      Work of Giancarlo Niccolai / xhb.
      Minor cleanups made.
    ; Please test. (Only Win32/BCC platform was tested.)

2008-11-19 18:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/codepage/cpuakoi.c
    ! Fixed CP reference to point to KOI8-U instead of KOI8.
      Reasons: 1) KOI8-U was used in the _comment_.
               2) Ukrainian quasi standard is KOI8-U instead of KOI8.
                  http://aspell.net/charsets/cyrillic.html
               3) CP KOI8-U wasn't used previously anywhere, yet
                  was added by same author.
      I hope the author (Pavel Tsarenko) will be able to verify
      this change.

2008-11-19 13:51 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * make_b32.mak
  * make_gcc.mak
  * make_vc.mak
    * Smoothened the difference between HARBOURFLAGS and
      HARBOURFLAGSDLL under the name HARBOURFLAGSLIB.
      Now all core .prg modules will be compiled with -n1
      Harbour switch. This also means double compilation
      of .prg modules for static/dynamic libs could be
      optimized out as the object files are the same in
      both modes.
      TODO: Make -n1 switch unnecessary.

  * contrib/mtpl_gcc.mak
    + Added -n1 to HARBOURFLAGS. This way Harbour functions
      in libs will never be considered as entry points in
      executables or when any such module is built as dynamic
      lib in the future.

  * contrib/make_gcc_all.sh
    * Minor formatting.

2008-11-19 09:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * mpkg_tgz.sh
    ! Fixed OSX/Darwin builds:
      - to not require harbour.dylib for binary tools supplied
        in .tgz package. This way, hbrun/hbmake/hbdoc/hbtest
        will work out of the box without the need for any
        special installation or extra manual procedure, or
        any change whatsoever in the user/system environment.
        The change also doesn't prevent user installing Harbour
        to system dirs and/or to utilize harbour.dylib in every way.
      - so that hbmk script creates '-static' executables by default.
        This will make all programs created by hbmk to work out of the
        box without any special trick described above, or explicit
        need to use '-static' switch.
        You can override this with '-shared' switch.
      ; [ The price to pay is slightly larger binary package
          and executable sizes. ]

  * make_gnu.sh
    * Minor sync in help text with recent change.

  * common.mak
    ! Old typo.

2008-11-19 06:27 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    * updated OS release version checking for new OpenSuse distros
    * removed r from uname parameters used in get_hbplatform() function
    + added support for HB_MK_STATIC=yes|no envvar which allows to control
      default -static/-shared hbmk switch. It should be set before hb*
      scripts are created

  * harbour/harbour.spec
    * updated OS release version checking for new OpenSuse distros

  * harbour/mpkg_tgz.sh
    * changed installer envelope code to not use 'sed' and reenabled it
      in default builds. Now it should work with different *nixes.
      Please test.

2008-11-18 13:55 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_gcc.sh
  * common.mak
    ! Fixed previous and even older workaround for cyclic
      reference in common.mak when used with GNU-make.
    ; Please review/test.

2008-11-18 00:43 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/common.mak
  * harbour/contrib/gtwvg/wvgdlg.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! Minor typos - strict Harbour code quality warnings.

2008-11-17 23:59 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/Makefile
  * harbour/contrib/gtwvg/common.mak
    + wvgdlg.prg

  * harbour/contrib/gtwvg/gtwvg.c
    ! Fixed one more issue with screen repaint behavior when
      window was changing size due to font settings.

  * harbour/contrib/gtwvg/wvgcore.c
  * harbour/contrib/gtwvg/wvggui.c
  * harbour/contrib/gtwvg/wvgwin.c
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvggui.h
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgcrt.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
  * harbour/contrib/gtwvg/wvgwnd.prg
    ! A reshuffling exercise, Wvt*Classes inching towards
      Xbase++ compatibility, more synchronizations.

  + harbour/contrib/gtwvg/wvgdlg.prg
    + Added WvgDialog() class on lines with XbpDialog().

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Active-X controls hosted with WvgDialog(), pure Windows GT.
      Previously these were being hosted in WvtCrt() console.

2008-11-18 03:04 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    * Two recent TODOs in entries marked as [DONE] by this change:
      2008-11-18 01:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
      (It was "broken" due to enhancements, see the TODOs. Thanks anyway.)

2008-11-18 02:53 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    ! Fix to previous fix to maximize the window when the initial
      size would be too big to fit on screen (stupid omission).
      Now the previously cited sizing problem is alright.

  * source/vm/fm.c
    + Replaced HB_NO_FM_STAT and HB_FM_STAT envvars
      with HB_FM_STAT=yes|no (maybe 0|1 or on|off woud be
      better or could be accepted as alternatives or
      replacement). This is to avoid ambiguity when both
      envvars were set or the app default is not known.
    + Added HB_FM_STATISTICS_DYN_OFF to turn off mem tracking
      by default when stat module is linked in.

  * source/common/hbverdsp.c
    * Minor cosmetic.

2008-11-18 01:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_gcc.sh
  * harbour/make_gcc.mak
    ! fixed GCC builds broken by modifications in common.mak

2008-11-16 23:22 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Resizing: some recent changes reverted back.
    ; TODO: reversal in GTWVT also. It breaks some pre-initialization issues.

  * harbour/contrib/gtwvg/wvgax.prg
    ! Better detection if COM object fails to be created.

  + harbour/contrib/gtwvg/wvggui.c
  + harbour/contrib/gtwvg/wvggui.h
    + Initial commit of pure GUI GT based on GTWVG named WGU.
      ; Subject to heavy changes onwards.
        WGU will become the basis of WvgDialog() plus inherited
        sub-classes.

  * harbour/contrib/gtwvg/makefile
  * harbour/contrib/gtwvg/common.mak
    + Added new files.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Now <Dialog One> is working properly.
      It now opens in new thread if it is odd and as usual if even.
    + <Modeless Dialogs><Experiment #1>
      ! Just to have experiments on WGU GT.

2008-11-16 23:05 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgsink.c
    * Minor cleanup to hb_strncat() (it's best to use
      'sizeof( target ) - 1' for size, if target is a char
      array. The buffer was off by one on the good direction.)

  * ChangeLog
    ! ChangeLog was again saved as Unicode. Please guys TURN
      THIS OFF for good. (fixed in prev commit, but I've left
      this here anyway)

2008-11-16 13:00 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Slight fix in WM_PAINT message.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added menu option to open a GET session in GTWVT console.
      ; I was studying to call multiple GTs ( GTWVG and GTWVT ) same time.
        It can be and it also opens up a lot more possibilities.

      ; Thanks Przemek for superb basic engine.

    + Added RMChart Active-X manipulation. It is free OCX and
      can be downloaded from http://www.rmchart.com/
      ; Select from the <Active-X Controls> option.
        Press F11 repeatedly to see 6 different charts.
        Press F12 to change some attributes.

2008-11-16 07:29 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
    ! Further tuned up the resizing behavior. Viktor please check.

2008-11-16 15:32 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbatomic.h
    + added support for built in GCC atomic functions: __sync_*()
      They are present in GCC >= 4.1 if given CPU supports them. For
      x86 CPU family the ones we use need at least i486 CPU. Please make
      tests with other CPUs like PPC. If given platform/CPU does not support
      them then GCC generate call to function __sync_*_<N>() where <N>
      is size of given type used in atomic operation instead of storing
      inlined assembler code.

2008-11-15 23:59 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgcrt.prg
    ! Further tuned up the resizing behavior. Silly typos.

2008-11-15 23:01 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Further tuned up the resizing behavior.

    ! Fixed a nasty bug present since begining. The bug was causing
      window to loose gui contents and even text buffer in certain
      circumstances. Now you can be assured that all GTs open
      with/without gui contents will never be out of synchronization.
      Play with contrib/gtwvg/tests/demowvg.prg, open many browsers,
      Active-X controls, get windows and so on, every window will
      behave as a gentleman.

  * harbour/contrib/gtwvg/wvgcrt.prg
    ! Fixed ::resize method.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Fine tuned to respect above fixes.

2008-11-15 13:12 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
    - pWVT->bResizing
    - pWVT->bAlreadySizing
    ; Optimized resizing behavior. Now Window must not flicker until
      resizing is finished. Please test. If this effects the desired
      behavior, let me port it to GTWVT also.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Adjusted few parameters. Just play with <Traditional><Browser><F3, F4>.
    ; TOFIX: INKEY() vs FireEvent() - Not sure what it behave like.

  * harbour/contrib/gtwvg/wvgcrt.prg
    ! Fixes to some events behaviors. Copy and Paste syndrome :-(


2008-11-15 08:17 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
    + BOOL bDeferPaint; member.
  * harbour/contrib/gtwvg/hbgtwvg.ch
    + #define HB_GTI_DEFERPAINT
      Implemented hb_gtInfo( HB_GTI_DEFERPAINT, FALSE | TRUE )
      For consoles hosting ActiveX controls need not be painted text buffer.
      :TOFIX To extend this protocol for resizing buffer too

  * harbour/contrib/gtwvg/wvgsink.c
    ! More unicode compliant.
    ! Fixed some errors in -DUNICODE builds, not all.
    ! strcat() => hb_strncat() : Viktor please check.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added more Active-X controls.

2008-11-14 20:57 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/wvgsink.c
    ! Pacified some warnings.
    ! Formatting per Harbour standards.

2008-11-15 01:43 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_vc.mak
    * Minor fix.

  * contrib/hbcurl/make_b32.bat
  * contrib/hbcurl/make_vc.bat
  * contrib/hbcurl/Makefile
    - Removed recently added HB_HBCURL_USR_C.

  * contrib/gtwvg/tests/demowvg.prg
    * Replaced '#if __MW__' with 'IF hb_vmmt()'.
      (not tested)

  * contrib/gtwvg/tests/hbmk_b32.bat
  * contrib/gtwvg/tests/hbmk_vc.bat
    ! Added hbwin.lib to HB_USER_LIBS list.

  * contrib/gtwvg/gtwvg.c
  * contrib/gtwvg/wvgclass.prg
  * contrib/gtwvg/wvgax.prg
  * contrib/gtwvg/wvgphdlr.prg
  * contrib/gtwvg/wvgpaint.prg
  * contrib/gtwvg/wvgcore.c
  * contrib/gtwvg/wvgwin.c
  * contrib/gtwvg/wvgwnd.prg
  * contrib/gtwvg/wvgcrt.prg
  * contrib/gtwvg/wvgutils.c
  * contrib/gtwvg/wvgsink.c
    ! SVN IDs missing, mistyped. SVN tags now reset.
    ; TOFIX: GTWVG is now broken with MSVC 8 and/or C++ and/or 64-bit modes,
             also unsafe string function is used:
             - strcat() should be hb_strncat().
             - Usual but wrong HRESULT to ULONG conversions break in 64-bit.
             - Some newest Windows features should be probably guarded.
      .\gtwvg.c(1913) : warning C4013: 'TrackMouseEvent' undefined; assuming extern returning int
      .\gtwvg.c(3205) : error C2065: 'WS_EX_LAYERED' : undeclared identifier
      .\wvgsink.c(128) : warning C4244: 'return' : conversion from 'HB_THREAD_NO' to 'int', possible loss of data
      .\wvgsink.c(339) : warning C4245: 'return' : conversion from 'HRESULT' to 'ULONG', signed/unsigned mismatch
      .\wvgsink.c(352) : warning C4245: 'return' : conversion from 'HRESULT' to 'ULONG', signed/unsigned mismatch
      .\wvgsink.c(368) : warning C4245: 'return' : conversion from 'HRESULT' to 'ULONG', signed/unsigned mismatch
      .\wvgsink.c(392) : warning C4245: 'return' : conversion from 'HRESULT' to 'ULONG', signed/unsigned mismatch
      .\wvgsink.c(455) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(457) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(460) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(463) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(466) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(469) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(472) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(475) : error C2039: 'n1' : is not a member of 'tagVARIANT'
      .\wvgsink.c(633) : warning C4305: 'type cast' : truncation from 'HB_LONG' to 'device_interface *'
      .\wvgsink.c(652) : warning C4996: 'strcat': This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.

2008-11-14 20:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
    * Possible fix to install problem. I can't test at the moment.

2008-11-14 07:26 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/wvgax.prg
  * harbour/contrib/gtwvg/wvgphdlr.prg
    ! Hash() => hb_hash()

  * harbour/contrib/gtwvg/tests/demowvg.prg
    - #ifdef HB_ACTIVEX

    Sorry I left few defines untouched.
       hbmk_b32 -mt -gui demowvg -d__MW__

    But it needs hbwin.lib and you have to include it in link script.

2008-11-14 00:45 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    + New HB_GTI_ + HB_GTE_ messages.

  * harbour/contrib/gtwvg/wvgutils.c
    - Excluded WIN_*  Windows API functions.

  + harbour/contrib/gtwvg/wvgwin.c
    + Included WIN_* Windows API functions.

  + harbour/contrib/gtwvg/wvgsink.c
    ! ActiveX container functions contributed by Andy Wos, a big thanks to him.

  + harbour/contrib/gtwvg/wvgphdlr.prg
  + harbour/contrib/gtwvg/wvgwnd.prg
  + harbour/contrib/gtwvg/wvgcrt.prg
  + harbour/contrib/gtwvg/wvgax.prg
    ! Xbase++ compatible class skeleton and implementation.
    ! Partially but sufficient functional WvgCrt() class.

  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvtwin.ch
    + Added few new members.

  * harbour/contrib/gtwvg/common.mak
  * harbour/contrib/gtwvg/makefile
    ! Updated to include added files.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! updated to include WvgCrt() class implementation.
    ! Updated to host ActiveX controls in WvtCrt() terminal.

  ; It is a humble effort to introduce a common and portable class framework
    to build futuristic CUI/GUI applications development and maintainability
    easier. I had been a fairly good user of Xbase++ in early years
    and was an admirer of their intuitive object modal especially
    uniform way of parameters passing almost for all their objects.
    So when Multi-threading and Multi-windows(GT) capability is introduced
    Przemek, I thought it is the right moment to start in this direction too.

    The firts efforts are encouraging and I see a great hope in the future.
    But for sure I cannot accomplish this task at my own. Someone has to join
    this effort. I know all have their own preferences but also realize that
    it can ease all of us in a big way. In the past many developers put their
    hands on the GUI front but without a clear framework. I based this effort
    on Xbase++ because it is the only compiler which offers such functionality
    on console level if we do not talk about GUI. Also it has extensive
    documentation which is a force in itself.

    I ever wished if Przemek would been a Windows user too!

2008-11-12 23:28 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbgtcore.c
    ! removed code I committed by mistake.

2008-11-12 23:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/fm.c
    + added support for enabling/disabling memory statistic when
      application starts. To enable memory statistic it's enough
      to set HB_FM_STAT environment variable to non empty value.
      To disable memory statistic it's enough to set HB_NO_FM_STAT
      envvar. The default setting may depend on build time option.
      Now is enabled when memory statistic is compiled when harbour
      is created. It may not work if C compiler does not allow to
      check environment variables from startup code. F.e. functions
      to access environment can be also part of dynamic library
      registered after harbour.dll or harbour core code startup
      functions.
      Viktor I would like to ask you only about one thing.
      Please do not remove current support for HB_FM_STATISTICS_OFF
      from GNU make builds so Harbour user can still create binaries
      without any memory statistic code using -[no]fmstat switch in
      hb* scripts. The above feature is only for users who need support
      for enabling/disabling memory statistic to test application
      if foreign environment, f.e. at client computers. Of course if
      it will work with given C compiler and/or type of application
      (linked dynamically or statically). Please check.

2008-11-12 20:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * doc/linux1st.txt
    * Updated for Ubuntu 8.10.

2008-11-12 19:11 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.bat
  * make_b32.mak
  * make_vc.bat
  * make_vc.mak
  * make_gcc.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_vc.mak
    + Added 'set HB_BUILD_OPTIM=no' option to disable
      all C compiler optimization for all compilers in
      non-GNU make system. This replaces old envvars
      BCC_NOOPTIM and GCC_NOOPTIM and add MSVC support
      for this option.

  * common.mak
    * Formatting.

2008-11-12 18:20 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbverdsp.c
    * Don't show '(C mode)', only C++.

2008-11-12 14:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
    + TOFIX added for the case when HB_CC_NAME is overridden
      by user and MT/DLL targets are being created.

  * common.mak
  * source/common/hbver.c
    % Minor opts.

2008-11-12 13:57 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbverdsp.c
    ! Fixed displaying tracing status. (INFO and DEBUG level
      counts as 'on'.)

2008-11-12 12:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * common.mak
  * utils/hbdoc/Makefile
  * utils/hbmake/Makefile
  * utils/hbtest/Makefile
  * utils/hbrun/Makefile
    % Setup to build shipped Harbour executables with -gc0.
    ; TODO: Please update make_gcc.mak. [DONE]

  * ChangeLog
    + Marked one change as [TOMERGE 1.0]

2008-11-12 01:48 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed bug in joined leaf pages size calculation which activated
      error massage enabled by HB_CDX_DBGCODE_EXT macro.
      Thanks to Saulius for reporting the problem.
      [TOMERGE 1.0]

2008-11-11 21:57 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbverdsp.c
    * Streamlined the /build information screen. It's now
      more compact and now show if tracing is enabled. Max
      symbol length got removed, ANSI C startup also, because
      it needs a custom C flag anyway.

  * include/hbvmpub.h
  * include/hbsetup.h
    * HB_SYMBOL_NAME_LEN moved away from custom setup.
      This isn't an option users should normally tinker.

  * tests/run_prg.bat
    * Minor.

2008-11-11 15:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcompdf.h
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.y
    ! fixed compile time warnings for __enum* messages used in
      simpled code block variables inside FOR EACH statement,

2008-11-11 13:30 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
    + hbmk.bat and hbmk_*.bat will now be installed on 'make*.bat install'

2008-11-11 13:16 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * ChangeLog
    ! Fixed MT mode .dll not starting up properly. IOW now
      'hbmk -shared -mt' works. Relevant entries marked as
      [DONE]

  * bin/hbmk.bat
    + Added '-debug' switch. Currently supported in BCC and MSVC.

2008-11-11 12:08 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/console.c
    ! Fixed __EJECT() writing an EJECT only if output device
      was "PRINTER". This fixes problem reported by Ciro, and
      also a very old TOFIX which was removed very long ago
      by mistake. (see thread "Bug: __EJECT() (David)" on 2000-07-27)
      [TOMERGE 1.0]

  * source/rtl/treport.prg
    ! Fixed some linefeed differences.
      [TOMERGE 1.0]

  * source/vm/set.c
    * Minor formatting.

2008-11-11 05:34 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * common.mak
  * bin/hbmk.bat
    + Added generation of MT harbour .dlls for BCC and MSVC.
    ; TOFIX: 'hbmk -shared -mt' doesn't seem to work, resulting
             app simply exits for both BCC and MSVC. [DONE]
    ; TODO: Please update make_gcc.mak. [DONE]

2008-11-11 04:22 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
  * common.mak
    * Changed dll and mt obj locations to reside inside the platform dir:
      obj/dll/* -> obj/*/dll
      obj/*_mt -> obj/*/mt
    + Added provisions for new obj location:
      obj/*/mt_dll

2008-11-11 03:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
  * common.mak
    + Added generation of hbmainstd and hbmainwin libs.

  * bin/hbmk.bat
    + Changed to use above libs. This also means that '-shared'
      can now be used in Harbour binary distributions, too.

2008-11-11 03:13 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/examples/rl
  + contrib/examples/rl/Makefile
  + contrib/examples/rl/hbmk_b32.bat
  + contrib/examples/rl/hbmk_vc.bat
  + contrib/examples/rl/readme.txt
    + Added build files for Clipper RL utility.
      (if someone remembers :)

  * contrib/examples/guestbk/hbmk_vc.bat
  * contrib/examples/pp/hbmk_vc.bat
  * contrib/examples/pe/hbmk_vc.bat
  * contrib/examples/dbu/hbmk_b32.bat
  * contrib/examples/dbu/hbmk_vc.bat
  * contrib/examples/hscript/hbmk_vc.bat
  * utils/hbdoc/hbmk_b32.bat
  * utils/hbdoc/hbmk_vc.bat
  * utils/hbmake/hbmk_b32.bat
  * utils/hbmake/hbmk_vc.bat
    % Removed winspool.lib from liblists.
    % Removed '/subsystem:console' from MSVC commandlines.
    + Added gtwvt.lib + gdi32.lib to liblists.
      (work in progress)

  * contrib/examples/dbu/readme.txt
    * Minor.

  * contrib/examples/pe/editorhi.prg
    ! Fixed stupid s&r error which broke compilation.
      [TOMERGE 1.0]

2008-11-11 02:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added '-shared' support for MSVC.
    ! Fixed to cleanup mainstd.obj and mainwin.obj.

  * ChangeLog
    * Some TODO/TOFIX marked as [DONE]. One [DONE] marked
      as [DONE - REOPENED].

2008-11-11 02:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    + Added -DHB_TR_LEVEL_DEBUG C compiler option when
      HB_BUILD_DEBUG=yes.

  * source/rtl/hbinet.c
    * Minor formatting.

2008-11-11 01:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  + config/w32/pocc64.cf
    + Added Pelles C x64 GNU-make file.

  * config/w32/pocc.cf
    * Minor cleanup.

2008-11-11 00:39 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
    ! Fixed linking hbtest-dll.exe with tracing enabled.

  * bin/hbmk.bat
    + Added '-shared' option.
    ; TOFIX: '-shared' won't work in binary installations. [DONE]
    ; TOFIX: '-shared' cannot create MT apps. [DONE]
    ; TOFIX: '-shared' only works for BCC32 yet. [DONE]

  - tests/hbmk_b32_dll.bat
    - Removed. Use 'hbmk_b32 -shared' instead.

  * source/rtl/treport.prg
    * Minor formatting.

  * make_b32.bat
  * make_vc.bat
  * common.mak
    * Changed default of HB_BUILD_DLL to 'yes'.

2008-11-10 15:17 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcurl/common.mak
  * contrib/hbcurl/Makefile
  * contrib/hbcurl/hbcurl.c
  + contrib/hbcurl/hbcurlm.c
    + Some disabled (not mainstream) functions moved to
      a separate file.

  * contrib/hbwin/win_prn2.c
    * Minor fix in comment.

2008-11-10 14:41 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/common/hbstr.c
    + added hb_numToStr()

  * harbour/source/vm/estack.c
  * harbour/source/compiler/genc.c
  * harbour/source/compiler/gencc.c
    * use hb_numToStr() for integer number conversions

  * harbour/source/vm/dlmalloc.c
    * disable #pragma warning ... in MinGW builds. If some newer MinGW
      versions support it and it's useful then it can be enabled after
      checking MinGW version

2008-11-10 09:50 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbmath.h
    ! Fixed Pelles C 5.00 not having an 'inf' (HUGE_VAL) symbol
      when in -Tarm-coff (~WinCE) mode. Pelles C bug (?).

    ; NOTE: Now core fully compiles in WinCE mode. So we have
            a new port.

    ; TOFIX: (this is a complete list of all Pelles C WinCE problems)
             [except hbmysql errors]

      POLINK: warning: Multiple '.rdata' sections found with different flags (0x40000040 and 0xc0000040).
      POLINK: warning: Multiple '.rdata' sections found with different flags (0x40000040 and 0xc0000040).
      contrib\gtwvg\gtwvg.h(78): fatal error #1035: Can't find include file <olectl.h>.
      ../../ctnet.c(119): warning #2027: Missing prototype for 'WNetGetLastError'.
      ../../ctnet.c(167): warning #2027: Missing prototype for 'WNetCancelConnection'.
      ../../ctnet.c(208): warning #2027: Missing prototype for 'WNetAddConnection'.
      ../../ctnet.c(210): warning #2027: Missing prototype for 'WNetAddConnection'.
      ../../ctnet.c(251): warning #2027: Missing prototype for 'WNetGetProviderName'.
      ../../ctnet.c(271): warning #2027: Missing prototype for 'WNetGetProviderName'.
      ../../disk.c(127): warning #2027: Missing prototype for 'GetDriveType'.
      ../../disk.c(129): error #2048: Undeclared identifier 'DRIVE_RAMDISK'.
      ../../disk.c(129): error #2045: Case label must be a constant integer expression.
      ../../disk.c(132): error #2048: Undeclared identifier 'DRIVE_REMOVABLE'.
      ../../disk.c(132): error #2045: Case label must be a constant integer expression.
      ../../disk.c(135): error #2048: Undeclared identifier 'DRIVE_FIXED'.
      ../../disk.c(135): error #2045: Case label must be a constant integer expression.
      ../../disk.c(138): error #2048: Undeclared identifier 'DRIVE_CDROM'.
      ../../disk.c(138): error #2045: Case label must be a constant integer expression.
      ../../disk.c(141): error #2048: Undeclared identifier 'DRIVE_REMOTE'.
      ../../disk.c(141): error #2045: Case label must be a constant integer expression.
      ../../disk.c(244): warning #2027: Missing prototype for 'SetVolumeLabel'.
      ../../disk.c(270): warning #2027: Missing prototype for 'GetVolumeInformation'.
      ../../disk.c(307): warning #2027: Missing prototype for 'GetVolumeInformation'.
      ../../disk.c(337): warning #2027: Missing prototype for 'GetFullPathName'.
      ../../winapi.c(70): error #2048: Undeclared identifier 'CS_OWNDC'.
      ../../winapi.c(75): error #2048: Undeclared identifier 'IDI_APPLICATION'.
      ../../winapi.c(75): error #2140: Type error in argument 2 to 'LoadIconW'; found 'int', expected 'const wchar_t *'.
      ../../winapi.c(181): error #2048: Undeclared identifier 'MFS_DISABLED'.
      ../../winapi.c(194): warning #2027: Missing prototype for 'InsertMenuItem'.
      ../../winapi.c(219): warning #2027: Missing prototype for 'SetMenu'.
      ../../getenvrn.c(177): error #2168: Operands of = have incompatible types 'wchar_t *' and 'int'.
      ../../getenvrn.c(177): warning #2027: Missing prototype for 'GetEnvironmentStrings'.
      ../../getenvrn.c(246): warning #2027: Missing prototype for 'FreeEnvironmentStrings'.
      ../../odbc.c(94): fatal error #1035: Can't find include file <sql.h>.
      ../../win_ole.c(77): fatal error #1035: Can't find include file <olectl.h>.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9936): warning #2027: Missing prototype for 'localtime'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9936): error #2168: Operands of = have incompatible types '(incomplete) struct tm *' and 'int'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9937): error #2152: Unknown field 'tm_year' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9938): error #2152: Unknown field 'tm_mon' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9939): error #2152: Unknown field 'tm_mday' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9940): error #2152: Unknown field 'tm_hour' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9941): error #2152: Unknown field 'tm_min' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(9942): error #2152: Unknown field 'tm_sec' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22136): error #2120: Redeclaration of 'localtime' previously declared at contrib\hbsqlit3\sqlite3\sqlite3.c(9936): found '(incomplete) struct tm * __cdecl function(const unsigned long int *)', expected 'int __cdecl function()'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22137): error #2149: Undefined size for 'y' with type '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22137): error #2149: Undefined size for 'y' with type '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22147): error #2152: Unknown field 'tm_year' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22148): error #2152: Unknown field 'tm_mon' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22149): error #2152: Unknown field 'tm_wday' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22150): error #2152: Unknown field 'tm_mday' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22151): error #2152: Unknown field 'tm_hour' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22152): error #2152: Unknown field 'tm_min' of '(incomplete) struct tm'.
      contrib\hbsqlit3\sqlite3\sqlite3.c(22153): error #2152: Unknown field 'tm_sec' of '(incomplete) struct tm'.
      ../../tpwin32.c(75): warning #2027: Missing prototype for 'BuildCommDCB'.
      ../../wincorec.c(150): error #2048: Undeclared identifier 'WS_MAXIMIZE'.
      ../../wincorec.c(164): warning #2027: Missing prototype for 'CreateMDIWindow'.
      ../../wincorec.c(166): error #2168: Operands of = have incompatible types 'HWND' and 'int'.
      ../../fi_winfu.c(97): warning #2027: Missing prototype for 'CreateDIBitmap'.
      ../../fi_winfu.c(147): warning #2027: Missing prototype for 'GetDIBits'.
      ../../sqlbase.c(509): warning #2130: Result of unsigned comparison is constant.
      C:\devl\allegro-4.2.2\include\allegro\platform\almsvc.h(23): fatal error #1035: Can't find include file <malloc.h>.
      ../../firebird.c(456): error #2149: Undefined size for 'times' with type '(incomplete) struct tm'.
      ../../firebird.c(487): error #2152: Unknown field 'tm_year' of '(incomplete) struct tm'.
      ../../firebird.c(488): error #2152: Unknown field 'tm_mon' of '(incomplete) struct tm'.
      ../../firebird.c(489): error #2152: Unknown field 'tm_mday' of '(incomplete) struct tm'.
      ../../firebird.c(490): error #2152: Unknown field 'tm_hour' of '(incomplete) struct tm'.
      ../../firebird.c(491): error #2152: Unknown field 'tm_min' of '(incomplete) struct tm'.
      ../../firebird.c(492): error #2152: Unknown field 'tm_sec' of '(incomplete) struct tm'.
      ../../firebird.c(501): error #2152: Unknown field 'tm_year' of '(incomplete) struct tm'.
      ../../firebird.c(501): error #2152: Unknown field 'tm_mon' of '(incomplete) struct tm'.
      ../../firebird.c(501): error #2152: Unknown field 'tm_mday' of '(incomplete) struct tm'.
      ../../firebird.c(510): error #2152: Unknown field 'tm_hour' of '(incomplete) struct tm'.
      ../../firebird.c(511): error #2152: Unknown field 'tm_min' of '(incomplete) struct tm'.
      ../../firebird.c(512): error #2152: Unknown field 'tm_sec' of '(incomplete) struct tm'.
      ../../fi_winfu.c(98): error #2048: Undeclared identifier 'CBM_INIT'.
      ../../fi_winfu.c(99): error #2168: Operands of = have incompatible types 'HBITMAP' and 'int'.

2008-11-10 03:35 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/fm.c
    ! Fixed missing abort() on WinCE. (for Pelles C only, but
      the fix should work for any WinCE compilers).
    ; TOFIX: Now the only remaining showstopper for PellesC5 WinCE
             support is:
             ../../math.c(652): error #3120: [asm] Symbol 'inf' is undefined.
             [DONE]

2008-11-10 03:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/w32/poccce.cf
    ! Added -DHB_NO_WIN_CONSOLE.

2008-11-10 02:56 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/w32/poccce.cf
    ! Added -DUNICODE switch.

  ; TOFIX: (important ones only)

    --- ERRORS
    ../../math.c(652): error #3120: [asm] Symbol 'inf' is undefined.
    contrib\gtwvg\gtwvg.h(78): fatal error #1035: Can't find include file <olectl.h>.
    ../../ctmath2.c(324): error #3120: [asm] Symbol 'inf' is undefined.
    ../../getenvrn.c(177): error #2168: Operands of = have incompatible types 'wchar_t *' and 'int'.

    --- WARNINGS
    source\vm\dlmalloc.c(2486): warning #2027: Missing prototype for 'abort'.
    source\vm\dlmalloc.c(3253): warning #2027: [ LOTS MORE ]
    ../../getenvrn.c(177): warning #2027: Missing prototype for 'GetEnvironmentStrings'.
    ../../getenvrn.c(246): warning #2027: Missing prototype for 'FreeEnvironmentStrings'.
    contrib\hbsqlit3\sqlite3\sqlite3.c(9936): warning #2027: Missing prototype for 'localtime'.

2008-11-10 02:14 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * config/w32/poccce.cf
    + Added -D_WINCE to C compiler options.

  * source/pp/hbpp.c
  * source/main/harbour.c
    ! Reenabled hbwmain.c for __POCC__.

  * source/pp/hbpp.c
    * WinCE cleanup. (__MINGW32CE__ is always defined
      when HB_WINCE is, so checking for HB_WINCE seems enough)
    % Removed #include <windows.h>.
    ; Please verify me.

2008-11-10 01:24 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/hbzlib/zconf.h
    * Removed commented Harbour additions.

  * config/w32/mingwce.cf
  * config/w32/poccce.cf
  * config/w32/msvcce.cf
    ! Fixed typo in previous today's commit.

2008-11-10 00:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/rules.cf
    ! fixed recursive HB_FLAGS declaration

  * harbour/include/hbdefs.h
  * harbour/include/hbsetup.h
  * harbour/include/hbtrace.h
    * declared hb_tr_trace() parameters as printf() compatible in GCC
      builds. It enabled format string with parameters validation

  * harbour/source/rtl/errorapi.c
    ! fixed GPF caused by HB_ERR_FUNCNAME which is not longer valid
      string

  * harbour/source/vm/itemapi.c
  * harbour/source/vm/hvm.c
  * harbour/source/vm/arrays.c
  * harbour/source/vm/memvars.c
  * harbour/source/vm/eval.c
  * harbour/source/vm/extend.c
  * harbour/source/vm/set.c
  * harbour/source/debug/dbgentry.c
  * harbour/source/rtl/gtwin/gtwin.c
  * harbour/source/rtl/gtxwc/gtxwc.c
  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/gtcrs/gtcrs.c
  * harbour/source/rtl/gtstd/gtstd.c
  * harbour/source/rtl/gtsln/gtsln.c
  * harbour/source/rtl/gttrm/gttrm.c
  * harbour/source/rtl/gtpca/gtpca.c
  * harbour/source/rtl/gtcgi/gtcgi.c
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/source/rtl/filesys.c
  * harbour/source/rdd/dbf1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/contrib/gtalleg/gtalleg.c
  * harbour/contrib/xhb/freadlin.c
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/rddads/adsfunc.c
  * harbour/contrib/rddads/ads1.c
  * harbour/contrib/hbwin/win_ole.c
  * harbour/utils/hbdoc/hbdfrdln.c
  * harbour/utils/hbmake/hbmfrdln.c
    ! fixed bugs in HB_TRACE massages reported in GCC builds

2008-11-09 20:58 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
  * include/hbapigt.h
  * source/common/hbfsapi.c
  * source/rtl/console.c
  * source/rtl/fserror.c
  * source/rtl/fstemp.c
  * source/rtl/gtstd/gtstd.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/filesys.c
    * Macro rename:
      - HB_WIN32_IO_OFF -> HB_IO_WIN_OFF
      - HB_WIN32_IO     -> HB_IO_WIN
    ; NOTE: INCOMPATIBLE if someone happens to disable
            Windows native IO. Users don't normally
            need this though.

2008-11-09 20:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/hbmysql/utils/bld_b32.bat
  - contrib/hbmysql/utils/bld_vc.bat
  + contrib/hbmysql/utils/hbmk_b32.bat
  + contrib/hbmysql/utils/hbmk_vc.bat
  - contrib/hbgd/tests/bld.sh
  + contrib/hbgd/tests/hbmk_gnu.sh
  * contrib/hbbtree/tests/hbmk_b32.bat
  * contrib/hbbtree/tests/hbmk_vc.bat
  * contrib/examples/pp/hbmk_b32.bat
  * contrib/examples/pp/hbmk_vc.bat
  * contrib/examples/guestbk/hbmk_b32.bat
  * contrib/examples/guestbk/hbmk_vc.bat
  * contrib/examples/pe/hbmk_b32.bat
  * contrib/examples/pe/hbmk_vc.bat
  * contrib/examples/hscript/hbmk_vc.bat
    * Some remaining renames.
    * Got rid of temp files in BCC batch files. Win9x is no longer
      supported.
    * Some other minor cleanups.

2008-11-09 20:27 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  - contrib/examples/dbu/bld_b32.bat
  - contrib/examples/dbu/bld_vc.bat
  + contrib/examples/dbu/hbmk_b32.bat
  + contrib/examples/dbu/hbmk_vc.bat
  - contrib/examples/guestbk/bld_b32.bat
  - contrib/examples/guestbk/bld_vc.bat
  + contrib/examples/guestbk/hbmk_b32.bat
  + contrib/examples/guestbk/hbmk_vc.bat
  - contrib/examples/hbsqlit2/tests/bld_b32.bat
  - contrib/examples/hbsqlit2/tests/bld_vc.bat
  + contrib/examples/hbsqlit2/tests/hbmk_b32.bat
  + contrib/examples/hbsqlit2/tests/hbmk_vc.bat
  - contrib/examples/hscript/bld_b32.bat
  - contrib/examples/hscript/bld_vc.bat
  + contrib/examples/hscript/hbmk_b32.bat
  + contrib/examples/hscript/hbmk_vc.bat
  - contrib/examples/pe/bld_b32.bat
  - contrib/examples/pe/bld_vc.bat
  + contrib/examples/pe/hbmk_b32.bat
  + contrib/examples/pe/hbmk_vc.bat
  - contrib/examples/pp/bld_b32.bat
  - contrib/examples/pp/bld_vc.bat
  + contrib/examples/pp/hbmk_b32.bat
  + contrib/examples/pp/hbmk_vc.bat
  - contrib/gtwvg/tests/bld_b32.bat
  - contrib/gtwvg/tests/bld_vc.bat
  + contrib/gtwvg/tests/hbmk_b32.bat
  + contrib/gtwvg/tests/hbmk_vc.bat
  - contrib/hbapollo/tests/bld_b32.bat
  - contrib/hbapollo/tests/bld_vc.bat
  + contrib/hbapollo/tests/hbmk_b32.bat
  + contrib/hbapollo/tests/hbmk_vc.bat
  - contrib/hbbtree/tests/bld_b32.bat
  - contrib/hbbtree/tests/bld_djgp.bat
  - contrib/hbbtree/tests/bld_vc.bat
  + contrib/hbbtree/tests/hbmk_b32.bat
  + contrib/hbbtree/tests/hbmk_djg.bat
  + contrib/hbbtree/tests/hbmk_vc.bat
  - contrib/hbclipsm/tests/bld_b32.bat
  - contrib/hbclipsm/tests/bld_vc.bat
  + contrib/hbclipsm/tests/hbmk_b32.bat
  + contrib/hbclipsm/tests/hbmk_vc.bat
  - contrib/hbct/tests/bld_b32.bat
  - contrib/hbct/tests/bld_vc.bat
  + contrib/hbct/tests/hbmk_b32.bat
  + contrib/hbct/tests/hbmk_vc.bat
  - contrib/hbcurl/tests/bld_b32.bat
  - contrib/hbcurl/tests/bld_vc.bat
  + contrib/hbcurl/tests/hbmk_b32.bat
  + contrib/hbcurl/tests/hbmk_vc.bat
  - contrib/hbfbird/tests/bld_b32.bat
  - contrib/hbfbird/tests/bld_vc.bat
  + contrib/hbfbird/tests/hbmk_b32.bat
  + contrib/hbfbird/tests/hbmk_vc.bat
  - contrib/hbfimage/tests/bld_b32.bat
  - contrib/hbfimage/tests/bld_vc.bat
  + contrib/hbfimage/tests/hbmk_b32.bat
  + contrib/hbfimage/tests/hbmk_vc.bat
  - contrib/hbgd/tests/bld_b32.bat
  - contrib/hbgd/tests/bld_vc.bat
  + contrib/hbgd/tests/hbmk_b32.bat
  + contrib/hbgd/tests/hbmk_vc.bat
  - contrib/hbgf/tests/bld_b32.bat
  - contrib/hbgf/tests/bld_vc.bat
  + contrib/hbgf/tests/hbmk_b32.bat
  + contrib/hbgf/tests/hbmk_vc.bat
  - contrib/hbhpdf/tests/bld_b32.bat
  - contrib/hbhpdf/tests/bld_vc.bat
  + contrib/hbhpdf/tests/hbmk_b32.bat
  + contrib/hbhpdf/tests/hbmk_vc.bat
  - contrib/hbmisc/tests/bld_b32.bat
  - contrib/hbmisc/tests/bld_vc.bat
  + contrib/hbmisc/tests/hbmk_b32.bat
  + contrib/hbmisc/tests/hbmk_vc.bat
  - contrib/hbmysql/tests/bld_b32.bat
  - contrib/hbmysql/tests/bld_vc.bat
  + contrib/hbmysql/tests/hbmk_b32.bat
  + contrib/hbmysql/tests/hbmk_vc.bat
  - contrib/hbmzip/tests/bld_b32.bat
  - contrib/hbmzip/tests/bld_vc.bat
  + contrib/hbmzip/tests/hbmk_b32.bat
  + contrib/hbmzip/tests/hbmk_vc.bat
  - contrib/hbnf/tests/bld_b32.bat
  - contrib/hbnf/tests/bld_vc.bat
  + contrib/hbnf/tests/hbmk_b32.bat
  + contrib/hbnf/tests/hbmk_vc.bat
  - contrib/hbodbc/tests/bld_b32.bat
  - contrib/hbodbc/tests/bld_vc.bat
  + contrib/hbodbc/tests/hbmk_b32.bat
  + contrib/hbodbc/tests/hbmk_vc.bat
  - contrib/hbole/tests/bld_b32.bat
  - contrib/hbole/tests/bld_vc.bat
  + contrib/hbole/tests/hbmk_b32.bat
  + contrib/hbole/tests/hbmk_vc.bat
  - contrib/hbpgsql/tests/bld_b32.bat
  - contrib/hbpgsql/tests/bld_vc.bat
  + contrib/hbpgsql/tests/hbmk_b32.bat
  + contrib/hbpgsql/tests/hbmk_vc.bat
  - contrib/hbsqlit3/tests/bld_b32.bat
  - contrib/hbsqlit3/tests/bld_vc.bat
  + contrib/hbsqlit3/tests/hbmk_b32.bat
  + contrib/hbsqlit3/tests/hbmk_vc.bat
  - contrib/hbtip/tests/bld_b32.bat
  - contrib/hbtip/tests/bld_vc.bat
  + contrib/hbtip/tests/hbmk_b32.bat
  + contrib/hbtip/tests/hbmk_vc.bat
  - contrib/hbtpathy/tests/bld_b32.bat
  - contrib/hbtpathy/tests/bld_vc.bat
  + contrib/hbtpathy/tests/hbmk_b32.bat
  + contrib/hbtpathy/tests/hbmk_vc.bat
  - contrib/hbvpdf/tests/bld_b32.bat
  - contrib/hbvpdf/tests/bld_vc.bat
  + contrib/hbvpdf/tests/hbmk_b32.bat
  + contrib/hbvpdf/tests/hbmk_vc.bat
  - contrib/hbwhat/tests/bld_b32.bat
  - contrib/hbwhat/tests/bld_vc.bat
  + contrib/hbwhat/tests/hbmk_b32.bat
  + contrib/hbwhat/tests/hbmk_vc.bat
  - contrib/hbwin/tests/bld_b32.bat
  - contrib/hbwin/tests/bld_vc.bat
  + contrib/hbwin/tests/hbmk_b32.bat
  + contrib/hbwin/tests/hbmk_vc.bat
  - contrib/hbziparc/tests/bld_b32.bat
  - contrib/hbziparc/tests/bld_vc.bat
  + contrib/hbziparc/tests/hbmk_b32.bat
  + contrib/hbziparc/tests/hbmk_vc.bat
  - contrib/rddado/tests/bld_b32.bat
  - contrib/rddado/tests/bld_vc.bat
  + contrib/rddado/tests/hbmk_b32.bat
  + contrib/rddado/tests/hbmk_vc.bat
  - contrib/rddads/tests/bld_b32.bat
  - contrib/rddads/tests/bld_vc.bat
  + contrib/rddads/tests/hbmk_b32.bat
  + contrib/rddads/tests/hbmk_vc.bat
  - contrib/rddsql/tests/bld_b32.bat
  - contrib/rddsql/tests/bld_vc.bat
  + contrib/rddsql/tests/hbmk_b32.bat
  + contrib/rddsql/tests/hbmk_vc.bat
  - contrib/xhb/tests/bld_b32.bat
  - contrib/xhb/tests/bld_vc.bat
  + contrib/xhb/tests/hbmk_b32.bat
  + contrib/xhb/tests/hbmk_vc.bat
  - tests/bld_b32.bat
  - tests/bld_b32_dll.bat
  - tests/bld_gnu.bat
  - tests/bld_vc.bat
  + tests/hbmk_b32.bat
  + tests/hbmk_b32_dll.bat
  + tests/hbmk_gnu.bat
  + tests/hbmk_vc.bat
  - utils/hbdoc/bld_b32.bat
  - utils/hbdoc/bld_vc.bat
  + utils/hbdoc/hbmk_b32.bat
  + utils/hbdoc/hbmk_vc.bat
  - utils/hbmake/bld_b32.bat
  - utils/hbmake/bld_vc.bat
  + utils/hbmake/hbmk_b32.bat
  + utils/hbmake/hbmk_vc.bat
    * bld*.bat -> hbmk*.bat

  * contrib/mtpl_b32.mak
    * /P32 -> /P64

  + contrib/hbmsql/tests/hbmk_b32.bat
  + contrib/hbmsql/tests/hbmk_vc.bat
    + Added make files.

  - contrib/hbclip
    - Removed this contrib. It was incomplete and not
      updated since 2001.

2008-11-09 17:44 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
  * config/rules.cf
  * config/w32/mingwce.cf
  * config/w32/poccce.cf
  * config/w32/msvcce.cf
    * Use Harbour option -gc0 for WinCE builds.
    * Use C option -O2 (instead of -O3) for MinGWCE builds.
    ; None of these were tested.

2008-11-09 17:15 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/arrays.c
  * source/vm/classes.c
  * source/vm/cmdarg.c
  * source/vm/codebloc.c
  * source/vm/debug.c
  * source/vm/dynsym.c
  * source/vm/extend.c
  * source/vm/fm.c
  * source/vm/hashes.c
  * source/vm/hvm.c
  * source/vm/itemapi.c
  * source/vm/maindll.c
  * source/vm/maindllh.c
  * source/vm/maindllp.c
  * source/vm/mainstd.c
  * source/vm/mainwin.c
  * source/vm/set.c
  * source/vm/vm.c
    % Removed HB_EXPORT from remaining function definitions.

2008-11-09 17:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgcore.c
  * contrib/gtwvg/wvgutils.c
  * contrib/hbwin/win_dll.c
  * contrib/hbwin/win_ole.c
  * contrib/xhb/cstructc.c
  * contrib/xhb/dbgfxc.c
  * source/common/hbarch.c
  * source/common/hbdate.c
  * source/common/hbfsapi.c
  * source/common/hbstr.c
  * source/common/hbver.c
  * source/common/hbverdsp.c
  * source/debug/dbgentry.c
  * source/main/harbour.c
  * source/rdd/dbf1.c
  * source/rdd/nulsys/nulsys.c
  * source/rdd/wacore.c
  * source/rdd/wafunc.c
  * source/rdd/workarea.c
  * source/rtl/cdpapi.c
  * source/rtl/console.c
  * source/rtl/dates.c
  * source/rtl/errorint.c
  * source/rtl/file.c
  * source/rtl/filesys.c
  * source/rtl/fscopy.c
  * source/rtl/fserror.c
  * source/rtl/fstemp.c
  * source/rtl/gtapi.c
  * source/rtl/gtapiu.c
  * source/rtl/hbadler.c
  * source/rtl/hbcrc.c
  * source/rtl/hbffind.c
  * source/rtl/hbgtcore.c
  * source/rtl/hbmd5.c
  * source/rtl/inkeyapi.c
  * source/rtl/isprint.c
  * source/rtl/math.c
  * source/rtl/mouseapi.c
  * source/rtl/seconds.c
  * source/rtl/setcolor.c
  * source/rtl/setcurs.c
  * source/rtl/strmatch.c
  * source/vm/hvm.c
    % Removed HB_EXPORT from function definitions.
      Placing it in declaration is enough.

  * source/debug/dbgentry.c
    * Formatting.

2008-11-09 16:49 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcurl/hbcurl.c
  * contrib/hbcurl/hbcurl.ch
    + Added libcurl 7.19.1 features.
    % Removed hashing calls from some parts which are
      only compiled for libcurl versions which don't need
      hashing anyway.

  * ChangeLog
    * Changed CVS ID tag name in some very old entries to
      avoid them being replaced by versioning system.

2008-11-09 16:00 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
    ! Added hbpp.lib and hbcommon.lib to HBRUN_DLL liblist.

  * include/hbapi.h
  * source/vm/cmdarg.c
  * source/common/hbver.c
  * source/common/hbverdsp.c
  * source/rtl/console.c
  * source/rtl/setcolor.c
  * source/rtl/setcurs.c
    + Added HB_EXPORT to some functions to make it possible
      to build hbrun-dll.exe.
      For other reasons, it only works if Harbour built with
      set C_USR=-DHB_DYNLIB.
    ; TODO: Make HB_DYNLIB the default build mode, do gradual
            steps to remove separate DLL building pass, and
            finally to remove HB_BUILD_DLL option.
            The only drawback will be about 10-100K
            (currently) overhead in final executable size due
            to included export table for BCC and MSVC builds.

2008-11-09 15:46 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/hboutdbg.c
    ! Fixed to compile without warnings and with more
      consistent behavior across platforms.

  * source/rtl/gtwvt/gtwvt.c
    * Minor formatting.

2008-11-09 15:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
    * do not define hb_stack_ptr_from_tls() in BCC builds when
      HB_STACK_PRELOAD macro is not defined to pacify BCC warning

2008-11-09 14:37 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
    ! /P32 -> /P64

2008-11-09 14:29 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
    + Added HBRUN_DLL.
    ; TOFIX: It doesn't work. Maybe more eyeballs will spot the
             problem more easily. [DONE]

2008-11-09 14:23 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * tests/longstr.prg
  * contrib/hbole/oleauto.prg
  * contrib/hbole/ole2.c
  * contrib/gtwvg/wvgutils.c
  * contrib/gtwvg/wvgcore.c
  * contrib/hbgd/gdbarcod.prg
  * contrib/hbgd/gdbar.prg
  * contrib/hbwin/win_tole.prg
  * contrib/hbwin/win_ole.c
  * contrib/hbvpdf/hbvpdf.prg
  * contrib/examples/hbsqlit2/tests/hbsqlite.prg
  * contrib/examples/hbsqlit2/TODO.txt
  * contrib/examples/hbsqlit2/hbsqlit2.c
  * source/debug/dbgwa.prg
  * source/rtl/gtwin/gtwin.c
  * source/rtl/tget.prg
  * source/rtl/tgetint.prg
  * source/compiler/gencobj.c
    ! Removed high chars from comments. This usually means
      copyright holders' names. I apologize for touching
      them, I also have one in mine, but it's better to
      not use them in source code to avoid encoding problems.

2008-11-09 14:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/make_gcc.mak
    ! fixed hbtest-dll linking - the path to used harbour shared library
      was hardcoded in final binaries
    + added hbrun-dll. Please update make_b32.mak and make_vc.mak

2008-11-09 14:02 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
    + Added /nxcompat linker flag for non-WinCE, non-DLL,
      HB_VISUALC_VER >= 80 MSVC executables.
      This should add extra safety.

  * include/hbextern.ch
  * source/rtl/rat.c
    + Added HB_RAT() which is similar to RAT(), but also accepts
      <nStart> and <nEnd> optional paramaters, similarly to HB_AT().
    ; Please test.

  * source/rtl/at.c
    * Minor formatting.

2008-11-09 13:16 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/memvars.c
    ! fixed 3 tracelog messages

  * harbour/source/rtl/hbgtcore.c
    * declare core method table as const

  * harbour/source/compiler/gencc.c
    ! fixed accessing data out of buffer in string to hex conversion and
      logical expression used to divide strings

2008-11-09 13:03 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbtip/utils.c
    ! Fixed static function also marked as HB_EXPORT.

  * contrib/xhb/dbgfx.prg
    * Minor formatting.

2008-11-09 12:26 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    ! Fixed again the UNICODE problem (I've uploaded a wrong
      version apparently).
    + Added my last entry which was lost due to above.
    ! Removed all ending whitespaces.
    ! Stripped all non-ASCII chars. Sorry to all who's names
      were thus modified.
    ; NOTE: Please don't use any high chars in the future,
            only 7-bit ASCII. Same goes for all Harbour source
            comments BTW.
            This way everyone can read what the other are typing
            and it's much easier to fix files if someone
            accidentally saves with the wrong codepage.
    ; TOFIX: We should also possibly fix all high chars in
             .prg and .c code _strings_.

2008-11-09 11:48 UTC+0100 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    ! Restored last non-UNICODE version, and readded
      all entries and reapplied all changes since then.
    ; NOTE: Please never save any Harbour files in
            UNICODE mode. Thank you.

  * contrib/make_gcc_all.sh
  * contrib/Makefile
    - Removed hbdbgfx.

  * source/pp/hbpp.c
  * source/main/harbour.c
    * Excluded hbwmain for __POCC__ WinCE.
    ; TOFIX: Warning: Not proper fix.
             This way it won't link but at least it compiles.
             [DONE]

  * source/compiler/gencc.c
    * Switched to hexadecimal format for high chars, because
      octal was tried to be converted to Windows codepage, by
      PellesC.

  * config/w32/poccce.cf
    - Removed -DSTRSAFE_NO_DEPRECATE switch.

  * config/w32/pocc.cf
    + Added -MT switch.

  * contrib/hbwin/win_prn2.c
  * contrib/hbwin/win_dll.c
  * source/rtl/hbhex.c
  * source/rdd/hbsix/sxcompat.prg
    * Minor formatting.

2008-11-09 11:45 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_gcc.mak
    ! declared non file helper rules as .PHONY ones.
    ! fixed bad typo in helper rules usage - strange that I haven't seen
      it before.
    * restored non indirect rules - now they should work as expected
      also in parallel builds.
      TODO: remove static libraries from HB_BUILD_TARGETS in common.mak
      if everything is correct then they should be created to satisfy
      hbrun and other tools dependencies. It's not necessary to explicitly
      duplicate it.

2008-11-08 15:40 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/source/rtl/gtwvt/gtwvt.h

    + BOOL bResizing
    + BOOL bAlreadySizing
      To control unnecessary code execution while sizing operation is
      being carried out. Now the flickering of console window should be
      greatly minimized, IMO, please test.

    ! Fixed behavior of some function not to recreate font if one is already
      created given other parameters are the same. SetMode() does nothing if
      nRows, nCols are the same as with console prior to calling this function.

    ; NOTE: Please test extensively as this is one gray area of GTWVT we all
      are in a quest to fix.

2008-11-08 19:53 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_gcc.mak
    ! corrected missing $(HARBOUR_EXE) dependence in .prg files rules
    ! replaced non indirect rules (::) which are strictly file base with
      indirect ones to not confuse dependence logic when parallel
      compilation is enabled
    ! marked harbour.c and cmdarg.c as dependent on pptable.c to fix
      compilation order - these files needs hbverbld.h which is generated
      together with pptable.c
    ! fixed HBTESTDLL_EXE dependencies - static library were used instead
      of harbour share library. BTW probably it will be good to create also
      HBRUNDLL_EXE

      With above modification parallel compilation can be enabled for
      make_gcc.sh (-j<N> GNU make option). It greatly improves compilation
      speed. Probably also make_{bcc,vc}.mak should be fixed even if they
      do not support parallel compilation.

2008-11-08 10:23 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Updated to match current GTWVT.

  * harbour/contrib/gtwvg/wvgutils.c
    + HB_FUNC( WIN_DESTROYWINDOW ) - Winapi compatible function.

2008-11-08 18:40 UTC+0100 Francesco Saverio Giudice (info fsgiudice com)
  - contrib/hbdbgfx
  - contrib/hbdbgfx/common.mak
  - contrib/hbdbgfx/dbgfx.prg
  - contrib/hbdbgfx/dbgfxc.c
  - contrib/hbdbgfx/hbdbgfx.h
  - contrib/hbdbgfx/make_b32.bat
  - contrib/hbdbgfx/make_gcc.sh
  - contrib/hbdbgfx/make_vc.bat
  - contrib/hbdbgfx/Makefile
  - contrib/hbdbgfx/sprintf.prg
  + contrib/xhb/dbgfx.prg
  + contrib/xhb/dbgfxc.c
  + contrib/xhb/sprintf.prg
  + contrib/xhb/xhb.h
  * contrib/make_b32_all.bat
  * contrib/make_vc_all.bat
  * contrib/xhb/common.mak
  * contrib/xhb/Makefile
    * moved hbdbgfx to xhb folder

2008-11-08 16:43 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/version.c
    % Minor.

2008-11-08 16:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/version.c
    + Implemented:
      hb_version( HB_VERSION_BUILD_DATE )
      hb_version( HB_VERSION_BUILD_TIME )

  * source/rtl/gtwvt/gtwvt.c
    * Formatting.

  * source/rdd/hbsix/sxini.prg
  * source/rdd/hbsix/sxcompat.prg
  * source/rdd/hbsix/sxtrig.prg
    * Formatted to std Harbour. Generated pcode unchanged.

  * ChangeLog
    * Marked finished TODO/TOFIXes as [DONE].

2008-11-08 14:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added C_USR support for OpenWatcom.
    - Removed debug switches from OpenWatcom C compiler cmdline.

  * bin/hbmk_os2.cmd
    + Added OpenWatcom support. Pls update it, f.e. I don't know
      what is the name of the compiler executable.
    ! Fixed HB_COMPILER branching. Looks like nobody uses this
      file if this problem didn't show up so far, so I'd like to
      propose again to remove this file completely, as there is
      not much point spending time on maintaining stuff which
      nobody uses or needs, is there?

  * bin/hbmk.bat
  - config/dos/watcom.cf
  - config/w32/watcom.cf
    - Removed rather obsolete Watcom support. Pls use OpenWatcom.
      Update you envvar HB_COMPILER from 'watcom' to 'owatcom'.

2008-11-08 14:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.bat
  * make_vc.bat
  * contrib/mtpl_b32.bat
  * contrib/mtpl_gcc.sh
  * contrib/mtpl_vc.bat
    * Sync with GNU make system:
      HB_MAKE_FLAGS -> MK_USR
    ; TOFIX: Maybe it's a good time now to resolve the missing HB_
             prefixes for C_USR, L_USR, A_USR, MK_USR.
             If there are no objections / better ideas I'd like
             to make these changes:
             HB_USER_LIBS -> HB_USR_LIBS
             PRG_USR      -> HB_USR_PRG
             C_USR        -> HB_USR_C
             L_USR        -> HB_USR_LINK (or HB_USR_L ?)
             A_USR        -> HB_USR_LIB (or HB_USR_A ?)
             MK_USR       -> HB_USR_MAKE (or HB_USR_MAK ?)
             As an option we may keep the old names for
             compatibility to give some transition time.

2008-11-08 13:55 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/set.c
    ! _SET_EVENTMASK RTE removed to be Clipper compatible.
    ! _SET_VIDEOMODE RTE removed to be Clipper compatible.
    ! _SET_MBLOCKSIZE default value set to 64 (was 0) to be Clipper compatible.
      (pls correct me if this was intentionally wrong)

  * utils/hbtest/rt_misc.prg
    + Added one C5.2 SET()s for two simple tests.
    + Added all C5.3 SET()s for two simple tests each.
    ; TOFIX: _SET_VIDEOMODE has the type wrong.
    ; NOTE: It wouldn't be a bad idea to add some more comprehensive
            tests for SET()s.

2008-11-08 13:22 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_gcc.sh
  * harbour/make_gnu.bat
  * harbour/make_gnu.sh
  * harbour/config/lib.cf
  * harbour/config/bin.cf
    + added MK_USR to pass GNU MAKE flags

  * harbour/source/vm/set.c
    * minor cleanup and simplifications in hb_setSetItem().
    * grouped SETs with the same item type in hb_setSetItem() function
      together.

2008-11-08 12:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    * hb_gt_wvt_ResetWindowSize(): Not very good looking (or
      overly efficient) solution added for the windows
      resize/positioning problem in case the initally set size
      cannot fit on the screen (Windows desktop).

2008-11-08 10:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/set.c
    + Implemented rest of hb_setSetItem() values.
    ; TODO: Please review. [DONE]
    ! Fixed HB_SET_FILECASE and HB_SET_DIRCASE to not allow
      invalid numeric values to be set.
    ! Added missing 'break;' to hb_setSetItem2();

  * source/rtl/gtwvt/gtwvt.c
    ! Fixed a few places where '+' operator was used
      instead of '|'.
    * Minor opt/formatting.
    ; TOFIX: The window positioning bug is still to be solved. [DONE -> REOPENED]

2008-11-07 23:39 UTC+0100 Francesco Saverio Giudice (info fsgiudice com)
  * source/rdd/usrrdd/rdds/arrayrdd.prg
    * Changed AR_CREATE( nWA, aOpenInfo ) behaviour, now it not checks
      if a table exists in memory but act as dbCreate() does.
    + Added hb_FileArrayRDD() function to check existence of a table
      in memory.
    * Changed EraseArrayRDD() -> hb_EraseArrayRDD()
    * removed string lenght limit in case of a Memo field

2008-11-07 22:45 UTC+0100 Francesco Saverio Giudice (info fsgiudice com)
  * contrib/xhb/hboutdbg.c
    + Added hb_OutDebug() and hb_OutDebugName() functions at
      C level

2008-11-07 19:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.c
    * Formatting.

  * config/w32/owatcom.cf
    * Added support for L_USR in link options.
    * Removed debug switch -d2 from compiler command line.
      For debug builds 'C_USR=-d2' and 'L_USR=debug all'
      should be added.

  ; Untested.

2008-11-07 17:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added support for 'owatcom' as HB_COMPILER.
    ; NOTE: If there are no objections I'll remove Harbour
            support for 'watcom' HB_COMPILER, which was
            used for old non-opensource version of this
            compiler, but I guess it doesn't make too much
            sense having them anymore.

  * source/common/hbverdsp.c
    * Minor change in /build output.

  * include/hbver.ch
  * source/rtl/version.c
    * Changed ordering of parameter constants to make more sense.

  * bin/hbmk.bat
  * config/w32/owatcom.cf
    * Removed 'debug all' linker option to make executable sizes
      significantly smaller by default. If you need debug info,
      use 'L_USR=debug all'.
    ; NOTE: I'd suggest doing the same for other platform supported
            by owatcom. If there are no objections I can do this.

  * source/rtl/gtwvt/gtwvt.c
    * Typo, minor formatting.


2008-11-07 14:19 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/set.c
    + finished hb_setSetFile() used internally for HB_SET_ALTFILE,
      HB_SET_EXTRAFILE, HB_SET_PRINTFILE

2008-11-07 13:01 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbset.h
  * harbour/source/vm/set.c
    + added hb_setSetItem2() C function for SETs which needs two parameters
    + added support for HB_SET_DECIMALS and HB_SET_EPOCH in hb_setSetItem()
      Still 22 SETs are marked as TODO [DONE]
    + added internal function hb_setSetFile() for HB_SET_ALTFILE,
      HB_SET_EXTRAFILE, HB_SET_PRINTFILE - function body marked as TODO [DONE].
      I'll implement it later.

2008-11-07 00:39 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
    ! fixed typo in previous ChangeLog entry. Instead of:
         #ifdef DEFINE && DEFINE >= 0x100
      should be:
         #if defined( DEFINE ) .and. DEFINE >= 0x100

2008-11-07 00:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbwmain.c
    * pacified unused variable warning

  * harbour/include/hbpp.h
  * harbour/source/pp/ppcore.c
    ! do not report #if expression errors in #if PP directives when they are
      in codedis activated by parent #if[def]/#elif/#else. It allows
      to compiler code like:
         #ifdef DEFINE
            #if DEFINE >= 0x100
               ...
            #endif
         #endif
    + added logical expression reduction to not report #if expression errors
      in code like:
         #if defined( DEFINE ) && DEFINE >= 0x100
            ...
         #endif
    ! fixed possible division by 0error in #if exporessions like #if 1 / 0
      Now #if expression compiler error is generated
    ! restored some bit operators in #if directives wrongly disabled with
      xHarbour stuff

  * harbour/source/vm/hashfunc.c
    % removed unnecessary hb_itemUnRef()

2008-11-06 09:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
    ! Fixed mistakes in previous commit.
    + Added NOTE about requirement that harboury stays at the top of
      the obj list.

2008-11-06 09:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
  * source/common/Makefile
  * source/rtl/Makefile
  - source/vm/fmhb.c
  + source/rtl/fmhb.c
  - source/vm/hbmem.c
  + source/common/hbmem.c
    * Moved hbfm (MEMORY() .prg function) from VM to RTL.
    * Moved hbmem (hb_xmem*() C functions) from VM to COMMON.

  - contrib/hbziparc/hbzipcpp.old
    - Removed.

2008-11-06 02:18 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/wcecon.prg
    ! added missing REQUEST DBFCDX

  * harbour/contrib/rddsql/Makefile
    ! added missing include $(TOP)$(ROOT)config/lib.cf

  * harbour/contrib/rddsql/hbsqldd.h
  * harbour/contrib/rddsql/sqlbase.c
  * harbour/contrib/rddsql/mysqldd.c
    * added missing const to some char * parameters/members
    ; added note about using sizeof() in preprocesor conditional directives

  * harbour/contrib/rddsql/sqlmix.c
    ! fixed printf() format

    TOFIX for author:
    mysqldd.c:258: warning: pItemEof may be used uninitialized in this function
    sqlbase.c:509: warning: comparison of unsigned expression < 0 is always false
    Mindaugas can you look at it?

2008-11-05 23:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.bat
  * contrib/hbgt/doc/gendoc.bat
  * contrib/hbapollo/make_vc.bat
  * contrib/hbcurl/make_vc.bat
  * contrib/hbmisc/doc/gendoc.bat
    % Non-empty 'echo.' commands in batch files cleaned.

2008-11-05 19:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/dbu/bld_b32.bat
  * contrib/examples/dbu/bld_vc.bat
  * utils/hbdoc/bld_b32.bat
  * utils/hbdoc/bld_vc.bat
  * utils/hbmake/bld_b32.bat
  * utils/hbmake/bld_vc.bat
    * Minor cleanups.
    ; NOTE: Win9x support for BCC files is now dropped.

2008-11-05 19:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcurl/hbcurl.c
    % Removed two Harbour level functions not really
      adding to functionality but forcing linkage of these
      (otherwise unused) curl interfaces.
      CURL_SHARE_STRERROR()
      CURL_MULTI_STRERROR()
      INCOMPATIBLE (but I doubt even a single user would be affected)

  * source/rtl/version.c
    ! Fix to prev.

2008-11-05 19:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * include/hbstdgen.ch
  * include/hbver.h
  * contrib/examples/pp/pp.c
  * source/pp/ppcore.c
  * source/pp/hbpp.c
  * source/common/hbver.c
    * HB_VER_REVISION -> HB_VER_RELEASE.
      INCOMPATIBLE.

2008-11-05 13:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
    * -GA option only used for HB_VISUALC_VER >= 70.
      Please update this if older versions also support it.

  * include/hbver.ch
  * source/common/hbver.c
    * Some more fiddling with version number terminology and
      hb_version() values:
      HB_VERSION_MICRO          -> HB_VERSION_RELEASE
      HB_VERSION_BLD_DATE_STR   -> HB_VERSION_BUILD_DATE_STR
      HB_VERSION_BLD_DATE       -> HB_VERSION_BUILD_DATE
      HB_VERSION_BLD_TIME       -> HB_VERSION_BUILD_TIME
      HB_VERSION_CHANGELOG_REV  -> HB_VERSION_CHANGELOG_ID
      Third part of version number could also be: PATCH, MICRO, BUILD
      SVN revision could also be: BUILD
      BUILD is inherently connected with a physical binary, so
      I dropped it, PATCH is limiting and negativ, MICRO is not
      very common (otherwise good), so a finally opted for
      RELEASE. REVISION kept as is.
    ; If there are no objections I'll HB_VER_REVISION macro to
      HB_VER_RELEASE. This will be an INCOMPATIBLE change, but
      I expect not too many ppl being affected.

  * TODO
    - Removed MT as a TODO. Thanks Przemek for the nice job.

2008-11-05 03:01 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/hashes.c
  * harbour/source/vm/hashfunc.c
    * changed hb_hSort() to execute sorting when hash is marked as needed
      resorting instead of marking hash for resorting

  * harbour/source/vm/fm.c
    * formatting

  * harbour/contrib/hbdbgfx/dbgfxc.c
    ! fixed casting in ASCII build
    + added support for UNICODE builds

  * harbour/contrib/gtwvg/gtwvg.c
    * cover LWA_ALPHA usage by #if ( _WIN32_WINNT >= 0x0500 )
      to keep at least compile time compatibility with older systems

2008-11-04 15:54 UTC-0600 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * source/vm/fm.c
    * removed unneeded HB_FUNC( MEMORY ), now in fmhb.c

2008-11-04 23:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
  * source/vm/fm.c
  + source/vm/fmhb.c
  + source/vm/hbmem.c
    + Moved functions not depending on FM_STATISTICS setting,
      to separate files.
    ; NOTE: MEMORY() function should IMO move to rtl, and
            hb_xmem*() functions to common lib.

2008-11-04 22:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added new HB_H*() functions.

2008-11-04 22:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * common.mak
  * source/codepage/Makefile
  + source/codepage/cpes850.c
    + Added ES850 - Modern Spanish.

  * include/hbextern.ch
    ! Added ITWIN.

  * source/codepage/cpesisoc.c
  * source/codepage/cpsviso.c
  * source/codepage/cpesiso.c
  * source/codepage/cpitwin.c
    + Added my copyright.

  * ChangeLog
    ; Some TODO/TOFIXes marked as [DONE]

2008-11-04 22:39 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/hashfunc.c
  * harbour/source/vm/hashes.c
    + added support for binary key order
    % enable binary internal key order by default for new hash arrays
    + added .prg function to enable/disable/retrive binary order in hash
      items:
         hb_hSetBinary( <hValue>, <lOnOff> ) => <hValue>
         hb_hBinary( <hValue> [, <lBinary> ] ) => <lBinary>
    + added support for hash array resorting. It's activated automatically
      on 1-st key access/assign after changing binary or casematch hash
      array flag
    + added .prg function hb_hSort( <hValue> ) => <hValue> which marks
      hash array for sorting

  * harbour/source/rtl/itemseri.c
    % improved performance of hash array deserialization
      TODO: add support for hash array flags and hash default value
            serialization

2008-11-04 19:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbnf/getenvrn.c
    - Removed some obsolete comments.

  * contrib/hbwhat/whtlv.c
    ! Fixed memory leak.
    ! Fixed to use hb_strncpy() instead of unsafe lstrcpy().
    ; TOFIX: The destination address isn't properly allocated and the
             size of it is unknown, so this modification is not enough.
    ; TOFIX: Unicode conversion, buffer allocation for item.pszText.

2008-11-04 19:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gcc.mak
  * contrib/mtpl_gcc.mak
    + Added '-march=i586' for Windows platform.
      (Sync with other make systems.)

  * ChangeLog
    + Some changes marked as TOMERGE 1.0.

  * contrib/hbtip/base64x.c
    ! Fixed an ages old problem with BUILDUSERPASSSTRING()
      function, which always returned an empty string thus
      making SMTP "AUTH PLAIN" broken. I wonder how this went
      unnoticed for this long.
      This also fixes unsafe strcpy() usage.
      [TOMERGE 1.0]

2008-11-04 17:28 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
  * harbour/source/vm/mainstd.c
    * force linking main() function in OpenWatcom OS2 builds

  * harbour/contrib/xhb/hbcrypt.c
    ! casting

2008-11-04 13:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * include/hbextern.ch
   * common.mak
   * source/codepage/Makefile
   * source/codepage/cpeswinm.c
   - source/codepage/cpes850.c
   + source/codepage/cpes850c.c
   * source/codepage/cpesiso.c
   + source/codepage/cpesisoc.c
   * source/codepage/cpeswin.c
   + source/codepage/cpeswinc.c
   * source/codepage/cpesisom.c
     * Spanish language support cleaned:
       Modern collation made the default, fixed
       CP linkage in ESWIN collations, Clipper
       compatibility versions renamed to have an
       ending 'C'
       Now the following collations are supported:
       ES850C - Clipper compatibility CP: IBM850
       ESWINC - Clipper compatibility CP: Windows-1252
       ESISOC - Clipper compatibility CP: ISO-8859-1
       ESWIN  - Modern CP: Windows-1252
       ESISO  - Modern CP: ISO-8859-1
       ESMWIN - Compatibility with previous Harbour versions and xhb.
                (this collation has wrong CP linkage, so everyone is
                encouraged to use ESWIN or ESISO instead.)
                Intentionally not added to hbextern.ch.
     ; TODO: Add ES850. [DONE]
     ; TODO: Check whether Clipper compatibility is indeed true.

2008-11-04 12:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddsql/mysqldd.c
    ! Excluded sizeof() in #ifdef to compile with MinGW.

  * contrib/hbhpdf/make_gcc.sh
    ! Fixed missing quote char.
      [TOMERGE 1.0]

  * contrib/mtpl_gcc.mak
    ! Fixed to create its own OBJ dir. Not the ultimate
      solution, pls enhance if you think.

  * source/codepage/cpeswinm.c
  * source/codepage/cpeswin.c
    ! Fixed linked codepage to be Windows-1252 instead of
      ISO-8859-1. For the ISO versions, pls see ESISO variants.

  * source/codepage/cpes850.c
  * source/codepage/cpesisom.c
    * Comments.

  * contrib/make_gcc_all.sh
    ! Fixed to not include externally dependent contribs,
      when HB_CONTRIBLIBS is specified by user.

2008-11-04 09:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added HB_CODEPAGE_SVISO.

2008-11-04 09:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbgtcore.h
    ! added missing 'extern' in hb_gt_dos_keyCodeTranslate() declaration

  * harbour/source/rtl/gtstd/gtstd.c
  * harbour/source/rtl/gtpca/gtpca.c
    + added support for console input in OpenWatcom builds

  * harbour/source/vm/vmmt/Makefile
    ! removed mainpm.c

  * harbour/contrib/xhb/hbcrypt.c
    ! fixed casting

2008-11-04 02:12 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/seconds.c
    + added #include <process.h> to OpenWatcom OS2 builds.

2008-11-04 02:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    * removed casting to void* thread startup function passed
      as _beginthread() parameter in OS2 builds. It should be checked if
      it does not breaks GCC builds.

  * harbour/source/rtl/seconds.c
    * use getpid() instead of _getpid() in non GCC OS2 builds

2008-11-04 01:04 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    ! fixed typo

  * harbour/source/vm/Makefile
    * excluded mainpm.c from OS2 builds

  * harbour/source/rtl/hbinet.c
    * changed the #include order for OS2 OpenWatcom builds and added some
      cleanups - please test other builds.

2008-11-04 00:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/codepage/Makefile
  + source/codepage/cpitwin.c
    + Added ITWIN. Same as ITISO, with a different attached CP
      and name.

2008-11-03 17:49 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    * include <process.h> in OpenWatcom OS2 builds

2008-11-03 14:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/codepage/Makefile
  + source/codepage/cpsviso.c
    + Added SVISO, which is the same as SVWIN, except it's
      internally using ISO-8859-1 CP in sync with its name.

  * source/codepage/cpsvwin.c
    ! Changed internal CP to Windows-1252 from ISO-8859-1,
      so that it's in sync with its name.

2008-11-03 14:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
    + added ULONG _hb_gettid( void ) to OS2 builds - thanks to Maurilio

  * harbour/source/rtl/hbinet.c
    * changed a little bit the order of including header files in OS2 builds
      (blink fix for OpenWatcom OS2 builds).

2008-11-03 12:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    ! Synced codepage list with recent changes.

2008-11-03 11:20 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/codepage/Makefile
  - source/codepage/cpesmwin.c
  + source/codepage/cpeswinm.c
  + source/codepage/cpesiso.c
  + source/codepage/cpesisom.c
    * Renamed cpesmwin -> cpeswinm (ESMWIN -> ESWINM) (INCOMPATIBLE)
    + Added Spanish ISO natsort modules. Besides their ID,
      they are idendical with current ESWIN* natsorts, because
      the WIN versions for some reason are using ISO-8859 CP
      instead of Windows-*. This is IMO wrong, even if these CPs
      are similar or identical for the Spanish language.

2008-11-03 09:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/fileio.ch
    * Formatting.

2008-11-03 08:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/codepage/Makefile
  + source/codepage/cproiso.c
  + source/codepage/cpfriso.c
  + source/codepage/cpfrwin.c
    + Added new CPs.

  - source/codepage/cphr1250.c
  + source/codepage/cphrwin.c
    * Renamed to follow the rest of the CPs.
      INCOMPATIBLE.

  * source/codepage/cpfr850.c
    ! Fixed uppercase chars.
      [TOMERGE 1.0]

2008-11-03 00:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    + added temporary workaround for non GCC OS2 ST builds

  * harbour/source/rtl/hbmd5.c
    * casting cleanup

2008-11-02 23:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapicdp.h
  * common.mak
  * source/codepage/Makefile
  + source/codepage/uc855.c
  + source/codepage/uc874.c
  + source/codepage/uc1256.c
  + source/codepage/uc1258.c
  + source/codepage/uc860.c
  + source/codepage/uc862.c
  + source/codepage/uc864.c
  + source/codepage/uc775.c
  + source/codepage/uc1255.c
  + source/codepage/uc861.c
  + source/codepage/uc863.c
  + source/codepage/uc865.c
  + source/codepage/uc869.c
    + Added missing IBM/Windows codepages.

  * source/rtl/cdpapi.c
    * Formatting.

2008-11-02 22:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/codepage/uc1250.c
  * source/codepage/uc1251.c
  * source/codepage/uc1252.c
  * source/codepage/uc1253.c
  * source/codepage/uc1254.c
  * source/codepage/uc1257.c
  * source/codepage/uc737.c
  * source/codepage/uc850.c
  * source/codepage/uc852.c
  * source/codepage/uc857.c
  * source/codepage/uc866.c
  * source/codepage/uc8859_1.c
  * source/codepage/uc8859_2.c
  * source/codepage/uc8859_3.c
  * source/codepage/uc8859_4.c
  * source/codepage/uc8859_5.c
  * source/codepage/uc8859_6.c
  * source/codepage/uc8859_7.c
  * source/codepage/uc8859_8.c
  * source/codepage/uc8859_9.c
  * source/codepage/uc885910.c
  * source/codepage/uc885911.c
  * source/codepage/uc885913.c
  * source/codepage/uc885914.c
  * source/codepage/uc885915.c
  * source/codepage/uc885916.c
  * source/codepage/uc88591b.c
    * Formatting.

2008-11-02 22:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/codepage/uc1250.c
  * source/codepage/uc1251.c
  * source/codepage/uc1252.c
  * source/codepage/uc1253.c
  * source/codepage/uc1254.c
  * source/codepage/uc1257.c
  * source/codepage/uc737.c
  * source/codepage/uc850.c
  * source/codepage/uc852.c
  * source/codepage/uc857.c
  * source/codepage/uc866.c
  * source/codepage/uc8859_1.c
  * source/codepage/uc8859_2.c
  * source/codepage/uc8859_3.c
  * source/codepage/uc8859_4.c
  * source/codepage/uc8859_5.c
  * source/codepage/uc8859_6.c
  * source/codepage/uc8859_7.c
  * source/codepage/uc8859_8.c
  * source/codepage/uc8859_9.c
  * source/codepage/uc885910.c
  * source/codepage/uc885911.c
  * source/codepage/uc885913.c
  * source/codepage/uc885914.c
  * source/codepage/uc885915.c
  * source/codepage/uc885916.c
  * source/codepage/uc88591b.c
  * source/codepage/uckam.c
  * source/codepage/uckoi8.c
  * source/codepage/uckoi8u.c
  * source/codepage/ucmaz.c
  * source/codepage/ucmik.c
    * Formatting.

2008-11-02 21:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapicdp.h
  * common.mak
  * source/codepage/Makefile
  + source/codepage/uc8859_3.c
  + source/codepage/uc8859_4.c
  + source/codepage/uc8859_6.c
  + source/codepage/uc8859_7.c
  + source/codepage/uc8859_8.c
  + source/codepage/uc8859_9.c
  + source/codepage/uc885910.c
  + source/codepage/uc885911.c
  + source/codepage/uc885913.c
  + source/codepage/uc885914.c
  + source/codepage/uc885915.c
  + source/codepage/uc885916.c
    + Added remaining 8859 codepages.
      0x00-0x1F chars are unstandard (following existing files).

  * source/codepage/uc8859_1.c
  * source/codepage/uc8859_2.c
    * Comments.

2008-11-02 16:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * common.mak
  * source/codepage/Makefile
  + source/codepage/cpro852.c
  + source/codepage/cprowin.c
    + Added Romanian codepages.
    ; TODO: Add ROISO variant. [DONE]

  * source/codepage/uc1250.c
  * source/codepage/uc1251.c
  * source/codepage/uc1252.c
  * source/codepage/uc8859_5.c
  * source/codepage/uckam.c
    * Minor formatting.

2008-11-02 14:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    ! Readded HB_LANG_EN.

2008-11-02 14:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    ! Added all missing LANG and CODEPAGE modules.
      [TOMERGE 1.0]

  * ChangeLog
    - Removed duplicate entry of mine.

  * source/common/hbstr.c
  * source/rtl/version.c
  * source/rtl/filesys.c
    * Minor formatting.

  * source/codepage/cpcs852.c
  * source/codepage/cpsk852.c
  * source/codepage/cpcsiso.c
  * source/codepage/cpcswin.c
  * source/codepage/cpskiso.c
  * source/codepage/cpskwin.c
  * source/codepage/cpcskam.c
  * source/codepage/cpskkam.c
    * Removed unnecessary ending ';'

2008-11-02 13:36 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbexprb.c
    ! fixed possible GPF/internal memory corruption in code like:
         ? HB_I18N_GETTEXT_NOOP( "Ala ma kota" + " !!!" )
      Mindaugas, the fix is also the answer for the question you left
      in TODO.

2008-11-02 12:25 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/dynlibhb.c
    * forced casting in OS2 builds to eliminate problems with possible
      differences between compilers in 'char' type sign

  * harbour/source/rtl/filesys.c
    ! use _getcwd1() only in GCC OS2 builds - it's local GCC function
    * removed some header files from OS2 build - please test if it does
      not break GCC builds

2008-11-02 00:40 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/hbgtwvg.ch
  * harbour/contrib/gtwvg/wvgpaint.prg

    ! Synchronized with GTWVT.

    + Added HB_GTI_* hb_gtInfo() constants:
         HB_GTI_PRESPARAMS  // provides mechanism to configure windows appearance and behavior
         HB_GTI_ENABLE      // enables window to receive input focus with specified GT
         HB_GTI_DISABLE     // disables window to accept input focus with specified GT
         HB_GTI_SETFOCUS    // sets the input focus to specified GT

    + Added HB_GT_PP structure supporting design-time presentation
      parameters via HB_GTI_PRESPARAMS:
         HB_GTI_PP_EXSTYLE  // extended style of the window
         HB_GTI_PP_STYLE    // normal style of the window
         HB_GTI_PP_X        // left position by pixel | top position by row
         HB_GTI_PP_Y        // top position by pixel | left position by col
         HB_GTI_PP_WIDTH    // width of the window by pixel | number of rows in window
         HB_GTI_PP_HEIGHT   // height of the window by pixel | number of columns in window
         HB_GTI_PP_PARENT   // parent GT if window needs to be modal and/or other usage
         HB_GTI_PP_VISIBLE  // flag to specify if the window is made visible immediate after this call
         HB_GTI_PP_ROWCOLS  // flag to interpret X,Y,WIDTH,HEIGHT as Top,Left,Rows,Cols

      ;IMPLEMENTS the behavioral changes to current GT window invoked
                  either by hb_gtCreate() or hb_gtSelect() functions by specifying
                  an array of 9 elements ( bound to increase in future ) via
                  hb_gtInfo( HB_GTI_PRESPARAMS, aPresParams ) where <aPresParams>
                  contains elements described as above:
                     1. ExStyle                N   [D] 0
                     2. Style                  N       WS_OVERLAPPEDWINDOW
                     3. x[pxl] top[row]        N       0
                     4. y[pxl] left[col]       N       0
                     5. width[pxl]  rows[row]  N       CW_USEDEFAULT
                     6. height[pxl] cols[col]  N       CW_USEDEFAULT
                     7. Parent GT              P       NIL
                     8. Visibility             L       FALSE
                     9. RowCols                L       FALSE
              <aPresParams> must be passed with all 9 elements even if
              you want only few to be changed.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Updated to demonstrate above concept to show up a modal dialog in the
      same thread on top of a threaded window. Try to click on the parent window.
      <Traditional><Browser><F3> will show up this modal dialog.

    ;NOTE : Please do not use literals to define members, always use
            #defines from hbgtwvg.ch as it is a work in progress and is possible
            that few of the definitions may change in future.

2008-11-02 07:39 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/version.c
    ! Added missing header from previous change.

  * source/vm/itemapi.c
    ! snprintf() -> hb_snprintf()
      This got reverted in previous commit by mistake.

2008-11-02 07:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbstdgen.ch
    - Removed HB_VERSION mistakenly left there.

  * include/hbextern.ch
  * source/rtl/version.c
    + Added HB_OSISWINNT()
    + Added HB_OSISWINCE()
      [TOMERGE 1.0]

  * include/hbver.ch
  * source/rtl/version.c
    + Added:
      hb_version( HB_VERSION_MT )          -> <logical>
      hb_version( HB_VERSION_UNIX_COMPAT ) -> <logical>
      hb_version( HB_VERSION_PLATFORM )    -> <string> (same as ending of __PLATFORM__* macros)
      This makes these functions/macros deprecated:
      - HB_MTVM()
      - __PLATFORM__* (not for all possible situations)
    ; TOFIX: Cleanup REVISION/SVN term usage in source.
    ; TOFIX: Remove HB_VER_* predefined macro usage on .prg level.
    ; TODO: Remove some deprecated by hb_version() functions/macros.

  * include/hbapi.h
  * source/vm/itemapi.c
  * source/common/hbstr.c
  * source/common/expropt2.c
  * source/rtl/chrasc.c
  * source/rtl/hbi18n.c
    * Minor formatting.

2008-11-01 22:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/hbi18n.c
    * Modified __I18N_GETTEXT() to not RTE when trs table
      is non-array (like NIL).
    * USHORT -> ULONG in a few places.

  * source/rtl/gtwvt/gtwvt.c
    * Minor formatting.

2008-11-01 21:13 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/itemseri.c
    ! fixed 8-bytes integer numbers deserialization
    + added support for serializing number with information about size
      and decimal places. It can be activated by passing .T. as second
      parameter to HB_SERIALIZE() function.
      Mindaugas please test if this is what you asked for.

  * harbour/source/rtl/hbi18n.c
    * changed USHORT to ULONG to pacify warning and minor speed increase
      (it eliminates later conversions to 32bits when variable is used)

2008-11-01 20:09 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtwvt/gtwvt.h
  * harbour/source/rtl/gtwvt/gtwvt.c
    ! fixed HB_GTI_SETPOS_ROWCOL and HB_GTI_SETPOS_XY parameters decoding
    * automatically resize caret when cell size is changed
    * show window after setting its all parameters to eliminate visible
      resizing and repositioning. It did not eliminate multiple calls to
      hb_gt_wvt_FitSize() when windows is created. This has to be fixed
      yet or at least low level actions in this function not repeated
      when window and font dimensions are the same as in last call.
      Please test it in real MS-Windows. It should reduce startup
      flickering and increase the speed of initial code.

2008-11-01 17:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtwvt/gtwvt.h
  * source/rtl/gtwvt/gtwvt.c
    + Added support for HB_GTI_ICONRES, HB_GTI_ICONFILE
      before the window is created.
    ! Fixed resource leak when HB_GTI_ICONFILE was used.
    ! Fixed problem with HB_GTI_ICONRES when it was resetting
      the icon if a non-string/non-numeric parameter was passed
      passed, which included simply trying to read the value
      using hb_gtInfo( HB_GTI_ICONRES ). If this was an intented
      feature, pls speak up.
    ; Please review these changes.

2008-11-01 15:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/hbi18n.c
    % Removed 'comment' field from language file header. Any text
      can be added simply by adding it to the translation table.

  * contrib/Makefile
    ! Missing hbdbgfx added here, too.
    ; BTW, I've intentionally left this lib out from the liblist
      until we decide where to put these functions. There is
      not much point maintaining for the sake of just a few functions.
      If there are no objections, I'll be moving these functions
      to hbwin (until someone updates the code to work outside
      Windows).

2008-11-01 )7:31 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/make_vc_all.bat
  * harbour/contrib/make_gcc_all.sh
    + hbdbgfx librray for auto build.

2008-11-01 15:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdefs.h
    + added #define INCL_LONGLONG to include native compiler LONGLONG
      definition. It's necessary for OpenWatcom. Please check how it will
      interact with other OS2 compilers (GCC)

2008-11-01 13:41 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbgete.c
    ! fixed OS2 casting for non GCC compilers

2008-11-01 12:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/memofile.c
    + Added HB_MEMOREAD() which is identical to MEMOREAD()
      except it won't truncate the last byte (on non-UNIX
      compatible systems) if it's a EOF char.
      See also existing HB_MEMOWRIT().
      [TOMERGE 1.0]

2008-11-01 11:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/hbi18n.c
    * Minor change in header to separate it visually from comment
      field.

2008-11-01 11:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/hbi18n.c
    % Using buffered hb_file*() API in __I18N_LOAD()
      instead of plain hb_fs*(). This will cause speedup when
      buffering gets implemented in hb_file*(), because
      currently two hb_fsRead() will be executed for each
      string stored in the language file.
    - __I18N_LOAD(): Because of the above, passing a file handle
      is no longer possible.
    + Added __I18N_LOADFROMMEMORY( <mem> ) => trs
    % Minor internal cleanups.

2008-11-01 08:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * common.mak
  * source/rtl/Makefile
  + source/rtl/hbi18n.c
    + Added basic/low level i18n functions:
      __I18N_SAVE( cFileName | nHandle, aSortedTable [, cComment ] ) => lSuccess
      __I18N_LOAD( cFileName | nHandle ) => trs
      __I18N_GETTEXT( @cText, trs ) => NIL
    ; NOTE: These were originally based on Giancarlo Niccolai's work in xhb,
            but everything was completely reworked, fixed, internals removed,
            made portable, lighter, shorter and probably quicker. The used file
            format is incompatible, slightly smaller and portable.
    ; NOTE: The internal format of 'trs' (loaded translation) is also
            different. For minimal memory/speed overhead, I've choosen a one
            dimensional array, as opposed to the original two dimensional
            (like the input aSortedTable array).
    ; TODO: Higher level functions to handle selecting a default
            language, loading files automatically, possibly caching
            multiple loaded language translations in memory and providing
            a high level HB_I18N_GETTEXT() function. We may also readd
            a low-level function to create 'trs' from a memory object
            instead of loading it from the disk. We should in any case make
            the higher level the lightest and less app specific as possible.

  * include/hbver.ch
  * source/rtl/version.c
  * utils/hbtest/rt_str.prg
  * ChangeLog
    ! Fixed returning bit width.
    * Reworked hb_version() parameter values as follows:
      (also fixed some differences between docs here in the
      previous entry and actual code)
      HB_VERSION_HARBOUR        (was: HB_V_HARBOUR        )
      HB_VERSION_COMPILER       (was: HB_V_COMPILER       )
      HB_VERSION_MAJOR          (was: HB_V_MAJOR          )
      HB_VERSION_MINOR          (was: HB_V_MINOR          )
      HB_VERSION_MICRO          (was: HB_V_REV            )
      HB_VERSION_STATUS         (was: HB_V_STATUS         )
      HB_VERSION_REVISION       (was: HB_V_COUNT          )
      HB_VERSION_BLD_DATE_STR   (was: HB_V_DATE_TIME      )
      HB_VERSION_BLD_DATE       (was: HB_V_DATE           )
      HB_VERSION_BLD_TIME       (was: HB_V_TIME           )
      HB_VERSION_PCODE_VER      (was: HB_V_PCODE          )
      HB_VERSION_PCODE_VER_STR  (was: HB_V_PCODE_STR      )
      HB_VERSION_CHANGELOG_LAST (was: HB_V_CHANGELOG_LAST )
      HB_VERSION_CHANGELOG_REV  (was: HB_V_CHANGELOG_REV  )
      HB_VERSION_FLAG_PRG       (was: HB_V_FLAG_HARBOUR   )
      HB_VERSION_FLAG_C         (was: HB_V_FLAG_C         )
      HB_VERSION_FLAG_LINKER    (was: HB_V_FLAG_LINKER    )
      HB_VERSION_BITWIDTH       (was: HB_V_BITWIDTH       )
      HB_VERSION_ENDIANNESS     (was: HB_V_ENDIANNESS     )
      This function makes deprecated following functions:
      - HB_COMPILER() => hb_version( HB_VERSION_COMPILER )
      - HB_PCODEVER() => hb_version( HB_VERSION_PCODE_VER_STR )
      - HB_BUILDDATE() => hb_version( HB_VERSION_BLD_DATE_STR )
      and macros:
      - __ARCH16BIT__
      - __ARCH32BIT__
      - __ARCH64BIT__
      - __LITTLE_ENDIAN__
      - __BIG_ENDIAN__
      - __PDP_ENDIAN__
      - HB_VER_SVNID
      - HB_VER_CHLID
      - HB_VER_LENTRY
      - HB_VER_C_USR
      - HB_VER_L_USR
      - HB_VER_PRG_USR
    ; TOFIX: Some term anomalies regarding 'REVISION'. [DONE]

  * source/vm/runner.c
    * Minor formatting and added "s_" prefix to static var.

2008-10-31 13:02 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/make_b32_all.bat
    + hbdbgfx librray for auto build.

2008-10-31 13:54 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/dynlibhb.c
  * harbour/source/common/hbgete.c
  * harbour/source/common/hbfsapi.c
  * harbour/source/rtl/hbinet.c
  * harbour/source/rtl/hbffind.c
  * harbour/source/rtl/filesys.c
  * harbour/contrib/hbct/files.c
  * harbour/contrib/hbmzip/hbmzip.c
  * harbour/contrib/hbgf/hbgfos2/os2pm.c
    * cleanup casting in OS2 builds (use PCSZ/PSZ)

2008-10-30 21:24 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/source/rtl/gtwvt/gtwvt.h
    + Transfereed two static variables to HB_GTWVT structure.
      Multi-thread/console protection.

2008-10-31 02:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
    - Removed -GS- option for WinCE. MS recommends this to
      be there for safety. If someone wants to disable, it
      can be done with C_USR.

2008-10-31 02:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/dlmalloc.c
    ! Fixed minor MinGW warning. This fix also exists
      as part of the next dlmalloc version (2.8.4b).

2008-10-31 02:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * contrib/mtpl_b32.mak
  * config/w32/bcc32.cf
    - Added -4 switch, which means Intel 386 CPUs are not
      not supported by default.

  * make_vc.mak
    + Added -GA switch to MSVC 32/64 which creates smaller
      (and only slightly faster) TLS access code.

  * source/compiler/cmdcheck.c
  * source/compiler/hbusage.c
    + Added -/+ suboptions to -k? options to make it
      possible to set them to the opposite setting.
    ; NOTE: BTW, shouldn't -ki option also disable
            #pragma BEGINDUMP/ENDDUMP? IMO it should,
            otherwise it doesn't really enforce C
            out of .prg code.

  * config/w32/gcc.cf
  * config/w32/mingw.cf
    * Changed -march=i486 to -march=i586.

  ; NOTE: Please comment on CPU optimization switches, IMO
          we can quite safely target Pentium/586 as the
          minimum CPU requirement these days for default
          Harbour builds. If someone needs to run it on
          386 (Win95) or 486 (Win98/WinME), a special built
          can be created.

2008-10-30 21:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/make_b32_all.bat
  * contrib/make_vc_all.bat
  * contrib/make_gcc_all.sh
    + Added support for GNU-make features HB_CONTRIBLIBS,
      and HB_CONTRIB_ADDONS.
      Not tested in make_gcc_all.sh.

  * config/w32/msvc.cf
  * config/w32/msvcce.cf
    - Removed -D_CRT_SECURE_NO_DEPRECATE.
      (sync with non-GNU make)

2008-10-30 15:03 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbvmpub.h
    + added HB_VM_ISFUNC(), HB_VM_FUNCUNREF() and HB_VM_EXECUTE()
      macros to operate on HB_SYMB structure

  * harbour/source/vm/hvm.c
  * harbour/source/vm/classes.c
     * use HB_VM_ISFUNC()/HB_VM_FUNCUNREF()/HB_VM_EXECUTE() macros
       for executing function inside HB_SYMB structure to avoid possible
       synchronization problems during modifications

2008-10-29 19:06 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/hbgtwvg.ch
    + Added the possibility to have transparency on Window. Work-in-progress
    ! Rearranged .H structure for future seggregations into
      smaller structures

  * harbour/contrib/gtwvg/tests/demowvg.prg
    + Added functionality to make a window transparent.
      ; <Traditional><Browser> : Press F11 and F12 to increase/decrese transparency.

2008-10-30 00:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
    + Clarification to previous entry.

  * source/common/hbgete.c
  * source/common/hbfsapi.c
    ! Blind fix for OS/2 compiler warnings. David, please test.

  * source/rtl/philes.c
    * Minor (0 -> '\0').

  * source/compiler/hbusage.c
    ! Fixed old typo in help text.
    ; BTW: What is missing for gettext support?

2008-10-29 12:46 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
    ! Cleaned debug call left by mistake.

2008-10-29 18:33 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbgtcore.h
  * harbour/source/rtl/hbgtcore.c
    + added PHB_GT hb_gt_ItemBase( PHB_ITEM pItemGT )

2008-10-29 17:06 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcompdf.h
  * harbour/include/hbexprb.c
  * harbour/source/common/expropt1.c
  * harbour/source/common/expropt2.c
    ! change the expressions precedence - references to variables were
      wrongly marked as simple expressions

  * harbour/include/hbexpra.c
    ! fixed protection against wrong static initializers. Now code like:
         static s_var := { { func(), M->var } }
      or:
         static s_var := { "A" => { func() => M->var } }
      or:
         static s_var := { @M->var }
      or:
         static s_var := QSelf()
      is not accepted by compiler and error is generated at compile
      time instead of crashing at HVM startup when static variables
      are initialized

2008-10-29 08:10 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Cleaned debug call left by mistake.

2008-10-28 18:12 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
    ! Updated to respect latest features of GTWVT.

  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Updated to honor procol the way console is visible

2008-10-28 20:08 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    + added hb_stackReleaseTSD() function - this function can be called
      only in HVM cleanup state when all threads except the main one are
      released

  * harbour/source/rdd/dbf1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    * make RDDINFO settings in BDF* based RDDs thread local

  * harbour/include/hbclass.ch
    * minor modification

2008-10-28 17:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/dynlibhb.c
    ! added #define INCL_DOSMODULEMGR for OS2 builds

2008-10-28 15:56 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
    ! fixed fDebugRequest declaration

2008-10-28 12:53 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtwvt/gtwvt.h
  * harbour/source/rtl/gtwvt/gtwvt.c
    + added support for creating console window after 1-st screen update
      Please remember that it interacts with inkey() code which does not
      work until windows is not created.
      Now it should be quite easy to add support for some initializations
      before window is created. Probably it will be necessary to change
      INFO() method and store settings in some pWVT variables if pWVT->hWND
      is NULL and then use them as parameters for new console window.
      I'd like to leave this modification to MS-Windows developers.

  * harbour/contrib/xhb/xhbcopyf.c
    ! fixed name conflict with hb_fsCopy()

2008-10-28 12:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcurl/make_b32.bat
  * contrib/hbcurl/make_vc.bat
  * contrib/hbcurl/Makefile
    + Added HB_HBCURL_USR_C envvar to customize C switches
      specifically for this contrib.

2008-10-28 11:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * config/w32/gcc.cf
  * config/w32/mingw.cf
    + Added -march=i486 to default C switches.

2008-10-28 10:43 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! added missing HB_STACK_PRELOAD

2008-10-28 10:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/copyfile.c
    ! Fixed hb_fsCopy() name collision with static function.

2008-10-28 10:24 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbxvm.h
  * harbour/source/vm/hvm.c
  * harbour/source/compiler/gencc.c
    + added finished by mistake support for hidden strings in -gc3 mode
      [TOMERGE 1.0]

2008-10-28 09:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/guestbk/inifiles.prg
  * contrib/examples/guestbk/testcgi.prg
  * contrib/examples/guestbk/guestbk.prg
  * contrib/examples/guestbk/bld_b32.bat
  * contrib/examples/guestbk/bld_vc.bat
  * contrib/examples/pe/bld_b32.bat
  * contrib/examples/pe/bld_vc.bat
  * contrib/examples/pe/editorhi.prg
    * Minor updates, optimizations.

  * source/rtl/version.c
    % Using better method to return HB_V_BITWIDTH.

  * utils/hbtest/rt_str.prg
    ! Changed to use 'hb_version( HB_V_BITWIDTH ) >= 64'
      instead of #ifdef __ARCH64BIT__.

2008-10-28 01:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/Makefile
  * include/hbextern.ch
  + include/hbver.ch
  * source/rtl/version.c
    + Added HB_VERSION() unified version information
      function. This can return these version related data:
      hb_version( HB_V_HARBOUR )        => <string>
      hb_version( HB_V_COMPILER )       => <string>
      hb_version( HB_V_MAJOR )          => <num>
      hb_version( HB_V_MINOR )          => <num>
      hb_version( HB_V_REV )            => <num>
      hb_version( HB_V_STATUS )         => <string>
      hb_version( HB_V_COUNT )          => <num>
      hb_version( HB_V_DATE_TIME )      => <string>
      hb_version( HB_V_DATE )           => <date>
      hb_version( HB_V_TIME )           => <string>
      hb_version( HB_V_PCODE )          => <num>
      hb_version( HB_V_PCODE_STR )      => <string>
      hb_version( HB_V_CHANGELOG_LAST ) => <string>
      hb_version( HB_V_CHANGELOG_REV )  => <string>
      hb_version( HB_V_FLAG_HARBOUR )   => <string>
      hb_version( HB_V_FLAG_C )         => <string>
      hb_version( HB_V_FLAG_LINKER )    => <string>
      hb_version( HB_V_BITWIDTH )       => <num>
      hb_version( HB_V_ENDIANNESS )     => <num>
      This function makes deprecated following functions:
      - HB_COMPILER() => hb_version( HB_V_COMPILER )
      - HB_PCODEVER() => hb_version( HB_V_PCODE_VER_STR )
      - HB_BUILDDATE() => hb_version( HB_V_DATE_TIME )
      and macros:
      - __ARCH16BIT__
      - __ARCH32BIT__
      - __ARCH64BIT__
      - __LITTLE_ENDIAN__
      - __BIG_ENDIAN__
      - __PDP_ENDIAN__
      - HB_VER_SVNID
      - HB_VER_CHLID
      - HB_VER_LENTRY
      - HB_VER_C_USR
    ; NOTE: If there are no objections, I'd remove the
            __ARCH*BIT__ and __*ENDIAN__ predefined macros,
            as these can be misleading on some systems.
    ; TODO: Implement HB_V_DATE and HB_V_TIME. [DONE]
    ; TODO: Add HB_MTVM() functionality. [DONE]
    ; TODO: Add __PLATFORM__* equivalent. [DONE]
    ; TODO: Add HB_OS_UNIX_COMPATIBLE equivalent. [DONE]

  * include/hbextern.ch
  * include/hbapifs.h
  * common.mak
  * source/rtl/Makefile
  + source/rtl/fscopy.c
    + Added C level hb_fsCopy() function.
    + Added .prg level HB_FCOPY() function.

2008-10-28 00:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/vm/cmdarg.c
    + Added HB_CMDLINE() .prg level function to return
      the full command line. Currently it does reassemble
      it from hb_argc/hb_argv.

  * contrib/rddsql/mysqldd.c
    ! Fixed MSVC casting errors in C++ mode.

  * include/hbwmain.c
  * source/vm/cmdarg.c
    * Moved argv[ 0 ] generation on Windows platform, so
      that it now gets properly filled with the full
      executable file path for console mode (GTWIN)
      apps in all situations (f.e. when run from a
      batch file using '%~n1.exe' macro).

  * source/rtl/hbinet.c
    ! Fixed to use safe strerror() (named strerror_s())
      under MSVS 2005 and upper.
      Please test.

  * source/hbzlib/gzio.c
    + Added _CRT_SECURE_NO_DEPRECATE locally to suppress
      various MSVC unsafe CRT API usage warnings. Maybe it'd
      be better to fix these by using Harbour APIs.

  * utils/hbdoc/gentrf.prg
    ! Fixed missing "common.ch"

2008-10-27 23:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmysql/tmysql.prg
  * contrib/xhb/hbcompat.ch
  * contrib/xhb/dirrec.prg
  * contrib/xhb/txml.prg
  * contrib/xhb/hblog.prg
  * contrib/xhb/cstruct.prg
  * contrib/hbodbc/todbc.prg
  * contrib/hbtpathy/telepath.prg
  * contrib/hbmsql/tmsql.prg
  * contrib/hbpgsql/tpostgre.prg
  * contrib/hbgd/gd.prg
  * contrib/hbgd/gdimage.prg
  * contrib/hbgd/gdbarcod.prg
  * contrib/hbgd/gdchart.prg
  * contrib/hbgd/gdbar.prg
  * contrib/hbmisc/stringp.prg
  * contrib/hbtip/thtml.prg
  * contrib/hbtip/popcln.prg
  * contrib/hbtip/sendmail.prg
  * contrib/hbtip/cgi.prg
  * contrib/hbtip/httpcln.prg
  * contrib/hbtip/encoder.prg
  * contrib/hbtip/smtpcln.prg
  * contrib/hbtip/mail.prg
  * contrib/hbtip/ftpcln.prg
  * contrib/hbwin/win_reg.prg
  * contrib/hbwin/win_tole.prg
  * source/rdd/usrrdd/rdds/arrayrdd.prg
  * source/rdd/usrrdd/rdds/hscdx.prg
  * source/rdd/usrrdd/rdds/rlcdx.prg
  * utils/hbdoc/genos2.prg
  * utils/hbdoc/genng.prg
  * utils/hbdoc/genchm.prg
  * utils/hbdoc/genhtm.prg
  * utils/hbdoc/genrtf.prg
  * utils/hbdoc/gentrf.prg
  * utils/hbmake/hbmake.prg
    % 'ValType() == "?"' -> IS*()
    % *trim( Str() ) -> hb_NToS()
    ; In few places in hbtip the length limit
      was removed from Str(), as it was used
      inconsistently and could also cause
      infinite loops and invalid filenames.
    % Some other minor updates.

2008-10-27 22:39 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/db_brows.prg
  * contrib/hbmysql/tmysql.prg
  * contrib/hbnf/miltime.prg
  * contrib/hbnf/mouse1.prg
  * contrib/hbnf/sleep.prg
  * contrib/hbnf/d2e.prg
  * contrib/hbnf/easter.prg
    * '&&' comments changed to '//' for all Harbour SVN.

  * contrib/gtwvg/wvgclass.prg
  * source/rdd/hbsix/sxcompat.prg
    ! Fixed '&&' being used instead of '.AND.' in code.
    ; NOTE: This '&&' comment compatibility is a lot more
            dangerous than it's useful. It'd vote for
            a compiler warnings switch for any of it's
            occurences.
      [TOMERGE 1.0]

  * source/rtl/tbcolumn.prg
  * source/rtl/tget.prg
  * source/rtl/tbrowse.prg
  * contrib/xhb/hbcompat.ch
    ! Fixed '&&' being used instead of '.AND.' in #ifs.
      [TOMERGE 1.0]

  * source/rdd/hbsix/sxini.prg
  * source/rdd/hbsix/sxcompat.prg
  * source/rdd/hbsix/sxtrig.prg
    * 'end' -> 'endswitch'
    % 'ValType() == "x"' -> 'IS*()'
    ; TODO: Reformat to Harbour standards. [DONE]

2008-10-27 21:43 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/Makefile
  * contrib/make_vc_all.bat
  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
    + Added rddsql to default builds.
      Please test.

  * contrib/hbdbgfx/dbgfxc.c
    * Added TODO. (multiplatform support in one the functions)

  * include/hbsetup.h
  * include/hbexprb.c
  * contrib/hbct/ctnet.c
  * contrib/hbct/color.c
  * contrib/hbct/dattime2.c
  * contrib/xhb/hboutdbg.c
  * contrib/hbtpathy/tpwin32.c
  * contrib/hbmzip/hbmzip.c
  * contrib/hbsqlit3/hbsqlit3.c
  * contrib/hbfbird/firebird.c
  * contrib/hbziparc/hbzipcpp.old
  * contrib/hbnf/getver.c
  * contrib/hbpgsql/postgres.c
  * contrib/hbclipsm/gauge.c
  * contrib/rddads/adsfunc.c
  * contrib/rddads/ads1.c
  * contrib/hbgd/gdwrp.c
  * contrib/hbmisc/spd.c
  * contrib/hbtip/utils.c
  * contrib/hbwin/win_prt.c
  * contrib/examples/pp/hbppcore.c
  * contrib/examples/pp/hbppcomp.c
  * source/pp/pplib.c
  * source/pp/ppcore.c
  * source/pp/hbpp.c
  * source/vm/estack.c
  * source/vm/debug.c
  * source/vm/itemapi.c
  * source/vm/hvm.c
  * source/vm/cmdarg.c
  * source/vm/fm.c
  * source/vm/extrap.c
  * source/vm/classes.c
  * source/main/harbour.c
  * source/common/hbver.c
  * source/common/hbverdsp.c
  * source/common/hbstr.c
  * source/common/hbdate.c
  * source/rtl/gtxwc/gtxwc.c
  * source/rtl/hbgtcore.c
  * source/rtl/gtcrs/gtcrs.c
  * source/rtl/errorint.c
  * source/rtl/gtsln/gtsln.c
  * source/rtl/gttrm/gttrm.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/fkmax.c
  * source/rtl/langapi.c
  * source/rtl/hbffind.c
  * source/rdd/workarea.c
  * source/rdd/sdf1.c
  * source/rdd/delim1.c
  * source/rdd/dbf1.c
  * source/rdd/wafunc.c
  * source/compiler/hbmain.c
  * source/compiler/cmdcheck.c
  * source/compiler/hbpcode.c
  * source/compiler/genhrb.c
  * source/compiler/gencobj.c
  * source/compiler/genobj32.c
  * source/compiler/genc.c
  * source/compiler/hbusage.c
  * source/compiler/hbfunchk.c
  * source/compiler/hbgenerr.c
  * utils/hbmake/hbmgauge.c
    * Changed snprintf() calls to hb_snprintf().
    ; TODO: Finish the mappings in headers. [DONE]

  * tests/wvtext.prg
  * include/inkey.ch
  * source/rtl/gtwvt/gtwvt.c
    * Changed K_HB_RESIZE to HB_K_RESIZE. The reason is
      that we already got a HB_K_MULTICODE code (few lines
      below, I didn't know about it before), and it's better
      to keep consistency with that.

2008-10-27 20:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * config/rules.cf
    * Synced Harbour flags with non-GNU make.
      (added -gc3, -l)

2008-10-27 20:06 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/setkey.c
    ! fixed GPF in HB_SETKEYGET() when bActive block is used

2008-10-27 18:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/pp/ppcore.c
    - Removed duplicate TEXTHIDDEN #pragma implementation.

  * source/vm/arrayshb.c
    * Reset defaults of last parameters of hb_AINS()/hb_ADEL().

2008-10-27 18:05 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbdefs.h
    + added HB_PRINTF_FORMAT() macro to declare functions with printf()
      like formatting parameters - now it works only for GCC compilers.

  * harbour/include/hbapi.h
    * declare hb_snprintf() with HB_PRINTF_FORMAT() attribute

  * harbour/source/rtl/philes.c
    + set FERROR() in HB_FLOCK()/HB_FUNLOCK()
    + accept extended lock attributes (WAIT/SHARE) in HB_FLOCK()

2008-10-27 15:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/gencc.c
    ! Fixed -gc3 double number handling problem (on non-Intel CPUs).
      Many thanks to Przemek for the fix.
      [TOMERGE 1.0]

2008-10-27 15:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tbrowse.prg
  * source/debug/debugger.prg
    ! Cleaned hb_AINS()/hb_ADEL() usage after changing the
      default of the last parameter.
      Should fix the recent TBrowse() crash.
    ; NOTE: I'll rethink the defaulting situation at least
            for hb_AINS().

2008-10-27 14:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/philes.c
    + Added HB_FLOCK() / HB_FUNLOCK() file locking
      functions.
      [TOMERGE 1.0]

  * source/rtl/tget.prg
    ! Accessing of Get() variables below made
      C5.x compatible when a new value was
      assigned to them as function call, rather
      then normal assigment.
      :buffer, :changed, :clear, :col, :colorSpec
      :minus, :pos, :row, :subScript, :postBlock,
      :preBlock, :cargo, :exitState, :reader.
    ; NOTE: Please report if any of the side cases
            still don't work.
      [TOMERGE 1.0]

2008-10-27 12:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
  * contrib/mtpl_vc.mak
    - Removed no longer necessary '-D_CRT_SECURE_NO_DEPRECATE'
      for MSVS 2005 and upper.

  * include/hbsetup.h
    * Mapping snprintf() calls to hb_snprintf().
    ; TODO: Replace the calls in source code. [DONE]

  * source/common/hbstr.c
    ! Fixed hb_snprintf(). Please verify on your platforms.
    ; TODO: It may need further tweaking to smooth out the
            platform implementation differences.

2008-10-27 11:29 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapi.h
  * source/common/hbstr.c
    + Added return value to hb_snprintf().

2008-10-27 11:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbstr.c
    * Some tweaks to hb_snprintf(). It still doesn't work
      for some reason.

  * include/hbapi.h
    + Added hb_snprintf() to header.

  * source/debug/dbgentry.c
    * Changed strcpy() to hb_strncpy(). Chances are high
      this is wrong. Please review and test.

2008-10-27 10:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/pp/ppcore.c
    + Added '#pragma TEXTHIDDEN=<ON | OFF>' to control the
      existing -texthidden option to add light encoding to
      strings embedded in code. Since this goes with a slight
      performance hit and it's rarely used, it might be useful
      to turn it on only for code parts that really needs this.

  * source/rtl/tget.prg
    * Corrected an assigment to follow official syntax.

2008-10-27 00:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbver.c
    * Changed to include bitness even for DJGPP.
    * Changed "(* bit)" to "(*-bit)"
    ; NOTE: We have __ARCH*BIT__ but this macro is misleading
            and cannot be used properly on platforms where the
            compiler is able to generate multiple targets in
            one build pass. Such system is Darwin/OSX.
            I'd suggest to consider removing this macro, and
            rather adding a function to return bitness.
            Any opininons?

2008-10-26 22:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbfopen.c
    * Changed hb_fopen() to use fopen_s(), secure version of
      fopen() for MSVS 2005 and upper.

  * source/common/hbstr.c
    + Added hb_snprintf() Harbour wrapper for snprintf() which
      terminates the buffer with a '\0' char for CRTLs that
      need this (like MSVC).
      MSVC _snprintf() doesn't do so.
    * hb_snprintf() used _snprintf_s(), secure version of
      _snprintf() for MSVS 2005 and upper.
    ; TOFIX: There is still one strcpy() marked as non-secure
             in debug lib. Could someone please take a look
             at it and replace it with hb_strncpy() or something
             else secure? The code is cryptic and as someone
             not using the debugger, I didn't dare to touch it,
             and this is the only one such call left. [DONE - TOVERIFY]
    ; TODO: Change all snprintf() calls to hb_snprintf().
            When that happens, Harbour will no more use anything
            depicted as "non-secure" by MSVS 2005/2008. [DONE]
    ; NOTE: This function may need tweaking, pls review and
            fix if/where needed.

  * source/vm/dlmalloc.c
    ! Fixed MSVC C++ mode compile error. This fix also exists
      as part of the next dlmalloc version (2.8.4b).

2008-10-26 07:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbdbgfx/dbgfx.prg
    * Minor cleanup.

  * contrib/hbdbgfx/dbgfxc.c
    ! Fixed GPF when non-string parameter passed to
      hb_outdebug().

2008-10-25 19:10 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbdbgfx/dbgfxc.c
    + HB_FUNC( HB_OUTDEBUG ).
      May be I am missing something. Please correct.

2008-10-25 17:55 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/include/hbgtinfo.ch
    + Added HB_GTI_SETPOS_XY
    + Added HB_GTI_SETPOS_ROWCOL

  * harbour/rtl/gtwvt/gtwvt.c
    ! Updated to honor HB_GTI_SETPOS_XY | HB_GTI_SETPOS_ROWCOL commands.

  * harbour/tests/wvtext.prg
    ! Updated to demonstrate HB_GTI_SETPOS_XY|ROWCOL window positioning.

    ; Now every next browser window opens 20x20 pixels away from
      previous window, a GT imposed Z-Order.

2008-10-25 14:49 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/rtl/gtwvt/gtwvt.h
    + Added <ResizeMode> member to HB_GTWVT

  * harbour/include/hbgtinfo.ch
    + Added HB_GTI_RESIZEMODE
    + Added HB_GTI_RESIZEMODE_FONT
    + Added HB_GTI_RESIZEMODE_ROWS

  * harbour/include/inkey.ch
    + Added K_HB_RESIZE  1101

  * harbour/rtl/gtwvt/gtwvt.c
    ! Updated to accomodate HB_GTI_RESIZEMODE.

  * harbour/rtl/hbgtcore.c
    ! static BOOL hb_gt_def_Info( PHB_GT pGT, int iType, PHB_GT_INFO pInfo )
      {
         case HB_GTI_RESIZEMODE:
            pInfo->pResult = hb_itemPutNInt( pInfo->pResult, HB_GTI_RESIZEMODE_FONT );
            break;

  * harbour/tests/wvtext.prg
    ! Updated to demonstrate K_HB_RESIZE event in navigation loop.
    ; Odd numbered windows will have HB_GTI_RESIZEMODE_ROWS mode
      Even numbered windows will have HB_GTI_RESIZEMODE_FONT mode.
      Open two or more browsers to see the effects.

    ; To activate HB_GTI_RESIZEMODE_ROWS mode call
         hb_gtInfo( HB_GTI_RESIZEMODE, HB_GTI_RESIZEMODE_ROWS )
      and whenever window will be resized you can retrieve it via
         if inkey() == K_HB_RESIZE
            // Reconfigure browser/your screen accordingly
         endif

2008-10-25 09:35 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
    ! Updated to honor latest changes in GTWVT.

2008-10-25 12:58 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtwvt/gtwvt.h
  * harbour/source/rtl/gtwvt/gtwvt.c
    * eliminated few static variables
    ! fixed possible race condition when new window is created by adding
      mutex protection

2008-10-24 13:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/arrayshb.c
    * Changed the default for the last logical parameter of
      HB_AINS()/HB_ADEL() to be .T.
      This way there is no need to pass this parameter if someone
      wants to actually use the extended nature of these functions.
      Passing a .F. will result in equivalent functionality to
      AINS()/ADEL(). Essentially the last parameter is just there
      for compatibility.

2008-10-24 12:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added recent .prg level functions.

2008-10-24 12:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtxwc/gtxwc.c
    * added hack for problems with some XLIB versions in heavy stress
      MT tests

  * harbour/include/hbapigt.h
  * harbour/source/vm/thread.c
    * added parameter to hb_gtAlloc() C function

  * harbour/include/hbapigt.h
  * harbour/source/rtl/hbgtcore.c
    + added hb_gtCreate() and hb_gtSwap() C functions
    + added new .prg functions:
         HB_GTCREATE( <cGtName> ) -> <pGT>
         HB_GTSELECT( <pGT> ) -> <pPrevGT>
      Using this functions is possible to create many console window
      if GT supports such possibilities (f.e. GTXWC or GTWVT) even in
      single thread programs and switch between them.

  * harbour/source/rtl/box.c
    ! fixed one of recent DISPBOX() modifications - it should use:
      hb_gtBoxEx() instead of hb_gtDrawBox() to set cursor position.

  + harbour/tests/gtwin.prg
    + added demonstration/test code for using more then one console window
      also in single thread programs.

2008-10-24 10:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/arrayshb.c
    % Removed unnecessary pcount() calls.

2008-10-24 09:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/hbcompat.ch
    + Added a few MT related translations.
    * Some cleanup.

2008-10-23 14:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcurl/hbcurl.c
    ! Fixed compilation against libcurl 7.16.1.
    ; Untested.

2008-10-23 12:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/mtpl_vc.mak
    ! Fixed MSVC not rebuilding .prg files after changing them.
      Current solution is to simply delete the intermediate .c
      file after C compiler returned. This also saves space,
      so even if it's a hack, it might be good to add this
      for other build paths.

2008-10-23 12:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
    ! Changed '!' (non-working) echo supression char to '@'.

  * contrib/mtpl_b32.mak
  * contrib/mtpl_vc.mak
    % Changed to create the obj dir as a separate build rule
      (just like for core) rather than for each file.

2008-10-23 12:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_vc.mak
    * "IF EXIST" -> "if exist" for consistency.
    * "-" echo supression char consistently changed to "@",
      and added where it was missing (for 'if exist' commands).

  * make_vc.mak
    % Cleaned WinCE C options from unnecessary quotes.
    % Minor opt in .dll flag assembly.
    % Some commented options removed.
    * WinCE LDFLAGS uppercase to lowercase.
    % Minor opt in non-WinCE LDFLAGSDLL assembly.

  * source/rtl/gtwvt/gtwvt.c
    * Minor formatting.

2008-10-22 20:58 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Yet another cosmetic change to demonstrate Fonts and Size of the windows.

2008-10-22 20:45 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Minor change to change the color pallet of <Next Gets> screen.

2008-10-22 20:11 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/gtwvg/gtwvg.h
  * harbour/contrib/gtwvg/wvgpaint.prg
  * harbour/contrib/gtwvg/tests/demowvg.prg
    ! Updated to current GTWVT changes for multi-windows support.
    ; NOTE: Compile demowvg.prg with -d__MW__ and execute repeatedly
     <Traditonal><Next Gets | Browser>. Also paly with other parts as usual.

2008-10-23 04:39 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtwvt/gtwvt.c
    * removed unnecessary initialization

  * harbour/contrib/hbct/screen2.c
    * removed unused variable

2008-10-23 04:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtapi.c
    * LOCK/UNLOCK GT in hb_gtBeginWrite()/hb_gtEndWrite()

  * harbour/contrib/hbct/showtime.prg
    ! added missing common.ch

  * harbour/contrib/hbct/screen2.c
    % use hb_gtPutText() in _HB_CTDSPTIME()

  * harbour/contrib/hbct/screen1.c
    * forrmatting

2008-10-23 04:01 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gtxwc/gtxwc.h
  * harbour/source/rtl/gtxwc/gtxwc.c
    ! use XInitThreads() for MT safe thread access when linked with MT HVM
    + added optional mutex protection enabled by HB_XWC_XLIB_NEEDLOCKS macro
      to use when XLib does not support XInitThreads()

2008-10-22 20:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    ! Fix to previous change. (MT and GUI status was reset in the loop).

  * bin/hbmk.bat
  * bin/hbmk_os2.cmd
    ! Help message corrections.

  * bin/hbmk.bat
  * make_vc.mak
  * config/w32/msvc.cf
  * config/w32/msvcce.cf
    * Using lowercase linker options for MSVC. Just for consistency.
    * Using '/' as a switch char for MSVC linker. This works fo all
      old version.

  * contrib/mtpl_vc.mak
    * Minor formatting.

2008-10-22 19:52 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/gttrm/gttrm.c
    * use CP437 for BOX characters when terminal is in UTF-8 mode

2008-10-22 19:13 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed memory allocation in HB_THREADWAIT() when more then 16
      threads were specified

2008-10-22 17:45 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hbmk.bat
    * simple modification to make beginning hbmk parameters (-mt and -gui)
      position independent though they still have to be used before Harbour/
      C compiler switches and filenames

  * harbour/source/common/hbdate.c
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/rtl/filesys.c
  * harbour/source/rtl/hbffind.c
    ! use MT safe localtime_r() function if it's available instead of
      localtime()
      TODO: clean the usage of this function and gmttime[_r]() probably
      by adding our own wrappers.

  * harbour/source/rtl/hbffind.c
    ! disabled calls to tzset() - this function should be executed
      automatically by CRTL only if it's necessary. It's also not MT
      safe and can cause MT applications crash.

2008-10-22 17:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    * Minor.

  * contrib/rddsql/mysqldd.c
    ! Fixed one warning.

  * contrib/rddads/adsx.c
    ! Fixed codepage/MT related compile error.
    ! Some warnings.
    ! svn:keywords, svn:eol-style

2008-10-22 17:17 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  + contrib/rddads/adsx.c
    + added implementation of local indexing support for ADS driver.
      Local indexing is used in case server can not do index
      creation, for example: index key depends on relation child area
      fields, index key uses user defined functions, index is created
      using codeblock, but not expression, etc.
    ; This code implements no update index! Partial index update could
      also be implemented, but I didn't have a need for this. Besides
      that partial index implementation will be a little more
      complicated than in other RDD. Database update operations are
      not done in a single goCold() method. So, index update should
      be called, from many methods: append(), putValue(), delete(),
      recall(), etc., or ADS RDD structure should be changed to
      support real goCold(). For implementation of partial index,
      I'd suggest to use tree index (instead of a simple sorted array
      and binary search). B-tree code could be found in
      contrib/rddsql/sqlmix.c.
    ; Please check makefiles, and other compilers, platforms.

2008-10-22 14:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk_os2.cmd
    + Added support for HB_MT=yes.
    + Added support for -mt switch.

  * bin/hbmk.bat
    ! Typo in help screen.

2008-10-22 16:00 UTC+0300 Mindaugas Kavaliauskas (dbtopas/at/dbtopas.lt)
  * contrib/rddsql/hbsqldd.h
  * contrib/rddsql/sqlbase.c
  * contrib/rddsql/sqlmix.c
  * contrib/rddsql/mysqldd.c
    * Finished implementation of national sorting support
    * converted // comments to /* */
    * translated lithuanian comments to english
    * updated startup code
    * fixed BYTE * val -> BYTE val[1]

2008-10-22 14:51 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hbmk.bat
    + Added support for 'set HB_GUI=yes'
      Currently implemented for BCC32 and MSVC.
    + Added support for 'set HB_MT=yes' (instead of 'MT')
      for consistency. MT seems to be an xhb heritage and
      it may be removed in the future.
    + Added support for optional -mt switch as an equivalent
      to 'set HB_MT=yes'
    + Added support for optional -gui switch as an equivalent
      to 'set HB_GUI=yes'
    ; NOTE: Ordering (first -mt, then -gui) and casing (everything
            is lowercase) of the above options are significant.

  * bin/hbmk.bat
  * bin/hbmk_os2.cmd
    * Help screen cleanup.

  * contrib/gtwvg/tests/bld_vc.bat
  * contrib/gtwvg/tests/bld_b32.bat
    * Changed to use HB_GUI=yes instead of C_USR/L_USR.

2008-10-22 14:08 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/rto_get.prg
    + Added tests for assigments as function calls (o:col( 10 )
      and some for assigments as _function calls (o:_col( 10 )).

  * bin/hbmk.bat
  * make_vc.mak
    - Removed /subsystem:console from LDFLAGS. This seems to
      be the default so it's not necessary.

  * bin/hbmk.bat
    + Added L_USR support for MSVC. Now it's possible to
      build GUI (and GTWVT) programs using
      'set L_USR=/subsystem:WINDOWS' switch.

  * contrib/gtwvg/tests/bld_vc.bat
    ! Using above method to make it work with MSVC.

2008-10-22 12:09 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/wvtext.prg
    ! Fixed GT selection code.

  * contrib/rddsql/mysqldd.c
    + Added ugly hack to make it compile with MSVC.
    ! Fixed MSVC 64-bit warning.

  * source/rtl/gtapi.c
    * Minor formatting.

2008-10-22 23:01 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/tests/wvtext.prg
    Updated to demonstrate multi-windows GT capabilities.

    A REMINDER : This development alone places Harbour much higher than
                 so many dialects. Mind-blowing feature. I had ever longed
                 for this functionality since I started with Xbase++.
                 But the ease of use of a MW-GT in Harbour is far superior
                 than in Xbase++. Spread this word. I am sure this feature
                 alone is going to add a handsome value to my applications.
                 I hope you all will be benefitted.

                 I have no word of appreciation for Przemyslaw Czerpak as
                 whatever I will say will fall short of weight. So...

2008-10-22 05:03 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/include/hbgtcore.h
  * harbour/include/hbthread.h
  * harbour/include/hbapigt.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/hvm.c
  * harbour/source/vm/thread.c
  * harbour/source/rtl/hbgtcore.c
    + added support for optional allocating independent console window by
      each thread. By default new thread inherits console Window from
      parent thread. But each thread can allocate its own console window
      by calling hb_gtReload( <cGtName> ) function, f.e. by:
         hb_gtReload( hb_gtVersion() )
      If GT driver supports such functionality then new it will allocate
      new console windows.
      Each console window has reference counter which is increased when
      new thread starts and decreased when hb_gtReload() is executed or
      thread terminates. When counter reach zero give console window is
      destroyed.

  * harbour/source/rtl/gtwvt/gtwvt.c
    ! use SendNotifyMessage() instead of SendMessage() to not block
      threads which inherited GT from parent thread. Why non of MS-Win
      users reported this problem?
    + added reference counter to window class for multi GT support

  + harbour/tests/mt/mttest10.prg
    + added demonstration/test code for using independent console window
      in different threads. It needs GT driver which supports such
      functionality, f.e GTXWC in *nixes or GTWVT in MS-Windows

  * harbour/tests/mt/mttest09.prg
    ! fixed typo in comment

2008-10-21 17:19 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * source/debug/debugger.prg
    ! Fixed error when moving in the call stack window to an source prg
      not included in the path, and a ::oWndVars (Monitor of vars) is opened.

2008-10-21 22:18 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapigt.h
  * harbour/source/rtl/console.c
  * harbour/source/rtl/filesys.c
    * use HB_STD{IN,OUT,ERR}_HANDLE macros instead of hard coded values

  * harbour/include/hbgtcore.h
  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/gtapi.c
    + added optional support for dynamic supertables
    + added reference counter to HB_GT_BASE structure
    - removed hb_gtUnLoad() function
    + added hb_gtAlloc(), hb_gtRelease(), hb_gtAttach()
    + added hb_gtRealod() function which unloads current GT driver
      and loads given new one
    + added .prg function HB_GTRELOAD( <cGtName> ) -> <lSuccess>
      This function allow to switch active GT driver at run time.
      It can be also used to simulate removed HB_NOSTARTUPWINDOW()
      functionality. F.e.:

         REQUEST HB_GT_WVT
         REQUEST HB_GT_NUL_DEFAULT
         proc main()
            // do some initializations...
            hb_gtReload( "WVT" )
            // rest of code...
         return

      Please remember that some GTs may refuse initialization due to
      missing required resources and instead of return FALSE they can
      interrupt program with internal error, just like at application
      startup so it's not guarantied that this function always returns.

  * harbour/contrib/hbct/ctwin.c
    * updated for new GT API
    + added support for dynamic supertable to allow using CTWIN in the
      same time with different GTs.

  * harbour/contrib/xhb/hbcompat.h
    - removed hb_retclenAdoptRaw translation

2008-10-21 14:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/box.c
    ! Fixed GPF in hb_dispBox() when box drawing chars
      were not passed.

2008-10-21 13:17 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/xhb/hbcompat.ch
  * contrib/xhb/hbcompat.h
    + added compatibilities.
  * include/fileio.ch
  * source/rtl/filesys.c
    * minor sintax correction.

2008-10-21 09:35 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/console.c
    ! Fixed typo in hb_dispoutAt() numeric color handling.

  * source/rtl/box.c
    * Minor formatting.

2008-10-21 08:29 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/rddsql
  + contrib/rddsql/common.mak
  + contrib/rddsql/tests
  + contrib/rddsql/tests/test1.prg
  + contrib/rddsql/tests/bld_b32.bat
  + contrib/rddsql/tests/bld_vc.bat
  + contrib/rddsql/Makefile
  + contrib/rddsql/make_b32.bat
  + contrib/rddsql/make_vc.bat
  + contrib/rddsql/make_gcc.sh
  + contrib/rddsql/mysqldd.c
  + contrib/rddsql/sqlbase.c
  + contrib/rddsql/sqlmix.c
  + contrib/rddsql/hbsqldd.h
    + Added SQL RDD sent to the list by Mindaugas.
    * Changed strcpy(), unused vars, startup code,
      added make files, fixed all MSVS/BCC warnings,
      other minor cleanups.
    * Changed 'BYTE val[]' to 'BYTE * val' in struct decl.
    ; TOFIX: It doesn't compile on MSVC due to this error:
             .\mysqldd.c(65) : fatal error C1017: invalid integer constant expression
             [DONE]

  * ChangeLog
    + Marked one change as TOMERGE.

  * contrib/hbdbgfx/dbgfxc.c
    * Minor cleanup.

  * source/vm/harbinit.prg
    * Minor.

  * source/rtl/xhelp.c
    ! Typo in comment.

  * source/rtl/valtoexp.prg
  * source/rtl/alert.prg
    * {|| ... } -> {||...} for consistency along Harbour.

2008-10-21 02:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/source/lang/Makefile
  + harbour/source/lang/msgptiso.c
    + added PTISO lang module

  * harbour/source/lang/msgpt.c
    * formatting

  * harbour/contrib/hbct/ctwin.c
    ! fixed restoring active window after executing CTWIN alert()
      with window 0 active

2008-10-20 21:16 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbct/ctwin.c
    * moved internal CTW data to structure allocated dynamically and
      hold by inside current thread GT (HB_GT) to eliminate static
      variables used by GTCTW. Now each thread can have its own
      independent set of CTWindows if it allocated new GT.

  * harbour/contrib/hbct/tests/ctwtest.prg
    * removed two unused local variables

2008-10-20 12:06 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * source/debug/debugger.prg
    ! Fixed error when selecting "Restore Settings" and the current prg source
      is not in the "path for Files" option. (NIL ::oBrwText at line 1478 on
      debugger.prg)

2008-10-20 17:26 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/filebuf.c
    ! fixed bad typo in lock table resizing

  * harbour/source/rdd/hbsix/sxcompr.c
    ! fixed ring buffer initialization in Sx_Compress()

2008-10-20 08:39 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbdbgfx/Makefile
  * contrib/hbdbgfx/common.mak
  + contrib/hbdbgfx/make_gcc.sh
  * contrib/hbdbgfx/make_b32.bat
  * contrib/hbdbgfx/make_vc.bat
  * contrib/hbdbgfx/hbdbgfx.h
  * contrib/hbdbgfx/dbgfxc.c
  * contrib/hbdbgfx/dbgfx.prg
  * contrib/hbdbgfx/sprintf.prg
    * Some cleanups and fixes.
    ; TOFIX: hb_ToOutDebug() for WinCE/Unicode.
             Maybe adding other platforms.

2008-10-19 20:18 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * source/debug/dbgbrwsr.prg
    ! Fixed out of range error ( BASE/1133 ) when scrolling out the source
      code window and then executing a "run" command.

2008-10-20 01:18 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
    ! added HB_EXPORT to hb_stack*() functions used in -gc3 code
      [TOMERGE 1.0]

2008-10-20 00:25 UTC+0200 Francesco Saverio Giudice (info fsgiudice com)
  * contrib/hbdbgfx
    * contrib/hbdbgfx/dbgfxc.c
    * contrib/hbdbgfx/dbgfxc.prg
    * contrib/hbdbgfx/hbdbgfx.h
      * updated copyright year
        minor corrections

2008-10-20 00:15 UTC+0200 Francesco Saverio Giudice (info fsgiudice com)
  + contrib/hbdbgfx
    + contrib/hbdbgfx/dbgfxc.c
    + contrib/hbdbgfx/dbgfxc.prg
    + contrib/hbdbgfx/hbdbgfx.h
    + contrib/hbdbgfx/sprintf.prg
      + hbdbgfx lib add some functions usefull for debugging purpose:
        hb_ToOutDebug( cMsg, p1, p2, ... )
           that outputs to OutDebug from Microsoft debugview
        HB_ToLogFile( cLogFile, cMsg, p1, p2, ... )
           that outputs to a file
        where cMsg is formatted like printf()
        example:
          hb_ToOutDebug( "fields: name = %s, address = %s", field->name, field->address )
        and some utility functions:
        HB_ToOutDebugOnOff( lOnOff )
        HB_LogFileOnOff( lOnOff )
        HB_EmptyLogFileOnOff( lOnOff )
        Above functions are available either at prg than at C level.
        Actually it is only for window platform.

2008-10-19 23:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_vc.mak
    * Fine tuning latest setting changes. I've rather removed
      -gc3 as contrib default switch. For those contribs where
      speed is critical, this switch should be turned on
      on a per contrib basis.

2008-10-19 09:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/filebuf.c
  * source/rtl/filesys.c
    ! Fixed -W4 warnings.

  * source/rtl/tclass.prg
  * source/rtl/tsymbol.prg
    ! Fixed mistakes in recent commit.

2008-10-19 09:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_vc.mak
    + Made -gc3 switch the default. This will result in
      noticeably faster .prg code execution at the cost of
      a slightly bigger executable. Speaking of the core,
      this can result at maximum 250K of extra executable
      size increase, if the final executable uses _all_
      core .prg functions. Usually though it's much lower
      than that, especially for GUI programs, since the
      majority of core .prg code deals with CUI elements,
      like TBrowse(), TGet(), 5.3 compatible CUI controls,
      .frm and .lbl support, MemoEdit().

  * contrib/examples/dbu/bld_b32.bat
  * contrib/examples/dbu/bld_vc.bat
  * utils/hbdoc/bld_vc.bat
  * utils/hbdoc/bld_b32.bat
  * utils/hbmake/bld_b32.bat
  * utils/hbmake/bld_vc.bat
    + Added -l Harbour switch.

2008-10-19 09:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * include/assert.ch
  * common.mak
  * source/rtl/Makefile
  - source/rtl/strtrim.c
  + source/rtl/hbntos.c
  * contrib/xhb/hbcompat.ch
  * source/debug/dbgthsh.prg
  * source/debug/tbrwtext.prg
  * source/debug/dbgwa.prg
  * source/debug/debugger.prg
  * source/debug/dbgtarr.prg
  * source/rtl/errorsys.prg
  * source/rtl/valtoexp.prg
  * source/rtl/getsys.prg
  * source/rtl/tgetlist.prg
  * source/rtl/browse.prg
  * source/rtl/alert.prg
  * source/rtl/tclass.prg
  * source/rtl/tsymbol.prg
  * source/rtl/tscalar.prg
  * source/rtl/tpersist.prg
  * utils/hbmake/hbmake.prg
  * utils/hbrun/hbrun.prg
    * Renamed hb_N2S() to hb_NToS() which feels more
      natural in Clipper.
      [TOMERGE 1.0] (only the addition of new function hb_NToS())

2008-10-19 00:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/assert.ch
  * contrib/xhb/hbcompat.ch
  * source/debug/tbrwtext.prg
  * source/debug/dbgthsh.prg
  * source/debug/debugger.prg
  * source/debug/dbgwa.prg
  * source/debug/dbgtarr.prg
  * source/rtl/errorsys.prg
  * source/rtl/valtoexp.prg
  * source/rtl/getsys.prg
  * source/rtl/tgetlist.prg
  * source/rtl/browse.prg
  * source/rtl/alert.prg
  * source/rtl/tscalar.prg
  * source/rtl/tpersist.prg
  * utils/hbmake/hbmake.prg
  * utils/hbrun/hbrun.prg
    % Using hb_N2S() instead of LTrim( Str() ) expressions.
    ; NOTE: contribs and hbdoc not touched yet.

2008-10-19 00:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * include/hbextern.ch
  * source/rtl/Makefile
  + source/rtl/strtrim.c
    + Added function HB_N2S( <number> ) -> <string>.
      This is equivalent to LTrim( Str( <number> ) ),
      just faster.

  * source/rtl/dircmd.prg
  * source/rtl/tget.prg
    * Minor cleanup.

2008-10-18 22:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmysql/utils/bld_b32.bat
  * contrib/hbmysql/utils/bld_vc.bat
    * One final missing bld.bat -> hbmk.bat changed done.

  * contrib/hbapollo/readme.txt
    * Minor update.

2008-10-18 22:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/hbcrypt.c
    ! Fixed lower level crypt functions to not do
      zero division on zero length key input.

2008-10-18 21:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbgete.c
    ! Fixed recent warning on Win32 platforms.

  * contrib/xhb/hbcrypt.c
    * Changed to just work instead of RTE-ing if any
      of the params are empty on non-strings. If
      non-string is passed, it's considered as
      empty string.

2008-10-18 16:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - bin/bld.bat
  + bin/hbmk.bat
  - bin/bld_os2.cmd
  + bin/hbmk_os2.cmd
  - bin/bld_b32.bat
  + bin/hbmk_b32.bat
  - bin/bld_vc.bat
  + bin/hbmk_vc.bat
  * tests/bld_b32.bat
  * tests/bld_vc.bat
  * contrib/hbmysql/tests/bld_b32.bat
  * contrib/hbmysql/tests/bld_vc.bat
  * contrib/hbct/tests/bld_b32.bat
  * contrib/hbct/tests/bld_vc.bat
  * contrib/xhb/tests/bld_b32.bat
  * contrib/xhb/tests/bld_vc.bat
  * contrib/hbodbc/tests/bld_b32.bat
  * contrib/hbodbc/tests/bld_vc.bat
  * contrib/hbtpathy/tests/bld_b32.bat
  * contrib/hbtpathy/tests/bld_vc.bat
  * contrib/hbmzip/tests/bld_b32.bat
  * contrib/hbmzip/tests/bld_vc.bat
  * contrib/hbole/tests/bld_b32.bat
  * contrib/hbole/tests/bld_vc.bat
  * contrib/hbsqlit3/tests/bld_b32.bat
  * contrib/hbsqlit3/tests/bld_vc.bat
  * contrib/hbapollo/tests/bld_b32.bat
  * contrib/hbapollo/tests/bld_vc.bat
  * contrib/hbfbird/tests/bld_b32.bat
  * contrib/hbfbird/tests/bld_vc.bat
  * contrib/hbziparc/tests/bld_b32.bat
  * contrib/hbziparc/tests/bld_vc.bat
  * contrib/hbnf/tests/bld_b32.bat
  * contrib/hbnf/tests/bld_vc.bat
  * contrib/hbcurl/tests/bld_b32.bat
  * contrib/hbcurl/tests/bld_vc.bat
  * contrib/hbhpdf/tests/bld_b32.bat
  * contrib/hbhpdf/tests/bld_vc.bat
  * contrib/rddado/tests/bld_b32.bat
  * contrib/rddado/tests/bld_vc.bat
  * contrib/gtwvg/tests/bld_vc.bat
  * contrib/gtwvg/tests/bld_b32.bat
  * contrib/hbpgsql/tests/bld_b32.bat
  * contrib/hbpgsql/tests/bld_vc.bat
  * contrib/hbclipsm/tests/bld_b32.bat
  * contrib/hbclipsm/tests/bld_vc.bat
  * contrib/rddads/tests/bld_b32.bat
  * contrib/rddads/tests/bld_vc.bat
  * contrib/hbfimage/tests/bld_b32.bat
  * contrib/hbfimage/tests/bld_vc.bat
  * contrib/hbgd/tests/bld_vc.bat
  * contrib/hbgd/tests/bld_b32.bat
  * contrib/hbmisc/tests/bld_b32.bat
  * contrib/hbmisc/tests/bld_vc.bat
  * contrib/hbgf/tests/bld_b32.bat
  * contrib/hbgf/tests/bld_vc.bat
  * contrib/hbtip/tests/bld_vc.bat
  * contrib/hbtip/tests/bld_b32.bat
  * contrib/hbwin/tests/bld_b32.bat
  * contrib/hbwin/tests/bld_vc.bat
  * contrib/hbvpdf/tests/bld_b32.bat
  * contrib/hbvpdf/tests/bld_vc.bat
  * contrib/hbwhat/tests/bld_b32.bat
  * contrib/hbwhat/tests/bld_vc.bat
  * contrib/examples/hbsqlit2/tests/bld_b32.bat
  * contrib/examples/hbsqlit2/tests/bld_vc.bat
    * Renamed bin\bld*.* files to bin\hbmk*.*. This
      dir may be put in the path in user environments,
      so it's necessary to put the name into the Harbour
      namespace. The new name is also the one supported
      on *nix/bash platforms, albeit with slightly
      different usage.
      INCOMPATIBLE. Please update your environment.
      To achieve compatbility with older Harbour versions
      and xhb, you can locally add a bld.bat file with
      the content: '@call hbmk.bat %1 %2 %3 %4 %5 %6 %7 %8 %9'

  * source/common/hbgete.c
    * Minor.

2008-10-18 11:39 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/hbgete.c
    * modified hb_getenv_buffer() to return logical value indicating
      that environment variable exists even if no buffer is passed

2008-10-18 10:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    % Harbour command line configuration moved to common.mak.

  * source/rtl/tclass.prg
  * source/rtl/tget.prg
    + NOTE added to tclass.prg.
    * Minor formatting.

2008-10-18 10:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapi.h
  * source/common/hbgete.c
    + Added hb_getenv_buffer(). Similar to hb_getenv() but
      this one needs a buffer+size to be passed, so no memory
      allocation is done by the function. It also return
      a BOOL to signal success. It doesn't signal if passed
      buffer was too small to store the value.

2008-10-18 08:36 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/dbgtwin.prg
  * harbour/source/debug/dbgbrwsr.prg
  * harbour/source/debug/debugger.prg
    ! fixed mono color setting
    * minor formatting

2008-10-17 18:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/dbgtwin.prg
  * source/debug/dbgbrwsr.prg
  * source/debug/tbrwtext.prg
  * source/debug/debugger.prg
    ! Fixed to not crash after switching to mono display.
      DISCLAIMER: This is a quick patch (but even this took
      hours) and it absolutely can be wrong, incomplete in
      any ways. I'm not using or knowing debugger code, pls
      patch it further on.
      NOTE: Color refresh after switching mono/color mode
            is still wrong and I've given up after trying
            for a few hours.
    * Minor formatting.

2008-10-17 16:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/console.c
    ! added missing #include "hbapierr.h"

2008-10-17 15:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/pp/hbpp.c
    * workaround for warning in some GCC versions which can lost
      user casting during function autoinline optimization.

  * harbour/source/rtl/console.c
  * harbour/source/rtl/gtapi.c
    * moved //INFO message from hb_gtInit() to hb_conInit()

  * harbour/source/rtl/hbgtcore.c
  * harbour/contrib/hbct/ctwin.c
    * minor cleanup

2008-10-17 12:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/debugger.prg
    * changed __dbgInput() to return logical value and set edit value in
      variable passed by reference

  * harbour/source/debug/dbgtobj.prg
  * harbour/source/debug/dbgthsh.prg
  * harbour/source/debug/dbgtarr.prg
    ! fixed typo in VALID block declaration - it was array by mistake
    * removed unnecessary code related to GET behavior
    * use new __dbgInput() format

2008-10-17 10:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/dbgtobj.prg
  * source/debug/dbgthsh.prg
  * source/debug/debugger.prg
  * source/debug/dbgtarr.prg
    * Changed rest of GETs to __dbgInput()

  * source/rtl/listbox.prg
    - Removed saving cursor position and color,
      and changing default color.

  ; NOTE: Couldn't replicate Mono display RTE.

2008-10-17 03:13 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/dbgtwin.prg
    * use hb_scroll() instead of scroll()

  * harbour/source/debug/tbrwtext.prg
    ! fixed screen redrawing in horizontal movement

  * harbour/source/debug/debugger.prg
  * harbour/source/debug/dbgtinp.prg
    ! replaced GET/GETLIST objects by HbDbInput()
    ! fixed some interface incompatibilities with Clipper debugger
    * removed HB_NO_READDBG and code using GET classes - HbDbInput()
      works better and is much simpler in use.
    % do not use __GetListActive()/__GetListSetActive() - now debugger
      does not touch GET/GETLIST so it's not necessary to save/restore
      GETLIST state
      Now all references (except HBCLASS) to external .prg code in
      debugger have been removed.
      TODO: remove HB_NO_READDBG from other debugger files replacing
            code inside with __dbgInput()/HbDbInput().
            I would like to leave it for someone else and return to
            core code modifications.

2008-10-17 00:07 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/source/debug/Makefile
  + harbour/source/debug/dbgtinp.prg
    + added HbDbInput class for simple user input (GET)

  * harbour/source/debug/debugger.prg
    ! changed __dbgInput() to use HbDbInput() class instead of ACCEPT
      It fixes all bad visual end edit bad effects caused by ACCEPT.
      TODO: replace all GET references in debugger code with HbDbInput class.

2008-10-16 14:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * make_b32.bat
  * make_b32.mak
  * make_vc.bat
  * make_vc.mak
  * make_gcc.mak
    * HB_BUILD_VERBOSE=yes is now the default. If someone
      is wanting to build Harbour from source and is bothered
      by the compiler command-lines being shown, these can
      be turned off with HB_BUILD_VERBOSE=no.
      These lines are IMO very important to see, which options
      were exactly used when Harbour was built, I personally
      archive these logs along with the builds.

2008-10-16 14:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_vc.mak
    * Changed -b switch to -l-.
      -b debug mode causes more problems than good for Harbour
      core/contrib.

2008-10-16 13:21 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    + Readded -b when HB_BUILD_STATIC=yes.
      Now it should work.

  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_vc.mak
    % Deleted -l- switch when HB_BUILD_STATIC=yes.
      Line numbers are automatically enabled when
      -b switch is used.

  * source/debug/debugger.prg
    * Renamed getdbginput() -> __dbgInput()

  ; NOTE to TOFIX: Do we need "Mono display" these days? :)

2008-10-16 13:08 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/debugger.prg
    + added __dbgAChoice() - simple AChoice() replacement which uses
      internally HBDbBrowser() class
    * replaced AChoice() with __dbgAChoice()
    * replaced @ ... SAY ... by hb_dispOutAt()

2008-10-16 08:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/common.ch
  * contrib/hbziparc/hbziparc.prg
  * source/rtl/tclass.prg
  * source/rtl/hbini.prg
    * Minor formatting. (hb_Is*() -> hb_is*())

  * contrib/hbct/ctrand.prg
  * contrib/hbct/numconv.prg
  * contrib/hbct/cttime.prg
  * contrib/hbct/showtime.prg
  * contrib/hbwhat/hbwhat.ch
  * utils/hbrun/hbrun.prg
  * source/debug/dbgtobj.prg
  * source/debug/dbgbrwsr.prg
  * source/debug/dbgthsh.prg
  * source/debug/dbgtarr.prg
  * source/rtl/alert.prg
  * source/rtl/tbrowse.prg
    % ValType() -> IS*() / hb_is*()

  * contrib/hbwhat/hbwhat.ch
    % Using common.ch instead of replicating logic.
    * Some formatting.

  * utils/hbtest/hbtest.prg
    * Minor formatting.

2008-10-16 08:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwhat/wincore.prg
    ! One STATIC made THREAD STATIC.
    ! STATIC vars renamed to s_*.

2008-10-16 07:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tpersist.prg
  * contrib/hbgd/gd.prg
  * contrib/hbgd/tests/tostring.prg
    * MemoWrit() -> hb_MemoWrit()

  * contrib/hbgd/gd.prg
    ! Fixed potential RTE.

2008-10-16 07:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tpersist.prg
    * MemoWrit() -> hb_MemoWrit()

2008-10-16 07:40 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/achoice.prg
    % Minor optimization.

  * source/rtl/achoice.prg
  * source/rtl/menuto.prg
  * source/rtl/tbrowse.prg
  * source/rtl/tclass.prg
    * Minor formatting.

  * source/rtl/tobject.prg
    * Removed '#pragma DEBUGINFO=OFF' as it's no more
      needed.

  * source/debug/dbgthsh.prg
  * source/debug/debugger.prg
    * Copied hb_CStr() as __dbgCStr() to debug.lib.
    * Changed calls from hb_CStr() to __dbgCStr().

  * source/debug/dbgtmenu.prg
  * source/debug/dbgtwin.prg
  * source/debug/dbgwa.prg
    * Remaining BOX commands changed to hb_dispBox().

  * source/debug/dbghelp.prg
    ! Fixed one hb_dispBox() call with numeric frame parameter.

2008-10-16 04:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/dbgbrwsr.prg
  * harbour/source/debug/dbgtwin.prg
  * harbour/source/debug/tbrwtext.prg
  * harbour/source/debug/dbgwa.prg
  * harbour/source/debug/debugger.prg
  * harbour/source/debug/dbghelp.prg
  * harbour/source/debug/dbgtmenu.prg
  * harbour/source/debug/dbgtmitm.prg
    * use hb_dispOutAt()/hb_dispBox() instead of DispOutAt()/DispBox()
    ! fixed using ADel()/AIns() with xHarbour extended parameters
    ! fixed RT debugger errors caused by missing ::nTabWidth and ::colorSpec
      in HBBrwText class
    ! fixed processing source code with TABs (chr(9))
    ; TOFIX: "Mono Display" causes RT error due to missing color index
             range checking. It also does not change all colors immediately [DONE]
    ; TOFIX: getdbginput(): writing out of window area, scrolling internal
             buffer, cursor navigation, interrupting by ESC

2008-10-16 00:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/dbgtobj.prg
  * harbour/source/debug/dbgbrwsr.prg
  * harbour/source/debug/dbgtwin.prg
  * harbour/source/debug/dbgmenu.prg
  * harbour/source/debug/dbgthsh.prg
  * harbour/source/debug/tbrwtext.prg
  * harbour/source/debug/debugger.prg
  * harbour/source/debug/dbgtarr.prg
  * harbour/source/debug/dbgtmenu.prg
  * harbour/source/debug/dbgtmitm.prg
    * use #define HB_CLS_NOTOBJECT to disable inheritance from HBObject
      in internal debugger classes.
      Here is complete list of other .prg functions still used by hbdebug
      library:
         GET, __GETLISTACTIVE, __GETLISTSETACTIVE, HBGETLIST, ACHOICE,
         HB_CSTR, HBCLASS

2008-10-15 21:33 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/tbrwtext.prg
    ! refresh rows after active line changing for proper color updating

2008-10-15 20:03 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/tbrwtext.prg
    ! fixed vertical navigation to be compatible with old debugger
      and Clipper
    ! fixed horizontal scrolling to the size of maximal line
      not to the size of current line
    % use single call to hb_aTokens() to convert source code into array

2008-10-15 19:08 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/debug/dbgbrwsr.prg
    ! added missing #include "common.ch"
    ! added missing colorBlock variable in HBDBColumn class
    % replaced .prg wrappers for type checking with native
      harbour class type validation

2008-10-15 18:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/tbrwtext.prg
    * Replaced with new implementation from Lorenzo Fiorini.
      Sent to the list on 2008.07.26.
    ; NOTE: Some issue were reported with this, but it's again
            a step into the right direction, please try to update
            this code to better resemble to Clipper and to fix
            possible error. Thanks.
    ; Remaining RTL .prg dependencies:
      - ACHOICE() (just one call)

  * source/debug/debugger.prg
    * Using hb_MemoWrit() instead of MemoWrit()

  * source/rtl/achoice.prg
    % Minor opt.

2008-10-15 17:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/dbgtobj.prg
  * source/debug/dbgbrwsr.prg
  * source/debug/dbgthsh.prg
  * source/debug/debugger.prg
  * source/debug/dbghelp.prg
  * source/debug/dbgtarr.prg
  * source/debug/dbgwa.prg
  * source/debug/dbgtwin.prg
  * source/debug/dbgtmenu.prg
    + Added minimal Alert() clone, named ___dbgAlert().
    + Replaced Alert() with __dbgAlert() calls.
    + Added minimal TBColumn() implementation, named HBDbColumn().
    + Replaced TBColumnNew() with HBDbColumnNew() calls.
    + Enabled HB_NO_READDBG for all sources. This isn't
      perfect, just a step into the right direction.
    ; Please test above modifications.
    ; Remaining RTL .prg dependencies:
      - HBEDITOR()
      - ACHOICE()

  * source/debug/dbgwa.prg
  * source/debug/dbgtwin.prg
  * source/debug/dbgtmenu.prg
    * Formatted to Harbour standards.

  * source/rtl/tobject.prg
  * source/rtl/tclass.prg
    + Added '#pragma DEBUGINFO=OFF'.
    ; NOTE: Maybe it'd be better to rewrite these in .c,
            also for speed. If possible.

  * source/rtl/alert.prg
    ! Minor typo.

2008-10-15 17:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/hvm.c
  * harbour/source/debug/dbgentry.c
  * harbour/source/debug/debugger.prg
    * moved debugRequest flag and debugger internal structure
      pointer to HVM stack
    * allocate debugger internal structure dynamically in thread
      thread local area when PCODE with debug information is executed
    * changed STATIC s_oDebugger to THREAD STATIC
    * send HB_DBG_VMQUIT after each thread termination when
      debugger is activated
      Now debugger can be used in MT programs and each thread can be
      debugged separately (each has its own debuger). Please only
      remember that thread sharing console window can overwrite other
      threads debugger screen. There is also one limitation which I'll
      try to remove later: only main thread debugger keeps information
      about file wide STATIC names and line numbers with possible break
      point places. This data should be shared between debuggers.

2008-10-15 13:32 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/hvm.c
  * harbour/source/vm/estack.c
    * disabled all debugger related bindings and variables when
      HB_NO_DEBUG macro is set
    % moved s_fDebuging to HVM function stack frame to eliminate
      saving/restoring this variable in each function/message call
      Note: if you think it's good to block linking .prg code compiled
            with -b (debugger support) with HVM compiled with HB_NO_DEBUG
            then it's enough to disable whole hb_dbg_SetEntry() function
            in hvm.c when HB_NO_DEBUG macro is set.

2008-10-15 10:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/dirstruc.txt
    * Updated.

2008-10-15 10:09 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    * Removed disabling -b for non-debug builds.
    ; We aim to remove RTL .prg dependencies from hbdebug.lib,
      either by local implementation, .c rewrite, or force
      disabling debug mode in more core files.
      Until this happens, one will have to be careful with
      using -b switch to compile Harbour. These are the core .prg
      modules currently used by hbdebug.lib:
      - HBGETLIST(), GET(), __GET(), __GETLISTACTIVE(), __GETLISTSETACTIVE(), READINSERT(), READMODAL()
      - HBCLASS() [DONE]
      - HBOBJECT() [DONE]
      - HBEDITOR()
      - TBCOLUMNNEW() [DONE]
      - ACHOICE()
      - ALERT() [DONE]

  * source/debug/dbgtobj.prg
  * source/debug/dbgbrwsr.prg
  * source/debug/dbgtwin.prg
  * source/debug/dbgmenu.prg
  * source/debug/dbgthsh.prg
  * source/debug/tbrwtext.prg
  * source/debug/dbgwa.prg
  * source/debug/debugger.prg
  * source/debug/dbghelp.prg
  * source/debug/dbgtarr.prg
  * source/debug/dbgtmenu.prg
  * source/debug/dbgtmitm.prg
    + Readded '#pragma DEBUGINFO=OFF'.

2008-10-15 02:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/langapi.c
  * utils/hbtest/rt_class.prg
    * Cleanup to previous modif.

2008-10-15 01:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/dbgtobj.prg
  * source/debug/dbgbrwsr.prg
  * source/debug/dbgtwin.prg
  * source/debug/dbgmenu.prg
  * source/debug/dbgthsh.prg
  * source/debug/tbrwtext.prg
  * source/debug/dbgwa.prg
  * source/debug/debugger.prg
  * source/debug/dbghelp.prg
  * source/debug/dbgtarr.prg
  * source/debug/dbgtmenu.prg
  * source/debug/dbgtmitm.prg
    - Removed '#pragma DEBUGINFO=OFF'. See solution below.

  * make_b32.mak
  * make_gcc.mak
  * make_vc.mak
    * Forcing -b- (disabling debug info) for all core
      .prg functions. Compiling anything in core with
      -b would cause infinite loops, when trying to use
      the debugger.
      QUESTION: Is HB_NO_READDBG still needed?

2008-10-15 01:40 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - lib/b32
  - lib/vc
  - bin/b32
  - bin/vc
  - obj/b32
  - obj/vc
    - Removed dirs from SVN. They are automatically created
      by the build scripts.

2008-10-15 01:39 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! clear HVM stack return value before use in initialization code

2008-10-15 01:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/dbgtobj.prg
  * source/debug/dbgbrwsr.prg
  * source/debug/dbgtwin.prg
  * source/debug/dbgmenu.prg
  * source/debug/dbgthsh.prg
  * source/debug/tbrwtext.prg
  * source/debug/dbgwa.prg
  * source/debug/debugger.prg
  * source/debug/dbghelp.prg
  * source/debug/dbgtarr.prg
  * source/debug/dbgtmenu.prg
  * source/debug/dbgtmitm.prg
    + Added '#pragma DEBUGINFO=OFF' to debugger
      sources. Otherwise compiling full Harbour with
      -b was causing an infinite loop in app.
      (-b is now default when building with 'HB_BUILD_DEBUG=yes').

  * source/rdd/nulsys/nulsys.c
    ! Added DBSELECTAREA(), DBSTRUCT(), HEADER(),
      RECSIZE(), LUPDATE()
      so that programs can be built with -b and
      hbnulrdd.lib. hbdebug.lib/dgbwa.prg uses
      symbols above.

2008-10-15 00:31 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbxvm.h
  * harbour/source/vm/hvm.c
    - removed to unused functions

  * harbour/source/vm/thread.c
    - removed unnecessary casting

2008-10-14 20:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/dbedit.prg
  * source/rtl/tgetint.prg
  * source/rtl/tlabel.prg
  * source/rtl/treport.prg
    * Changed '&( "{||" + c + "}" )' expressions to
      hb_macroBlock() calls.
      To me these places seemed safe to change, but
      please verify me.

  * source/rtl/alert.prg
  * source/rtl/tbcolumn.prg
  * source/rtl/tget.prg
    * Minor formatting.

2008-10-14 19:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added hb_macroBlock()

  * source/rtl/langapi.c
    * One error text changed to be more precise.

  * doc/gmake.txt
  * bin/bld.bat
  * contrib/hbbtree/tests/bld_vc.bat
  * contrib/examples/pp/bld_vc.bat
  * contrib/examples/guestbk/bld_vc.bat
  * contrib/examples/pe/bld_vc.bat
  * contrib/examples/dbu/bld_vc.bat
  * contrib/examples/hscript/bld_vc.bat
  * utils/hbdoc/bld_vc.bat
  * utils/hbmake/bld_vc.bat
  * utils/hbmake/hbmake.prg
    - Removed MSVC -TP switches.

2008-10-14 11:51 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/macro.c
    * added missing const attribute to hb_macroCompile() parameter
    + added new .prg function:
         hb_macroBlock( <cExpr> ) -> <bCode>
      which converts macro expression to codeblock. New codeblocks
      do not inherit hb_macroBlock() caller scope/attributes.

2008-10-14 08:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/dbu/bld_vc.bat
    ! Removed -TP C option.

2008-10-14 00:02 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/dynlibhb.c
    ! fixed HB_LIBFREE() return value - thanks to Enrico

2008-10-13 22:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/transtst.prg
  * doc/en/string.txt
  * doc/en/compiler.txt
  * doc/en/macro.txt
  * doc/en/browse.txt
  * doc/en/binnum.txt
  * doc/es/macro.txt
  * doc/es/browse.txt
  * doc/es/binnum.txt
  * doc/transfrm.txt
  * doc/whatsnew.txt
  * include/hbclass.ch
  * include/hbmacro.ch
  * include/hbexprb.c
  * ChangeLog
  * contrib/hbvpdf/hbvpdft.prg
  * contrib/hbwhat/import.ch
  * source/vm/macro.c
  * source/rtl/tobject.prg
  * source/rtl/tthreadx.prg
  * source/rtl/transfrm.c
  * source/rtl/tget.prg
  * source/rtl/isprint.c
  * source/rtl/tbrowse.prg
  * source/rdd/wacore.c
  * source/rdd/dbdetach.c
  * utils/hbtest/rt_trans.prg
    * Xbase++ name references cleaned.

  * common.mak
  * source/rdd/Makefile
  * source/rdd/dbdetach.c
  + source/rdd/dbdetacx.c
    * Moved Xbase++ compatibility functions to separate file.

2008-10-13 21:44 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/contrib/hbwin/win_tole.prg
    ! Fixed assignment to oErr:Operation from "+" to "-" in
      OleValueMinus() method - fix by Luis Krause Mantilla borrowed
      from xHarbour

2008-10-13 21:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbwince.h
  * harbour/source/common/hbwince.c
    ! fixed LastError overwriting inside WinCE wrapper functions

2008-10-13 20:21 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/wacore.c
    ; updated comments about Xbase++ behavior in dbRelease()

  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
  * harbour/source/vm/dynlibhb.c
  * harbour/source/vm/runner.c
    ! added MT protection for HB_LIBLOAD()/HB_LIBFREE() and
      HB_HRBLOAD()/HB_HRBUNLOAD(). Please remember that you should
      not use any external LoadLibrary() functions because they are
      not protected for clean PCODE modules loading/unloading even
      in ST mode. Using them can cause HVM internal structure corruption.
      If we have such functions in contrib then they should be redirected
      to our HVM ones.
      There is still one problem in MT mode which has to be resolved yet.
      When dynamic library containing PCODE using static variables
      is loaded 1-st time then it will force resizing of internal array
      with static variables. If in exactly the same moment some other
      thread operates on static variable then it may cause corruption.
      To resolve this problem we will have to divide continuous memory
      block common for all modules where we store all static variables
      into separated blocks bound with each PCODE module (symbol table).

  * harbour/source/vm/dynlibhb.c
    + added support for DLL loading/unloading in OS2 builds.
      Based on xHarbour code by Maurilio Longo - please test.

2008-10-13 20:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmisc/strfmt.c
    ! Fixed GPF when non-string was passed as
      first parameter.

2008-10-13 18:01 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    + added small description for hb_threadOnce() .prg function

  * harbour/include/hbthread.h
    ! do not set TLS in POCC and XCC builds when _MSC_VER macro is set
      This compilers also have this macro but dllspec( thread) does
      not work for them (at least in version 4.50.15)

  * harbour/utils/hbtest/rt_hvm.prg
    + added few tests which exploit by DMC bug. Be careful with
      this compiler. In some cases it gives buggy final code, f.e.
      try this:

            #include <stdio.h>
            typedef struct
            {
               double         dd;
               long long int  ll;
            } UN;
            const char * cmp( UN * pU )
            {
               return pU->dd >= pU->ll ? "OK" : "ERRROR";
            }
            int main( void )
            {
               UN u = { 10.50, 10 };
               printf( "%s\n", cmp( &u ) );
               return 0;
            }

      The same bug can be exploited also by final Harbour binaries
      compiled by DMC in code like:

         ? iif( 10.50 >= 10, "OK", "ERROR" )

      I used DMC 8.42n. As long as such things will not be fixed by
      DMC developers this compiler is not supported by Harbour and
      reported problems with DMC Harbour builds will have to be
      ignored by us.

2008-10-13 16:34 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbclass.ch
  * harbour/source/vm/classes.c
  * harbour/source/rtl/tobject.prg
  * harbour/source/rtl/tclass.prg
    ! fixed race condition when class function is called 1-st time
      and new class is created. It was possible that more then one
      thread execute this function simultaneously and two classes
      identical classes but with different handles were created
      and registered in HVM

  * harbour/contrib/xhb/xhbcomp.prg
    * updated hack with optional inheritance for new class code

2008-10-13 13:51 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_gcc.mak
  * make_vc.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_vc.mak
    + Added -l switch to default Harbour options.
    + Enabling Harbour debug options (-b -l-) when HB_DEBUG_BUILD=yes.

2008-10-13 12:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/gencc.c
    ! fixed thread static variable offsets generated in .c code when
      -gc3 is used

  * harbour/source/vm/hvm.c
    % removed unnecessary call to HB_STACK_TLS_PRELOAD

2008-10-13 12:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/teditor.prg
    ! Typo in previous modification.

  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    ! Minor formatting.

2008-10-13 11:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/teditor.prg
    + Added :LineCount(), :ExitState() methods.
    * Changed to use hb_MemoWrit() to write text content to
      disk, to avoid Chr(26) to be appended.
    ! Fixed :InsertState() to also modify physical cursor state.
    ! Fixed :BrowseText() to not go into an infinite loop in
      view mode.
      [TOMERGE 1.0]

  * source/rtl/memofile.c
    ! Minor formatting.

  * ChangeLog
    ! Fixed yesterday's entry dates.

2008-10-12 20:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapierr.h
    ! Fixed previous casting fix.

  * source/rtl/console.c
  * source/rtl/philes.c
    % Optimized by using static buffers and hb_retc_const():
      HB_OSNEWLINE()
      HB_OSPATHSEPARATOR()
      HB_OSPATHLISTSEPARATOR()
      HB_OSPATHDELIMITERS()
      HB_OSDRIVESEPARATOR()
      HB_OSFILEMASK()

  * source/rtl/filesys.c
    ! hb_fsDisableWaitLocks() made static.

2008-10-12 20:31 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! execute hb_vmThreadQuit() after hb_vmStackRelease()

  * harbour/source/vm/thread.c
    * do not destroy critical sections on exit

2008-10-12 16:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    ! Minor formatting.

  * include/hbapierr.h
    ! Fixed casting in macro HB_ERR_FUNCNAME, as it was
      generating a new warning with MSVC in 64-bit mode.
      '( ( char * ) 1 )' -> '( ( const char * ) NULL + 1 )'
      ('const' keyword was not enough to silence it)

  * include/hbapierr.h
  * source/rtl/errorapi.c
    - Disabled (marked with HB_LEGACY_LEVEL) hb_errFuncName
      symbol. No longer supported, pls use HB_ERR_FUNCNAME
      instead.

2008-10-11 13:40 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
    + Suppress logo for bcc32 and msvc.

2008-10-11 13:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
  * contrib/mtpl_vc.mak
    + Added /nologo to lib commands.

  * source/rtl/fserror.c
    * Minor formatting.

  * ChangeLog
    + Marked change as TOMERGE 1.0.

2008-10-12 13:19 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    * casting cleanup

  * harbour/include/hbapigt.h
  * harbour/source/rtl/gtapi.c
  * harbour/source/rtl/scroll.c
  * harbour/source/rtl/console.c
  * harbour/source/rtl/box.c
    * changed hb_gtDrawBox() and hb_gtPutText() to operate on color
      number (index in some GTs) instead of color string
    * use int as color number (index) in hb_gtScrollEx() hb_gtBoxEx()

  * harbour/source/rtl/box.c
    % changed DISPBOX() with color and frame string to work as one
      GT atomic operation

  * harbour/source/vm/classes.c
    ! fixed profiler usage
      [TOMERGE 1.0]

2008-10-11 21:49 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
  * bin/bld_os2.cmd
    + Enabled cleanup of .c/object/.tds files after build.
    + Under Windows NT OSes, it's now possible to pass full .prg
      name with extension.
    ! Few minor fixes.
    * Formatting, cleanup and help update.
    ; Please test.

2008-10-11 14:49 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/fnsplit.c
  * source/rtl/hbtoken.c
    ! HB_FNAMESPLIT(), HB_TOKENPTR() fixed to
      reset parameters passed by reference in
      error cases.

2008-10-11 13:06 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/tget.prg
    ! fixed cursor positioning when new get item is added.
    ; added note about possible modification - Viktor, please verify it

2008-10-11 11:21 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/common/expropt2.c
    * formatting and minor cleanup

  * harbour/source/rtl/gtapi.c
    % do not set and restore default color set in hb_gtPutText() and
      hb_gtDrawBox() but decode colors from passed string

2008-10-11 11:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + New functions added.

  * source/rtl/alert.prg
    % Minor optimization.
    ; NOTE: Found yet another hidden extension in Alert() code :(
            UPDATE: It's a CT Alert() override extension.

  * source/rtl/radiobtn.prg
    ! Fix and optimization in recent modification.

2008-10-11 04:56 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapigt.h
  * harbour/source/rtl/gtapi.c
    + added C functions hb_gtLock() and hb_gtUnlock()
      They block current GT for other threads

  * harbour/source/rtl/gtfunc.c
    + added PRG functions hb_gtLock() and hb_gtUnlock()
      They block current GT for other threads - be careful using them
      and always unlock locked GT

  * harbour/source/rtl/scroll.c
    + added HB_SCROLL() function - it works like SCROLL() but supports
      2 additional parameters: color and erase char. It's stateless and
      atomic in GT access

  * harbour/source/rtl/tbrowse.prg
    * use HB_SCROLL() instead of SCROLL(). Now whole TBROWSE class
      does not depend on other thread screen output and does not
      set any GT variables except of cursor positioning to active
      cell when it's enabled

  * harbour/source/rtl/memoedit.prg
  * harbour/source/rtl/tgetlist.prg
  * harbour/source/rtl/tlabel.prg
  * harbour/source/rtl/listbox.prg
  * harbour/source/rtl/tmenusys.prg
  * harbour/source/rtl/achoice.prg
  * harbour/source/rtl/profiler.prg
  * harbour/source/rtl/teditor.prg
    * use atomic stateless functions when possible - this code should
      be checked and updated by some who know it.

2008-10-11 03:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/scrollbr.prg
  * harbour/source/rtl/getsys.prg
  * harbour/source/rtl/tpopup.prg
  * harbour/source/rtl/tgetlist.prg
  * harbour/source/rtl/radiogrp.prg
  * harbour/source/rtl/listbox.prg
  * harbour/source/rtl/checkbox.prg
  * harbour/source/rtl/browse.prg
  * harbour/source/rtl/tget.prg
  * harbour/source/rtl/ttopbar.prg
  * harbour/source/rtl/pushbtn.prg
  * harbour/source/rtl/tmenusys.prg
  * harbour/source/rtl/achoice.prg
  * harbour/source/rtl/teditor.prg
  * harbour/source/rtl/radiobtn.prg
  * harbour/source/rtl/tbrowse.prg
    * replaced DispOut() with hb_dispOut()
    * replaced DispBox() with hb_dispBox()
    % removed saving and restoring of cursor position in places where
      it's not longer necessary due to hb_dispOut()/hb_dispBox() usage
    % removed saving and restoring of SetColor() value in places where
      it's not longer necessary due to hb_dispOut()/hb_dispBox() usage
    % removed saving and restoring of MSetCursor(). If it's necessary
      low GT driver should hide and redraw mouse cursor before and after
      screen update. We do not have to make it manually

   The above modification gives faster code and allow to access screen
   from different threads simultaneously because functions like
   hb_dispOut() and hb_dispBox() are stateless and atomic in screen
   access. Not all .prg code has been updated yet. If someone is
   familiar with this code then please help. I'll add yet HB_SCROLL()
   function which will support additionally colors.
   Viktor if possible please verify this modifications.

2008-10-11 03:06 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapigt.h
  * harbour/source/rtl/gtapi.c
    + added hb_gtDrawBox() works like hb_gtBox() but does not change cursor
      posiion and support colors
    + added support for color parameter to hb_gtPutText()

  * harbour/source/rtl/console.c
    * use new hb_gtPutText() format in HB_DISPOUTAT()
      Now all screen operations inside this function is one atomic
      operation for other threads

  * harbour/source/rtl/box.c
    + added HB_DISPBOX() function - works like DISPBOX() bit does not
      change cursor position and is atomic for other threads

  * harbour/include/hbapigt.h
  * harbour/include/hbgtcore.h
  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/gtclip.c
  * harbour/source/rtl/gtdos/gtdos.c
  * harbour/source/rtl/gtwin/gtwin.c
  * harbour/source/rtl/gtxwc/gtxwc.c
  * harbour/source/rtl/gtcrs/gtcrs.c
  * harbour/source/rtl/gtstd/gtstd.c
  * harbour/source/rtl/gtsln/gtsln.c
  * harbour/source/rtl/gttrm/gttrm.c
  * harbour/source/rtl/gtpca/gtpca.c
  * harbour/source/rtl/gtcgi/gtcgi.c
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/contrib/gtalleg/gtalleg.c
  * harbour/contrib/gtalleg/ssf.h
  * harbour/contrib/gtalleg/ssf.c
  * harbour/contrib/gtwvg/gtwvg.c
    * cleanup char * casting

  * harbour/source/rtl/filesys.c
    ! do not use pread()/pwrite() in OpenWatcom Linux builds

2008-10-10 22:46 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    * reduced the mutex lock time in thread exit state

  * harbour/source/vm/thread.c
    ; added note about possible behavior of hb_threadSelf() function
      in one very specific situation. It's documented and expected
      behavior

  * harbour/source/rtl/hbgtcore.c
    + added support for retrieving current HB_GTI_NOTIFIERBLOCK code block
    + added support for removing HB_GTI_NOTIFIERBLOCK code block without
      setting the new one

2008-10-10 21:22 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/garbage.c
    * unblock HVM before executing destructors and releasing blocks

  * harbour/source/vm/fm.c
    ! do not call internal error with active lock when FM statistic
      is enabled

  * harbour/source/vm/thread.c
    ! stop other threads in hb_threadOnce() if the 1-st one
      executes bAction block to be sure that it will be completed
      before thread leave hb_threadOnce() function

  * harbour/source/vm/set.c
    ! do not call hb_inkeyReset() in set release. It's not necessary
      and it could change keyboard buffer size for other threads using
      the same GT driver.

  * harbour/source/vm/hvm.c
    % allocate new thread stack without lock

  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/gtapi.c
    * moved clipboard resetting from hbgtcore.c to gtapi.c

  * harbour/source/rtl/filesys.c
    ! do not use read/write operations with given file offset in Win9X
      which seems to not support such functionality

2008-10-10 20:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.bat
  * make_vc.mak
    * Cleanups.

2008-10-10 10:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    ! Fixed XPP class names.

2008-10-10 10:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    * Removed special 'set HB_GT_LIB=gtXXX' support. For the exact
      same effect - in case you want to modify default GT at
      build time, which is not recommended -, pls use this:
      'set C_USR=-DHB_GT_LIB=XXX' where XXX is 'wvt', 'std', etc.
    - Removed HARBOURFLAGSDLL, LDFLAGSDLL, CFLAGSDLL as public options.
      It's better to keep these settings common IMO, and handle
      all DLL subtleties in our make files.
    + L_USR is now respected for .dlls, too.
    ! Fixed make_gcc.mak internal HARBOURFLAGSDLL to be in sync
      with the other .mak files (removed -l switch).
    - Removed HB_BUILD_MODE for VC builds. Now C/C++ is left to
      the default value (which is C mode for core), and it's possible
      to override using:
      'set C_USR=-TP' for C++ mode (or -TC for forced C mode).
    % Other minor cleanups.

  * contrib/mtpl_b32.mak
  * contrib/mtpl_vc.mak
    - Removed HB_BUILD_MODE undocumented options from contrib
      make files. For Borland C++ mode, use 'set C_USR=-P'.
      For VC, see above.
    - Removed HB_BUILD_ST undocumented option.
    % Other minor cleanups.

  * contrib/xhb/hbcompat.ch
  * contrib/xhb/xhb.ch
    ! Moved __COPYFILE() translation to xhb.ch.

2008-10-10 09:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    - Removed option HB_BUILD_ST to build another version
      of Harbour MT build [for non-GNU builds], or forced
      SingleThreaded (non -tWM) Harbour builds.
    * Modified to not allow CFLAGSMT to be tweaked from the
      outside [for non-GNU builds].

2008-10-10 09:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * bin/bld.bat
    + -tWM BCC32 switch made the all-time default.

  * include/hbextern.ch
    + Added new functions.

2008-10-10 06:26 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
    + added hb_vmProcessDynLibSymbols() which works like
      hb_vmProcessSymbolsEx() but always mark registered modules as
      dynamic

  * harbour/source/vm/maindllp.c
    * redirect hb_vmProcessSymbolsEx() to hb_vmProcessDynLibSymbols()

  * harbour/source/vm/thread.c
    * disabled some low level locking code in non MT HVM mode

2008-10-10 01:43 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbgtcore.h
  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/gtapi.c
    + added new GT methods: LOCK() and UNLOCK()
    * serialize GT access in MT mode - please remember that it's only
      low level serialization to protect access to low GT resources.
      It has nothing to application level screen output from different
      threads which has to be serialized by programmer if necessary.

  * harbour/source/rtl/tthreadx.prg
    * use HB_THREAD_INHERIT_PUBLIC as thread attribute for thread
      started by oThread:start() to emulate Xbase++ PUBLIC variables
      behavior

2008-10-10 00:14 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapigt.h
  * harbour/source/rtl/gtapi.c
    + added hb_gtPutText() C function

  * harbour/source/rtl/console.c
    + added HB_DISPOUTAT() which works like DISPOUTAT but does not change
      cursor position. Xbase++ users can use
         #xtranslate DispOutAt( <x,...> ) => hb_dispOutAt( <x> )
      for Xbase++ compatible code

2008-10-09 20:51 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/source/rtl/Makefile
    + added thfuncx.prg

  * harbour/source/rtl/thfuncx.prg
    + added ThreadObject() function

  * harbour/source/rtl/tthreadx.prg
    + added Xbase++ compatible TThread class.
      Special thanks to Pritpal Bedi for class skeleton with info about
      Xbase++.
      Now only basic functionality is supported though it was enough to
      compile and execute examples Pritpal sent. I'm leaving rest for
      Xbase++ users.
      BTW The examples suggest that in Xbase++ DispOutAt() does not change
      cursor position. It's not Clipper compatible so I cannot make it
      in Harbour though I can add new function which will work in such way.

2008-10-09 10:48 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  ! harbour/bin/bld.bat
    + _C_MT= if not HB_MT==MT
      Forgot to clear the variable if mt mode is switched.

2008-10-09 10:36 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  ! harbour/bin/bld.bat
    + Added _C_MT=-tWM if HB_MT==MT
      BCC32 includes cw32mt.lib if -tWM is present as a switch.
      Now setting HB_MT=MT will allow to compile and link a prg in MT mode.

2008-10-09 17:03 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + harbour/source/rtl/thfuncx.prg
    * added Xbase++ compatible functions:
         ThreadID() -> <nThId>
         ThreadWait( <aThreads>, <nTimeOut> ) -> <oThread> | <pThId> | NIL
         ThreadWaitAll( <aThreads>, <nTimeOut> ) -> <lAllFinished>
      In Harbour <aThreads> can be array of thread pointers or thread
      objects. Xbase++ compatible thread class I'll add later.

2008-10-09 07:30 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  - bin/hb_flst.tmp
  * bin/pack_src.sh
    - removed the temporary file list from SVN.
    * Added code to retrieve the source file list when SVN info is not available

2008-10-09 14:11 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    * changed the place where exception handles are set/remove.
      Now it's set at the beginning of hb_vmInit() and removed
      at the end of hb_vmQuit()

  * harbour/source/rdd/dbcmd.c
  * harbour/source/rdd/dbf1.c
    ! added workaround for problem with EVAL block used in PACK
      command

  * harbour/source/compiler/hbmain.c
    * minor simplification

2008-10-09 05:02 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * bin/hb_flst.tmp
  * bin/pack_src.sh
    * small fix to have always the list ordered

2008-10-09 04:57 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  + bin/hb_flst.tmp
  * bin/pack_src.sh
    * Made available the source file list to users that don't build from a SVN tree

2008-10-09 10:11 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
  * bin/bld_os2.cmd
    + CLEANUP section now tries to clean object files and
      Borland .tds files, too.

2008-10-09 09:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added missing HB_DISABLEWAITLOCKS().
    ; NOTE: This looks like a hack to add FLX_WAIT flag
            for locks app-wide, and on Windows systems only.
            IMO we should not have such hacks in core, or if
            this is really important it should support all
            possible platforms.
            It also has a low-level function equivalent,
            which is missing from hbapifs.h. There is no
            reference to these function in any Harbour or
            xhb changelogs.
            If there are no objections, I'd like remove
            this functionality.

  * source/rtl/hbrandom.c
  * source/rtl/filesys.c
    * Minor formatting.

2008-10-09 03:26 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbcompdf.h
  * harbour/source/compiler/hbmain.c
    % do not add dummy entries to symbol table for functions declared
      as dynamic - it allows to include hbdynamic.ch with list of all
      supported functions by application and/or harbour.dll to any .prg
      file which will be used to create shared library (.dll, .so, ...)
      without any memory overhead.

  * harbour/source/compiler/genc.c
    % do not generate unnecessary HB_FUNC_EXTERN() declarations for
      function declared as DYNAMIC

2008-10-09 01:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added HB_THREADWAIT()

2008-10-09 00:17 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbtypes.h
  * harbour/source/vm/maindllp.c
    ! updated casting for current SVN code
      [TOMERGE 1.0]

  * harbour/include/hbthread.h
  * harbour/source/vm/hvm.c
  * harbour/source/vm/thread.c
    + added .prg function
         hb_threadWait( <pThID> | <apThID>, [ <nTimeOut> ] [, <lAll> ] )
               => <nThInd> | <nThCount> | 0
      This function wait for <nTimeOut> seconds (default infinite wait)
      until one or all (controlled by <lAll> parameter) of given HVM threads
      will have finished execution in HVM area. It does not join the threads.
      It returns index to 1-st thread which has finished execution (default)
      or number of threads which has finished in given time period when lAll
      is .T.

2008-10-08 20:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/examples/hscript/hscript.prg
  * source/compiler/gencobj.c
  * source/compiler/genobj32.c
    * Formatting, minor cleanups.

2008-10-08 15:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gnu.bat
    ! HARBOURDIR -> HB_INSTALL_PREFIX

2008-10-08 14:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * contrib/mtpl_b32.mak
    + Added -Q switch to BCC defaults. This will print
      verbose error messages.

2008-10-08 14:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
  * bin/bld_os2.cmd
    + Added support for HB_INSTALL_PREFIX.
    + Added experimental support for 'set HB_MT=MT' flag,
      to create an MT executable.

  * source/rtl/seconds.c
    * Formatting.

2008-10-08 12:28 UTC+0200 Maurilio Longo (maurilio.longo@libero.it)
  * harbour/source/rtl/seconds.c
    ! removed a couple of warnings.

2008-10-08 02:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/cmdarg.c
    * HB_ARGV() will now return the executable name if called
      without a parameter.
    ! HB_ARGSTRING() fixed to return "" in some error
      cases instead of NIL.

2008-10-08 01:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/gencc.c
    * Trick to avoid MSVC -W4 warnings in -gc3 compiled C code,
      when compiled string literal contained certain high (> 127)
      chars followed by a digit. Thanks Przemek.
      NOTE: I've checked and hexadecimal format has even more
            such problems.

2008-10-07 21:27 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/runner.c
  * harbour/source/vm/codebloc.c
  * harbour/source/vm/itemapi.c
    * minor casting modification

  * harbour/tests/speedtst.prg
    * added workaround for timeout parameter not working in xHb Subscribe()
      when 3-rd parameter is passed

2008-10-07 19:33 UTC+0200 Maurilio Longo (maurilio.longo@libero.it)
  * harbour/source/rtl/seconds.c
    ! fixed little typo after latest commit.

2008-10-07 18:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/seconds.c
    * Some cleanup after latest change.
      Functionality shouldn't change. OS/2 users pls verify.

2008-10-07 18:36 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/estack.c
    ! fixed typo in last commit

2008-10-07 18:32 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/hvm.c
    % moved static USHORT uiPolls to HVM stack to not reduce the HVM
      performance in MT mode. In multi CPU environment if many threads
      try to change the same memory variable in the same time the overall
      performance is strongly reduced on most of tested hardware - probably
      some random CPU delay used to resolve the conflict.

2008-10-07 16:33 UTC+0200 Maurilio Longo (maurilio.longo@libero.it)
  * harbour/source/rtl/seconds.c
    + Added OS/2 section to secondsCPU(), but it does not work as expected :)
      In particular, user and system times are kept per thread, but when a thread
      dies the time it has spent in user and system-land gets lost, so the
      overall running time of the program decreases. Not only, if I call
      secondsCPU() before a thread starts and after it has ended I'll have
      no idea of the time that was spent by that thread.

2008-10-07 14:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapierr.h
  * source/vm/extrap.c
  * source/rtl/errorint.c
    ! Fixed recent modification on Windows platform, where
      GPF would generate an internal error.
      It didn't launch the OS error handler.
    ! Fixed hb_errInternal() being marked as HB_EXPORT
      in the headers only.

2008-10-07 09:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
  * source/rtl/inkey.c
    + Added HB_KEYCLEAR() a documented function equivalent
      to "CLEAR TYPEAHEAD" command, or undocumented __KEYBOARD() function.
      [TOMERGE 1.0]

  * contrib/rddads/rddads.h
  * contrib/rddads/ads1.c
    + Added support for ADS_USE_OEM_TRANSLATION for old ads versions.
      Borrowed from xhb/Pavel Tsarenko.

2008-10-07 02:57 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/Makefile
  + harbour/include/hbatomic.h
  * harbour/include/hbthread.h
  * harbour/source/vm/garbage.c
  * harbour/source/vm/fm.c
    * moved atomic and spinlock functions into hbatomic.h

  * harbour/include/hbatomic.h
    + added atomic inc/dec for GCC and x86@64 and PPC@32
    + use OSAtomic*() and OSSpin*() functions for atomic inc/dec and
      spinlocks in Darwin builds
    + added spinlocks to MS-Win builds

2008-10-06 22:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/tobject.prg
    ! Formatting to some old code.

2008-10-06 22:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbthread.h
    ! Committed MT fix to make it compile under Darwin.
      Thanks Przemek.

2008-10-06 21:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed last commit typo in thread number allocating - all threads
      where using 0 number

  * harbour/source/vm/thread.c
    ! fixed return value in recursive call to hb_mutexLock() - was FALSE
    ! fixed typo in timeout parameter number
      should be 2 instead of 1

  * harbour/source/rtl/tobject.prg
    ! fixed init() return value - it should be ignored and current
      object should be returned

  * harbour/source/rtl/tthreadx.prg
    ! probably fixed timeout parameter use in signal:wait() method
      I guess that like other Xbase++ functions it's in 1/100th of
      a second

  * harbour/include/hboo.ch
  * harbour/include/hbclass.ch
  * harbour/source/vm/classes.c
  * harbour/source/rtl/tclass.prg
    + added support for SYNC object and CLASS messages working like
      in Xbase++. Please remember that all locked by thread SYNC messages
      objects and classes are unblocked automatically for the time which
      thread spends in hb_subscribe[Now]() or signal:wait()

2008-10-06 21:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbapifs.h
  * include/hbextern.ch
  * source/common/hbfsapi.c
  * source/rtl/hbfile.c
    + Added hb_fsNameExists() C level function.
    + Added hb_FNameExists() Harbour level function.
    ; Both will return true if any kind of directory entry
      exists with the given name (IOW it doesn't matter
      if it's a file or directory, or else).

2008-10-06 15:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
  * harbour/source/vm/hvm.c
    + add numeric HVM thread identifiers to thread structure. Now
      HB_THREADID() returns numbers in all OSes

  * harbour/include/hbexprop.h
  * harbour/include/hbexprb.c
  * harbour/source/common/expropt2.c
    + added compile time optimization for MIN() and MAX() functions

  * harbour/source/rtl/minmax.c
    * removed trailing spaces from source code

2008-10-06 12:38 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbclass.ch
  * harbour/include/hboo.ch
    + added SYNC attribute to accepted syntax in class declaration
      it allows to compile code which uses this attribute but low
      level implementation is not ready yet - work in progress

  * harbour/source/vm/garbage.c
    ! added #define INCL_DOSPROCESS for OS2 builds. For some reasons
      #define INCL_DOSDATETIME I've found in DosSleep() documentation
      is note enough

2008-10-06 11:17 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed typo in recent modification

2008-10-06 03:09 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbextern.ch
    + Added HB_THREADONCE.

  * ChangeLog
    - Removed a duplicate entry of mine.

2008-10-06 02:18 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    * marked T054 as memory tests

  * harbour/source/vm/hvm.c
  * harbour/source/vm/thread.c
    * added hb_threadOnce( @<onceControl> [, <bAction> ] ) -> <lFirstCall>
      This function allow to execute some code only once. It's usefull in
      MT environment for initialization.
      <onceControl> is variable which holds the execution status and have
      to be initialized to NIL. In most of cases it will be simple static
      variable in user code.
      <bAction> is optional codeblock which is executed only once (on 1-st
      call with given <onceControl>)

  * harbour/source/rtl/filesys.c
    ! do not make any file name conversions in hb_fsNameConv() if HVM stack
      is not allocated

  * harbour/source/rtl/gtcrs/gtcrs.c
    * casting

2008-10-06 01:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/debugger.prg
  * source/rtl/typefile.prg
  * source/rtl/tgetlist.prg
  * source/rtl/treport.prg
  * source/rtl/teditor.prg
    * Using [Q]QOut() functions instead of "[?]?" commands.
    * Using hb_Run() function instead of RUN command.

  * source/rtl/typefile.prg
    % Upped read buffer.
    * Formatting.
    % Got rid of a few unnecessary initialization.

2008-10-06 00:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbthread.h
    ! Blind fix for WinCE compilation after MT changes.

2008-10-05 20:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/rtl/Makefile
  - source/rtl/persist.prg
  + source/rtl/tpersist.prg
  - source/rtl/symbol.prg
  + source/rtl/tsymbol.prg
  * source/rtl/achoice.prg
  * source/rtl/browse.prg
  * source/rtl/dbedit.prg
  * source/rtl/dircmd.prg
  * source/rtl/einstv52.prg
  * source/rtl/einstvar.prg
  * source/rtl/hbini.prg
  * source/rtl/tbrowse.prg
  * source/rtl/tclass.prg
  * source/rtl/tget.prg
  * source/rtl/tgetint.prg
  * source/rtl/tlabel.prg
  * source/rtl/tobject.prg
  * source/rtl/treport.prg
  * source/rtl/typefile.prg
  * source/rtl/valtoexp.prg
  * source/rdd/usrrdd/example/exhsx.prg
  * source/rdd/usrrdd/example/exfcm.prg
  * source/rdd/usrrdd/rdds/hscdx.prg
    * Some formattings and cleanup.

  * source/rtl/tclass.prg
    % ValType() optimizations.

  * source/rtl/tlabel.prg
  * source/rtl/treport.prg
    * Trim() -> RTrim()

  * source/rtl/treport.prg
    ! Hard-coded Chr(13)+Chr(10) fixed in treport.prg.

2008-10-05 18:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwin/win_ole.c
  * source/rtl/wait.prg
  * source/rtl/tthreadx.prg
    * Minor formatting.

2008-10-05 17:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    + added support for --scale switch - it enables special mode
      which compare scalability, f.e.:
         ./speedtst --thread=4 --scale
      executes each test loop 4 times by single thread then
      by 4 simultaneous threads, counts total real times in both
      cases and presents them with the scale factor.
      Please note that exactly the same loop tests are executed
      simultaneously so this test should well show all places which
      are not well scalable.
      This test allows me to locate yet another memory variable written by
      each thread on each function call just like uiPolls in main HVM loop.
      It's s_bDebugging which is not used in MT mode because we do not have
      any MT debugger yet but is was effectively killing the scalability
      in my hardware.
      If possible I would like to see some Windows results from multi CPU
      machine with --scale parameter, f.e.:
         speedtst --thread=8 --scale > speedtst.log
      Please make some tests.

  * harbour/source/vm/hvm.c
    % do not assign s_bDebugging in hb_vmDo()/hb_vmSend() when debugger
      is not linked

  * harbour/source/vm/garbage.c
    % enabled spinlocks in all x86 GCC builds

2008-10-05 15:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbpers.ch
  * source/rtl/perfuncs.prg
  * source/rtl/objfunc.prg
  * source/rtl/tlabel.prg
  * source/rtl/setta.prg
  * source/rtl/dirscan.prg
  * source/rtl/tthreadx.prg
  * source/rtl/setfunc.prg
  * source/rtl/readvar.prg
  * source/rtl/tclass.prg
  * source/rtl/ttextlin.prg
  * source/rtl/profiler.prg
  * source/rtl/treport.prg
  * source/rtl/tgetint.prg
  * source/rtl/persist.prg
  * source/rtl/altd.prg
  * source/rtl/devoutp.prg
  * source/rdd/usrrdd/example/exmemo.prg
  * source/rdd/usrrdd/example/exhsx.prg
  * source/rdd/usrrdd/example/exfcm.prg
  * source/rdd/usrrdd/example/exrlx.prg
  * source/rdd/usrrdd/rdds/dbtcdx.prg
  * source/rdd/usrrdd/rdds/fptcdx.prg
  * source/rdd/usrrdd/rdds/arrayrdd.prg
  * source/rdd/usrrdd/rdds/hscdx.prg
  * source/rdd/usrrdd/rdds/rlcdx.prg
  * source/rdd/usrrdd/rdds/fcomma.prg
  * source/rdd/usrrdd/rdds/smtcdx.prg
    * Formatting. Basically finished.

  * include/hbextern.ch
    ! Added two missing functions.

2008-10-05 15:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed hb_mutexSubscribe*() in ST mode

2008-10-05 03:29 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    + added support for multiple usage of --exclude parameter
    + added support for --thread[=<num>] parameter which allows to set how
      many threads will be used to execute speed test. When =<num> is not
      given then each test loop is executed by separate thread, f.e.:
         ./speedtst --thread=3
      Now you can make tests looking for optimal for your system values.
      Please only remember that the total results shown by speedtst
      can be highly bound with the most expensive test loop which is
      finished only on one CPU
    + added support for --only=<testnums,...> parameter which allows to
      chose requested tests
    + added restricted parameter validation and syntax info

2008-10-04 21:23 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/fm.c
    ! do not build DL-MM when HB_FM_WIN32_ALLOC is set

  * harbour/tests/speedtst.prg
    + added support for --exclude=<tests,...> option to exclude some tests,
      f.e.:
         ./speetest --exclude=029.030.023.025.027.040.041.043.052.053.019.022.031.032
      disables all tests which allocates memory. The same tests can be also
      excluded by --exclude=mem

2008-10-04 20:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbole/ole2.c
    ! Fixed errors in previous commit. Thanks Toninho.

  * contrib/hbwin/win_ole.c
    ! Prefixed remaining static variables with 's_'.

2008-10-04 19:36 UTC+0100 Francesco Saverio Giudice (info at fsgiudice dot com)
  * contrib/hbwhat/wincore.prg
    * HB_Exec() changed to HB_ExecFromArray()
      Now contrib/hbwhat/tests/whatdemo.prg can be compiled and runs

2008-10-03 21:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  - harbour/tests/speedtst.prg
  + harbour/tests/speedold.prg
    * renamed old speed test - I left it because some other xbase compiler
      cannot compiple the new one due to not Clipper compatible PP

  + harbour/tests/speedtst.prg
    * added new speed test which can also measure mutlithread performance.
      When linked with MT HVM version then it can be executed with optional
      parameter which causes that each test loop is executed by separate
      thread. Please make such tests on different platforms.

2008-10-03 20:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/garbage.c
    * Use spinlock instead of mutex in OS2 builds - performance test.

2008-10-03 13:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/estack.c
    * pacified OS2 warning

2008-10-03 09:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/extrap.c
    + Now using standard internal error call for Windows too.
    + Implemented //BATCH for OS/2. (please test)

  * source/rtl/errorint.c
    * Upped internal buffer.

2008-10-03 09:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbole/oleauto.prg
  * contrib/hbole/ole2.c
  * contrib/hbwin/win_tole.prg
  * contrib/hbwin/win_ole.c
    * OLESHOWEXCEPTION() implemented on the .prg level, using
      Alert() rather than MessageBox().
    ! All MessageBox()es converted to Alert()s.
    + Added OLEEXCEPTIONSOURCE(), OLEEXCEPTIONDESCRIPTION()
      to hbole.

  * source/vm/maindllp.c
    ! Changed MessageBox() call to internal error.

  * contrib/gtwvg/gtwvg.c
  * source/rtl/gtwvt/gtwvt.c
    ! Changed MessageBox() calls to internal error.

  * contrib/gtwvg/gtwvg.c
    * Internal error calls synced with GTWVT.

  * source/rtl/hbgtcore.c
    - Removed "Internal error" text from two internal error descriptions.

  * make_vc.mak
    - Removed reference to MessageBox() from comment.

  ; NOTE: No more MessageBox() calls in Harbour.
          (except some wrappers for user .prg code)

2008-10-03 00:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/filesys.c
    * added workaround for missing S_IREAD, S_IWRITE and S_IEXEC in OS2
      when _XOPEN_SOURCE is defined

2008-10-02 23:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbsetup.ch
    ! Removed some company names from comments.

  * source/vm/extrap.c
    + Added //BATCH internal switch to indicate exception handler
      to suppress the Windows exception dialog when an exception
      occurs. Useful for programs running without user interaction.
      NOTE: This may not be the ultimate method. If we can gather
            more such situations where such "batch" mode might
            be useful, we may as well implement it as a Set().
    - Removed Harbour specific exception MessageBox(). Besides
      having gotten rid of a MessageBox() call in core VM, Harbour now
      got back the standard Windows error handling dialog, which is
      more standard and easy to get by than the previous default
      method, where several clicks were needed to pass through
      the (sometimes hidden) popups. The details of all GPFs are
      still logged into hb_out.log.
    + Removed size limit for the logged exception call stack.

2008-10-02 21:12 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/sdf1.c
    ! fixed stupid typo (missing !) in last modification which broke
      SDF RDD read mode. Thanks to Marco for information and example.

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    * small cleanup in used macros

2008-10-02 20:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/Makefile
  * contrib/hbct/common.mak
  * contrib/hbct/ctmisc.prg
  + contrib/hbct/ctdummy.prg
    * Recently added dummy CT functions moved to a separate file.

  * source/vm/thread.c
    ! Fixed warning in HB_THREADID().

2008-10-02 15:54 UTC+0200 Maurilio Longo (maurilio.longo@libero.it)
  * harbour/source/vm/thread.c
    * hb_ThreadID() returns 0 when built in ST mode.

2008-10-02 15:50 UTC+0200 Maurilio Longo (maurilio.longo@libero.it)
  * harbour/source/vm/thread.c
    + added hb_ThreadID() function which returns thread ID of current thread.

2008-10-02 15:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/extrap.c
    + Upped internal buffer to store the exception dump
      and stack trace.

2008-10-02 14:33 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
    % enable assembler inline function to access HVM thread stack pointer
      without native compiler TLS support even if HB_STACK_PRELOAD is not
      defined in MinGW builds. It gives some additional small speed
      improvement in MT mode

  * harbour/source/rtl/idle.c
    * unlock HVM inside hb_releaseCPU() function

  * harbour/contrib/hbwin/win_ole.c
    ! fixed casting and C++ compilation in some compilers

  * harbour/include/Makefile
  + harbour/contrib/examples/rdddbt/hbrdddbt.h
  - harbour/include/hbrdddbt.h
    ! moved hbrdddbt.h to correct location

  * harbour/include/Makefile
    ! added missinf hbthread.h

  * harbour/tests/rddtest/rddmktst.prg
  * harbour/tests/rddtest/adscl52.prg
  * harbour/tests/rddtest/adscl53.prg
  * harbour/tests/rddtest/ntxcl52.prg
  * harbour/tests/rddtest/ntxcl53.prg
  * harbour/tests/rddtest/cdxcl52.prg
  * harbour/tests/rddtest/rddtst.prg
  * harbour/tests/rddtest/cdxcl53.prg
    ! fixed description in header I wrongly copied without updating
      from other files

  + harbour/tests/hsxtest.prg
    + added test code for HiPer-SEEK indexes

  * harbour/source/rtl/filesys.c
    + added new functions: hb_fsExtName(), hb_fsReadAt(), hb_fsWriteAt(),
      hb_fsTruncAt() to use with shared file handles.
      Please test it in other *nixes. I used pread[64]()/pwrite[64]()
      POSIX functions but I do not know if they are available by default
      in other supported platforms like MacOSX, BSD, HPUX, SunOS.
      If not they I will have to implement some workaround.

  * harbour/common.mak
  * harbour/source/rtl/Makefile
  * harbour/include/hbapifs.h
  + harbour/source/rtl/filebuf.c
    + added set of new file functions (hb_file*()) which are designed to
      use with shared file handles and locks (buffers in the future):
      hb_fileExtOpen(), hb_fileCreateTemp(), hb_fileClose(), hb_fileLock(),
      hb_fileReadAt(), hb_fileWriteAt(), hb_fileTruncAt(), hb_fileSize(),
      hb_fileCommit(), hb_fileHandle()
      These functions operate on PHB_FILE structure instead of HB_FHANDLE.
      Now in POSIX systems they share file handle between aliased or
      simultaneously open by other thread work areas. It resolves the
      problem with releasing all process FCNTL locks by any close()
      operation even on duplicated or open() separately handle.
      Now DOS deny flags emulation works in single process even if
      BSD locks are disabled (non Linux *nixes).
      They also keep internal file lock list what allows to synchronize
      threads and aliases with file locks in POSIX systems. In the future
      it will be used also for internal locking to synchronize threads
      without OS level locks - pseudo exclusive mode in cloned WA.
      Finally these structures will be used also for file buffers
      which will be shared between aliased WA and threads.

  * harbour/include/hbrdddbf.h
  * harbour/include/hbrddcdx.h
  * harbour/include/hbrddntx.h
  * harbour/include/hbrdddel.h
  * harbour/include/hbrddsdf.h
  * harbour/source/rdd/dbf1.c
  * harbour/source/rdd/delim1.c
  * harbour/source/rdd/sdf1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/source/rdd/hsx/hsx.c
  * harbour/contrib/hbbmcdx/bmdbfcdx.c
  * harbour/contrib/hbbmcdx/hbbmcdx.h
    * use PHB_FILE and hb_file*() functions instead of HB_FHANDLE (hb_fs*())
      to access files.

  + harbour/tests/aliaslck.prg
    + added test code for file lock synchronization between aliased
      work areas

2008-10-02 11:49 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/extrap.c
    * Added "error" text in exception message.

2008-10-02 10:08 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/ctmisc.prg
    + Added dummy functions:
      GETKXLAT(), SETKXLAT(), DSETKBIOS()

2008-10-02 08:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/dbedit.prg
    ! Fixed to use local Skipped() function.
    ! Guarded some 5.3 features with HB_COMPAT_C53.
    ! Fixed stepping back to real record from append position.
      (This fixes Clipper 5.x screen trashing and
      '87 incompatibility.)
    ! Minor keyboard handling fix.
    ! Fixed behaviour in append mode.

2008-10-01 23:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbfbird/firebird.c
    ! Added ugly hack to make it compile with Firebird 2.1.1
      and BCC 5.8.2 (and upper).
      This way all Win32/Win64 builds are now supporting
      this newer version of Firebird. DOS still needs 2.0.4.

  * contrib/hbwin/win_tole.prg
  * contrib/hbwin/win_ole.c
    + Added support for optional License Key.
      Borrowed from xhb/Ron Pinkas.
      (untested)

2008-10-01 14:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/ctmisc.prg
    ! Fix to CENTER() when 3rd param is logical.
    + Added ALLOFREE().

2008-09-30 11:37 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/Makefile
  + harbour/include/hbvmint.h
    + added new header file which works like hbvmopt.h but does not enable
      stack macros

  * harbour/contrib/xhb/xhbenum.c
  * harbour/contrib/xhb/xhbqself.c
  * harbour/contrib/xhb/xhbwith.c
  * harbour/contrib/xhb/cstructc.c
  * harbour/contrib/hbwin/win_ole.c
    ! use hbvmint.h instead of hbvmopt.h to eliminate direct bindings to
      HVM stack structure

2008-09-30 02:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
  * config/w32/msvc.cf
  * config/w32/msvcce.cf
    ! Removed -fp:fast optimization switch from WinCE builds.
    ! -W4 warning level enabled for MSVC in GNU-make too.

2008-09-29 23:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * contrib/mtpl_b32.mak
  * bin/bld.bat
    % Added BCC optimization switches
      (the ones used for the Harbour release versions).
      [TOMERGE 1.0]

  * bin/bld.bat
  * bin/bld_os2.cmd
    + Added -O3 to GCC compilation.
      [TOMERGE 1.0]

2008-09-29 22:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! restored some item type settings I wrongly removed few days ago

2008-09-29 18:49 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/os2/gcc.cf
  * harbour/make_gnu_os2.cmd
    * moved -DTCPV40HDRS to make_gnu_os2.cmd and added small description
      about this macro. By default is enabled, can be disabled by
      setting environment variable HB_OS2_TCP32 to 'yes', f.e.
         SET HB_OS2_TCP32=yes
      David and Maurilio, please check me.

2008-09-29 13:11 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
   * contrib/xhb/common.mak
   * contrib/xhb/makefile
   + contrib/xhb/hbstruct.ch
   + contrib/xhb/hbstruct.prg
     + STRUCTURE / MEMBER / ENDSTRUCTURE support

2008-09-29 17:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbset.h
  * harbour/source/vm/set.c
    + divided __SETCENTURY() PRG function into two functions:
      __SETCENTURY() and public C function hb_setSetCentury()
      to manipulate century setting from C code.
      Modyfication by Francesco Saverio Giudice

2008-09-29 15:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * ChangeLog
  * mpkg_tgz.sh
  * harbour.spec
  * config/darwin/gcc.cf
  * config/hpux/gcc.cf
  * config/dos/rsx32.cf
  * config/dos/djgpp.cf
  * config/linux/gcc.cf
  * config/os2/gcc.cf
  * config/sunos/gcc.cf
  * config/bsd/gcc.cf
  * config/w32/mingwce.cf
  * config/w32/gcc.cf
  * config/w32/rsxnt.cf
  * config/w32/mingw.cf
    + -O3 GCC optimization level made the default for all GCC
      builds. Those who wish to use lower optimization settings,
      pls use C_USR=-O2 or such.
      [TOMERGE 1.0]

2008-09-29 13:59 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/workarea.c
    * added protection against multiple registering RDD with the same
      name by *_GETFUNCTABLE() in ST/MT mode or other thread in MT mode

2008-09-29 11:18 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbvm.h
  * harbour/include/hbthread.h
  * harbour/source/vm/hvm.c
  * harbour/source/vm/thread.c
    + added hb_vmThreadRegister() funtion which allows to register new
      thread in HVM without HVM stack allocation
    + added hb_vmThreadRelease() which removes registered thread which
      does not have allocated HVM stack yet
    + added hb_threadStateNew() which returns new thread control state
      which can be used as parameter to hb_vmThreadInit(),
      hb_vmThreadRegister(), hb_vmThreadRelease()
    * register thread control state also for main thread
      Now hb_threadSelf() returns thread pointer also for main thread
    ! fixed possible race condition in hb_threadWaitForAll() and
      hb_threadTerminateAll() by using hb_vmThreadRegister() before
      starting thread.

  * harbour/source/rtl/idle.c
    * interrupt hb_idleSleep() on QUIT or BREAK requests

  * harbour/tests/mt/mttest09.prg
    * small cleanup

2008-09-29 10:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
    ! Fixed to use 'COPY /B' instead of 'COPY /A' to install
      headers, to avoid appending and EOL to these files.
      They should work as is.

  * make_gcc.mak
    ! Fixed mainstd lib name.
      [TOMERGE 1.0]

2008-09-27 09:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gcc.sh
    % Minor cleanup after prev changes.

2008-09-27 09:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbthread.h
    % Disabled HB_USE_TLS for __BORLAND__ and __MINGW32__ for
      best performance.

  * contrib/hbwhat/whtmmcap.c
    ! Fixed some warnings under certain MinGW 4.3.2
      installations.
      TODO: hbwhat users pls finish this fix.

  * utils/hbmake/hbmake.prg
    ! Fixed hbw32 to hbwin.
    * Win32 references changed to Windows.

  * make_gcc.sh
    * Not accepting CFLAGS anymore as custom C flags envvar.
      Pls use C_USR instead.

  * make_gcc.mak
    + Added wsock32 lib to Cygwin system liblist.
    ! Removed setting HB_OS_* macros explicitly.

  * make_b32.mak
  * make_vc.mak
    * Minor formatting.

2008-09-26 21:28 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    * release thread return value when is retrieve

  * harbour/common.mak
  * harbour/source/rtl/Makefile
  + harbour/source/rtl/tthreadx.prg
    + added Xbase++ compatible signal class

  * harbour/source/rdd/wacore.c
    ! added missing alias setting after attaching work area

  + harbour/tests/mt/mttest09.prg
    + added test code for using the same work area in different threads

2008-09-26 19:34 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    + added assembler inline macros for TLS access in BCC and MinGW32
      They are enabled when Harbour is compiled with -DHB_NO_TLS.
      Please check the speed difference. If it will be noticeable
      then we keep them probably as default. Otherwise they will be
      removed.

2008-09-26 02:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed thread cleanup code when startthread() fails, f.e.
      OS refuse to create new thread.

2008-09-25 21:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbdefs.h
    ! Fixed 64-bit printf() formatting strings to be compatible
      with MinGW. MinGW seems to follow the Microsoft way instead
      of being compatible with other GCC dialects.
      This fixes some pcode/c code (-gc3) generation problems for
      long long literals, and hbfbird/FBGETDATA() potential problems,
      when MinGW 3.x/4.x compilers were used.
      [TOMERGE 1.0]

    ; TOFIX: Some sqlite3.c code may also be affected, since
             "%llX" and "%lld"s are hard-coded into the source.

2008-09-25 13:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - make_tgz.sh
  + mpkg_tgz.sh
  - make_deb.sh
  + mpkg_deb.sh
  - make_rpm.sh
  + mpkg_rpm.sh
  - make_rpmwce.sh
  + mpkg_rpm_wce.sh
  - make_rpmwin.sh
  + mpkg_rpm_win.sh
  - make_xmingw.sh
  + make_gnu_xmingw.sh
  - make_xmingwce.sh
  + make_gnu_xmingwce.sh
  - make_rpm_from_svn.sh
  + mpkg_rpm_from_svn.sh
    * Some renamed in the hope that it will better separate
      the simple build scripts (make*) from package build
      (mpkg*) scripts.

2008-09-25 13:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/hbcompat.ch
    + Added xhb_CopyFile() two-way translations.
      (untested)

2008-09-25 13:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/speedtst.prg
    ! Use hb_OSNewLine() instead of hard-wired EOL.
    + Emulate hb_OSNewLine() for non-Harbour compilers.

2008-09-25 13:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbthread.h
    + Enabled HB_USE_TLS for MinGW >= 4.3.0

2008-09-25 11:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - harbour-ce-spec
  + harbour-wce-spec
  - harbour-w32-spec
  + harbour-win-spec
  - make_rpmw32.sh
  + make_rpmwin.sh
  - make_rpmce.sh
  + make_rpmwce.sh
    * Some steps done to use more consistent names for Windows
      and Windows CE, and also to move away from '32' usage.
    ; TODO: I'd prefer to give all .spec files the same
            empty extensions, could anyone help how to
            convert current harbour.spec to harbour-spec and
            not break .rpm creation? Plus it would be also
            good to implement automatic versioning on .rpm
            build just like for harbour-win/wce in make_rpmw*.sh
            scripts.

  - hbgtmk.sh
  + make_rpm_from_svn.sh
    * Renamed to give a better idea about its purpose.
    ; NOTE: make_rpm_from_svn.sh seems a bit pointless now
            that we have the final releases in separate SVN tags.

  * make_gcc.mak
    * Minor formatting.

2008-09-25 00:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_gcc.mak
  * make_vc.mak
  * harbour.spec
  * source/rtl/hbgtcore.c
  * source/rtl/Makefile
  * source/rtl/gtsys.c
  * config/w32/poccce.cf
  * config/w32/xcc.cf
  * config/w32/pocc.cf
    % Removed HB_GT_DEFAULT envvar, which was the exact synonym
      of HB_GT_LIB. Please use HB_GT_LIB instead, if you - by any
      chance - want to change the default GT at Harbour build-time.

  * tests/speedtst.prg
    ! Fixed to delete temp .dbf files before exiting.

2008-09-24 20:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/estack.c
    ! fixed stack preloading - it should be after checking if stack
      exist :)

2008-09-24 18:27 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    * reverted modification for import attributes - this will be changed
      in the future to function calls

2008-09-24 18:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbdoc/hbdoc.prg
  * utils/hbmake/hbmake.prg
  * utils/hbrun/hbrun.prg
    % One function made STATIC.

2008-09-24 17:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbrun/hbrun.prg
    + Added REQUESTs for GTSTD, GTCGI, GTPCA (these GTs are
      available on all platforms).
    % Removed explicit GT defaulting logic (now identical to
      the one in RTL).

2008-09-24 16:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/fm.c
    + Enabled dlmalloc (HB_FM_DL_ALLOC) for MSVC, BCC and MINGW builds.
    ; It's possible to disable dlmalloc with HB_FM_STD_ALLOC
      for testing purposes.

2008-09-24 16:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
  * bin/bld_os2.cmd
    * HARBOURFLAGS removed as a public envvar to setup Harbour
      parameters. Use PRG_USR instead.

  * common.mak
    ! Fixed after recent modification.

  * source/compiler/cmdcheck.c
    * Minor formatting.

2008-09-24 14:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/dynsym.c
  * harbour/source/vm/arrays.c
  * harbour/source/vm/memvars.c
    ! fixed three typos which broke HB_TR_DEBUG messages

2008-09-24 13:57 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/compiler/cmdcheck.c
    ! fixed starting index in parsed parameters. argv[0] is
      application name with path not user parameter. Parsing
      it was giving unpredictable results if harbour binaries
      were located in path having option delimiters in name

2008-09-24 12:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-ce-spec
  * harbour-w32-spec
  * harbour.spec
  * make_xmingwce.sh
    % Some remaining explicit GT defaultings removed. Relying on
      RTL source code.

  * include/hbsetup.h
    ! Disabled HB_MT_VM for HB_WINCE.

2008-09-24 12:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/vmmt/Makefile
    ! Possible fix for mingw build error:
      make: *** mainstd: No such file or directory.  Stop.
      make[3]: *** [first] Error 2
      make[2]: *** [first] Error 2
    ; Please review.

    ; TOFIX: These DLALLOC warnings are present with MinGW 4.3.2
             In file included from ../../fm.c:127:
             ../../dlmalloc.c:1144: warning: ignoring #pragma warning
             In file included from ../../fm.c:127:
             ../../dlmalloc.c: In function 'sys_alloc':
             ../../dlmalloc.c:3396: warning: statement with no effect

2008-09-24 12:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * common.mak
  * source/rtl/gtgui/Makefile
  - source/rtl/gtgui/gtdef.c
    - Removed HB_GTGUI_HACK to masquerade GTGUI under a different
      name and to make Windows users happier. Instead of hacking
      Windows users with GUI programs should simply use
      this in their code:
      --
      PROCEDURE HB_GTSYS
         REQUEST HB_GT_GUI_DEFAULT
         RETURN
      --
    ; This clears up a few exceptions, make hacks and a few possible
      confusions.

2008-09-24 02:26 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gcc.sh
  * make_gnu_os2.cmd
  * make_gnu.bat
  * make_gnu.sh
  * make_tgz.sh
    % Some additional GT defaulting logic removed.

2008-09-24 01:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwhat/tests/whatdemo.prg
    ! SVN ID.

  + contrib/hbwhat/tests/bld_b32.bat
  + contrib/hbwhat/tests/bld_vc.bat
    + Added missing non-GNU make files.

2008-09-24 01:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtsys.c
    * Added HB_WINCE with GTWVT to the set of defaults.

  * config/darwin/global.cf
  * config/hpux/global.cf
  * config/linux/global.cf
  * config/sunos/global.cf
  * config/bsd/global.cf
    % Removed unnecessary defaulting to GTSTD.

  * config/os2/gcc.cf
    ! Fixed minor typo in line 24 / HB_OS2_NEW_TCP.

2008-09-23 16:19 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbwhat
    + /tests
    + /tests/whatdemo.prg
      A demo program, very basic, will be expanded in future, together
      with gtwvt.

2008-09-24 00:44 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/gtsys.c
    * use GTTRM as default GT in *nixes

2008-09-24 00:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/memtst.prg
    + Added #include "simpleio.ch" to allow output redirection.

  * bin/bld.bat
  * bin/bld_os2.cmd
    * Removed any HB_GT_LIB "selection" logic. Selection is to
      be done from source code, from now on all supported core GTs
      are included in the lib list.
    * Few other minor cleanups.

  * source/vm/cmdarg.c
    * Commented code turned into HB_C52_STRICT branch.

  * source/vm/vmmt/Makefile
    ! Fixed cemgw -> mingwce

  * config/dos/global.cf
  * config/os2/global.cf
  * config/w32/global.cf
    % Removed unnecessary logic to select default GT. This is
      done in Harbour source code now.

  ; TOFIX: After MT changes, mingw32 build gives this new error:
           make: *** mainstd: No such file or directory.  Stop.
           make[3]: *** [first] Error 2
           make[2]: *** [first] Error 2

2008-09-23 21:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/hb-func.sh
    * use HB_IMPORT instead of hardcoded attributes in hb* scripts

  * harbour/source/common/hbver.c
    * generate different info for POCC and XCC compilers

  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    * reduce header validation to not report clipper indexes as corrupted

2008-09-23 20:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/extrap.c
    ! Fixed to close .log file before showing MessageBox().
      [TOMERGE 1.0]

    + Don't attempt to write into .log file if the _SET_HBOUTLOG
      filename is empty.

    ; TOFIX: Remove all remaining MessageBox() calls from
             Harbour sources.

2008-09-23 18:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddads/adsmgmnt.c
    ! Blind fix to ADSMGGETWORKERTHREADACTIVITY() where the
      first element in list wasn't returned.
      Please test, I couldn't.

  * source/vm/fm.c
    ! Stupid typo. (I guess I'm completely confused by separated
      "#" and preprocessor command :/ Second typo in two lines.)

2008-09-23 17:09 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/config/os2/gcc.cf
    * enabled -DTCPV40HDRS in default builds, can be disabled by
      setting HB_OS2_NEW_TCP=yes environment variable

2008-09-23 07:05 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbwhat/wincorec.c
    % hb_retptr() => HB_RETWI()

2008-09-23 06:51 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbwin/win_ole.c
    % hb_vmPushDynDym() => hb_vmPushDynSym()

2008-09-23 15:38 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/codebloc.c
    * updated old and not longer valid comment

  * harbour/source/vm/memvars.c
    * minor code formatting

  * harbour/source/common/expropt2.c
    ! fixed bug in power math expression optimization caused
      by two lines left in the code by mistake. Many thanks to
      Maurilio for locating the problem.

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/hvm.c
    % added support for buffering hb_stack TLS access be preloading
      the stack pointer into C stack function local variables.
      Please make speed tests for MT mode with different C compilers
      and different platforms.

2008-09-23 14:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddads/adsmgmnt.c
    * Minor.

2008-09-23 14:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbole/ole2.c
  * contrib/hbgf/hbgfwin/winapi.c
  * contrib/hbgf/hbgfos2/os2pm.c
  * contrib/hbwin/win_ole.c
  * contrib/hbwhat/wincorec.c
  * source/rtl/do.c
  * source/rdd/workarea.c
    % hb_vmPushSymbol( hb_dynsymSymbol( p ) ) -> hb_vmPushDynSym( p )

  * contrib/hbwhat/wincorec.c
    ! WHT__GETDLGPROC() fixed.
    ! hb_vmPushSymbol( hb_itemGetSymbol( p ) ) -> hb_vmPushDynSym( p )

  * contrib/hbgf/hbgfwin/winapi.c
  * contrib/hbwhat/wincorec.c
  * contrib/hbwhat/whtmsg.c
  * contrib/hbwhat/whtbmp.c
  * contrib/hbwhat/whtcomm.c
  * contrib/hbwhat/whthead.c
  * contrib/hbwhat/whthead.c
  * contrib/hbwhat/whtkbrd.c
  * contrib/hbwhat/whtlv.c
  * contrib/hbwhat/whttext.c
  * contrib/hbwhat/whtwnd.c
  * contrib/hbwhat/whtdlg.c
  * contrib/hbwhat/whttab.c
    ! Fixed few LPARAM/WPARAM passings to be 64-bit compatible.
      (hb_parnl()/hb_parni() -> hb_parnint())

  * source/vm/thread.c
  * source/rtl/do.c
  * source/rdd/usrrdd/usrrdd.c
  * contrib/hbwhat/whtlv.c
  * contrib/hbwhat/whtfont.c
    % hb_vmPushSymbol( hb_itemGetSymbol( p ) ) -> hb_vmPush()
    ; QUESTION/TOFIX: In whtlv.c and whtfont.c this may be wrong,
                      and hb_vmPushDynSym() could be needed instead.
                      Can someone take a look pls?

2008-09-23 08:45 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
   * contrib/rddads/adsmgmnt.c
     + ADSMGSETHANDLE( nHandle ) to set an existing connection handle
     ! ADSMGGETUSERNAMES() that was skipping first user

2008-09-23 11:27 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/fm.c
    ! Enabled USE_DL_PREFIX for _MSC_VER compilers.
      This may be refined, but without this setting MSVS 2008
      would give an error on exit and GPF.

2008-09-23 11:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbthread.h
    % Enabled TLS for _MSC_VER compilers.
    ; Tested with MSVS 2008 32-bit. Someone pls test with
      older/other MSVC compilers (especially MSVC6 and WinCE mode)
      to refine the default setting if needed.

2008-09-22 22:08 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    ! fixed GPF when hb_threadSelf() was executed from thread without
      allocated ID object (f.e. main thread)

2008-09-22 16:19 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * harbour/contrib/rddads/ads1.c
    * using AdsCreateIndex61 when ADS_LIB_VERSION >= 610. This functions use
      ADS_DEFAULT as index page size parameter and force Advantage to compute
      a page size based on the key size to provide optimal balancing.

2008-09-22 20:54 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    * do not allow to close production index by ordBagClear() when
      strict FP compatibility is set for production index or when
      _SET_AUTOPEN is enabled. It compatible behavior to ordListClear()
      function

2008-09-22 20:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/classes.c
  * harbour/source/rdd/workarea.c
    * pacified BCC warnings

  * harbour/source/debug/dbgwa.prg
  * harbour/source/debug/debugger.prg
  * harbour/source/debug/dbghelp.prg
    * eliminated two static variables

2008-09-22 14:34 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * source/rtl/dbedit.prg
  * source/rtl/dirscan.prg
  * source/rtl/errorsys.prg
  * source/rtl/hbini.prg
  * source/rtl/listbox.prg
  * source/rtl/objfunc.prg
  * source/rtl/tbrowse.prg
  * source/rtl/tclass.prg
  * source/rtl/tget.prg
  * source/rtl/tgetlist.prg
    * Code formating and some local decarations inlined

2008-09-22 19:32 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
   ! corrected previous ChangeLog entry: instead of hb_waDetach()/
     hb_waRequest() should be db_dbDetach()/hb_dbRequest()

  * harbour/source/vm/hvm.c
   * disabled PRG tracing in default builds. If someone wants to
     use this feature then he should recompile Harbour with HB_PRG_TRACE
     macro. In such case tracing can be enabled/disabled by __TRACEPRGCALLS()
     function. HB_NO_TRACE macro is not longer usable - it's default in
     current code.

  * harbour/source/vm/classes.c
    + added PRG function __clsPreallocate() which extends the size of
      classes buffer to given value to avoid later RT reallocations.
      It may be useful in some very seldom cases for MT programs which
      will allocate dynamically at runtime more then 16386 classes.
      In practice rather impossible though who knows ;-)

  * harbour/source/rdd/workarea.c
    * set default preallocation size for RDD nodes to 128
    + added PRG function __rddPreallocate() which extends the size of
      RDD nodes buffer to given value to avoid later RT reallocations.
      It may be useful in some very seldom cases for MT programs which
      will register dynamically at runtime more then 128 RDDs when other
      threads are active and may use RDD nodes.

  * harbour/include/hbrddcdx.h
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    + added ORDLSTDELETE() method.
      Now ordbagClear() should work for DBFCDX.

2008-09-22 19:24 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
    - Removed recently added cw32mt.lib.
    ; Now, for MT builds 'set HB_USER_LIBS=cw32mt.lib' should
      be used. Where cw32mt.lib may also be cp32mt.lib,
      cp32mti.lib, cw32mti.lib depending on other factors.
      Notice that even this would only work if Harbour was
      built with 'set HB_BUILD_ST=no'.

2008-09-22 19:19 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * common.mak
  * source/rtl/hbgtcore.c
    ! Any messing with HB_GT_LIB and HB_GT_DEFAULT was removed
      from non-GNU make files, to leave these things to the
      source code itself (just like in GNU-make).
    + Added automatic selection of GTWVT from source code
      for WinCE, so that it also works in GNU-make.

  * source/rdd/dbfcdx/dbfcdx1.c
    ! Restored RTE behaviour when key length is zero.
    ! Recently added C53 compatible but C52 incompatible
      RTE (throwing an error when index key is longer than
      240 chars) enabled only if HB_COMPAT_C53 and HB_C52_STRICT
      are both #defined to not make valid C52 apps crash.
    ; Someone pls review me.

2008-09-22 16:37 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbregex.c
    * added hack to force linking newer PCRE versions not the one included
      in BCC RTL when Harbour is compiled without HB_PCRE_REGEX_BCC.
      If user application will uses regex expressions (directly or indirectly
      by some RTL functions) then lining it without HBPCE should give link
      time error that pcre_config() function is missing.

2008-09-22 16:14 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    + added support for using stack macros without native compiler TLS
      support in MT mode.
    * enabled stack macros by default for OS2 MT builds
      David, if possible please try speedtst.prg with current MT HVM

2008-09-22 15:23 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbinet.c
    ! fixed W32 compilation

2008-09-21 20:29 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * harbour/contrib/hbwhat/*.c;*.prg
    ! Prefixed every WHAT specific functions with "WHT_" and
      Windows specific functions with "VWN_"

    ; NOTE: Now onwards HBWhat.lib use proprietory namespace and
      can be used alongwith any other WINAPI library. In the next
      few days I will upload a working demo taking care of all
      the components together.

    ; TOFIX: HBWhat.lib is not usable as is still.
      Viktor, please examine these two functions in wincorec.c
         HB_FUNC( WHT__GETDLGPROC )
         BOOL CALLBACK __DlgProc( H... )
      where I have changed the casts to original code. Only then
      I could get it worked. It is only for WHT_DialogBox() and
      I am sure until we fix it no other component will work.
      It should be easy, IMO, just I do not know the whole story.
      Probably the above change will not let HbWhat to be compliled
      by other compilers or they will produce warnings.

2008-09-22 04:27 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/hbinet.c
    ! fixed typo in previous commit which broke MS-Win builds
    * check hb_vmReaquestQuery() after executing use codeblocks

2008-09-22 03:49 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/hvm.c
    + added support for nested hb_vmUnlock()/hb_vmLock() calls

  * harbour/source/rtl/hbinet.c
    * encapsulated all potentially slow inet functions inside
      hb_vmUnlock()/hb_vmLock() calls

2008-09-22 02:34 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
  * harbour/source/vm/thread.c
    + added .prg function hb_threadSelf() -> <pThID> | NIL
      It returns thread ID pointer variable or NIL when thread was
      registered without it (main thread and some 3-rd party threads
      created by C API)

  * harbour/source/vm/hvm.c
    * protect s_InitFunctions and s_ExitFunctions by mutex

  * harbour/source/common/hbverdsp.c
    * use hb_verBuildDate() instead of __DATE__ and __TIME__ in
      hb_verBuildInfo() function to report the same time in both
      cases.

2008-09-21 23:03 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapi.h
  * harbour/source/vm/arrays.c
    + added hb_arrayGetPtrGC(), hb_arrayGetSymbol(), hb_arraySetSymbol()

  * harbour/include/hbapi.h
  * harbour/source/vm/dynsym.c
    + added hb_dynsymProtectEval(). Works like hb_dynsymEval() but
      keeps dynamic symbol table locked during whole execution.
      It's faster then hb_dynsymEval() but user function may not
      access dynamic symbol tbale to not cause recursive locks
    + added protection against possible dynamic symbol table resizing
      during hb_dynsymEval() by other threads.

  * harbour/include/hbapi.h
  * harbour/source/vm/memvars.c
    + added hb_memvarSaveInArray( int iScope, BOOL fCopy ) and
      hb_memvarRestoreFromArray( PHB_ITEM pArray )
    % use hb_dynsymProtectEval() in places where it's safe

  * harbour/include/Makefile
  + harbour/include/hbthread.ch
    + added header file with thread constant definitions:
         HB_THREAD_INHERIT_PUBLIC
         HB_THREAD_INHERIT_PRIVATE
         HB_THREAD_INHERIT_MEMVARS
         HB_THREAD_MEMVARS_COPY

  * harbour/include/hbthread.h
  * harbour/source/vm/hvm.c
  * harbour/source/vm/thread.c
    + added support for inheriting visible memvars from current
      thread when new thread is created. Memvars in child thread
      can be shared with parrent or they can be copied. See HB_THREAD_*
      attributes defined in hbthread.ch, f.e.:
         hb_threadStart( HB_THREAD_INHERIT_PUBLIC, @thFunc() )
      or:
         hb_threadStart( HB_BITOR( HB_THREAD_INHERIT_MEMVARS + ;
                                   HB_THREAD_MEMVARS_COPY ), ;
                          @thFunc() )
      Please note that when child thread creates new PUBLIC variable
      which didn't existed when thread was started then it's visible
      only for this thread and optionally for its child threads but
      not for parent thread.
      Please also remember that write access to shared memvars have
      to be protected by users.

  + harbour/tests/mt/mttest08.prg
    + added test code for thread memvars inheritance

2008-09-20 05:37 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/common.mak
  * harbour/source/rdd/Makefile
    ! restored dbdetach.* in makefiles

  + harbour/source/rdd/dbdetach.c
    + added file I forgot to add in previous commit

  * harbour/source/vm/thread.c
    + added support for using function name as string in HB_THREADSTART()
    + added support for thread attributes. They will be used in the future.

2008-09-19 21:28 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * common.mak
  * source/rdd/Makefile
    * removed dbdetach.* from make constructors

2008-09-20 03:38 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    * minor modification: #ifdef ... => #if defined( ... )

  * harbour/source/rtl/gtcrs/gtcrs.c
  * harbour/source/rtl/gttrm/gttrm.c
    ! fixed reentrance counter resetting

2008-09-20 00:42 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + harbour/source/rdd/dbdetach.c
    + added .prg functions:
         hb_dbDetach( [<nWorkArea>|<cAlias>], [<xCargo>] ) -> <lSuccess>
         hb_dbRequest( [<cAlias>], [<lFreeArea>], [<@xCargo>], [<lWait>] )
            -> <lSuccess>
      The first one detach workarea from current thread and move it
      to special hidden holder. Before detaching all relations (parent
      and child) to detached workarea are cleared.
      The second one restores area from the holder and attach it
      to calling thread.
    + added Xbase++ compatible functions DbRelease() / DbRequest()
      Xbase++ users please test. If possible please also check what Xbase++
      does with relations and active RLOCKs/FLOCK on released WA.

2008-09-19 22:27 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/set.c
    ! fixed casting

  * harbour/contrib/xhb/xhbcopyf.c
    * replaced TABs with SPACEs

  * harbour/include/hbapirdd.h
  * harbour/source/rdd/workarea.c
  * harbour/source/rdd/wacore.c
  * harbour/source/rdd/wafunc.c
    + added support for detaching and attaching workareas

  * harbour/source/vm/hvm.c
    % minor cleanup in thread return code

  * harbour/include/hbthread.h
  * harbour/source/vm/thread.c
    * unlock HVM stack during thread join operation
    * added workaround for DosWaitThread() which seems to fail if thread
      terminated before
    ; added TOFIX note for OS2 and join code

2008-09-19 12:21 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/bmdbfcdx.c
  * source/rdd/dbfcdx/dbfcdx1.c
    ! fixed return value after rt error.
    * Added rt error as in clipper when OrdkeyVal is greater than 240, with default
      capabilities as in clipper.
      code to test it:
      FUNCTION MAIN()

         LOCAL i
         LOCAL nSec := SECONDS()

         REQUEST DBFCDX
         RddSetDefault( "DBFCDX" )

         DBCREATE( "__MYTEST", { { "test", "C", 241, 0 } } )

         USE __MYTEST
         INDEX ON FIELD->Test TO __MYTEST

         FOR i := 1 TO 10
            APPEND BLANK
            FIELD->test := Replicate( "1", 240 ) + Str( 10 - i, 1 )
         NEXT

         DbGoTop()
         ? &(OrdKey())
         ? "Length of &(OrdKey()) :" + Str( Len( &(OrdKey()) ) )
         ? OrdKeyVal()
         ? "Length of OrdKeyVal() :" + Str( Len(OrdKeyVal()) )
         WHILE ! EOF()
            ? Right( FIELD->Test, 1 )
            DbSkip()
         ENDDO

         USE
         FERASE( "__MYTEST.DBF" )
         FERASE( "__MYTEST.CDX" )

      RETURN NIL

2008-09-19 11:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/fcopy.prg
  * contrib/hbnf/dfile.prg
  * contrib/hbpgsql/pgrdd.prg
  * contrib/hbtpathy/telepath.prg
  * contrib/rddado/adordd.prg
    + Some STATICs converted to THREAD STATIC.

  * contrib/hbtip/ftpcln.prg
    * STATIC var renamed.

2008-09-18 22:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/vm/fm.c
    ! Suppressing warnings for foreign dlalloc.c code for BCC.

2008-09-18 21:31 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/xhb/Makefile
  * contrib/xhb/common.mak
  + contrib/xhb/xhbcopyf.c
  + contrib/xhb/tests
  + contrib/xhb/tests/testcp.prg
  + contrib/xhb/tests/bld_b32.bat
  + contrib/xhb/tests/bld_vc.bat
    + Added XHB_COPYFILE() function, which is (more or less)
      compatible with xhb's extended __COPYFILE() function.
      Thanks to Toninho for the initial code and hint.

2008-09-18 20:41 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/thread.c
    * detach local parameters passed by reference to hb_threadStart()
      to avoid possible calling thread HVM stack corruption

2008-09-18 19:28 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed memory leak - Many thanks to Miguel for report

2008-09-18 17:24 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_rpm.sh
    * use rpm to test if curl-devel package is installed

  * harbour/include/hbapi.h
  * harbour/source/common/hbstr.c
    + added hb_strduptrim() and hb_strlentrim()

  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    ! control total length of KEY and FOR expression together
      to be compatible with other CDX drivers.
      Total length of both expressions cannot exceed 512 bytes
      (with two trailing ASCII 0 characters)

2008-09-18 15:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbcurl/hbcurl.c
    ! Made it compile with a slightly older (~7.15.x)
      versions of libcurl. Please test.

2008-09-18 14:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_vc.mak
    * Synced with BCC to build in ST mode by default.

  ; TOFIX: There seems to be an old problem where contrib
           .prg files won't get rebuilt after a modification
           by running make_vc.bat (MSVC only).
           Marek, if you see this, could you take a look at it?

2008-09-18 11:48 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbmisc/fileread.prg
    * Changed to use natic CLASS syntax.

2008-09-18 11:25 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_rpm.sh
    ! Attempt to detect libcurl.
      [TOMERGE 1.0]

  * contrib/hbziparc/hbziparc.prg
  * contrib/hbwin/win_tole.prg
  * contrib/hbvpdf/hbvpdf.prg
    * Some STATIC vars converted to THREAD STATIC.
    * aReport renamed to s_aReport.
      (is it a good idea to name 'ts_name' THREAD STATIC
      vars?)

  * utils/hbmake/hbmake.prg
    ! Patch by Bill Robertson applied.
      This should eliminate any messing with harbour.cfg.

2008-09-18 11:02 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/bmdbfcdx.c
  * source/rdd/dbfcdx/dbfcdx1.c
    ! fixed generation error when length of key is greater than 256 as Clipper.
      instead of wait for internal error.
    * Used defined errors instead of hardcoded numbers.

2008-09-18 07:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rtl/cdpapi.c
    * explicit casting to char * in 1-st strchr() parameter as workaround
      for wrong function prototype in DMC header files

2008-09-18 07:21 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    * use assembler version of atomic inc/dec operation in all x86 based
      GCC builds - it should noticeable improve OS2 MT build speed,
      please test.

  * harbour/include/hbcomp.h
  * harbour/include/hbapicdp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbgtcore.h
  * harbour/include/hbapifs.h
  * harbour/include/hbwince.h
  * harbour/include/hbexpra.c
  * harbour/include/hbexprop.h
  * harbour/include/hbmacro.h
  * harbour/include/hbapigt.h
  * harbour/include/hbapi.h
  * harbour/include/hbapiitm.h
  * harbour/include/hbexprb.c
  * harbour/source/pp/ppcore.c
  * harbour/source/pp/hbpp.c
  * harbour/source/vm/macro.c
  * harbour/source/vm/cmdarg.c
  * harbour/source/vm/arrays.c
  * harbour/source/vm/extrap.c
  * harbour/source/vm/memvars.c
  * harbour/source/vm/eval.c
  * harbour/source/vm/extend.c
  * harbour/source/vm/set.c
  * harbour/source/main/harbour.c
  * harbour/source/common/hbfsapi.c
  * harbour/source/common/reserved.c
  * harbour/source/common/expropt1.c
  * harbour/source/macro/macro.yyc
  * harbour/source/macro/macro.y
  * harbour/source/macro/macro.yyh
  * harbour/source/macro/macrolex.c
  * harbour/source/rtl/gtdos/gtdos.c
  * harbour/source/rtl/gtwin/gtwin.c
  * harbour/source/rtl/gtxwc/gtxwc.c
  * harbour/source/rtl/gtos2/gtos2.c
  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/cdpapi.c
  * harbour/source/rtl/gtcrs/gtcrs.c
  * harbour/source/rtl/hbtoken.c
  * harbour/source/rtl/gtchrmap.c
  * harbour/source/rtl/gtstd/gtstd.c
  * harbour/source/rtl/gtsln/mousesln.c
  * harbour/source/rtl/gtsln/gtsln.c
  * harbour/source/rtl/gtsln/kbsln.c
  * harbour/source/rtl/gttrm/gttrm.c
  * harbour/source/rtl/gtpca/gtpca.c
  * harbour/source/rtl/hbhex.c
  * harbour/source/rtl/gtgui/gtgui.c
  * harbour/source/rtl/gt_tpl/gt_tpl.c
  * harbour/source/rtl/gtcgi/gtcgi.c
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/source/rtl/strtran.c
  * harbour/source/rtl/hbinet.c
  * harbour/source/rtl/gtapi.c
  * harbour/source/rtl/filesys.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbsql.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/source/rdd/hbsix/sxfname.c
  * harbour/source/compiler/ppcomp.c
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/cmdcheck.c
  * harbour/source/compiler/hbdbginf.c
  * harbour/source/compiler/genc.c
  * harbour/source/compiler/hbident.c
  * harbour/source/compiler/hbusage.c
  * harbour/source/compiler/gencc.c
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.y
  * harbour/contrib/gtalleg/gtalleg.c
  * harbour/contrib/hbct/charlist.c
  * harbour/contrib/hbct/charmix.c
  * harbour/contrib/hbct/screen1.c
  * harbour/contrib/hbct/atrepl.c
  * harbour/contrib/xhb/hboutdbg.c
  * harbour/contrib/xhb/hbxml.c
  * harbour/contrib/xhb/hbxml.h
  * harbour/contrib/hbgt/strexpan.c
  * harbour/contrib/hbsqlit3/sqlite3/sqlite3.c
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/hbclipsm/status.c
  * harbour/contrib/hbclipsm/gauge.c
  * harbour/contrib/hbmisc/stringsx.c
  * harbour/contrib/hbtip/utils.c
  * harbour/contrib/hbgf/hbgfgtk/msginfo.c
  * harbour/contrib/hbgf/hbgfgtk/harbgtk.h
  * harbour/contrib/hbbmcdx/bmdbfcdx.c
  * harbour/utils/hbmake/hbmgauge.c
    * use const char * instead of char * in places which should be marked
      as const

2008-09-18 01:17 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/fm.c
  + harbour/source/vm/dlmalloc.c
    + added alternative memory manager written by Doug Lea
      It can be activated by recompiling Harbour with HB_FM_DL_ALLOC macro.
      Please make test on different platforms with different C compilers.
      Linux users will not benefit from it because the default GLIBC MM
      is derived from a version of code.
      NOTE: the results may strongly depend on total memory allocation
      and will be different then in simple memory tests.

2008-09-17 22:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddado/adordd.prg
    ! Marking one STATIC var as thread STATIC.
    ; BTW, this should be revised for whole contrib .prg code.

2008-09-17 18:38 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    + added macros to disable default native compiler TLS support:
      HB_NO_TLS

  * harbour/source/vm/set.c
    ! fixed GPF when set listeners were removed

2008-09-17 18:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_gcc.sh
  * contrib/make_gcc_all.sh
    ! cyg to w32 architecture conversion got uncommented.

2008-09-17 17:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkslib.sh
  * make_gcc.sh
  * make_gnu.sh
  * make_tgz.sh
  * make_xmingw.sh
  * make_xmingwce.sh
  * contrib/make_gcc_all.sh
  * contrib/mtpl_gcc.sh
    - Removed unnecessary explicit SunOS detection.
    - Removed unnecessary explicit Darwin detection (to be tested).

  * contrib/mtpl_gcc.sh
    - Detecting 'cyg' platform looks unnecessary here and may
      only create problems, so it got removed.

  * contrib/make_gcc_all.sh
    ! Fixed 'cyg' platform in contrib make files.

  * make_tgz.sh
    ! Fixed .tgz generation for SunOS. Thanks Przemek.
      I simply copied the Linux method here, I'm not sure 64-bit
      code would apply here, too.
    ! Fix for SunOS to link against curses instead of ncurses lib.
      Someone pls verify me.
    ; TOFIX: make_tgz.sh in OpenSolaris still has these errors:
             ld: fatal: relocations remain against allocatable but non-writable sections.
             ld: fatal: library -lharbour: not found

2008-09-17 14:04 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-mkslib.sh
  * make_xmingwce.sh
  * make_gcc.sh
  * make_xmingw.sh
  * make_gnu.sh
  * make_tgz.sh
    + Added SunOS platform detection as an attempt to make
      make_tgz.sh work on OpenSolaris.
    ; TOFIX: Still, when trying to use make_tgz.sh in OpenSolaris,
             I'm getting these errors:
             ---
             ld: fatal: library -lharbour: not found
             ld: fatal: library -lncurses: not found
             ---
             gtar: wheel: %s: Invalid group

2008-09-17 13:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/memtst.prg
  * tests/speedtst.prg
    * Made them compile with < 1.1 Harbour versions.

2008-09-17 01:29 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/make_xmingwce.sh
  * harbour/make_xmingw.sh
    + added an option to build utility binaries in cross builds

  * harbour/source/vm/thread.c
    ! fixes in OS2 builds MT builds

2008-09-17 01:17 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * debian/changelog
    * Synced with 1.0.1.

  * source/pp/ppcore.c
    ! Minor typo in one PP error message. (sync 1.0.1)
    * Cleaned ":" from all PP error/warning messages to be
      friendly with Eclipse.

  * source/compiler/hbgenerr.c
    * Cleaned some more ":" chars from compiler error/warning
      messages to be friendly with Eclipse.
    ; NOTE: Few more still remain. If you have an idea how to rephrase these, pls tell:
            "Bound error: '%s'"
            "Syntax error: '%s'"
            "Syntax error: \"%s at '%s'\""
            "Invalid lvalue: '%s'"
            "Invalid use of '@' (pass by reference): '%s'"
            "3Incompatible type in assignment to declared array element expected: '%s'"
            "4Suspicious type in assignment to declared array element expected: '%s'"

  * utils/hbmake/hbmake.prg
    * Updated by large patch from Bill Robertson.
      Adds several enhancements, fixes and optimizations
      to the previous version.

  * utils/hbdoc/hbdoc.prg
  * utils/hbmake/hbmake.prg
  * utils/hbrun/hbrun.prg
    * Changed the way version number is shown.

  * utils/hbmake/hbmake.prg
    * Updated MT lib lists. (untested)

  * make_b32.mak
    * Minor sync with make_vc.mak.

  * make_vc.mak
    * Attempt to implement hbvmmt.lib just like in
      make_b32.mak to make them synced.

2008-09-16 19:11 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/utils/hbtest/rt_class.prg
    ! fixed description message

  * harbour/common.mak
  * harbour/utils/hbtest/Makefile
  * harbour/utils/hbtest/hbtest.prg
  + harbour/utils/hbtest/rt_mt.prg
    + added simple MT test for fast checking MT builds
      NOTE: DMC builds crashes with and without direct TLS access
            If possible it has to be fixed. Now MT mode is not supported
            for this compiler.

2008-09-16 15:57 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    * do not use native TLS support in BCC builds when CodeGuard
      is enabled

2008-09-16 14:49 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    + added DMC to list of compilers which can use __declspec( thread )
    + automatically use TLS for Linux and GLIBC >= 2.6 on x86* machines

  * harbour/include/hbthread.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/thread.c
    ! clean up typos in OS2 builds

2008-09-16 13:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/compiler/hbgenerr.c
    * Most ':' chars removed from Harbour compiler error messages.
      Few still remain, where I wasn't sure of the exact meaning
      or final layout of the texts.
      Warnings are also a TODO yet.
      Please review.
    ; NOTE: We do this to be friendly with Eclipse and maybe other
            IDEs, where ':' in messages in handled specially.

2008-09-16 12:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * contrib/mtpl_b32.mak
    ! Removed CG switches.

2008-09-16 05:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/gmake.txt
  * doc/gtapi.txt
  * doc/hbmake.txt
  * doc/windll.txt
    * Useless changes.

  * make_vc.mak
    * Some untested MT support for MSVC.

  * include/hbdefs.h
    ! Removed mistakenly committed experiment to pull in
      MT related libs. This caused the strange build problem due
      to empty lib name passed to #pragma. This could work
      in case someone wanted to deal with it in the future.

2008-09-15 23:08 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  + harbour/tests/memtst.prg
    + added some simple tests for memory manager

  * harbour/tests/speedtst.prg
    * reduced the size of allocated block size to not test C-RTL
      memory manager but HVM speed

  * harbour/include/hbthread.h
    * added for x86@32 PTHREADS builds HB_ATOM_GET() and HB_ATOM_SET()
      so they can be used together with HB_ATOM_INC()/HB_ATOM_DEC()
      also for x86@64 but with reduced to 32bit reference counter.

2008-09-15 21:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * contrib/mtpl_b32.mak
    + Added -vG -Od to debug flags (CodeGuard and no optimization
      if HB_BUILD_DEBUG is 'yes').
    ; I couldn't test it, because I'm getting a fatal error
      when trying with my so far working BCC build script.
      Fatal: Unable to open file '.OBJ'

2008-09-15 20:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/multifnc/Makefile
  * doc/gmake.txt
  * bin/hb-func.sh
  * bin/postinst.sh
  * include/hbdefs.h
  * source/vm/Makefile
  * source/vm/vmmt/Makefile
    ! Changed mingw32 to mingw in remaining places.

2008-09-15 17:53 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbthread.h
    + added assembler MT version of HB_ATOM_INC/HB_ATOM_DEC operation
      for x86@32

  * harbour/source/vm/fm.c
    ! removed #undef HB_ATOM_INC/HB_ATOM_DEC I left by mistake

2008-09-15 14:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
  * bin/bld_os2.cmd
  * contrib/gtwvg/tests/bld_b32.bat
  * contrib/hbgd/tests/bld_b32.bat
    ! Changed CFLAGS to C_USR.

2008-09-15 13:38 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/tests/speedtst.prg
    * small update in speedtst.prg. It should be enough to make test and
      compare MT and ST mode speed.
      Please make test with different C compiler and send results to
      devel list.

2008-09-15 11:16 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * tests/bld_b32.bat
  * tests/bld_vc.bat
    + Added bld files for tests.

  * tests/bld_b32_dll.bat
    ! .dll name updated.

2008-09-15 04:33 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/bin/pack_src.sh
    * added file list to archive so it's possible to recreate it later without SVN data

  * harbour/common.mak
  * harbour/make_b32.mak
  * harbour/make_gcc.mak
    + added HBVMMT library for default builds
      BCC version not tested - please test.

  * harbour/source/vm/hvm.c
    * moved language and code page setting before class and error initialization

  * harbour/source/rtl/fserror.c
  * harbour/source/rtl/fstemp.c
  * harbour/source/rtl/fssize.c
  * harbour/source/rtl/hbffind.c
  * harbour/source/rtl/filesys.c
    ! fixed overloading FS error codes by other operations, f.e. accessing
      TLS data by OS API function call

2008-09-15 01:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbverdsp.c
    * Undone prev change.

2008-09-14 22:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * utils/hbmake/hbmake.prg
    ! Fixed two typos in last commit. Thanks to Bill Robertson.

2008-09-14 22:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/common/hbverdsp.c
    + Showing MT status on //BUILD screen.

  * contrib/hbvpdf/hbvpdf.prg
    ! Fix to previous modification (fixing bookmarks).

2008-09-14 22:15 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbsetup.h
    * accept both settings: HB_FM_STATISTICS and HB_FM_STATISTICS_OFF
      without errors

  * harbour/bin/postinst.sh
    * added small trick to make HBFM lib compilation not  dependent on
      default HB_FM_STATISTIC settings

  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
    + added C function hb_vmIsMt()

  * harbour/source/vm/cmdarg.c
    * report MT HVM status when program is executed with //INFO
      parameter

  * harbour/source/vm/fm.c
    ! fixed memory statistic MT protection in hb_xrealloc() operation

  * harbour/config/w32/owatcom.cf
    * use echo instead of echo. for non empty output.

  * harbour/include/hbextern.ch
  * harbour/source/vm/thread.c
    + added .prg function hb_threadTerminateAll() - it sends QUIT request
      to each HVM thread and waits for their termination. Can be executed
      only by main HVM thread.

2008-09-14 16:30 UTC+0200 Lorenzo Fiorini (lorenzo.fiorini/at/gmail.com)
  * contrib/hbvpdf/hbvpdf.prg
  * contrib/hbvpdf/hbvpdf.ch
  * contrib/hbvpdf/test/pdf_demo.prg
    ! Mostly a cleanup of the code, added some functions to avoid the use
      of publics vars.

2008-09-14 20:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/common.ch
    % IS*() macros now using hb_Is*() functions instead of
      ValType() calls.

2008-09-14 19:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
    + Now setting 'HB_BUILD_ST = no' will generate an MT build.
      TODO: Change the default to 'yes' should be the way to go
            IMO.

  * bin/bld.bat
    + Added cw32mt.lib for BCC32 to make it work for MT Harbour.
    ; I hope this won't break ST Harbour builds, a quick tests
      proved not.

2008-09-14 19:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * make_gcc.mak
    * A change with the goal to further clean duplicate build
      controlling options and make the configuration of GNU
      and non-GNU build systems closer. INCOMPATIBLE.
      Builders should make the following changes in their
      configurations and build scripts:
      - CFLAGS -> C_USR
      - CLIBFLAGS -> C_USR
      - LDFLAGS -> L_USR
      - HARBOURFLAGS -> PRG_USR
    * BCCDLL_WITH_DYNRT -> HB_BCCDLL_DYNRT
      Shouldn't this be the default, if it's marked as 'recommended'?
    ; Basic rules for builders is now pretty simple:
      C_USR for .c options, L_USR for link options,
      PRG_USR for .prg options.
    ; L_USR doesn't work the same way as in GNU-make, yet.
    ; Also expect, that in the future - even before 1.1 release -
      these switches might be also standardized to be
      HB_USR_C, HB_USR_PRG, HB_USR_L, HB_USR_A.

2008-09-14 17:59 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/hbnf/tests/nftest.prg
    + Adapted hbnf test program from xhb.

  * contrib/hbnf/common.mak
    ! File list synced with the GNU-make one.

  * source/common/hbver.c
    * "Intl." removed from the version number. Besides mimicing
      CA-Cl*pper there is not point in including this, since
      all Harbour compilers are by default international version.

2008-09-14 16:10 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/hb-func.sh
  * source/vm/hvm.c
  * source/rtl/hbgtcore.c
  * source/rtl/gtchrmap.c
    ! Global vars given std names:
      s_pszLinkedMain        -> hb_vm_pszLinkedMain
      s_defaultGT            -> hb_gt_szNameDefault
      s_szDefaultCharMapFile -> hb_gt_szCharMapFileDefault
    ; INCOMPATIBLE.

2008-09-14 15:56 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * include/hbsetup.ch
    * Turned off HB_LEGACY_LEVEL by default.
    ; INCOMPATIBLE.

  * doc/whatsnew.txt
    * Synced with 1.0.1.

  * make_vc.mak
  * contrib/mtpl_vc.mak
    * MSVS warning level changed to -W4 (with one warning
      type manually excluded).
    ; NOTE/TOFIX: This will still generate quite some warnings,
                  hopefully we can fix these until the next major
                  release.

2008-09-14 13:18 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * make_b32.mak
  * make_vc.mak
  * contrib/mtpl_b32.mak
  * contrib/mtpl_vc.mak
    + Attempt to add support for L_USR and A_USR
      in non-GNU make. A_USR is probably wrong, L_USR
      might also be. Please test.

2008-09-14 12:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-ce-spec
  * make_xmingwce.sh
  * harbour-w32-spec
  * bin/bld.bat
  * make_xmingw.sh
  * make_gnu.bat
  * make_gnu.sh
  * make_tgz.sh
    * mingw32 -> mingw changes.
    ! hbw32 -> hbwin fixes.

  + config/w32/bcc32.cf
  - config/w32/bcc.cf
    * Renamed back, because it's difficult to know in advance
      how they will solve this, and there would be too many places
      to update.

2008-09-14 12:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  - config/w32/bcc32.cf
  + config/w32/bcc.cf
  - config/w32/mingw32.cf
  + config/w32/mingw.cf
    * Cleaning some '32's from HB_COMPILER names.
      BCC and MinGW 64-bit are coming.
    ; Please update your build files. INCOMPATIBLE.

2008-09-14 12:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * harbour-ce-spec
  * harbour-w32-spec
  * harbour.spec
  * common.mak
  * include/hbver.h
    * Changed version number to 1.1.0

  * include/hbextern.ch
    + Added new thread functions.

  * harbour-ce-spec
  * harbour-w32-spec
  * contrib/Makefile
  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
  * contrib/make_vc_all.bat
  - contrib/hbw32
  + contrib/hbwin
  * contrib/hbwin/win_reg.prg
  * contrib/hbwin/win_os.prg
  * contrib/hbwin/win_tprt.prg
  * contrib/hbwin/common.mak
  - contrib/hbwin/hbw32.ch
  + contrib/hbwin/hbwin.ch
  - contrib/hbwin/tests/testw32p.prg
  + contrib/hbwin/tests/testprn.prg
  * contrib/hbwin/tests/testreg.prg
  * contrib/hbwin/tests/bld_b32.bat
  * contrib/hbwin/tests/testprt1.prg
  * contrib/hbwin/tests/bld_vc.bat
  * contrib/hbwin/tests/testprt2.prg
  * contrib/hbwin/Makefile
    * Renamed hbw32 to hbwin.
    * Renamed hbw32.ch to hbwin.ch.
    ; INCOMPATIBLE.

2008-09-14 11:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtalleg/ssf.h
    ! Fixed to compile with Cygwin.

  * contrib/hbwhat/whtsock.c
    ! Fixed for PellesC 4.5 where the inclusion order of
      Windows headers needs to be the opposite of what 5.0 needs.

  * contrib/hbwhat/whtilst.c
    ! Fixed to compile with Cygwin.

  * contrib/hbwhat/whtinet.c
    ! Added missing Windows macro for Cygwin.
    ! Fixed three warnings with Cygwin.

  * contrib/hbwhat/whtseria.c
  * contrib/hbwhat/whtreg.c
  * contrib/hbwhat/whtini.c
    ! Removed #include "tchar.h", because it's unnecessary,
      and breaks Cygwin.

  * contrib/hbwhat/whtsys.c
    ! Removed #include "htmlhelp.h", because it's unnecessary,
      and breaks Cygwin.

2008-09-13 19:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtalleg/ssf.h
    ! Turned off ASM for MSVC AMD64 mode.

  * contrib/gtalleg/Makefile
    ! Disabled for OpenWatcom. (maybe compilation could be
      fixed somehow, if someone is interested pls look into it.)

  * doc/whatsnew.txt
  * contrib/hbfimage/fi_winfu.c
  * contrib/hbfimage/fi_wrp.c
    ! Fixed for OpenWatcom.

  * contrib/gtwvg/wvgutils.c
  * contrib/gtwvg/wvgcore.c
    ! Silenced some MinGW/PelleC cast warnings.

  * contrib/hbw32/win_prt.c
    ! Fixed GCC (MinGW/Cygwin) warnings. The solution I choose is
      pretty ugly, if someone knows the right one, please help.
      Warning was:
      ../../win_prt.c:70: warning: missing initializer
      ../../win_prt.c:70: warning: (near initialization for `s_PortData[0].OldDCB')
    ! Fixed few remaining warnings / minor bugs.

  * contrib/hbwhat/whtlv.c
  * contrib/hbwhat/whtcomm.c
  * contrib/hbwhat/whttab.c
  * contrib/hbwhat/whttree.c
    ! Silenced MinGW 4.12 warnings.

  * contrib/hbwhat/whtdate.c
    ! Removed #include "tchar.h", which seems unnecessary and
      fixed Cygwin compilation.

  * contrib/hbwhat/whtsock.c
    ! Changed #include order of Windows headers to satisfy PellesC 5.

  ; TOFIX1: hbct / SETFDATI() has a possible bug here (shown in PelleC 64 bit):
    ../../files.c(264): warning #2006: [ISO] Conversion from 'void *' to 'int' is compiler dependent.
    ../../files.c(264): warning #2052: Conversion from 'void *' to 'int' is undefined.
    Problem is with HFILE / HANDLE conversion.

  ; TOFIX2: Here are some remaining 64-bit problems:
    ../../hb_btree.c(643): warning #2006: [ISO] Conversion from 'void *' to 'unsigned long int' is compiler dependent.
    ../../hb_btree.c(643): warning #2052: Conversion from 'void *' to 'unsigned long int' is undefined.
    ../../hb_btree.c(739): warning #2006: [ISO] Conversion from 'ioBuffer_T *' to 'unsigned long int' is compiler dependent.
    ../../hb_btree.c(739): warning #2052: Conversion from 'ioBuffer_T *' to 'unsigned long int' is undefined.
    ../../win_dll.c(511): warning #2006: [ISO] Conversion from 'void *' to 'unsigned long int' is compiler dependent.
    ../../win_dll.c(511): warning #2052: Conversion from 'void *' to 'unsigned long int' is undefined.
    ../../win_ole.c(761): warning #2006: [ISO] Conversion from 'LPDISPATCH' to 'long int' is compiler dependent.
    ../../win_ole.c(761): warning #2052: Conversion from 'LPDISPATCH' to 'long int' is undefined.
    ../../win_ole.c(1091): warning #2006: [ISO] Conversion from 'LPDISPATCH' to 'long int' is compiler dependent.
    ../../win_ole.c(1091): warning #2052: Conversion from 'LPDISPATCH' to 'long int' is undefined.
    ../../win_ole.c(1425): warning #2006: [ISO] Conversion from 'void *' to 'long int' is compiler dependent.
    ../../win_ole.c(1425): warning #2052: Conversion from 'void *' to 'long int' is undefined.
    ../../win_ole.c(1478): warning #2006: [ISO] Conversion from 'void *' to 'long int' is compiler dependent.
    ../../win_ole.c(1478): warning #2052: Conversion from 'void *' to 'long int' is undefined.
    ../../win_regc.c(94): warning #2006: [ISO] Conversion from 'HKEY' to 'unsigned long int' is compiler dependent.
    ../../win_regc.c(94): warning #2052: Conversion from 'HKEY' to 'unsigned long int' is undefined.
    ../../win_regc.c(116): warning #2006: [ISO] Conversion from 'HKEY' to 'unsigned long int' is compiler dependent.
    ../../win_regc.c(116): warning #2052: Conversion from 'HKEY' to 'unsigned long int' is undefined.

2008-09-13 13:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/dirstruc.txt
    * Updated.

  - contrib/hbgf/hbgfw32
  + contrib/hbgf/hbgfwin
  * contrib/hbgf/tests/bld_b32.bat
  * contrib/hbgf/tests/bld_vc.bat
  * contrib/hbgf/Makefile
  * contrib/hbgf/hbgfwin/common.mak
  * contrib/hbgf/hbgfwin/button.prg
  * contrib/hbgf/hbgfwin/winctrl.prg
  * contrib/hbgf/hbgfwin/form.prg
  * contrib/hbgf/hbgfwin/menuitem.prg
  * contrib/hbgf/hbgfwin/menu.prg
  * contrib/hbgf/hbgfwin/edit.prg
  * contrib/hbgf/hbgfwin/Makefile
  - contrib/hbgf/hbgfwin/win32.c
  + contrib/hbgf/hbgfwin/winapi.c
  - contrib/hbgf/hbgfwin/hbgfw32.ch
  + contrib/hbgf/hbgfwin/hbgfwin.ch
    * Removed some '32's.

2008-09-13 12:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
    * Updated.

2008-09-13 12:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbw32/Makefile
  * contrib/hbw32/common.mak
  * contrib/hbw32/hbw32.ch
  + contrib/hbw32/hbwin.h
  + contrib/hbw32/win_prt.c
  + contrib/hbw32/win_tprt.prg
  + contrib/hbw32/tests/testprt1.prg
  + contrib/hbw32/tests/testprt2.prg
    + Added Windows COM port handling functions.
      Contributed by Alex Strickland.
    ; I did some changes to clean warnings, few 64-bit issues,
      changed to use safe string functions, integrated
      the header into hbw32.ch, added a new general C level
      header, split BEGINDUMP into separate .c function,
      changed to ANSI C comments, marked statics with s_,
      fixed a few trashed string buffers and leaks in some
      error cases. Separated tests into distinct .prgs.
      Fixed for UNICODE mode. Minor optimizations, formatting.
    ; TODO: Test WinCE build.
    ; Please test, I don't have any COM ports on my system.

2008-09-13 10:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgcore.c
  * contrib/gtwvg/wvgutils.c
    ! Fixed 64-bit problems.
    ; Pritpal, could you please review and test these changes?

2008-09-13 09:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbvpdf/hbvpdf.prg
    ! Generic support functions made STATIC to avoid collision
      with similarly named functions in other libs (like hbct).

  * contrib/hbvpdf/hbvpdf.prg
  * contrib/hbvpdf/hbvpdft.prg
    * Using hb_run() instead of RUN and __run().

2008-09-12 19:30 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtalleg/Makefile
    * Excluded Cygwin.

  * contrib/hbwhat/Makefile
  * contrib/hbwhat/common.mak
  - contrib/hbwhat/whtdll.c
  - contrib/hbwhat/whtcall.c
    - Removed DLL related stuff from hbwhat, since we're
      maintaining (a better working) one already in hbw32,
      and hbwhat by itself doesn't seem to need this
      functionality internally. Users should migrate to
      the hbw32 functions, which work mostly similarly.

2008-09-12 19:08 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
    * Added some build notes.

  * contrib/gtalleg/Makefile
    ! Fixed POCC, XCC compiler exlusions.
    * Excluded DMC compiler.

  * contrib/hbwhat/Makefile
    * Excluded DMC compiler.

  * contrib/hbwhat/wincorec.c
    ! Workaround for a wrong Windows API declaration in
      __DMC__ headers.

2008-09-12 11:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbole/tests/bld_vc.bat
  * contrib/hbw32/tests/bld_vc.bat
    ! Added missing system libs.

2008-09-12 04:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgutils.c
    ! Fix to previous fix, so it works again in 64-bit builds.
         hb_retclen( ( LPSTR ) pdlgtemplate, ( ( ULONG ) p - ( ULONG ) pdlgtemplate ) ) ; =>
         hb_retclen( ( LPSTR ) pdlgtemplate, ( ( HB_PTRDIFF ) p - ( HB_PTRDIFF ) pdlgtemplate ) ) ;
    ; This way it's now in sync with similar function in hbwhat.

2008-09-12 01:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rdd/usrrdd/rdds/Makefile
  + source/rdd/usrrdd/rdds/arrayrdd.prg
  + source/rdd/usrrdd/rdds/vfpcdx.prg
    + Added two usrrdd based RDDs. Borrowed from xhb.
      Works of: Francesco Saverio Giudice and
                Miguel Angel Marchuet Frutos
    ; These were adapted to compile and link in Harbour, but
      I did no tests, so some more - hopefully minor - changes
      may happen to be needed.

2008-09-12 00:53 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/rddado/adordd.prg
  * contrib/rddado/adordd.ch
    * Merged changes from xhb.
      Some hbusrrdd.ch values seem to be missing from Harbour,
      related features will be automatically enabled if we
      implement them in our usrrdd.
      Please test.

2008-09-11 22:55 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
  * source/vm/cmdarg.c
    * Legacy undocumented symbols hb_hInstance and
      hb_hPrevInstance reenabled for 1.0.1, when HB_LEGACY_LEVEL
      is #defined. This is the default in 1.0.x. It will be
      turned off in 1.1.0.
      I did this to not break binary compatibility of 1.0.1
      with 1.0.0 for those apps that rely on these symbols
      (like gtwvg).

2008-09-11 21:29 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/tests/bld_vc.bat
    ! Added required list of system libs.

2008-09-11 14:08 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/rtl/gtpca/gtpca.c
  * source/rtl/gtwin/gtwin.c
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/gttone.c
    ! Fixed some core MSVC -W4 warnings.

  * contrib/hbnf/getenvrn.c
    ! Fixed compile problem in MSVC C++ mode surfaced after
      recent UNICODE fix.

2008-09-11 13:13 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/gtwvg/wvgutils.c
    ! Fixed last MSVC -W4 warnings.
    ; NOTE: Only these contribs have remaining -W4 warnings:
            hbbmcdx, hbbtree, hbct (in screen*.c).
            Plus core.

2008-09-11 12:00 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbnf/fttext.c
  * contrib/hbwhat/whtdate.c
  * contrib/hbwhat/wincorec.c
  * contrib/hbwhat/whtsock.c
  * contrib/hbwhat/whtseria.c
  * contrib/hbwhat/whtdlg.c
  * contrib/hbwhat/whtsys.c
  * contrib/hbwhat/whtmisc.c
  * contrib/hbwhat/whtcdlg.c
    ! Fixed all MinGW 4.3x warnings.
    ! Added workaround for slightly wrong MinGW definition for
      Windows DateTime_GetMonthCal() macro.

  * contrib/gtwvg/gtwvg.c
  * contrib/gtwvg/wvgutils.c
  * contrib/gtwvg/wvgcore.c
    ! Fixed all MSVC -W4 warnings.

  * contrib/gtwvg/gtwvg.h
    ! Fixed old bug, which surfaced after recently
      fixing __MINGW__ to __MINGW32__.
      Apparently, comctl32.h is never needed here.

  * config/rules.cf
  * contrib/hbbtree/tests/bld_djgp.bat
    % Removed -gc0. Now default.

  * contrib/make_b32_all.bat
  * contrib/make_vc_all.bat
    * Minor formatting.

  * contrib/hbgt/asciisgt.c
  * utils/hbdoc/hbdoc.prg
    - Removed unnecessary version strings. This was good
      in CVS times, but for SVN there is not much point.

  * utils/hbmake/hbmake.prg
    + Another patch session from Bill Robertson.
      Besides some further cleanups, this should fix
      some problems with the previous version.

  * source/lang/msghuiso.c
  * source/lang/msgskiso.c
  * source/lang/msgrukoi.c
  * source/lang/msghuwin.c
  * source/lang/msgzhgb.c
  * source/lang/msgskwin.c
  * source/lang/msg_tpl.c
  * source/lang/msgruwin.c
  * source/lang/msgelwin.c
  * source/lang/msgro.c
  * source/lang/msgpt.c
  * source/lang/msghriso.c
  * source/lang/msghrwin.c
  * source/lang/msgsliso.c
  * source/lang/msgbe866.c
  * source/lang/msgslwin.c
  * source/lang/msghe862.c
  * source/lang/msgcskam.c
  * source/lang/msggl.c
  * source/lang/msgtrwin.c
  * source/lang/msgeo.c
  * source/lang/msgbgiso.c
  * source/lang/msgbgwin.c
  * source/lang/msgskkam.c
  * source/lang/msges.c
  * source/lang/msguakoi.c
  * source/lang/msgzhb5.c
  * source/lang/msgeu.c
  * source/lang/msgpl852.c
  * source/lang/msgsr852.c
  * source/lang/msguawin.c
  * source/lang/msgde.c
  * source/lang/msgtr857.c
  * source/lang/msgru866.c
  * source/lang/msgcs852.c
  * source/lang/msgfr.c
  * source/lang/msgis850.c
  * source/lang/msgnl.c
  * source/lang/msghu852.c
  * source/lang/msgsk852.c
  * source/lang/msgca.c
  * source/lang/msgplmaz.c
  * source/lang/msgpliso.c
  * source/lang/msgplwin.c
  * source/lang/msgbgmik.c
  * source/lang/msgid.c
  * source/lang/msgbg866.c
  * source/lang/msgltwin.c
  * source/lang/msgsriso.c
  * source/lang/msgel.c
  * source/lang/msgsrwin.c
  * source/lang/msgbewin.c
  * source/lang/msgdewin.c
  * source/lang/msghr437.c
  * source/lang/msghr852.c
  * source/lang/msgko.c
  * source/lang/msgua866.c
  * source/lang/msghewin.c
  * source/lang/msgit.c
  * source/lang/msgsl437.c
  * source/lang/msgsl852.c
  * source/lang/msghucwi.c
  * source/lang/msgcsiso.c
  * source/lang/msgcswin.c
  * source/lang/msgeswin.c
  * source/rtl/langapi.c
    - Cleared unnecessary version strings. This was good
      in CVS times, but for SVN there is not much point.

2008-09-14 03:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/harbour-ce-spec
  * harbour/harbour-w32-spec
  * harbour/harbour.spec
    + added harbour MT libraries: libfmmt and libhbvmmt

  * harbour/include/hbstack.h
    ! respect HB_USE_TLS defined in hbthread.h

  * harbour/bin/hb-func.sh
    * always create harbourmt shared library in non DOS builds

  * harbour/bin/postinst.sh
    * always create libfmmt in non DOS builds

  * harbour/source/vm/Makefile
    * always create libhbvmmt in non DOS builds

2008-09-13 18:49 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbpp.h
  * harbour/include/hbvm.h
  * harbour/include/hbcomp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbtrace.h
  * harbour/include/hbapilng.h
  * harbour/include/hbinit.h
  * harbour/source/rtl/langapi.c
  * harbour/source/pp/ppcore.c
  * harbour/source/pp/hbpp.c
  * harbour/source/vm/itemapi.c
  * harbour/source/vm/hvm.c
  * harbour/source/common/hbver.c
  * harbour/source/common/hbtrace.c
  * harbour/source/common/expropt2.c
  * harbour/source/compiler/complex.c
  * harbour/source/compiler/hbident.c
  * harbour/source/compiler/hbfunchk.c
    * changed some declarations from 'char *' to 'const char *' and
      fixed casting for some more pedantic compilers

  * harbour/source/pp/ppcore.c
    ! fixed one typo which could cause memory leak and even GPF

  * harbour/common.mak
  * harbour/source/vm/Makefile
  * harbour/source/rtl/Makefile
  - harbour/source/rtl/set.c
  + harbour/source/vm/set.c
  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    * moved from RTL to HVM
    * eliminated hb_set global structure
    * moved set structure to HVM stack
    + added internal function hb_setClone() which is used to create
      copy of SET structure for child threads
    * hidden HB_SET_STRUCT declaration - 3-rd part code must not access it
      directly. Dedicated hb_set*() functions should be used instead.
    + added new function:
         BOOL hb_setSetItem( HB_set_enum set_specifier, PHB_ITEM pItem )
      which allow to change some set by 3-rd party code.
      TODO: not all SETs can be changed yet - if someone have a while
            then please add code for missing ones.

  * harbour/include/set.ch
  * harbour/include/hbset.h
    + added _SET_CODEPAGE which works like _SET_LANGUAGE giving common
      interface

  * harbour/include/hbsetup.h
    + added HB_CODEPAGE_DEFAULT which works like HB_LANG_DEFAULT

  * harbour/source/vm/hvm.c
    ! fixed builds which uses non EN lang or code page modules
      by forcing linking the chosen ones

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/include/hbapicdp.h
  * harbour/source/rtl/cdpapi.c
    - removed global code page variable: hb_cdp_page and moved
      code page settings to HVM stack
    + added new function hb_cdpID() which returns current code page
      character ID
    + added new functions hb_vmCDP() and hb_vmSetCDP() to get/set
      active for given thread code page structure

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/include/hbapilng.h
  * harbour/source/rtl/langapi.c
    + moved lang setting to HVM stack
    + added new functions hb_vmLang() and hb_vmSetLang() to get/set
      active for given thread language module

  * harbour/include/hbvmpub.h
  * harbour/include/hbstack.h
  * harbour/include/hbapi.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/dynsym.c
  * harbour/source/vm/itemapi.c
  * harbour/source/vm/memvars.c
    * changed memvar handles for HB_HANDLE to void * which is directly
      casted to PHB_ITEM - new memvar references
    * changed HB_DYNS declarations for MT mode. In MT mode HB_DYNS does
      not contain area and memvar handles which are moved to thread
      local HVM stack
    + added array for thread local memvar and area handles to HVM stack
    % eliminated global continues array with all memvars and detached locals
    % changed HB_IT_MEMVAR to use pointers to HB_ITEM directly - it resolve
      synchronization problems in MT mode and should also improve the speed
      and reduce memory usage. It should be well visible in applications which
      uses lot of detached locals.
    - removed hb_memvarsInit() and hb_memvarsFree() - they are not necessary
      now because we do not longer use array with all allocated memvars
      and detached local and private stack initialization is made
      automatically
    + added internal functions hb_dynsymGetMemvar()/hb_dynsymSetMemvar()
    + added hb_memvarGetValueBySym() for debugger
    * moved PRIVATE variable stack to HVM stack
    * eliminated all static variables in memvars module

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/rtl/fserror.c
    * moved IO errors to HVM stack
    + added special IO error handling which works without HVM stack
      It allows to use hb_fs*() functions without allocated stack
      by 3-rd party threads.

  * harbour/source/rtl/filesys.c
    * moved hb_fsCurDir() to HVM stack with special handling to work
      with HVM stack like IO errors

  * harbour/source/rdd/workarea.c
    * allocated RDD node array in bigger peaces to reduce later RT
      reallocations in MT mode. If user want to add dynamically more
      then 64 RDDs then it should synchronize this operation himself.

  * harbour/source/rdd/wacore.c
    * moved WA list, current WA, default RDD and neteer() flag to HVM stack

  * harbour/include/hbdefs.h
    - removed HB_HANDLE declaration

  * harbour/include/hbapi.h
    - removed HB_VALUE structure - it's not longer used due to different
      memvar handling
    * updated hb_struMemvar to new memvar handling
    * replaced hb_vmIsLocalRef() and hb_memvarsIsMemvarRef() with
      hb_vmIsStackRef() which respect multiple stack and new memvar
      and static structures and location in GC mark pass.

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
  * harbour/source/vm/hvm.c
    + added support for thread specific data located on HVM stack
      Now it's possible to allocate static variables which are
      local to thread. Such variables are allocated on HVM stack
      and automatically destroyed. To declare new TSD variable use:
         HB_TSD_NEW( <name>, <size>, <init>, <destruct> )
      <name> - name of variable which holds TSD handler
      <size> - size of TSD are which has to be allocated
      <init> - init function, executed when new TSD is allocated by thread
               (thread access given TSD 1-st time). This function receives
               void * pointer to allocated area.
      <destruct> - destructor function executed when HVM stack is destroyed
      f.e.:
         static HB_TSD_NEW( s_scrData, sizeof( HB_SCRDATA ),
                            NULL, hb_xSaveRestRelease );
      To initialize dynamically allocated TSD variable use:
         HB_TSD_INIT( <name>, <size>, <init>, <destruct> )
      Pointer to TSD can be accessed using hb_stackGetTSD( &<name> )
      where <name> is name of variable which holds TSD handler, f.e.:
         PHB_SCRDATA pScrData = ( PHB_SCRDATA ) hb_stackGetTSD( &s_scrData );
      See source/rtl/xsavescr.c as an example
      It's also possible to test if data has been already allocated for
      current thread by:
         hb_stackTestTSD( &<name> ) => pData
      it works like hb_stackGetTSD() but return NULL if current thread data
      has not been allocated yet.

  * harbour/include/hbstack.h
  * harbour/source/vm/estack.c
    * changed hb_stack location to thread local storage in MT mode
    + added functions and macros to access/assign new HVM stack members
    + changed garbage collection mark functions to work with multiple
      stacks, thread local static and memvar variables

  * harbour/source/rtl/xsavescr.c
    * use TSD data for screen buffer to make __XSAVESCREEN()/__XRESTSCREEN()
      thread independent

  * harbour/source/rtl/idle.c
    * use TSD data for idle task settings and codeblocks
    - removed hb_idleShutDown() - it's not longer necessary

  * harbour/source/rtl/setkey.c
    * use TSD data for allocated keys to make SETKEY() thread independent

  * harbour/source/rtl/math.c
    * moved math error handler, math error block, math error mode and
      math error structure to TSD

  * harbour/source/rtl/errorapi.c
    * moved error handler, error block, error launch counter and DOS error
      value to TSD

  * harbour/source/rtl/inkey.c
    * moved inkey "before" and "after" blocks to TSD

  * harbour/source/rdd/hsx/hsx.c
    * moved HSX handles array to TSD

  * harbour/include/hbapigt.h
  * harbour/source/rtl/console.c
    - removed hb_setkeyInit() and hb_setkeyExit() - they are not longer
      necessary, allocated resources will be freed by TSD destructor
      function

  * harbour/include/hbapi.h
  * harbour/source/rtl/console.c
    * removed hb_conXSaveRestRelease() - it's not longer necessary,
      allocated resources will be freed by TSD destructor function

  * harbour/source/vm/macro.c
    * moved s_macroFlags to TSD

  * harbour/source/rtl/accept.c
    * moved accept buffer to TSD

  * harbour/include/hbcomp.h
  * harbour/include/hbcompdf.h
  * harbour/include/hbxvm.h
  * harbour/source/compiler/hbmain.c
  * harbour/source/compiler/hbfix.c
  * harbour/source/compiler/hbpcode.c
  * harbour/source/compiler/hbdead.c
  * harbour/source/compiler/complex.c
  * harbour/source/compiler/genc.c
  * harbour/source/compiler/gencc.c
  * harbour/source/compiler/hbopt.c
  * harbour/source/compiler/hblbl.c
  * harbour/source/compiler/hbstripl.c
  * harbour/source/compiler/harbour.y
  * harbour/source/compiler/harbour.yyc
  * harbour/source/compiler/harbour.yyh
  * harbour/source/vm/hvm.c
    + added new PCODE HB_P_THREADSTATICS
    + added support for static variables which are local to thread:
         THREAD STATIC <varname [:= <exp>], ...>
      They work like normal static variables but each thread operates
      on its own copy.
    * added protection against possible double call to hb_xfree()
      It can happen due to wrong marking expressions as used by bison
      and executing destructors after our free code when syntax error
      appear.

  * harbour/source/rtl/perfuncs.prg
  * harbour/source/rtl/menuto.prg
  * harbour/source/rtl/getlist.prg
  * harbour/source/rtl/readvar.prg
  * harbour/source/rtl/text.prg
    * use THREAD STATIC variables to make above code MT safe

  * harbour/include/hbgtcore.h
  * harbour/source/rtl/hbgtcore.c
    + added hb_gt_BaseFree() which will release current GT pointer
      locked by hb_gt_Base() function. This function will be used
      to optional automatic GT access synchronization when threads
      share the same GT.

  * harbour/source/rtl/gtapi.c
  * harbour/source/rtl/inkeyapi.c
  * harbour/source/rtl/mouseapi.c
  * harbour/contrib/hbct/ctwin.c
    * free GT pointer by hb_gt_BaseFree()
      TODO: CTWIN is not MT safe yet - it will be updated together
            with core GT when we add multi window interface for
            thread with own console window.

  * harbour/bin/hb-func.sh
  * harbour/config/linux/gcc.cf
    + added rt lib to Linux builds

  * harbour/bin/postinst.sh
    * create MT safe version of FM stat library: fmmt

  * harbour/bin/pack_src.sh
    + added support for ZIP packing

  * harbour/include/hbapi.h
  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
    + added hb_vmThreadInit()/hb_vmThreadQuit() functions - they initialize
      HVM for calling thread so it can execute .prg code and call HVM
      functions. They can be used by 3-rd party code threads.
    + added hb_vmUnlock()/hb_vmLock() functions which informs that
      thread will not operate on HVM structures for some time allowing
      to execute single thread only processes like GC.
    + added hb_vmThreadQuitRequest() which sends stop request to given
       thread
    + added hb_vmWaitForThreads() which stops main thread execution waiting
      for other threads
    + added hb_vmSuspendThreads() and hb_vmResumeThreads() used be GC
      to stop all HVM threads before mark/swap scan
    + added linked list of HVM stacks
    + added hb_vmTerminateThreads() used by main HVM thread in QUIT state
    * moved EXIT procedures execution from QUIT request to HVM QUIT state
      in MT mode. It may effects some non structural code which tries to
      access private variables in EXIT functions but it's much cleaner
      and understandable for user. Please remember that we guaranties
      that ALWAYS code in BEGIN SEQUENCE is _always_ executed even after
      HVM QUIT request just like destructs. Personally I think that we
      should move EXIT procedures execution also in ST mode.
    * changed startup and cleanup code for new internal structures
    * changes startup and cleanup code for MT mode
    % removed some redundant HB_ITEM type settings
    ! eliminated non MT safe code which was using reference counters
      without protection

  * harbour/common.mak
  * harbour/source/vm/Makefile
  + harbour/include/hbthread.h
  + harbour/source/vm/thread.c
    + added C level functions to manage threads and synchronization objects
      See hbthread.h for detail description. They are based on PTHREAD API
      and PTHREAD documentation can be used as reference. I intentionally
      keep this list small for easier multiplatform porting.
      Now they have been implemented for PTHREADS (POSIX threads supported by
      many different OSes), MS-Win32/64 and OS2. The OS2 version is not tested
      at all. I do not even know if it can be compiled so please make tests.
      I used Internet resources and some part of xHarbour code as documentation
      for OS2 MT API. It should be quite easy to add other platforms if necessary.
      Harbour core code needs non recursive mutexes, conditional variables and
      TLS for one pointer. If platforms does not support conditional variables
      (f.e. MS-Win or OS2) then they can be emulated using multistate semaphores.
    + added .prg functions to manage threads and synchronization objects:
         hb_threadStart( <@sStart()> | <bStart> [, <params,...> ] ) -> <pThID>
         hb_threadJoin( <pThID> [, @<xRetCode> ] ) -> <lOK>
         hb_threadDetach( <pThID> ) -> <lOK>
         hb_threadQuitRequest( <pThID> ) -> <lOK>
         hb_threadWaitForAll() -> NIL
         hb_mutexCreate() -> <pMtx>
         hb_mutexLock( <pMtx> [, <nTimeOut> ] ) -> <lLocked>
         hb_mutexUnlock( <pMtx> ) -> <lOK>
         hb_mutexNotify( <pMtx> [, <xVal>] ) -> NIL
         hb_mutexNotifyAll( <pMtx> [, <xVal>] ) -> NIL
         hb_mutexSubscribe( <pMtx>, [ <nTimeOut> ] [, @<xSubscribed> ] ) -> <lSubscribed>
         hb_mutexSubscribeNow( <pMtx>, [ <nTimeOut> ] [, @<xSubscribed> ] ) -> <lSubscribed>
      The function list should give similar to xHarbour API but they are not exactly
      the same and except of hb_mutex*() functions which should replicate xHarbour behavior.

  + harbour/source/vm/vmmt
  + harbour/source/vm/vmmt/Makefile
    + added hbvmmt library to GNU make builds.
      Non GNU make builds should be updated.

  * harbour/contrib/hbct/pos1.c
  * harbour/contrib/gtwvg/gtwvg.c
  * harbour/contrib/rddads/ads1.c
  * harbour/contrib/hbmisc/spd.c
  * harbour/contrib/hbbmcdx/bmdbfcdx.c
  * harbour/contrib/examples/rdddbt/dbfdbt1.c
  * harbour/source/vm/runner.c
  * harbour/source/vm/itemapi.c
  * harbour/source/vm/hvm.c
  * harbour/source/rtl/console.c
  * harbour/source/rtl/strcase.c
  * harbour/source/rtl/spfiles.c
  * harbour/source/rtl/defpath.c
  * harbour/source/rtl/hbgtcore.c
  * harbour/source/rtl/dateshb.c
  * harbour/source/rtl/mlcfunc.c
  * harbour/source/rtl/fstemp.c
  * harbour/source/rtl/is.c
  * harbour/source/rtl/setcolor.c
  * harbour/source/rtl/errorint.c
  * harbour/source/rtl/transfrm.c
  * harbour/source/rtl/dates.c
  * harbour/source/rtl/filesys.c
  * harbour/source/rtl/gtdos/gtdos.c
  * harbour/source/rtl/gtwin/gtwin.c
  * harbour/source/rtl/gtwvt/gtwvt.c
  * harbour/source/rtl/gtxwc/gtxwc.c
  * harbour/source/rtl/gttrm/gttrm.c
  * harbour/source/rtl/gtpca/gtpca.c
  * harbour/source/rtl/gtcgi/gtcgi.c
  * harbour/source/rtl/gtcrs/gtcrs.c
  * harbour/source/rtl/gtstd/gtstd.c
  * harbour/source/rtl/gtsln/gtsln.c
  * harbour/source/rtl/gtsln/gtsln.h
  * harbour/source/rdd/dbf1.c
  * harbour/source/rdd/sdf1.c
  * harbour/source/rdd/delim1.c
  * harbour/source/rdd/dbcmd.c
  * harbour/source/rdd/hbdbsort.c
  * harbour/source/rdd/workarea.c
  * harbour/source/rdd/dbffpt/dbffpt1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/hsx/hsx.c
  * harbour/source/rdd/hbsix/sxfname.c
    * use API functions instead of direct accessing to hb_cdp_page or hb_set

  * harbour/source/rtl/fstemp.c
  * harbour/source/rtl/fssize.c
  * harbour/source/rtl/hbffind.c
  * harbour/source/rtl/filesys.c
    * encapsulate potentially slow IO operation inside
      hb_vmUnlock()/hb_vmLock() calls to allow other thread GC
      activation

  * harbour/contrib/hbnf/fttext.c
    ! fixed casting

  * harbour/contrib/gtwvg/gtwvg.h
    - removed #include <comctl32.h> - my MinGW and MinGW/CE instalations do
      not have them. If it exists in some newer ones then it has to be
      covered by #if version checking.

  * harbour/source/vm/dynsym.c
    - removed hb_dynsymLog() and hb_dynsymMemvarHandle()
    * modified code to be MT safe and improved speed of some operations
    * added MUEXT protection for global dynamic table access

  * harbour/include/hbapi.h
  * harbour/source/vm/garbage.c
    * changed to work with MT HVM
    * changed to work with new memvar structures and thread local static and
      memvar variables
    * added MUEXT protection for linked block lists
    + added parameter to hb_gcCollectAll() which will force GC activation
      in MT mode by temporary suspending all executed threads.
    + added logical parameter to HB_GCALL() functions which is passed to
      hb_gcCollectAll()

  * harbour/source/vm/fm.c
    * added MUEXT protection for FM statistic module
    * added MT protection for reference counters. For platforms
      which supports atomic incrmenetation/decrementation (f.e.
      Interlocked*() functions in MS-Win) such operations are
      used. For other it's MUTEX protection. It gives MT safe
      readonly access for HVM complex variables without user
      synchronization. The MUTEX protection can cause some speed
      overhead so it's good to define MT safe version of
      HB_ATOM_INC()/HB_ATOM_DEC() in hbthread.h if given platform
      has them. Now they are defined only for Windows. For other
      platforms We can define can define them in assembler for some
      most popular CPUs in the future.

  * harbour/source/vm/classes.c
    * changed class definition array. Now it keeps pointers to class
      structures.
    * In MT mode allocated at HVM startup big enough array for class
      definitions to avoid later RT reallocations. It effectively eliminates
      MUTEX synchronization for class structure access.
    * protect by MUTEX code for new class creation

  * harbour/source/debug/dbgentry.c
    * eliminated hbvmopt.h and direct accessing to HVM structures

  * harbour/source/rtl/gtclip.c
    * protect with MUTEX access to internal clipboard data

  * harbour/source/rdd/nulsys/nulsys.c
    + added hb_rddCloseAll()

  + harbour/tests/mt
  + harbour/tests/mt/mttest01.prg
  + harbour/tests/mt/mttest02.prg
  + harbour/tests/mt/mttest03.prg
  + harbour/tests/mt/mttest04.prg
  + harbour/tests/mt/mttest05.prg
  + harbour/tests/mt/mttest06.prg
  + harbour/tests/mt/mttest07.prg
    + added some demonstration/test small MT programs written
      using Harbour language. Some of them can be also compiled
      by xHarbour but xHarbour does not pass any of my tests in
      real multi-CPU machine so do not expect they will work
      correctly.

   Harbour threads needs OS threads support. Each Harbour thread is directly
   mapped to OS thread. It's not very efficient on some older system where
   cost of thread creation and/or task switching is very expensive but it
   should not be bigger problem for modern OS-es which can support threads
   in practice nearly in user space only.
   I haven't touched Harbour function calling convention which comes from
   Clipper. It means that we do not pass pointer to VM to each functions
   like CLIP or Xbase++. To resolve the problem I have to use thread local
   storage (TLS) where such pointer is kept. If platform does not support
   TLS then it can be emulated by us. Anyhow the speed of accessing TLS
   data and extracting HB_STACK poitner is critical for performance.
   Some compilers depending on used hardware and OS give native support
   for TLS (f.e. __thread keyword in GCC/BCC or __declspec( thread ) in MSVC).
   This should give optimal performance. On other Harbour uses TLS functions
   like TlsGetValue() (MS-WIN) or pthread_getspecific() (PTHREAD) are used.
   OS2 gives quite interesting TLS functionality which seems to be quite fast
   though it will be interesting to know how it is iplemented internally for
   real multi CPU machines (if it depends on CPU exception then the
   performance will be bad). We need TLS only for one pointer to HB_STACK
   structure.
   I haven't added any tricks like HB_THREAD_STUB in xHarbour to reduce
   the cost of TLS access. If it will be necessary for some platform the we
   can add it.
   Except TLS Harbour threads needs OS support for non recursive mutexes or
   critical sections and conditional variables. If platforms does not support
   conditional variables (f.e. MS-Win or OS2) then they can be emulated using
   multistate semaphores. I intentionally didn't create code which may need
   recursive mutexes. The non recursive ones are often faster and some
   platforms may not support recursive mutexes so they will have to be
   emulated by us.
   Harbour uses reference counters for complex variables. It means that even
   readonly access to complex item causes internal write operations necessary
   to increment/decrement its reference counter. To make such readonly access
   MT safe we have to make incrementation and decrementation with result
   checking atomic. By default it's done by mutex inside vm/fm.c but some
   platforms have native support for atomic inc/dec operations, f.e.
   Interlocked*() functions in MS-Win. If they are available then such
   functions should be used to not reduce the performance by mutex call
   very often used functions. For many CPUs it should be quite easy to
   implement such atomic inc/dec functionality in assembler. F.e. for
   GCC and x86@32 it may looks like:

      static __inline__ void hb_atomic_inc32( volatile int * p )
      {
         __asm__ __volatile__(
            "lock incl %0"
            :"=m" (*p) :"m" (*p)
         );
      }

      static __inline__ int hb_atomic_dec32( volatile int * p )
      {
         unsigned char c;
         __asm__ __volatile__(
            "lock decl %0"
            "sete %1"
            :"=m" (*p), "=qm" (c) :"m" (*p) : "memory"
         );
         return c == 0;
      }

   and then it's enough to define in hbthreads.h:
      #define HB_ATOM_INC( p )    hb_atomic_inc32( ( volatile int * ) p )
      #define HB_ATOM_DEC( p )    hb_atomic_dec32( ( volatile int * ) p )

   Probably I'll make it for some most popular CPUs in the future.
   In Harbour each thread which wants to call HVM functions have to allocate
   it's own HVM stack. It's done hb_vmThreadInit(). The HVM stack is freed
   by calling hb_vmThreadQuit(). This functions can be called also by 3-rd
   party threads if they want to call HVM functions or execute .prg code.
   Calling HVM functions without allocated stack will cause GPF.
   I moved most of static variables to HVM stack to make them thread
   local. But some of them like FS errors have their own alternative
   copy which is used when thread does not allocate HVM stack. It allows
   to use hb_fs*() functions without HVM stack but programmer have to
   know that error codes return by hb_fs*Error() functions can be
   overwritten by other threads which also didn't allocated HVM stack.
   To execute garbage collector scan and mark pass it's necessary to
   stop other HVM threads. Otherwise the scan may give false results.
   It's also possible to not stop threads but protect with mutex all
   operations on GC items but it will probably cause performance reduction
   and will force some other modifications. Maybe I'll implement it
   in the future.
   I didn't use any OS level thread KILL or CANCEL calls. All HVM threads
   have to be cleanly removed without any resource leaks.
   QUIT command terminate only calling thread. If main (startup) HVM
   thread call QUIT then it sends QUIT request to all existing threads.
   In QUIT state ALWAYS statements and destructors are executed.
   New thread is created by:
      hb_threadStart( <@sStart()> | <bStart> [, <params,...> ] ) -> <pThID>
   The returned value is a pointer to internal thread structure which
   can be used in JOIN or DETACH operations. Each thread should be Joined
   or DETACHED to avoid resource leaks. If programmer does not store
   <pThID> or all instances of <pThID> are destroyed then thread is
   automatically detached. I do not know clear method of thread detaching
   in OS2. If some OS2 users knows it then plase update vm/hbthread.c.
   When thread terminates then all locked by this thread mutexes are
   released.
   Each thread uses its own memvars (PRIVATEs and PUBLICs) and work areas.
   When new thread is created then it inherits from parent thread:
      - code page
      - language
      - SETs
      - default RDD
   error block is initialized to default value by calling ERRORSYS()
   and PUBLIC variable GetList := {} is created.
   The following objects are initialized to default value:
         - error block
         - math error handler and math error block
         - macro compiler features setting (hb_setMacro())
           or move them to SETs.
   We can think about inheriting them. It's also possible to add
   inheriting of all visible memvars but I do not know it's good
   idea.

   Compilation and linking:
   For MT mode HVM library should be compiled with HB_MT_VM macro.
   GNU make automatically creates hbvmmt library which should be
   linked with Harbour MT programs instead of hbvm.
   Non GNU make files should be updated.
   If given compiler support TLS then you can try to set HB_USE_TLS
   to force using native compiler TLS support. Now it's enabled by
   default only for BCC. For Linux and GCC builds it may depend also
   on used GLIBC version. In older system there is no TLS support
   at all or TLS works only for shared binaries so I haven't enabled
   it. If you will test some other compiler then please add default
   native TLS support for them in hbthread.h
   Users using hb* scripts can simply use -mt switch when they want
   to create MT program, f.e.:
      hbmk -n -w3 -es2 -mt mttest01.prg

   There are still some minor things which should be done but I'll
   do them later. Current state seems to be fully functional.
   The most important and still missing is our own file lock server
   for RDD synchronization in POSIX systems. Kernel internally
   recognize POSIX locks by PID and file i-node - not PID and file
   handle. It means that the same file open more then once by one
   process shares locks. Because POSIX locks can be overwritten
   then we do not have any synchronization between aliased workareas
   or threads using the same table in *nixes. We have to make
   synchronization ourselves. I'll create such lock server ASAP.

   Please test and enjoy using Harbour threads.

2008-09-12 16:05 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/gtwvg/wvgutils.c
    ! HB_FUNC( WVT__MAKEDLGTEMPLATE )
         hb_retclen( ( LPSTR ) pdlgtemplate, ( ( ULONG ) p - ( ULONG ) pdlgtemplate ) ) ;
             =>
         hb_retclen( ( LPSTR ) pdlgtemplate, ( ( HB_PTRDIFF ) p - ( HB_PTRDIFF ) pdlgtemplate ) ) ;
      ; NG suggests that Viktor has fixed it but I cannot see to it. So again...

  * contrib/gtwvg/wvgcore.c
    + Added <aPxlOff> parameter to the functions it was missing earlier.
      ; NOTE: Parameter sequence of all GUI components is a mess now, I mean are not uniform.
      ; I will be introducing a new set of API calls on top of the existing calls
        with standradized and normalized parameter passing. Developers can take
        advantage of new functions. Old API will still remain intact.

2008-09-11 18:00 UTC-0800 Pritpal Bedi (pritpal@vouchcac.com)
  * contrib/gtwvg/wvgutils.c
    ! HB_FUNC( WVT__MAKEDLGTEMPLATE )
         hb_retclen( ( LPSTR ) pdlgtemplate, ( ULONG ) ( p - pdlgtemplate ) );    =>
         hb_retclen( ( LPSTR ) pdlgtemplate, ( ( ULONG ) p - ( ULONG ) pdlgtemplate ) ) ;
      Fix to open modeless/modal dialogs.
      ; NOTE: Need to be fixed in v1.0.0 also.

2008-09-10 13:22 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
    + Updated.

  * contrib/hbw32/Makefile
  * contrib/hbw32/common.mak
  - contrib/hbw32/w32_prn.c
  + contrib/hbw32/win_prn1.c
  - contrib/hbw32/tprinter.c
  + contrib/hbw32/win_prn2.c
  - contrib/hbw32/dllcall.c
  + contrib/hbw32/win_dll.c
  - contrib/hbw32/w32_osc.c
  + contrib/hbw32/win_osc.c
  - contrib/hbw32/w32_ole.c
  + contrib/hbw32/win_ole.c
  - contrib/hbw32/w32_regc.c
  + contrib/hbw32/win_regc.c
  - contrib/hbw32/w32_os.prg
  + contrib/hbw32/win_os.prg
  - contrib/hbw32/w32_tole.prg
  + contrib/hbw32/win_tole.prg
  - contrib/hbw32/w32_reg.prg
  + contrib/hbw32/win_reg.prg
  - contrib/hbw32/w32_tprn.prg
  + contrib/hbw32/win_tprn.prg
    * Cleaned some 'w32'.

  * contrib/hbwhat/hbwhat.h
    ! Hack to disable UNICODE if enabled.
      hbwhat cannot currently be compiled in UNICODE mode.

  * contrib/hbwhat/wincorec.c
  * contrib/hbwhat/whtmisc.c
    % Made some internal functions static by moving them around.
    ! Removed TEXT( <function_call> ) type of syntax.

  * contrib/hbodbc/odbc.c
    ! MSVC warning fixed in the UNICODE path.

  * contrib/hbnf/getenvrn.c
    ! Fixed to compile in Windows/UNICODE mode.

2008-09-10 09:46 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * doc/whatsnew.txt
    + Updated.

  * contrib/Makefile
  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
  * contrib/make_vc_all.bat
  - contrib/hbwhat32
  + contrib/hbwhat
    * Renamed to not contain '32'.
      INCOMPATIBLE.
    ; NOTE: I plan to do this with a couple of other
            names too in the future.

  * contrib/hbwhat/Makefile
  * contrib/hbwhat/common.mak
  - contrib/hbwhat/what32.ch
  + contrib/hbwhat/hbwhat.ch
    * Renamed what32.ch to not contain '32' (and added
      hb for consistency if it got renamed anyway).
      INCOMPATIBLE.

  * utils/hbmake/hbmake.prg
    * Updated by Bill Robertson to fix too many things to
      mention here. (cleaned up lots of stuff, using hb_run()s
      return values, cleaned to not call main() function
      recursively (!), display output cleanups, etcetc)
    * hbwhat32, hbziparch lib name changes.

  * contrib/examples/pp/hbppcore.c
  * contrib/examples/pp/hbppcomp.c
  * contrib/rddads/ads1.c
  * source/pp/ppcore.c
  * source/vm/asort.c
  * source/vm/hvm.c
  * source/rtl/disksphb.c
  * source/rdd/dbfntx/dbfntx1.c
  * source/rdd/workarea.c
  * contrib/hbct/screen2.c
  * contrib/hbct/token2.c
    * while( TRUE ) -> for( ;; )
    * do {} while( TRUE ) -> for( ;; ) {}
    ; To avoid warnings about conditions being constant.

2008-09-09 21:54 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwhat32/hbwhat.h
  * contrib/hbwhat32/whtcall.c
  * contrib/hbwhat32/whtclpb.c
  * contrib/hbwhat32/whtcomm.c
  * contrib/hbwhat32/whtdll.c
  * contrib/hbwhat32/whtgdi.c
  * contrib/hbwhat32/whtilst.c
  * contrib/hbwhat32/whtinet.c
  * contrib/hbwhat32/whtini.c
  * contrib/hbwhat32/whtmisc.c
  * contrib/hbwhat32/whtmmcap.c
  * contrib/hbwhat32/whtmsg.c
  * contrib/hbwhat32/whtsock.c
  * contrib/hbwhat32/whtsys.c
  * contrib/hbwhat32/whttab.c
  * contrib/hbwhat32/whttree.c
  * contrib/hbwhat32/whtwnd.c
  * contrib/hbwhat32/wincorec.c
    ! Fixed remaining 64-bit problems.
    ! Fixed to work as before, using numbers for pointers.
    ! Fixed bugs in these internet related functions:
      INTERNETREADFILE(), INTERNETWRITEFILE()
    ; NOTE: Number of warnings went down from somewhere well
            above a thousand to just a few ones, mostly common
            in other parts of Harbour. If someone could help to
            clear these remains, it'd be great.
            Tested with MSVS2008 -W4 64/32-bit modes, BCC 5.8,
            MinGW 4.31.
    ; NOTE: I didn't do any real-life tests. Pls do if you're
            interested or you're using this contrib.
    ; NOTE: Remaining warnings:
            - MSVS 2008 -W4 64-bit:
              wincorec.c(689) : warning C4244: 'argument' : conversion from 'HB_PTRDIFF' to 'ULONG', possible loss of data
              whtclpb.c(208) : warning C4244: 'argument' : conversion from 'SIZE_T' to 'ULONG', possible loss of data
              whtdll.c(298) : warning C4311: 'type cast' : pointer truncation from 'LPSTR' to 'DWORD'
              whtdll.c(299) : warning C4311: 'type cast' : pointer truncation from 'char *' to 'DWORD'
              whtdll.c(306) : warning C4311: 'type cast' : pointer truncation from 'char *' to 'DWORD'
              whtlv.c(84) : warning C4267: 'argument' : conversion from 'size_t' to 'ULONG', possible loss of data
              whtlv.c(109) : warning C4267: 'argument' : conversion from 'size_t' to 'ULONG', possible loss of data
              whtmem.c(243) : warning C4244: 'argument' : conversion from 'SIZE_T' to 'int', possible loss of data
              whtmem.c(270) : warning C4244: 'argument' : conversion from 'SIZE_T' to 'int', possible loss of data
              whtmem.c(279) : warning C4244: 'argument' : conversion from 'SIZE_T' to 'int', possible loss of data
              whtreg.c(171) : warning C4267: 'argument' : conversion from 'size_t' to 'DWORD', possible loss of data
              whtshell.c(34) : warning C4267: 'argument' : conversion from 'size_t' to 'ULONG', possible loss of data
              whtsys.c(1093) : warning C4244: 'argument' : conversion from 'SIZE_T' to 'int', possible loss of data
              whttext.c(127) : warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
              whttext.c(154) : warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
              whttext.c(190) : warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
              whttext.c(246) : warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data
              whttext.c(299) : warning C4267: 'argument' : conversion from 'size_t' to 'int', possible loss of data

            - MSVS 2008 -W4 32-bit:
              wincorec.c(434) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(438) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(442) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(446) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(450) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(454) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(458) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(462) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(466) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(470) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(486) : warning C4152: nonstandard extension, function/data pointer conversion in expression
              wincorec.c(529) : warning C4055: 'type cast' : from data pointer 'void *' to function pointer 'DLGPROC'
              wincorec.c(543) : warning C4055: 'type cast' : from data pointer 'void *' to function pointer 'DLGPROC'
              wincorec.c(556) : warning C4055: 'type cast' : from data pointer 'void *' to function pointer 'DLGPROC'
              wincorec.c(569) : warning C4055: 'type cast' : from data pointer 'void *' to function pointer 'DLGPROC'
              whtsys.c(316) : warning C4055: 'type cast' : from data pointer 'void *' to function pointer 'TIMERPROC'
              whtwnd.c(197) : warning C4055: 'type cast' : from data pointer 'void *' to function pointer 'WNDPROC'

            - MinGW 4.31 32-bit:
              wincorec.c:94: warning: signed and unsigned type in conditional expression
              wincorec.c:95: warning: signed and unsigned type in conditional expression
              wincorec.c:96: warning: signed and unsigned type in conditional expression
              wincorec.c:97: warning: signed and unsigned type in conditional expression
              wincorec.c:119: warning: signed and unsigned type in conditional expression
              wincorec.c:120: warning: signed and unsigned type in conditional expression
              wincorec.c:121: warning: signed and unsigned type in conditional expression
              wincorec.c:122: warning: signed and unsigned type in conditional expression
              whtcdlg.c:180: warning: signed and unsigned type in conditional expression
              whtdate.c:61: warning: passing argument 1 of 'hb_retptr' makes pointer from integer without a cast
              whtdlg.c:169: warning: signed and unsigned type in conditional expression
              whtmisc.c:95: warning: signed and unsigned type in conditional expression
              whtmisc.c:349: warning: signed and unsigned type in conditional expression
              whtseria.c:343: warning: signed and unsigned type in conditional expression
              whtsock.c:43: warning: signed and unsigned type in conditional expression
              whtsock.c:108: warning: signed and unsigned type in conditional expression
              whtsock.c:124: warning: signed and unsigned type in conditional expression
              whtsock.c:226: warning: signed and unsigned type in conditional expression
              whtsock.c:246: warning: signed and unsigned type in conditional expression
              whtsock.c:249: warning: signed and unsigned type in conditional expression
              whtsock.c:318: warning: signed and unsigned type in conditional expression
              whtsock.c:331: warning: signed and unsigned type in conditional expression
              whtsock.c:338: warning: signed and unsigned type in conditional expression
              whtsys.c:1091: warning: comparison between signed and unsigned

2008-09-09 13:14 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbwhat32/whthead.c
  * contrib/hbwhat32/whtmmcap.c
  * contrib/hbwhat32/whtshell.c
  * contrib/hbwhat32/whtdir.c
    ! Fixed a few problems when compiling with MinGW.

  * contrib/Makefile
  * contrib/make_b32_all.bat
  * contrib/make_gcc_all.sh
  * contrib/make_vc_all.bat
    + Readded hbwhat32 to default build lists.
    ; This doesn't mean this lib works, but the amount of
      warnings are now on a manageable level on both 32 and
      64 bit on BCC/MSVC/MINGW, we can gradually fix the
      remaining ones, and maybe if we have this lib
      built, someone will try to use it and maybe fix it.
      [ We may temply as well disable it again, if it turns
      out to be a showstopper for 1.0.1 release. ]
    ; If there is anything against the above, I'd suggest
      to remove the whole contrib altogether.

2008-09-09 12:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * source/debug/dbgentry.c
    ! Fixed recent typo. Thanks Lorenzo.

2008-09-09 11:50 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/mtpl_b32.mak
  * contrib/mtpl_gcc.mak
  * contrib/mtpl_vc.mak
    ! Some more fine tuning.

2008-09-09 11:47 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/asort.c
    ! fixed GPF when user sort code block reduces the size of sorted array

2008-09-09 11:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/hbct/numconv.prg
    ! Fixed typo. Thanks to Grigory Filatov for reporting it.

2008-09-09 11:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  + contrib/hbwhat32/hbwhat.h
  * contrib/hbwhat32/whtbmp.c
  * contrib/hbwhat32/whtbrsh.c
  * contrib/hbwhat32/whtcall.c
  * contrib/hbwhat32/whtcdlg.c
  * contrib/hbwhat32/whtclpb.c
  * contrib/hbwhat32/whtcomm.c
  * contrib/hbwhat32/whtcret.c
  * contrib/hbwhat32/whtdate.c
  * contrib/hbwhat32/whtdc.c
  * contrib/hbwhat32/whtdir.c
  * contrib/hbwhat32/whtdlg.c
  * contrib/hbwhat32/whtdll.c
  * contrib/hbwhat32/whtdraw.c
  * contrib/hbwhat32/whtfont.c
  * contrib/hbwhat32/whtgdi.c
  * contrib/hbwhat32/whthead.c
  * contrib/hbwhat32/whticon.c
  * contrib/hbwhat32/whtilst.c
  * contrib/hbwhat32/whtinet.c
  * contrib/hbwhat32/whtini.c
  * contrib/hbwhat32/whtkbrd.c
  * contrib/hbwhat32/whtlv.c
  * contrib/hbwhat32/whtmain.c
  * contrib/hbwhat32/whtmapi.c
  * contrib/hbwhat32/whtmem.c
  * contrib/hbwhat32/whtmenu.c
  * contrib/hbwhat32/whtmeta.c
  * contrib/hbwhat32/whtmisc.c
  * contrib/hbwhat32/whtmmcap.c
  * contrib/hbwhat32/whtmous.c
  * contrib/hbwhat32/whtmsg.c
  * contrib/hbwhat32/whtpen.c
  * contrib/hbwhat32/whtprn.c
  * contrib/hbwhat32/whtrect.c
  * contrib/hbwhat32/whtreg.c
  * contrib/hbwhat32/whtrgn.c
  * contrib/hbwhat32/whtscrlb.c
  * contrib/hbwhat32/whtseria.c
  * contrib/hbwhat32/whtshell.c
  * contrib/hbwhat32/whtsock.c
  * contrib/hbwhat32/whtsys.c
  * contrib/hbwhat32/whttab.c
  * contrib/hbwhat32/whttbar.c
  * contrib/hbwhat32/whttext.c
  * contrib/hbwhat32/whttree.c
  * contrib/hbwhat32/whtview.c
  * contrib/hbwhat32/whtwnd.c
  * contrib/hbwhat32/wincorec.c
    ! Changed pointer related hb_ret, hb_par and hb_stor calls
      to ptr versions. This might create incompatibilities and
      since there is no test package for this lib, it's difficult
      to test if it works. I relied on MSVC warnings.
    ; There are still some calls to change. One other problem is
      there is no public equivalent of hb_vmPushLong() for pointers,
      so these VM specific parts should be changed to use some more
      official Harbour APIs.

2008-09-09 09:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * contrib/mtpl_b32.mak
  * contrib/mtpl_vc.mak
    * Minor adjustment to previous change (to not display the
      obj dir creation for each command.)

  * contrib/hbwhat32/whtdll.c
  * contrib/hbwhat32/wincorec.c
  * contrib/hbwhat32/whtsock.c
  * contrib/hbwhat32/whtcall.c
  * contrib/hbwhat32/whtclpb.c
  * contrib/hbwhat32/whtmapi.c
  * contrib/hbwhat32/whtdlg.c
  * contrib/hbwhat32/whtwnd.c
  * contrib/hbwhat32/whtmisc.c
  * contrib/hbwhat32/whtinet.c
    ! Fixed MSVS 2008 -W4 warnings.

  * bin/bld.bat
    * Some further updates.

2008-09-08 22:49 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
  * bin/bld.bat
    * Some changes to make it more up-to-date.

  * utils/hbtest/hbtest.prg
  * utils/hbtest/rt_array.prg
    + Added comment to 'TAEVSM' test case saying this is
      a CA-Cl*pper bug.
    + Added two additional tests doing resizes in ASORT()
      blocks. They fail very badly in Harbour. (TOFIX)

  ; Made my indenting of ChangeLog entries compatible with
    everyone else's.

2008-09-08 21:37 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hashes.c
    ! fixed typo in hash cloning code which caused that references
      was copied to cloned array. Thanks to Mindaugas for example.

2008-09-08 13:59 UTC-0500 Teo Fonrouge (teo/at/windtelsoft/dot/com)
  * include/hbclass.ch
    ! added missing MESSAGE <MessageName> TO <oObject>
      ; this also fixes DELEGATE command

2008-09-08 13:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/mtpl_b32.mak
   * contrib/mtpl_vc.mak
   * contrib/mtpl_gcc.mak
     * Changed the location of intermediate obj and c files from
       /obj/<arch>/ to local [/contrib/<contribname>/]obj/<arch>/
       dir so that similar filenames across different contribs
       would never interfere with each other anymore when using
       non-GNU make. This was a difficult to detect problem,
       especially when someone is trying to use custom contribs,
       and even more so if these custom contribs happen to have
       3rd party code with non Harbour controlled filenames. This
       change is also an important last step to make contribs
       fully self-containing.
     ; TODO: mtpl_gcc.mak support has to be finished by someone
             familiar with bash.
     ; NOTE: This change shouldn't go to 1.0.1 until well tested
             and reviewed.
     ; NOTE: As a consequence of the above, from now on a
             'make_*.bat clean' won't anymore clean the objects/.c
             files of all contribs. If you hadn't do so so far, now
             you'll need to explicitly call 'contrib/make_*.all.bat clean'
             to do that.

   * contrib/mtpl_gcc.mak
   * make_gcc.mak
     % HB_ARCHITECTURE hack from cyg to w32 removed,
       as cyg is not a valid public architecture name
       in Harbour. cyg is used in make_gcc.sh internally, and
       it's automatically converted to w32 before using
       make_gcc.mak, so it would seem that this is solved
       at the right place already, and the hack is not needed.

2008-09-08 11:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * doc/whatsnew.txt
   * doc/dirstruc.txt
     * Updated.

   * contrib/hbhpdf/tests/harupdf.prg
   - contrib/hbhpdf/tests/files/maskimage.png
   + contrib/hbhpdf/tests/files/maskimag.png
   - contrib/hbhpdf/tests/files/32_32_2color.dat
   - contrib/hbhpdf/tests/files/32_32_gray.dat
   - contrib/hbhpdf/tests/files/penguinattack.ttf
   - contrib/hbhpdf/tests/files/32_32_rgb.dat
     * One file renamed to short name.
     - Some unused files removed.

2008-09-08 02:08 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * source/rtl/transfrm.c
   * source/rtl/set.c
   * contrib/hbct/ctwin.c
   * contrib/hbct/token1.c
   * contrib/hbct/numat.c
     ! Fixed more MSVS 2008 -W4 warnings.

   * source/rtl/set.c
     * Formatting.

2008-09-08 01:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbcurl/hbcurl.c
   * contrib/hbcurl/hbcurl.ch
     + Added support for 7.19.0 features.

   * doc/whatsnew.txt
     + Added recent changes.

2008-09-07 01:44 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbcurl/make_vc.bat
     ! Fixed external .lib handling for MSVC.

   * contrib/rddads/make_vc.bat
     ! Fixed external .lib handling for MSVC
       (for older ACE versions).

   * contrib/hbhpdf/make_b32.bat
   * contrib/hbhpdf/make_vc.bat
     + Added .lib/.dll support for libharu 2.1.0
       binary distribution version.

2008-09-06 12:38 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * source/hbpcre/pcre.h
   * source/hbpcre/config.h
     + Upgraded PCRE lib to 7.8 release version.

   * contrib/hbct/token2.c
   * contrib/examples/pp/hbppcore.c
     * Minor formatting.

2008-09-06 11:07 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * make_vc.bat
   * contrib/mtpl_vc.bat
     + Added -nologo to nmake.exe command line.

   * source/vm/memvars.c
   * source/rtl/scroll.c
   * source/rtl/diskspac.c
   * source/rtl/console.c
   * source/rtl/philes.c
   * source/rtl/oldclear.c
   * source/rtl/oldbox.c
   * source/rtl/cdpapi.c
   * source/rtl/setpos.c
   * source/rtl/errorapi.c
   * source/rtl/setcolor.c
   * source/rtl/philes53.c
   * source/rtl/setkey.c
   * source/rtl/disksphb.c
   * source/rtl/shadow.c
   * source/rtl/hbhex.c
   * source/rtl/setcurs.c
   * source/rtl/dates.c
   * source/rtl/gtwvt/gtwvt.c
   * source/rtl/hbinet.c
   * source/rtl/hbffind.c
   * source/rtl/filesys.c
   * contrib/hbct/screen2.c
   * contrib/hbct/screen1.c
   * contrib/hbnf/fttext.c
     ! Fixed more MSVS 2008 -W4 warnings (about 100 of them).

   * contrib/hbnf/fttext.c
     ! Fixed C++ compile error after recently
       switching to Harbour API from Clipper one.

2008-09-05 20:45 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/rddads/adsfunc.c
     ! Fixed some more MSVS 2008 -W4 warnings.

2008-09-05 20:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * source/debug/dbgentry.c
   * source/rtl/do.c
   * source/rtl/xhelp.c
   * contrib/xhb/freadlin.c
   * contrib/hbw32/w32_prn.c
   * contrib/rddads/ads1.c
   * contrib/hbgd/gdwrp.c
   * contrib/hbtip/encmthd.c
   * utils/hbdoc/hbdfrdln.c
   * utils/hbmake/hbmfrdln.c
     ! Fixed some more MSVS 2008 -W4 warnings.

2008-09-05 18:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbapollo/apollo.c
   * contrib/hbclipsm/gauge.c
   * contrib/hbct/atadjust.c
   * contrib/hbct/atnum.c
   * contrib/hbct/atrepl.c
   * contrib/hbct/ctstr.c
   * contrib/hbct/ctwfunc.c
   * contrib/hbct/dattime2.c
   * contrib/hbct/dattime3.c
   * contrib/hbct/files.c
   * contrib/hbct/pack.c
   * contrib/hbct/print.c
   * contrib/hbct/setrc.c
   * contrib/hbfbird/firebird.c
   * contrib/hbhpdf/harupdf.c
   * contrib/hbmisc/hb_f.c
   * contrib/hbmzip/hbmzip.c
   * contrib/hbnf/descendn.c
   * contrib/hbnf/dispc.c
   * contrib/hbnf/ftattr.c
   * contrib/hbnf/ftshadow.c
   * contrib/hbnf/fttext.c
   * contrib/hbodbc/odbc.c
   * contrib/hbole/ole2.c
   * contrib/hbw32/dllcall.c
   * contrib/hbw32/tprinter.c
   * contrib/rddads/ads1.c
   * contrib/xhb/cstructc.c
   * contrib/xhb/hbxml.c
   * contrib/xhb/xhbmsgs.c
   * utils/hbmake/hbmgauge.c
     ! Fixed some MSVS 2008 -W4 warnings.
     ; There are quite some more.

   * contrib/hbhpdf/harupdf.c
     ! HPDF_ADDPAGELABEL() accepting first parameter wrongly.

   * contrib/hbfbird/firebird.c
     ! FBQUERY() potential GPF when using value from freed memory.

   * doc/whatsnew.txt
     * Updated for latest fixes.

2008-09-05 17:41 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/bmdbfcdx.c
    ! fixed dirty index reading.

2008-09-05 17:11 UTC+0200 Lorenzo Fiorini (lorenzo.fiorini/at/gmail.com)
  * contrib/hbtip/test/tiptest.prg
  * contrib/hbtip/popcln.prg
    * fixed typos: "retreived vs retrieved"

2008-09-05 16:54 UTC+0100 Miguel Angel Marchuet <miguelangel@marchuet.net>
  * contrib/hbbmcdx/bmdbfcdx.c
    ! fixed to not respect bitmap filters when structural order
      is scanned, f.e. in OrdListAdd() with active bitmap filter.

  * source/rtl/hbinet.c
    ! fixed return value of HB_INETGETSNDBUFSIZE

2008-09-05 15:58 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbffpt/dbffpt1.c
    ! fixed GPF introduced by today MSVC warning cleanup

2008-09-05 12:32 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * doc/whatsnew.txt
     * Reviewed, some clarifications.

2008-09-05 12:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * source/common/hbver.c
     ! Version detection fixed for __DMC__

   * contrib/mtpl_gcc.mak
     % One unnecessary C -I option deleted.

   - contrib/hbsqlit2
   + contrib/examples/hbsqlit2
   * doc/whatsnew.txt
     * Moved hbsqlit2 to examples.

   * contrib/examples/hbsqlit2/Makefile
   * contrib/examples/hbsqlit2/make_b32.bat
   * contrib/examples/hbsqlit2/make_gcc.sh
   * contrib/examples/hbsqlit2/make_vc.bat
   * contrib/examples/hbsqlit2/common.mak
   * contrib/examples/hbsqlit2/tests/bld_b32.bat
   * contrib/examples/hbsqlit2/tests/bld_vc.bat
     * Modified make files to work from the new location.
     * Location of sqlite2 headers can be specified by HB_INC_SQLITE2.
     ; Notice that sqlite2 lib itself should now be build separately.

2008-09-05 11:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * source/common/hbver.c
     ! Version detection fixed for __DMC__.

2008-09-05 11:12 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/mtpl_vc.mak
     - Removed recently (and mistakenly) added unnecessary option.

   * source/macro/macro.y
     - Removed old comment, other part synced with harbour.y.

   * source/rdd/dbffpt/dbffpt1.c
     ! Fixed MSVC -W4 potentially unused var warnings.

   * contrib/Makefile
   * contrib/make_b32_all.bat
   * contrib/make_gcc_all.sh
   * contrib/make_vc_all.bat
     - Removed (commented) references to hbsqlit2.
       hbsqlit2 is broken due to foreign code problems.
       It will be converted to use separately compiled
       sqlite2 library. Pls use hbsqlit3 as a replacement.

   - contrib/hbsqlit2/vdbeaux.c
   - contrib/hbsqlit2/build.c
   - contrib/hbsqlit2/vdbeInt.h
   - contrib/hbsqlit2/opcodes.h
   - contrib/hbsqlit2/btree.c
   - contrib/hbsqlit2/delete.c
   - contrib/hbsqlit2/printf.c
   - contrib/hbsqlit2/trigger.c
   - contrib/hbsqlit2/attach.c
   - contrib/hbsqlit2/btree.h
   - contrib/hbsqlit2/sqlite.h
   - contrib/hbsqlit2/pragma.c
   - contrib/hbsqlit2/config.h
   - contrib/hbsqlit2/util.c
   - contrib/hbsqlit2/select.c
   - contrib/hbsqlit2/os.c
   - contrib/hbsqlit2/hash.c
   - contrib/hbsqlit2/os.h
   - contrib/hbsqlit2/hash.h
   - contrib/hbsqlit2/tokenize.c
   - contrib/hbsqlit2/pager.c
   - contrib/hbsqlit2/vacuum.c
   - contrib/hbsqlit2/auth.c
   - contrib/hbsqlit2/pager.h
   - contrib/hbsqlit2/insert.c
   - contrib/hbsqlit2/copy.c
   - contrib/hbsqlit2/parse.c
   - contrib/hbsqlit2/where.c
   - contrib/hbsqlit2/date.c
   - contrib/hbsqlit2/expr.c
   - contrib/hbsqlit2/parse.h
   - contrib/hbsqlit2/LICENSE.txt
   - contrib/hbsqlit2/random.c
   - contrib/hbsqlit2/vdbe.c
   - contrib/hbsqlit2/sqliteInt.h
   - contrib/hbsqlit2/update.c
   - contrib/hbsqlit2/main.c
   - contrib/hbsqlit2/btree_rb.c
   - contrib/hbsqlit2/vdbe.h
   - contrib/hbsqlit2/table.c
   - contrib/hbsqlit2/func.c
   - contrib/hbsqlit2/opcodes.c
   - contrib/hbsqlit2/encode.c
     - Removed foreign code.

2008-09-05 04:01 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * doc/whatsnew.txt
     + Added 1.0.1 changes. Please review.

2008-09-04 19:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed typo in previous commit

2008-09-04 19:08 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/rdd/dbfntx/dbfntx1.c
  * harbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed dirty index reading, thx Miguel for bug report

  * harbour/source/compiler/hbmain.c
    * removed old comment and hack

2008-09-04 15:58 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * config/w32/msvc.cf
   * config/w32/msvcce.cf
     * Synced with latest non-GNU changes.

2008-09-04 09:43 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * make_vc.mak
   * contrib/mtpl_vc.mak
     + -w34701 VC flag added to enabled warning 4701 (uninitialized vars) on -W3 level.
     % -FD VC flag removed. This is only needed for IDEs.
     % -Gs VC flag moved to the common section.
     % VC flags synced in contrib with core.
     + TOFIX added for WinCE command line. It's full of stuff which is _probably_ not needed.
     + NOTE added about MSDN page explaining VC switches.
     ; NOTE: -W4 and -Wp64 are recommended for MSVC.
     ; TOFIX: There are still a few uninit vars warnings:
              harboury.c(7226) : warning C4701: potentially uninitialized local variable 'hb_complval' used
              macroy.c(3095) : warning C4701: potentially uninitialized local variable 'hb_macrolval' used
              dbffpt1.c(2671) : warning C4701: potentially uninitialized local variable 'ulType' used
              dbffpt1.c(2614) : warning C4701: potentially uninitialized local variable 'ulSize' used
              dbffpt1.c(3073) : warning C4701: potentially uninitialized local variable 'ulOldSize' used
              dbffpt1.c(3083) : warning C4701: potentially uninitialized local variable 'ulBlock' used
              dbffpt1.c(3652) : warning C4701: potentially uninitialized local variable 'pBlock' used

   * source/rdd/workarea.c
     ! Fixed DBI_POSITIONED value returned.

   * include/hbsetup.h
   * source/vm/pvalue.c
   * source/rtl/fserror.c
   * source/rtl/accept.c
   * source/rtl/descend.c
   * source/rtl/inkey.c
   * source/rtl/dates.c
   * source/rtl/fkmax.c
   * source/rtl/natmsg.c
   * source/rtl/hbinet.c
   * source/rtl/dates.c
     ! Fixed some MSVS2008 -W4 warnings (we use -W3 as the default).
     ; NOTE: There is a lot more of these.

   * source/rtl/dates.c
     * Formatting.

2008-09-03 23:06 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparc/hbziparc.prg
     ! Fix to one of the rarely used function names.

   * contrib/gtalleg/gtalleg.c
   * contrib/hbw32/dllcall.c
   * contrib/hbcurl/hbcurl.c
   * contrib/hbfimage/fi_winfu.c
   * contrib/hbfimage/fi_wrp.c
   * source/vm/memvars.c
   * source/rtl/gtwin/gtwin.c
   * source/rtl/math.c
   * source/rtl/gtclip.c
   * source/rtl/fstemp.c
   * source/rtl/is.c
   * source/rtl/xsavescr.c
   * source/rtl/fkmax.c
   * source/rtl/langapi.c
   * source/rtl/hbrandom.c
   * source/rtl/hbinet.c
   * source/rtl/hbffind.c
     * Minor formatting, code style/format cleanup (!=/== NULL mostly).

   * source/compiler/genc.c
     * Minor; empty line added to .c output.

2008-09-03 20:03 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparc/hbziparc.prg
     ! Some formatting to docs.
     + Now .zip extension will only be added if _SET_DEFEXTENSIONS
       is TRUE (the default).

2008-09-03 19:41 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparc/hbziparc.prg
     ! RTE fixed when not specifying some optional params.
     ! Fixed to parse the right array, and thus not exluding
       all filenames to be zipped.
     ; Disclaimer: I'm not a user of these functions, and
       I've admittedly not tested them besides tests/unzipa.prg
       and tests/zipa.prg (which are pretty basic cases), so
       bumps are expected. If you find some bugs, please try
       to provide patches to fix them. Thanks.

2008-09-03 16:36 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparc/make_b32.bat
   * contrib/hbziparc/make_vc.bat
     % Special C flags not needed anymore.

   - contrib/hbziparc/hbzipold.cpp
   + contrib/hbziparc/hbzipcpp.old
     * Renamed to not look like something live.

2008-09-03 16:02 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * harbour-ce-spec
   * make_deb.sh
   * harbour-w32-spec
   * harbour.spec
   * contrib/Makefile
   * contrib/make_b32_all.bat
   * contrib/make_gcc_all.sh
   * contrib/make_vc_all.bat
   + contrib/hbziparc
   - contrib/hbziparch
     + hbziparc readded to default contrib list, as it
       creates no more harm now.
     ; NOTE: And now that this is about ready, we might
             step forward to develop a .7z interface ;)

2008-09-03 15:47 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/Makefile
   * contrib/hbziparch/common.mak
   + contrib/hbziparch/hbziparc.prg
   - contrib/hbziparch/hbzipnew.cpp
   + contrib/hbziparch/hbzipold.cpp
   * contrib/hbziparch/tests/bld_b32.bat
   * contrib/hbziparch/tests/bld_vc.bat
   - contrib/hbziparch/Wildcard.h
   - contrib/hbziparch/ZipString.h
   - contrib/hbziparch/FileInfo.h
   - contrib/hbziparch/ZipFileMapping_lnx.h
   - contrib/hbziparch/ZipMutex_win.h
   - contrib/hbziparch/ZipPathComponent.h
   - contrib/hbziparch/Aes.h
   - contrib/hbziparch/BaseLibCompressor.cpp
   - contrib/hbziparch/zlib
   - contrib/hbziparch/ZipCentralDir.h
   - contrib/hbziparch/RandomPool.h
   - contrib/hbziparch/ZipPathComponent_win.cpp
   - contrib/hbziparch/ZipString_stl.h
   - contrib/hbziparch/ZipPlatform_win.cpp
   - contrib/hbziparch/std_mfc.h
   - contrib/hbziparch/DeflateCompressor.h
   - contrib/hbziparch/ZipCrc32Cryptograph.h
   - contrib/hbziparch/Wildcard.cpp
   - contrib/hbziparch/ZipString.cpp
   - contrib/hbziparch/FileFilter.h
   - contrib/hbziparch/ZipMutex.h
   - contrib/hbziparch/ZipCompatibility.cpp
   - contrib/hbziparch/ZipFileMapping_win.h
   - contrib/hbziparch/ZipExtraData.cpp
   - contrib/hbziparch/Sha1.h
   - contrib/hbziparch/ZipArchive.cpp
   - contrib/hbziparch/ZipFileHeader.h
   - contrib/hbziparch/DirEnumerator.cpp
   - contrib/hbziparch/DeflateCompressor.cpp
   - contrib/hbziparch/ZipBaseException.h
   - contrib/hbziparch/std_stl.h
   - contrib/hbziparch/_features.h
   - contrib/hbziparch/ZipFileMapping.h
   - contrib/hbziparch/BaseLibCompressor.h
   - contrib/hbziparch/FileFilter.cpp
   - contrib/hbziparch/ZipException.h
   - contrib/hbziparch/ZipCryptograph.h
   - contrib/hbziparch/ZipAbstractFile.h
   - contrib/hbziparch/ZipStorage.h
   - contrib/hbziparch/ZipStringStoreSettings.h
   - contrib/hbziparch/stdafx.h
   - contrib/hbziparch/ZipCompatibility.h
   - contrib/hbziparch/ZipExtraData.h
   - contrib/hbziparch/ZipMemFile.h
   - contrib/hbziparch/Hmac.cpp
   - contrib/hbziparch/Bzip2Compressor.h
   - contrib/hbziparch/ZipExport.h
   - contrib/hbziparch/ZipArchive.h
   - contrib/hbziparch/ZipExtraField.cpp
   - contrib/hbziparch/ZipFileHeader.cpp
   - contrib/hbziparch/ZipPlatform.h
   - contrib/hbziparch/ZipAesCryptograph.cpp
   - contrib/hbziparch/ZipException.cpp
   - contrib/hbziparch/ZipCompressor.h
   - contrib/hbziparch/ZipFile_stl.cpp
   - contrib/hbziparch/DirEnumerator.h
   - contrib/hbziparch/ZipCryptograph.cpp
   - contrib/hbziparch/ZipStorage.cpp
   - contrib/hbziparch/ZipAutoBuffer.h
   - contrib/hbziparch/ZipCollections_mfc.h
   - contrib/hbziparch/ZipFile_mfc.h
   - contrib/hbziparch/resource.h
   - contrib/hbziparch/ZipCallbackProvider.h
   - contrib/hbziparch/ZipMemFile.cpp
   - contrib/hbziparch/Bzip2Compressor.cpp
   - contrib/hbziparch/ZipCollections.h
   - contrib/hbziparch/ZipFile.h
   - contrib/hbziparch/Aes.cpp
   - contrib/hbziparch/ZipCentralDir.cpp
   - contrib/hbziparch/RandomPool.cpp
   - contrib/hbziparch/ZipMutex_lnx.h
   - contrib/hbziparch/Hmac.h
   - contrib/hbziparch/ZipExtraField.h
   - contrib/hbziparch/ZipCompressor.cpp
   - contrib/hbziparch/License.txt
   - contrib/hbziparch/ZipCrc32Cryptograph.cpp
   - contrib/hbziparch/ZipAesCryptograph.h
   - contrib/hbziparch/ZipPathComponent_lnx.cpp
   - contrib/hbziparch/ZipPlatformComm.cpp
   - contrib/hbziparch/ZipString_mfc.h
   - contrib/hbziparch/ZipCallback.h
   - contrib/hbziparch/ZipAutoBuffer.cpp
   - contrib/hbziparch/ZipFile_mfc.cpp
   - contrib/hbziparch/ZipCollections_stl.h
   - contrib/hbziparch/BytesWriter.h
   - contrib/hbziparch/ZipPlatform_lnx.cpp
   - contrib/hbziparch/_platform.h
   - contrib/hbziparch/ZipFile_stl.h
   - contrib/hbziparch/readme.txt
   - contrib/hbziparch/Sha1.cpp
     + Added .prg level implementation of old hbziparch interface.
       It's based on Toninhos functions sent to the list, but
       synced with old interface and extended with new features,
       fixes and all the remaining interface functions, and old
       doc.
       There are some non-implemented stuff, and a couple of
       NOTEs and TOFIXes, if someone wants, these can be addressed.
       (some not, as hbmzip doesn't support multi-volume archives.)
     ; NOTE: This implementation is based on hbmzip.lib, so you
             MUST link it, to make it work. INCOMPATIBLE.
     * Library renamed from hbziparch -> hbziparc to be short
       filename. The dir itself will also be renamed so.
       INCOMPATIBLE.
     * Make files modified to compile on all platforms and to
       pull hbmzip to build tests.
     - Removed ZipArchive sources.
     ; Temporarily kept hbzipold.cpp to serve as reference.
     ; TOFIX: There is a problem with the loop adding new
              files to the .zip.

2008-09-03 15:15 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/Makefile
   * contrib/hbziparch/common.mak
   - contrib/hbziparch/hbziparc.c
   - contrib/hbziparch/hbxdirec.c
   * contrib/hbziparch/hbzipnew.cpp
     * Merged Harbour C parts to .cpp file.
     * Made full low-level interface static.

2008-09-03 15:05 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
     ! Some fixes to prev.

2008-09-03 12:34 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
     ! Some fixes and further reduction.

2008-09-03 10:28 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
     % Merged slightly different internal functions, thus
       removing significant redundancy.
       Higher level hb_unzipFile(), hb_unzipFileIndex(), hb_unzipAllFile()
       are now functionally the same, since the only difference was
       how the file list parameter was handled.
     ! Removed any remaining Win32 dependency.

2008-09-02 23:37 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
     * Complete cleanup/refactor/fixes.
       (original functions and internal logic was kept,
       except some shady path/curdir manipulations, which
       were removed, along with any directory changes)
       The code got significantly easier to oversee, so if
       someone wants to find out how this interface works,
       now the code is much easier to read. If we want to
       keep this in Harbour, maybe we could just swap the
       low-level interface to utilize hbmzip calls instead
       of ZipArchive ones. We would lose the segmented
       archive feature though, but I'm not sure how
       important this is these days, when there is no
       floppy disk anymore.
       Code size is now 40% smaller than in 1.0.0.
       It's still far from being perfect, but now it's at
       least possible to fix.

2008-09-02 10:23 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * utils/hbmake/hbmake.prg
     ; Applied patch by Bill Robertson:
     ! Fixed previously introduced (by me actually) bug. Thanks.
     % Removed "non-extended" codepath, since it was never used.
     ! UI elements fixed to properly accomodate to any
       screen dimensions.

   * utils/hbmake/hbmake.prg
     ! Fixed to not change casing of files, plus a few other minor fixes.
     ! Made one filename comparison multiplatform by using hb_FileMatch()
     ; Added TOFIXes where filename comparison is not multiplatform.
     % Removed some dead or commented code.

2008-09-01 21:52 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   - contrib/hbw32ddr
   * contrib/Makefile
   * contrib/make_b32_all.bat
   * contrib/make_gcc_all.sh
   * contrib/make_vc_all.bat
     - Removed contrib hbw32ddr.
       For those wanting to peek into this code, or
       pick up development, the exact source can be
       found in Harbour 1.0.0 release.

2008-09-01 21:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
     % Cleanups, optimizations, fixes. Now it's possible to
       oversee what the code actually tries to do.
     * Statics reduced to one, not changing current dir anymore.
     ; It may happen that something is not working as it was, please test.
       Path handling is/was very shady. Unix support is (and was)
       not working at places.
     ; NOTE: 'Kiss of death' change.
             Please be prepared that I plan to remove hbziparch
             from the repository sometimes this week. If you have
             a strong reason not to do so (or some alternative
             proposal), pls write to the list.
             If someone wants to continue using it, it can be accessed
             from past revisions of the SVN, or the 1.0.0 binary and
             source releases.
             Someone could as well upload the lastest (or latest stable)
             revision to our website.

2008-09-01 15:57 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   - contrib/hbziparch/hbziparc.h
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
   * contrib/hbziparch/tests/unzipa.prg
     % Further cleanups, optimizations.
     % Removed adding current directory to .zip filename
       if it didn't contain a path. If a file doesn't contain
       path, the OS will create it by default in the current dir.
       If someone knows why this hack was there, please tell.

2008-09-01 12:39 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
     * One variable rename missed from previous commit.

2008-09-01 12:33 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.h
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
     ! Fixed several potential leaks.
     % Optimized out several unnecessary allocations.
     % Optimized out several unnecessary string copying.
     % Cleaned all global variables.
     % Cleaned all static variables in C code.
     % Using HB_ERR_FUNCNAME.
     ! Returning empty values instead of NULL.
     ! Fixed potential GPFs.
     ! Using manifest constants instead of literals.
     * Cleaned header file and constant usage.
     * Other minor fixes and optimizations.
     * Formatting.
     ; The code is still a mess.

2008-09-01 09:42 UTC+0200 Viktor Szakats (harbour.01 syenar.hu)
   * contrib/hbziparch/hbziparc.h
   * contrib/hbziparch/hbziparc.c
   * contrib/hbziparch/hbzipnew.cpp
   * contrib/hbziparch/hbxdirec.c
     % Cleanups: Unused headers, types, one #define,
       one BCC582 warning, one Linux/GCC/MinGW #ifdef oddness.
     ; NOTE: Need to test this on Linux.

   * utils/hbmake/hbmake.prg
     ; Applied cleanup and fix patch from Bill Robertson:
     ! LIBFILES -> HBLIBS
       EXTERNLIB -> CONTRIBLIB
       EXTLIBFILES -> CONTRIBLIBS
     * ALLLIB = $(USERLIBS) $(LIBFILES) ... ->
       ALLLIB = $(USERLIBS) $(CONTRIBLIBS) $(HBLIBS) ...
     % Removed CONTRIBLIB = YES from makefile output as it did nothing.
     % Combined two ShowHelp() secs into one and put together
       with ShowCredits() at top of program.
     % Simplied Flag checks somewhat but it's still awkward. I fixed
       a mingw bug where a flag was set to .t. in one place and .f.
       later because of inconsistent use of letters, capitals/lower, etc.
       Still lots of checking for lower(...), upper(...), etc. of the
       command-line params.
     * Changed Help screen to reflect current program options better.
     * Made some alert message a little clearer and minor formatting.
     ! Initalized s_nMakeFileHandle to F_ERROR and reset it to F_ERROR
       whenever the file was closed. Didn't seem to be a current problem,
       just good practice.

   * utils/hbmake/hbmake.prg
     * Removed separate /credits switch and added content to
       main help screen.
     % Removed a few CLS commands from command-line orientated
       places.
     % Removed -elx and -ex from help screen (as these are the
       same as -el and -e). They are still accepted though.

   * source/compiler/hbusage.c
     + Added Bill Robertson to credits list.
