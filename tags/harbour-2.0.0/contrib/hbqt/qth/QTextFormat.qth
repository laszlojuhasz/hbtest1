/*
 * $Id$
 */

/*
 * Harbour Project source code:
 * QT Source Generator for Harbour
 *
 * Copyright 2009 Pritpal Bedi <pritpal@vouchcac.com>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */
/*----------------------------------------------------------------------*/
;
;              Header File to Generate QT Wrapper Sources
;

<CLASS>
QObject  = no
Inherits = 
Type     = Core
New      = pParent
</CLASS>

<CODE>
#include <QtGui/QTextFormat>


/*
 * QTextFormat ()
 * QTextFormat ( int type )
 * QTextFormat ( const QTextFormat & other )
 * ~QTextFormat ()
 */
HB_FUNC( QT_QTEXTFORMAT )
{
   hb_retptr( ( QTextFormat* ) new QTextFormat() );
}
</CODE>

<ENUMS>
enum FormatType { InvalidFormat, BlockFormat, CharFormat, ListFormat, ..., UserFormat }
enum ObjectTypes { NoObject, ImageObject, TableObject, TableCellObject, UserObject }
enum PageBreakFlag { PageBreak_Auto, PageBreak_AlwaysBefore, PageBreak_AlwaysAfter }
flags PageBreakFlags
enum Property { ObjectIndex, CssFloat, LayoutDirection, OutlinePen, ..., UserProperty }
</ENUMS>

<PROTOS>
QBrush background () const
bool boolProperty ( int propertyId ) const
QBrush brushProperty ( int propertyId ) const
void clearBackground ()
void clearForeground ()
void clearProperty ( int propertyId )
QColor colorProperty ( int propertyId ) const
qreal doubleProperty ( int propertyId ) const
QBrush foreground () const
bool hasProperty ( int propertyId ) const
int intProperty ( int propertyId ) const
bool isBlockFormat () const
bool isCharFormat () const
bool isFrameFormat () const
bool isImageFormat () const
bool isListFormat () const
bool isTableCellFormat () const
bool isTableFormat () const
bool isValid () const
Qt::LayoutDirection layoutDirection () const
QTextLength lengthProperty ( int propertyId ) const
QVector<QTextLength> lengthVectorProperty ( int propertyId ) const
void merge ( const QTextFormat & other )
int objectIndex () const
int objectType () const
QPen penProperty ( int propertyId ) const
QMap<int, QVariant> properties () const
QVariant property ( int propertyId ) const
int propertyCount () const
void setBackground ( const QBrush & brush )
void setForeground ( const QBrush & brush )
void setLayoutDirection ( Qt::LayoutDirection direction )
void setObjectIndex ( int index )
void setObjectType ( int type )
void setProperty ( int propertyId, const QVariant & value )
void setProperty ( int propertyId, const QVector<QTextLength> & value )
QString stringProperty ( int propertyId ) const
QTextBlockFormat toBlockFormat () const
QTextCharFormat toCharFormat () const
QTextFrameFormat toFrameFormat () const
QTextImageFormat toImageFormat () const
QTextListFormat toListFormat () const
// QTextTableCellFormat toTableCellFormat () const
QTextTableFormat toTableFormat () const
int type () const
</PROTOS>

<SLOTS>
</SLOTS>

<SIGNALS>
</SIGNALS>




